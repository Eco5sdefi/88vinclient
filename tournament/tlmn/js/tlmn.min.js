!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("signalR"), require("pixi-filters"), require("pixi-sound"), require("WebFont")) : "function" == typeof define && define.amd ? define("tlmn", ["libs", "signalR", "pixi-filters", "pixi-sound", "WebFont"], e) : "object" == typeof exports ? exports.tlmn = e(require("libs"), require("signalR"), require("pixi-filters"), require("pixi-sound"), require("WebFont")) : t.tlmn = e(t.libs, t.signalR, t["pixi-filters"], t["pixi-sound"], t.WebFont)
}(window, function(n, i, o, s, a) {
    return l = {},
    r.m = h = [function(t, e) {
        t.exports = n
    }
    , function(t, e) {
        t.exports = i
    }
    , function(t, e) {
        t.exports = o
    }
    , function(t, e) {
        t.exports = s
    }
    , function(t, e) {
        t.exports = a
    }
    , , , , , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.game = void 0;
        var i = n(13)
          , o = n(4)
          , s = (a.prototype.delete = function() {
            this.game.clear()
        }
        ,
        a.prototype.load = function(t) {
            console.log("load", t),
            this.game.load(t)
        }
        ,
        a.prototype.join = function(t, e, n, i, o) {
            this.game.joinTour(t, e, n, i, o)
        }
        ,
        a.prototype.lobby = function(t) {
            console.log("EnterLobby", t)
        }
        ,
        a);
        function a(t) {
            o.load({
                custom: {
                    families: ["Roboto-Black", "Roboto-Bold", "Roboto-Medium", "Roboto-Regular", "Roboto-Light", "RobotoCondensed-Bold", "RobotoCondensed-Italic", "RobotoCondensed-Light", "RobotoCondensed-Regular", "UTM American Sans", "UTM Swiss Condensed", "UTM Swiss CondensedBold"]
                },
                fontactive: function() {}
            }),
            this.game = new i.games(t)
        }
        e.game = s
    }
    , function(t, e, n) {
        "use strict";
        var i, o = this && this.__extends || (i = function(t, e) {
            return (i = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var n in e)
                    e.hasOwnProperty(n) && (t[n] = e[n])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function n() {
                this.constructor = t
            }
            i(t, e),
            t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
            new n)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.games = void 0;
        var s = n(14)
          , a = n(15)
          , p = n(0)
          , r = n(16);
        n(2),
        n(3);
        var h, l = n(17), c = (h = l.variable,
        o(d, h),
        d.prototype.load = function(t) {
            var e = this;
            e.assets.load(null, function() {
                e.isLoad = !0,
                t && t()
            })
        }
        ,
        d.prototype.init = function() {
            PIXI.utils.skipHello(),
            this.filter = new PIXI.filters.ColorMatrixFilter,
            this.filter.matrix = [1, 0, 0, .1, 0, 0, 1, 0, .1, 0, 0, 0, 1, .1, 0, 0, 0, 0, 1, 0],
            this.filterGray = new PIXI.filters.ColorMatrixFilter,
            this.filterGray.matrix = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0],
            this.size = [window.innerWidth, window.innerHeight];
            var t = document.getElementById(this.target);
            this.application = new PIXI.Application(this.size[0],this.size[1],{
                antialias: !0,
                transparent: !0,
                resolution: 1,
                autoResize: !0,
                view: t
            }),
            this.initFrames(),
            this.initContainer(),
            this.initTable(),
            this.initButton(),
            this.resetTab(),
            this.resize(this);
            var e = this;
            this.application.ticker.add(function() {
                return e.update(e)
            }),
            window.addEventListener("resize", function() {
                return e.resize(e)
            }),
            this.ready = !0
        }
        ,
        d.prototype.resetTab = function() {
            window.addEventListener("blur", function() {
                TweenLite.lagSmoothing(0)
            }, !1),
            window.addEventListener("focus", function() {
                TweenLite.lagSmoothing(1e3, 16)
            }, !1)
        }
        ,
        d.prototype.update = function(t) {
            t.timer && t.timer.tick()
        }
        ,
        d.prototype.resize = function(t) {
            try {
                var e;
                t.size = [$(window).width(), $(window).height()],
                t.application.renderer.resize($(window).width(), $(window).height()),
                t.size[0] < 1280 || t.size[1] < 720 ? (e = Math.min(t.size[0] / 1280, t.size[1] / 720),
                t.bgGame.scale.set(e)) : t.bgGame.scale.set(1),
                t.bgGame.anchor.set(.5),
                t.bgGame.position.set(t.size[0] / 2, t.size[1] / 2)
            } catch (t) {}
        }
        ,
        d.prototype.initHub = function() {
            this.hub = new s.default(this.token,this.hubUrl,this)
        }
        ,
        d.prototype.joinTour = function(t, e, n, i, o) {
            this.tourId = e,
            this.roomId = n,
            this.hubUrl = window.Config.Tour[t].hub[n - 1],
            this.initHub()
        }
        ,
        d.prototype.joinRoom = function(t, e) {
            if (t) {
                this.roomModel = t,
                this.getCurrentPlayer(),
                this.ready || this.init(),
                this.deleteWaitScreen();
                try {
                    this.resetGame()
                } catch (t) {}
                this.renderPlayers(t.Players),
                this.disableButtons(),
                this.roomModel.IsStartGame && this.checkGame(e)
            }
        }
        ,
        d.prototype.joinGame = function(t, e) {
            t && e ? (this.ready || this.init(),
            this.initWaitScreen(t, e)) : window.location.hash = "#/tournament/tlmn/"
        }
        ,
        d.prototype.dealerDown = function(t) {
            var e = this;
            e.stop(),
            e.interactive = !1,
            e.buttonMode = !1,
            e.loop = !1,
            e.textures = t.framesDealerClick,
            e.gotoAndPlay(0),
            e.onComplete = function() {
                t.dealerNormal(t)
            }
        }
        ,
        d.prototype.dealerNormal = function(t) {
            var e = t;
            e.stop(),
            e.interactive = !0,
            e.buttonMode = !0,
            e.loop = !0,
            e.textures = t.framesDealerNormal,
            e.gotoAndPlay(0)
        }
        ,
        d.prototype.getPlayerByAccountId = function(t) {
            for (var e, n = 0; n < this.players.length; n++)
                if (this.players[n] && this.players[n].accountId === t) {
                    e = this.players[n];
                    break
                }
            return e
        }
        ,
        d.prototype.getPlayerByPosition = function(t) {
            for (var e, n = 0; n < this.players.length; n++)
                if (this.players[n] && this.players[n].pos === t) {
                    e = this.players[n];
                    break
                }
            return e
        }
        ,
        d.prototype.getCurrentPlayer = function() {
            var t = App.account.portalID
              , e = App.account.accountID;
            if (this.roomModel && this.roomModel.Players)
                for (var n in this.roomModel.Players)
                    this.roomModel.Players[n].AccountID === e + ":" + t && (this.currentPlayer = this.roomModel.Players[n])
        }
        ,
        d.prototype.showNotify = function(t, e) {
            var n, i = this;
            this.txtNotify.scale.set(.01),
            this.txtNotify.visible = !0,
            this.txtNotify.children[0].text = t,
            TweenMax.to(this.txtNotify.scale, .4, {
                data: "tlmn-tournament",
                x: 1,
                y: 1
            }),
            e && (n = this,
            setTimeout(function() {
                TweenMax.to(i.txtNotify.scale, .2, {
                    data: "tlmn-tournament",
                    x: .01,
                    y: .01
                }),
                setTimeout(function() {
                    n.txtNotify.visible = !1
                }, 300)
            }, e))
        }
        ,
        d.prototype.hideNotify = function() {
            this.txtNotify.visible = !1
        }
        ,
        d.prototype.initTable = function() {
            this.bgGame = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["background.png"]);
            var t = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["table.png"]);
            t.anchor.set(.5),
            this.btnBack = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["btn-back.png"]),
            this.btnBack.anchor.set(.5),
            this.btnBack.position.set(-600, -320),
            this.btnBack.interactive = !0,
            this.btnBack.buttonMode = !0,
            this.btnBack.on("pointerover", this.btnTintOver.bind(this.btnBack, this)).on("pointerout", this.btnTintOut.bind(this.btnBack, this)).on("pointerdown", this.btnBackDown.bind(this.btnBack, this)),
            this.btnInfo = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["btn-info.png"]),
            this.btnInfo.anchor.set(.5),
            this.btnInfo.position.set(600, -320),
            this.btnInfo.interactive = !0,
            this.btnInfo.buttonMode = !0,
            this.btnInfo.on("pointerover", this.btnTintOver.bind(this.btnInfo, this)).on("pointerout", this.btnTintOut.bind(this.btnInfo, this)).on("pointerdown", this.btnInfoDown.bind(this.btnInfo, this)),
            this.btnTable = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["btn-bxh.png"]),
            this.btnTable.anchor.set(.5),
            this.btnTable.position.set(525, -320),
            this.btnTable.interactive = !0,
            this.btnTable.buttonMode = !0,
            this.btnTable.on("pointerover", this.btnTintOver.bind(this.btnTable, this)).on("pointerout", this.btnTintOut.bind(this.btnTable, this)).on("pointerdown", this.btnTableDown.bind(this.btnTable, this)),
            this.dealer = new AnimatedSprite(this.framesDealerNormal),
            this.dealer.anchor.set(.5),
            this.dealer.position.set(0, -223),
            this.dealer.animationSpeed = .2,
            this.dealer.interactive = !0,
            this.dealer.buttonMode = !0,
            this.dealer.on("pointerdown", this.dealerDown.bind(this.dealer, this)),
            this.dealer.play();
            var e = new PIXI.Text("TLMN SOLO TOURNAMENT",{
                fontFamily: this.fontFaceBold,
                fontSize: 60,
                fill: "#000"
            });
            e.alpha = .1,
            e.anchor.set(.5),
            e.y = -10;
            var n = new PIXI.Text(p.Util.ParseMoney(window.Config.Tour.tlmn.value[this.roomId - 1]),{
                fontFamily: this.fontFaceBold,
                fontSize: 60,
                fill: "#000"
            });
            n.alpha = .1,
            n.anchor.set(.5),
            n.y = 50,
            t.addChild(this.dealer, e, n, this.btnBack, this.btnInfo, this.btnTable);
            for (var i = 0; i < this.playerPos.length; i++) {
                var o = new Sprite(this.assets.loader.resources.commonTourTlmn.textures["ic-ad-user.png"]);
                o.anchor.set(.5),
                o.position.set(this.playerPos[i][0], this.playerPos[i][1]),
                t.addChild(o)
            }
            this.txtNotify = new Sprite(this.assets.loader.resources.commonTourTlmn.textures["big-bg-notify.png"]),
            this.txtNotify.anchor.set(.5),
            this.txtNotify.position.set(0, -72),
            this.txtNotify.addChild(new PIXI.Text(Message.GetMessage("me7"),{
                fontFamily: this.fontFaceBold,
                fontSize: 18,
                fill: "white"
            })),
            this.txtNotify.children[0].anchor.set(.5),
            this.txtNotify.visible = !1,
            this.txtResult = new Sprite(this.assets.loader.resources.commonTourTlmn.textures["big-bg-notify.png"]),
            this.txtResult.anchor.set(.5),
            this.txtResult.position.set(0, 65),
            this.txtResult.addChild(new PIXI.Text("",{
                fontFamily: this.fontFaceBold,
                fontSize: 30,
                fill: "white"
            })),
            this.txtResult.children[0].anchor.set(.5),
            this.txtResult.visible = !1,
            this.txtStatus = new Sprite(this.assets.loader.resources.commonTourTlmn.textures["small-bg-notify.png"]),
            this.txtStatus.anchor.set(.5),
            this.txtStatus.position.set(0, 102),
            this.txtStatus.addChild(new PIXI.Text(Message.GetMessage("me7"),{
                fontFamily: this.fontFaceBold,
                fontSize: 12,
                fill: "white"
            })),
            this.txtStatus.children[0].anchor.set(.5),
            this.txtStatus.visible = !1,
            this.bgGame.addChild(t, this.infoContainer, this.playerContainer, this.divideContainer, this.txtNotify, this.txtStatus, this.cardContainer, this.messageContainer, this.buttonContainer, this.resultContainer, this.txtResult),
            this.icDeal = new Sprite(this.assets.loader.resources.assetsTourTlmn.textures["icon-dealer.png"]),
            this.icDeal.anchor.set(.5),
            this.icDeal.position.set(this.dealer.x, this.dealer.y),
            this.icDeal.visible = !1,
            this.bgGame.addChild(this.icDeal),
            this.frameContainer = new Container,
            this.bgGame.addChild(this.frameContainer),
            this.application.stage.addChild(this.bgGame)
        }
        ,
        d.prototype.initFrames = function() {
            var t;
            for (this.framesDealerChiaBai = [],
            this.framesDealerClick = [],
            this.framesDealerPlay = [],
            this.framesDealerNormal = [],
            this.framesWin = [],
            this.framesWin = framesFromTilesetImage("win.effect", 230, 230),
            t = 1; t < 15; t++)
                this.framesDealerChiaBai.push(this.assets.loader.resources.dealerTourTlmn.textures["dealer-chia-bai-" + t + ".png"]);
            for (t = 1; t < 25; t++)
                this.framesDealerClick.push(this.assets.loader.resources.dealerTourTlmn.textures["dealer-rung-nguc-" + t + ".png"]),
                this.framesDealerPlay.push(this.assets.loader.resources.dealerTourTlmn.textures["dealer-moi-choi-" + t + ".png"]);
            for (t = 1; t < 49; t++)
                this.framesDealerNormal.push(this.assets.loader.resources.dealerTourTlmn.textures["dealer-normal-" + t + ".png"]);
            this.framesFinalEffect = this.framesFinal.map(function(t) {
                return frame(TextureCache.finalTableTlmn, t[0], t[1], t[2], t[3])
            })
        }
        ,
        d.prototype.initContainer = function() {
            this.infoContainer = new Container,
            this.playerContainer = new Container,
            this.divideContainer = new Container,
            this.cardContainer = new Container,
            this.handCardsContainer = new Container,
            this.draftCardsContainer = new Container,
            this.divideContainer = new Container,
            this.cardContainer.addChild(this.draftCardsContainer, this.divideContainer, this.handCardsContainer),
            this.messageContainer = new Container,
            this.effectContainer = new Container,
            this.messageContainer.addChild(this.effectContainer),
            this.buttonContainer = new Container,
            this.resultContainer = new Container
        }
        ,
        d.prototype.updateTableInfo = function(t) {
            for (; 0 < this.infoContainer.children.length; )
                this.infoContainer.children[0].destroy({
                    children: !0
                });
            var e = new PIXI.Text("#" + this.roomModel.GameSessionID,{
                fontFamily: this.fontFaceBold,
                fontSize: 12,
                fill: ["#fff"],
                padding: 10,
                align: "center"
            });
            e.name = "sss",
            e.anchor.set(0, .5),
            e.position.set(-555, -345);
            var n = new PIXI.Text(Message.GetMessage("tour11", [t.CurrentAccounts, t.TotalPlayer]),{
                fontFamily: this.fontFaceBold,
                fontSize: 12,
                fill: ["#fff"],
                padding: 10,
                align: "center"
            });
            n.anchor.set(0, .5),
            n.position.set(-555, -330);
            var i = new PIXI.Text(Message.GetMessage("tour17", [t.Level.Ante]),{
                fontFamily: this.fontFaceBold,
                fontSize: 12,
                fill: ["#fff"],
                padding: 10,
                align: "center"
            });
            i.anchor.set(0, .5),
            i.position.set(-555, -315);
            var o = new PIXI.Text(Message.GetMessage("tour15", [t.Level.LevelID, Math.ceil(t.RemainTime / 60)]),{
                fontFamily: this.fontFaceBold,
                fontSize: 12,
                fill: ["#fff"],
                padding: 10,
                align: "center"
            });
            o.anchor.set(0, .5),
            o.position.set(-555, -300),
            this.infoContainer.addChild(e, n, i, o)
        }
        ,
        d.prototype.initWaitScreen = function(t, e) {
            this.roomModel = e,
            this.timeRemain = e.RemainTime,
            this.txtTimeRemain = new PIXI.Text(this.formatTimeRemain(this.timeRemain),{
                fontFamily: this.fontFaceBold,
                fontSize: 50,
                fill: ["#fff"]
            }),
            this.txtTimeRemain.anchor.set(.5),
            this.txtTimeRemain.position.set(0, 20),
            this.showNotify(Message.GetMessage("tour10")),
            this.playerContainer.addChild(this.txtTimeRemain);
            for (var n = 0; n < 2; n++) {
                var i = PIXI.Sprite.fromImage("/assets/images/avatar/" + p.Util.RandomFrom(0, 29) + ".png");
                i.anchor.set(.5),
                i.width = 0 === n ? 140 : 120,
                i.height = 0 === n ? 140 : 120,
                i.position.set(this.playerPos[n][0], this.playerPos[n][1]),
                i.tint = 10066329,
                this.playerContainer.addChild(i)
            }
            this.countDown(this)
        }
        ,
        d.prototype.countDown = function(t) {
            try {
                if (t.timeRemain--,
                t.timeRemain <= 0)
                    return t.txtTimeRemain.destroy({
                        children: !0
                    }),
                    void (t.notify.visible = !1);
                t.txtTimeRemain.text = t.formatTimeRemain(t.timeRemain),
                this.timeCount = setTimeout(function() {
                    return t.countDown(t)
                }, 1e3)
            } catch (t) {}
        }
        ,
        d.prototype.reRenderPlayer = function(t) {
            this.getCurrentPlayer();
            var e = this.roomModel.Players;
            for (var n in e) {
                var i = e[n];
                if (0 <= i.Position && i.Position < 2 && i.AccountID === t) {
                    this.renderPlayer(i);
                    break
                }
            }
        }
        ,
        d.prototype.renderPlayer = function(t, e) {
            if (0 <= t.Position && t.Position < 2) {
                var n = t.Position - (-1 === this.currentPlayer.Position ? 0 : this.currentPlayer.Position);
                n < 0 && (n += this.roomModel.MaxPlayerInRoom);
                try {
                    this.players[n].destroy({
                        children: !0
                    })
                } catch (t) {}
                this.players[n] = new r.default({
                    position: n,
                    player: t,
                    xy: this.playerPos[n],
                    w: t.AccountID === this.currentPlayer.AccountID || 0 === n ? 140 : 120,
                    h: t.AccountID === this.currentPlayer.AccountID || 0 === n ? 140 : 120,
                    b: t.AccountID === this.currentPlayer.AccountID || 0 === n ? 95 : 75,
                    game: this
                }),
                this.players[n].updateBalance(t.Chips),
                this.playerContainer.addChild(this.players[n]);
                try {
                    e && this.players[n].fold()
                } catch (t) {}
            }
        }
        ,
        d.prototype.renderPlayers = function(t) {
            this.getCurrentPlayer();
            for (var e = 0; e < this.players.length; e++) {
                try {
                    this.players[e].destroy({
                        children: !0
                    })
                } catch (t) {}
                this.players[e] = null
            }
            this.players = [null, null];
            var n = this.currentPlayer.Position;
            for (var e in t) {
                var i = t[e];
                0 <= i.Position && i.Position < 2 && (i.Position - (-1 === n ? 0 : n) < 0 && this.roomModel.MaxPlayerInRoom,
                this.renderPlayer(i))
            }
            t.length <= 1 && this.showNotify(Message.GetMessage("me7"))
        }
        ,
        d.prototype.errorMessage = function(t) {
            if (-22005 === t.c || -314 === t.c || -335 === t.c || -339 === t.c || -340 === t.c || -229 === t.c || -228 === t.c) {
                try {
                    this.delete()
                } catch (t) {}
                window.location.hash = "#/tournament/tlmn/"
            } else {
                if (-22009 === t.c)
                    return void this.setFinalTable();
                if (-30015 === t.c)
                    return
            }
            App.showPopupMessage({
                content: Message.GetMessage(-30016 === t.c ? "me300002" : -22001 == t.c ? "ca-10020" : (t.c < 0 ? "me" : "") + t.c),
                textDone: "OK"
            })
        }
        ,
        d.prototype.initButton = function() {
            this.btnHit = new Sprite(this.assets.loader.resources.assetsTourTlmn.textures["btn-normal.png"]),
            this.btnHit.name = "btn-normal.png",
            this.btnHit.anchor.set(.5),
            this.btnHit.position.set(480, 320),
            this.btnHit.addChild(new PIXI.Text(Message.GetMessage("ca70").toUpperCase(),{
                fontFamily: this.fontFaceBold,
                fontSize: "vi" === this.lang ? 20 : 14,
                fill: ["#ffffff", "#fff2c5"]
            })),
            this.btnHit.getChildAt(0).anchor.set(.5),
            this.btnHit.getChildAt(0).position.set(0, 0),
            this.btnHit.interactive = !0,
            this.btnHit.buttonMode = !0,
            this.btnHit.id = "btnHit",
            this.btnHit.on("pointerover", this.btnHover.bind(this.btnHit, this)).on("pointerout", this.btnOut.bind(this.btnHit, this)).on("pointerdown", this.btnDown.bind(this.btnHit, this)).on("pointerup", this.onButtonClick.bind(this.btnHit, this.btnHit, this)),
            this.btnSort = new Sprite(this.assets.loader.resources.assetsTourTlmn.textures["btn-normal.png"]),
            this.btnSort.name = "btn-normal.png",
            this.btnSort.anchor.set(.5),
            this.btnSort.position.set(340, 320),
            this.btnSort.addChild(new PIXI.Text(Message.GetMessage("ca73").toUpperCase(),{
                fontFamily: this.fontFaceBold,
                fontSize: "vi" === this.lang ? 20 : 14,
                fill: ["#ffffff", "#fff2c5"]
            })),
            this.btnSort.getChildAt(0).anchor.set(.5),
            this.btnSort.getChildAt(0).position.set(0, 0),
            this.btnSort.interactive = !0,
            this.btnSort.buttonMode = !0,
            this.btnSort.id = "btnSort",
            this.btnSort.on("pointerover", this.btnHover.bind(this.btnSort, this)).on("pointerout", this.btnOut.bind(this.btnSort, this)).on("pointerdown", this.btnDown.bind(this.btnSort, this)).on("pointerup", this.onButtonClick.bind(this.btnSort, this.btnSort, this)),
            this.btnCancel = new Sprite(this.assets.loader.resources.assetsTourTlmn.textures["btn-normal.png"]),
            this.btnCancel.name = "btn-normal.png",
            this.btnCancel.anchor.set(.5),
            this.btnCancel.position.set(200, 320),
            this.btnCancel.addChild(new PIXI.Text(Message.GetMessage("ca72").toUpperCase(),{
                fontFamily: this.fontFaceBold,
                fontSize: "vi" === this.lang ? 20 : 14,
                fill: ["#ffffff", "#fff2c5"]
            })),
            this.btnCancel.getChildAt(0).anchor.set(.5),
            this.btnCancel.getChildAt(0).position.set(0, 0),
            this.btnCancel.interactive = !0,
            this.btnCancel.buttonMode = !0,
            this.btnCancel.id = "btnCancel",
            this.btnCancel.on("pointerover", this.btnHover.bind(this.btnCancel, this)).on("pointerout", this.btnOut.bind(this.btnCancel, this)).on("pointerdown", this.btnDown.bind(this.btnCancel, this)).on("pointerup", this.onButtonClick.bind(this.btnCancel, this.btnCancel, this)),
            this.btnSkip = new Sprite(this.assets.loader.resources.assetsTourTlmn.textures["btn-normal.png"]),
            this.btnSkip.name = "btn-normal.png",
            this.btnSkip.anchor.set(.5),
            this.btnSkip.position.set(60, 320),
            this.btnSkip.addChild(new PIXI.Text(Message.GetMessage("ca71").toUpperCase(),{
                fontFamily: this.fontFaceBold,
                fontSize: "vi" === this.lang ? 20 : 14,
                fill: ["#ffffff", "#fff2c5"]
            })),
            this.btnSkip.getChildAt(0).anchor.set(.5),
            this.btnSkip.getChildAt(0).position.set(0, 0),
            this.btnSkip.interactive = !0,
            this.btnSkip.buttonMode = !0,
            this.btnSkip.id = "btnSkip",
            this.btnSkip.on("pointerover", this.btnHover.bind(this.btnSkip, this)).on("pointerout", this.btnOut.bind(this.btnSkip, this)).on("pointerdown", this.btnDown.bind(this.btnSkip, this)).on("pointerup", this.onButtonClick.bind(this.btnSkip, this.btnSkip, this)),
            this.buttonContainer.addChild(this.btnHit, this.btnSort, this.btnCancel, this.btnSkip),
            this.inVisibleButtons()
        }
        ,
        d.prototype.btnTintOver = function(t) {
            this.filters = [t.filter]
        }
        ,
        d.prototype.btnTintOut = function(t) {
            this.filters = null
        }
        ,
        d.prototype.btnHover = function(t) {
            this.texture = t.assets.loader.resources.assetsTourTlmn.textures[this.name.replace("normal", "hover")]
        }
        ,
        d.prototype.btnOut = function(t) {
            this.texture = t.assets.loader.resources.assetsTourTlmn.textures[this.name]
        }
        ,
        d.prototype.btnDown = function(t) {
            this.texture = t.assets.loader.resources.assetsTourTlmn.textures[this.name.replace("normal", "click")]
        }
        ,
        d.prototype.overlay = function(t) {
            t.tint = 5592405
        }
        ,
        d.prototype.unOverlay = function(t) {
            t.tint = 16777215
        }
        ,
        d.prototype.disconnect = function(t) {
            -20017 === t && (this.errorMessage({
                c: -20017
            }),
            this.delete(),
            setTimeout(function() {
                window.location.hash = "#/tournament/tlmn/"
            }, 1e3))
        }
        ,
        d.prototype.closeCard = function(t) {
            try {
                var e = this;
                TweenMax.to(t.scale, .3, {
                    data: "tlmn-tournament",
                    x: .01,
                    onComplete: function() {
                        t.texture = e.assets.loader.resources.baiTourTlmn.textures["joker.png"],
                        TweenMax.to(t.scale, .3, {
                            data: "tlmn-tournament",
                            x: t.s
                        })
                    }
                })
            } catch (t) {}
        }
        ,
        d.prototype.disableButton = function(t) {
            t && (t.interactive = !1,
            t.buttonMode = !1,
            t.visible = !0,
            t.alpha = .5,
            t.name && (t.texture = this.assets.loader.resources.assetsTourTlmn.textures[t.name.replace("normal", "disable")]))
        }
        ,
        d.prototype.btnBackDown = function(t) {
            try {
                t.delete()
            } catch (t) {}
            window.location.hash = "#/tournament/tlmn/"
        }
        ,
        d.prototype.btnInfoDown = function(t) {
            t.showInfo(t.tourId, !1)
        }
        ,
        d.prototype.btnTableDown = function(e) {
            if (e.tableCon) {
                try {
                    e.tableCon.destroy({
                        children: !0
                    })
                } catch (t) {}
                e.tableCon = null
            } else
                $.ajax({
                    type: "GET",
                    url: Config.Tour.tlmn.api + ("GetTopPlayer?TournamentID=" + e.roomModel.TournamentID + "&ingame=true&CurrencyID" + e.currencyId),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        console.log("gettop", t),
                        0 === t.c && 0 < t.d.data.length && e.genTopPlayer(t.d.data)
                    },
                    error: function() {}
                })
        }
        ,
        d.prototype.genTopPlayer = function(t) {
            var e, h, l;
            !t || t.length <= 0 || (this.tableCon = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["title-tour-right.png"]),
            this.tableCon.anchor.set(1, .5),
            this.tableCon.position.set(640, -200),
            (e = new PIXI.Text(Message.GetMessage("tour16"),{
                fontFamily: this.fontFaceBold,
                fontSize: 16,
                fontWeight: "bold",
                fill: ["white"],
                padding: 10
            })).anchor.set(0, .5),
            e.position.set(-210, 15),
            this.tableCon.addChild(e),
            this.bgGame.addChild(this.tableCon),
            h = 0,
            l = this,
            $.each(t, function() {
                var t = new PIXI.Sprite(l.assets.loader.resources.assetsTourTlmn.textures["bg-user-tour.png"]);
                t.anchor.set(1, .5),
                t.position.set(0, 90 + 53 * h);
                var e = "0" !== this.avatarID ? this.avatarID : this.accountID % 30
                  , n = PIXI.Sprite.fromImage("/assets/images/avatar/" + e + ".png");
                n.anchor.set(0, .5),
                n.width = n.height = 40,
                n.position.set(-210, 0);
                var i = new PIXI.Text(11 < this.nickname.length ? this.nickname.substring(0, 8) + "***" : this.nickname,{
                    fontFamily: l.fontFaceBold,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: [l.currentPlayer.AccountID === this.accountID + ":" + this.portalID ? "red" : "white"],
                    padding: 10
                });
                i.position.set(-160, -16);
                var o = new PIXI.Sprite(l.assets.loader.resources.commonTourTlmn.textures["chip-in-game.png"]);
                o.anchor.set(0, .5),
                o.scale.set(.4),
                o.position.set(-160, 10);
                var s = new PIXI.Text(l.formatNumber(this.chips),{
                    fontFamily: l.fontFaceBold,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["yellow"],
                    padding: 10
                });
                s.anchor.set(0, .5),
                s.position.set(-140, 10);
                var a, r = new PIXI.Sprite(l.assets.loader.resources.assetsTourTlmn.textures[this.rank < 4 ? "rank-" + this.rank + ".png" : "bg-rank.png"]);
                r.anchor.set(0, .5),
                r.position.set(-40, 0),
                3 < this.rank && ((a = new PIXI.Text(this.rank,{
                    fontFamily: l.fontFaceBold,
                    fontSize: 13,
                    fill: "#fff"
                })).anchor.set(.5),
                a.position.set(r.width / 2, 0),
                r.addChild(a)),
                t.addChild(n, i, o, s, r),
                l.tableCon.addChild(t),
                h++
            }))
        }
        ,
        d.prototype.inVisibleButtons = function(t) {
            void 0 === t && (t = !1),
            this.inVisibleButton(this.btnHit),
            this.inVisibleButton(this.btnSkip),
            this.inVisibleButton(this.btnSort),
            this.inVisibleButton(this.btnCancel)
        }
        ,
        d.prototype.inVisibleButton = function(t) {
            t && (t.visible = !1)
        }
        ,
        d.prototype.enableButton = function(t) {
            t && (t.interactive = !0,
            t.buttonMode = !0,
            t.texture = this.assets.loader.resources.assetsTourTlmn.textures[t.name],
            t.visible = !0,
            t.alpha = 1)
        }
        ,
        d.prototype.disableButtons = function() {
            this.disableButton(this.btnHit),
            this.disableButton(this.btnSkip),
            this.disableButton(this.btnSort),
            this.disableButton(this.btnCancel)
        }
        ,
        d.prototype.onButtonClick = function(t, e) {
            var n = t.id;
            if (n)
                switch (n) {
                case "btnHit":
                    e.btnHitClick();
                    break;
                case "btnCancel":
                    e.btnCancelClick();
                    break;
                case "btnSkip":
                    e.btnSkipClick();
                    break;
                case "btnSort":
                    e.btnSortClick()
                }
        }
        ,
        d.prototype.btnHitClick = function() {
            this.selectedCards.length <= 0 ? this.showNotify(Message.GetMessage("ca-10020")) : (this.disableButtons(),
            this.hub.danhBai(this.selectedCards))
        }
        ,
        d.prototype.btnCancelClick = function() {
            var t = this.getPlayerByAccountId(this.currentPlayer.AccountID);
            this.disableButton(this.btnCancel),
            this.disableButton(this.btnHit);
            for (var e = 0; e < t.handCards.length; e++)
                if (t.handCards[e].isSeleted) {
                    t.handCards[e].isSeleted = !1;
                    try {
                        TweenMax.to(t.handCards[e], .3, {
                            data: "tlmn",
                            y: t.handCards[e].posY
                        })
                    } catch (t) {}
                    t.handCards[e].filters = null
                }
            this.selectedCards = []
        }
        ,
        d.prototype.btnSkipClick = function() {
            this.disableButton(this.btnSkip),
            this.hub.boLuot()
        }
        ,
        d.prototype.btnSortClick = function() {
            this.disableButton(this.btnSort),
            this.hub.sortHandCards()
        }
        ,
        d.prototype.formatNumber = function(t) {
            return void 0 === t && (t = 0),
            t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".")
        }
        ,
        d.prototype.updateAccount = function(t, e, n) {
            var i = this.getPlayerByAccountId(t.AccountID);
            if (i)
                try {
                    i.player.Account = t,
                    i.updateBalance(e),
                    i.showMoney(n),
                    this.roomModel.Players[t.AccountID].Chips = e
                } catch (t) {
                    console.log(t)
                }
        }
        ,
        d.prototype.updateConnectionStatus = function(t) {
            var e;
            null == t.id || null != (e = this.getPlayerByAccountId(t.id)) && e.updateConnectionStatus(t.status)
        }
        ,
        d.prototype.playerLeave = function(t) {
            if (t === this.currentPlayer.AccountID)
                return this.errorMessage({
                    c: -22007
                }),
                this.delete(),
                void setTimeout(function() {
                    window.location.hash = "#/tournament/tlmn/"
                }, 1e3);
            var e, n = this.getPlayerByAccountId(t);
            n && (n.accountId === this.roomModel.Dealer && (this.icDeal.visible = !1),
            n.reset(),
            e = n.pos,
            n.destroy({
                children: !0
            }),
            delete this.players[e],
            this.players[e] = null),
            this.checkPlayer()
        }
        ,
        d.prototype.playerJoin = function(t) {
            0 <= t.Position && t.Position < 2 ? this.renderPlayer(t, !0) : t.AccountID === this.currentPlayer.AccountID && this.showNotify(Message.GetMessage("me7"))
        }
        ,
        d.prototype.checkPlayer = function() {
            for (var t, e = 0, n = 0; n < this.players.length; n++)
                this.players[n] && (e++,
                t = this.players[n]);
            1 === e && (t.reset(),
            this.changeDealer(t.accountId))
        }
        ,
        d.prototype.updatePlayer = function() {
            var t = this.roomModel.Players;
            for (var e in t) {
                var n = this.getPlayerByAccountId(t[e].AccountID);
                n && (n.player = t[e],
                n.chip = t[e].Chips)
            }
        }
        ,
        d.prototype.playerJoinAnotherTable = function(t) {
            t !== this.currentPlayer.AccountID ? this.playerLeave(t) : this.resetGame()
        }
        ,
        d.prototype.changeDealer = function(t) {
            var e = this.getPlayerByAccountId(t);
            if (e) {
                this.icDeal.visible = !0;
                try {
                    TweenMax.to(this.icDeal, .5, {
                        data: "tlmn-tournament-d",
                        x: e.avatar.x + 30,
                        y: e.avatar.y - e.avatar.height / 2 + 10
                    })
                } catch (t) {}
            }
        }
        ,
        d.prototype.deleteDiCards = function() {
            for (var t = 0; t < this.divideCard.length; t++)
                this.divideCard[t].destroy({
                    children: !0
                });
            for (t = 0; t < this.divisionCard.length; t++)
                this.divisionCard[t].destroy({
                    children: !0
                });
            this.divisionCard = [],
            this.divideCard = []
        }
        ,
        d.prototype.division = function(e) {
            if (this.deleteDiCards(),
            this.divisionCard = [],
            this.renderPlayers(e.Players),
            e) {
                var t = e.Players;
                for (var n in t) {
                    var i = new PIXI.Sprite(this.assets.loader.resources.baiTourTlmn.textures["joker.png"]);
                    this.divisionCard.push(i);
                    var o = this.getPlayerByAccountId(t[n].AccountID);
                    i.anchor.set(.5),
                    i.value = t[n].HandCards[0].OrdinalValue,
                    this.divideContainer.addChild(i),
                    i.scale.set(.01),
                    i.position.set(this.dealer.x, this.dealer.y);
                    var s = t[n].Position - (-1 === this.currentPlayer.Position ? 0 : this.currentPlayer.Position);
                    s < 0 && (s += this.roomModel.MaxPlayerInRoom),
                    t[n].AccountID,
                    e.Dealer,
                    this.doFlipDivision(i, o ? o.pos : s, n)
                }
            }
            var a = this;
            setTimeout(function() {
                a.icDeal.visible = !0;
                var t = a.getPlayerByAccountId(e.Dealer);
                try {
                    TweenMax.to(a.icDeal, .5, {
                        data: "tlmn-tournament-d",
                        x: t.avatar.x + 30,
                        y: t.avatar.y - t.avatar.height / 2 + 10,
                        onComplete: function() {
                            for (var t = 0; t < a.divisionCard.length; t++)
                                a.divisionToDealer(a.divisionCard[t], t)
                        }
                    })
                } catch (t) {}
            }, 1500)
        }
        ,
        d.prototype.doFlipDivision = function(t, e, n) {
            var i = this;
            try {
                TweenMax.to(t.scale, .5, {
                    data: "tlmn-tournament-d",
                    x: 1,
                    y: 1,
                    delay: .05 * n
                })
            } catch (t) {}
            try {
                TweenMax.to(t, .5, {
                    data: "tlmn-tournament-d",
                    x: i.divideCardsPos[e].x,
                    y: i.divideCardsPos[e].y,
                    delay: .05 * n,
                    onComplete: function() {
                        try {
                            TweenMax.to(t.scale, .4, {
                                data: "tlmn-tournament-d",
                                x: .01,
                                onComplete: function() {
                                    t.texture = i.assets.loader.resources.baiTourTlmn.textures[i.cardsMap[t.value]];
                                    try {
                                        TweenMax.to(t.scale, .4, {
                                            data: "tlmn-tournament-d",
                                            x: 1
                                        })
                                    } catch (t) {}
                                }
                            })
                        } catch (t) {}
                    }
                })
            } catch (t) {}
        }
        ,
        d.prototype.divisionToDealer = function(t, e) {
            var n = this;
            try {
                TweenMax.to(t.scale, .4, {
                    data: "tlmn-tournament-d",
                    x: .01,
                    delay: .05 * e,
                    onComplete: function() {
                        t.texture = n.assets.loader.resources.baiTourTlmn.textures["joker.png"];
                        try {
                            TweenMax.to(t.scale, .4, {
                                data: "tlmn-tournament-d",
                                x: 1,
                                onComplete: function() {
                                    try {
                                        TweenMax.to(t.scale, .5, {
                                            data: "tlmn-tournament-d",
                                            x: .01,
                                            y: .01
                                        })
                                    } catch (t) {}
                                    try {
                                        TweenMax.to(t, .5, {
                                            data: "tlmn-tournament-d",
                                            x: n.dealer.x,
                                            y: n.dealer.y
                                        })
                                    } catch (t) {}
                                }
                            })
                        } catch (t) {}
                    }
                }),
                setTimeout(function() {
                    n.deleteDiCards()
                }, 1500)
            } catch (t) {}
        }
        ,
        d.prototype.startGame = function(t) {
            this.roomModel = t,
            this.renderPlayers(t.Players);
            var e = this;
            if (this.getRank(),
            this.changeDealer(t.Dealer),
            t.IsStartGame && t.GameRunning && setTimeout(function() {
                e.divideCards()
            }, 500),
            0 < this.infoContainer.children.length)
                try {
                    "sss" === this.infoContainer.children[0].name && (this.infoContainer.children[0].text = "#" + t.GameSessionID)
                } catch (t) {}
        }
        ,
        d.prototype.divideCards = function() {
            this.txtNotify.visible = !1,
            this.removeDraftCards();
            var t = this.roomModel.Players;
            for (var e in t) {
                var n = this.getPlayerByAccountId(t[e].AccountID);
                13 === t[e].HandCards.length && n && n.divide()
            }
            var i = this;
            setTimeout(function() {
                return i.generateCards(i)
            }, 1480)
        }
        ,
        d.prototype.hideDivide = function() {
            for (var t = 0; t < this.players.length; t++)
                this.players[t] && this.players[t].hideDivide()
        }
        ,
        d.prototype.generateCards = function(t) {
            var e;
            t.hideDivide();
            var n = t.roomModel.Players;
            for (e in n)
                if (0 < n[e].HandCards.length) {
                    var i = t.getPlayerByAccountId(n[e].AccountID);
                    if (null == i || void 0 === i)
                        return;
                    n[e].AccountID === t.currentPlayer.AccountID ? (i.generateHandCards(n[e].HandCards),
                    t.handCards = n[e].HandCards) : (i.numbCards = n[e].HandCards.length,
                    i.updateCards(i.numbCards))
                }
        }
        ,
        d.prototype.drawDraftCards = function() {
            this.removeDraftCards();
            var t, e = 0, n = this.roomModel.Players;
            for (t in n)
                0 < n[t].Status && (e += 13 - n[t].HandCards.length);
            for (t = 0; t < e; t++) {
                var i = 160 * (.5 - Math.random())
                  , o = 80 * (.5 - Math.random()) - 10
                  , s = 15 - 30 * Math.random()
                  , a = new Sprite(this.assets.loader.resources.baiTourTlmn.textures["joker.png"]);
                a.anchor.set(.5),
                a.scale.set(.8),
                a.position.set(i, o),
                a.rotation = p.Util.DegreeToRadian(s),
                this.draftCardsContainer.addChild(a)
            }
        }
        ,
        d.prototype.drawCurrentCards = function(t) {
            this.currentCards = [];
            for (var e = t.length; e--; ) {
                var n = t[e].Value.Cards
                  , i = 160 * (.5 - Math.random()) - 10 * n.length
                  , o = 80 * (.5 - Math.random()) - 10
                  , s = 15 - 30 * Math.random()
                  , a = new Container;
                this.draftCardsContainer.addChild(a),
                this.currentCards.push(a);
                for (var r = 0, h = n.length; r < h; r++) {
                    var l = new Sprite(this.assets.loader.resources.baiTourTlmn.textures[this.cardsMap[n[r]]]);
                    a.addChild(l),
                    l.anchor.set(.5),
                    l.scale.set(.8),
                    l.s = .8,
                    l.position.set(i + 20 * r, o),
                    l.rotation = p.Util.DegreeToRadian(s)
                }
            }
            for (var c = 0; c < this.currentCards.length - 1; c++)
                for (var d = 0; d < this.currentCards[c].children.length; d++)
                    this.overlay(this.currentCards[c].children[d])
        }
        ,
        d.prototype.setFinalTable = function() {
            this.hideNotify();
            var t = new AnimatedSprite(this.framesFinalEffect);
            t.anchor.set(.5),
            t.animationSpeed = .3,
            t.position.set(0, 0),
            t.play(),
            this.bgGame.addChild(t),
            setTimeout(function() {
                t.destroy({
                    children: !0
                })
            }, 2500)
        }
        ,
        d.prototype.deleteTween = function() {
            for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                "tlmn-tournament" === t[e].data && t[e].kill()
        }
        ,
        d.prototype.checkGame = function(t) {
            var e = this;
            this.roomModel.GameRunning && this.roomModel.IsStartGame ? setTimeout(function() {
                e.generateCards(e),
                e.drawDraftCards(),
                e.drawCurrentCards(e.roomModel.CurrTurnCards),
                e.checkCurrentTurn(t),
                e.checkSkipTurn()
            }, 300) : this.showNotify(Message.GetMessage("me6"))
        }
        ,
        d.prototype.checkCurrentTurn = function(t) {
            t && this.startActions(t.state.accountId, t.state.allowedActions, t.time, t.totalTime)
        }
        ,
        d.prototype.checkSkipTurn = function() {
            for (var t = this.roomModel.GameState.ClientStates, e = 0; e < t.length; e++)
                t[e].InTurn || this.getPlayerByAccountId(t[e].AccountId) && this.boLuot(t[e].AccountId)
        }
        ,
        d.prototype.startActions = function(t, e, n, i) {
            console.log("start actions", t, e, n, i),
            this.hideNotify(),
            0 === this.currentCards.length && this.removeEffect();
            try {
                var o = t === this.currentPlayer.AccountID ? 138 : 118
                  , s = t === this.currentPlayer.AccountID ? 138 : 118
                  , a = void 0;
                if (this.hideDivide(),
                this.timer)
                    try {
                        this.timer.clearTimer()
                    } catch (t) {}
                this.timer = new p.Timer({
                    width: o,
                    height: s,
                    lineWidth: 4
                }),
                this.timer.startTimer(i || n, n);
                var r = this.getPlayerByAccountId(t);
                if (!r)
                    return;
                try {
                    this.timer.position.set(r.avatar.x - (t === this.currentPlayer.AccountID ? 70 : 60), r.avatar.y - (t === this.currentPlayer.AccountID ? 70 : 60)),
                    this.playerContainer.addChild(this.timer)
                } catch (t) {}
                if (-1 === e[0])
                    return this.changeDealer(t),
                    void this.showNotify(Message.GetMessage("me7"));
                if (1e3 === e[0])
                    return void this.showNotify(Message.GetMessage("me6"));
                if (t === this.currentPlayer.AccountID)
                    for (console.log("sdfds"),
                    this.isPlaying = !0,
                    a = 0; a < e.length; a++) {
                        var h = e[a];
                        console.log("action", h),
                        h === l.tlmnActionName.DANH_BAI ? 0 < this.selectedCards.length ? (this.enableButton(this.btnHit),
                        this.enableButton(this.btnCancel)) : (this.disableButton(this.btnHit),
                        this.disableButton(this.btnCancel)) : h === l.tlmnActionName.BO_LUOT && (this.disableButton(this.btnHit),
                        this.enableButton(this.btnSkip),
                        0 < this.selectedCards.length ? (this.enableButton(this.btnCancel),
                        this.enableButton(this.btnHit)) : (this.disableButton(this.btnCancel),
                        this.disableButton(this.btnHit)))
                    }
                else
                    this.isPlaying = !1,
                    this.disableButtons(),
                    0 < this.selectedCards.length ? this.enableButton(this.btnCancel) : this.disableButton(this.btnCancel),
                    1 < this.handCards.length && this.enableButton(this.btnSort)
            } catch (t) {
                console.log("Start action err", t)
            }
        }
        ,
        d.prototype.cardDown = function(t) {
            if (this.isSeleted) {
                this.isSeleted = !1,
                this.filters = null;
                try {
                    TweenMax.to(this, .3, {
                        data: "tlmn-tournament",
                        y: this.posY
                    })
                } catch (t) {}
                t.selectedCards.splice(t.selectedCards.indexOf(this.OrdinalValue), 1)
            } else {
                this.isSeleted = !0,
                this.filters = [t.filterCard];
                try {
                    TweenMax.to(this, .3, {
                        data: "tlmn-tournament",
                        y: this.posY - 10
                    })
                } catch (t) {}
                t.selectedCards.push(this.OrdinalValue)
            }
            0 < t.selectedCards.length ? (t.isPlaying && t.enableButton(t.btnHit),
            t.enableButton(t.btnCancel)) : (t.disableButton(t.btnHit),
            t.disableButton(t.btnCancel))
        }
        ,
        d.prototype.getTexture = function(t) {
            return void 0 !== TextureCache[t + this.lang + ".png"] ? TextureCache[t + this.lang + ".png"] : TextureCache[t + "en.png"]
        }
        ,
        d.prototype.boLuot = function(t) {
            this.removeTimer();
            var e, n, i = this.getPlayerByAccountId(t);
            null != i && void 0 !== i && ((e = new Sprite(this.assets.loader.resources.commonTourTlmn.textures["bg-black-effect.png"])).name = "bolượt",
            e.anchor.set(.5),
            e.position.set(i.avatar.x, i.avatar.y + i.avatar.height / 2 - e.height / 2),
            (n = new Sprite(this.getTexture("TextBoLuot-"))).anchor.set(.5),
            e.addChild(n),
            i.effectContainer.addChild(e))
        }
        ,
        d.prototype.endRound = function() {
            console.log("endRound"),
            this.isFinish || this.removeEffect();
            for (var t = 0; t < this.currentCards.length; t++)
                for (var e = 0; e < this.currentCards[t].children.length; e++)
                    this.unOverlay(this.currentCards[t].children[e]),
                    this.closeCard(this.currentCards[t].children[e]);
            this.currentCards = [],
            this.removeTimer()
        }
        ,
        d.prototype.showEffect = function(t) {
            this.destroyEffect();
            var e = new Sprite(TextureCache["OpticalFlare.png"]);
            e.anchor.set(.5),
            e.y = -150,
            e.x = -600;
            var n = new Sprite(this.getTexture(t));
            n.anchor.set(.5),
            n.y = -110,
            n.x = -600;
            var i = new Sprite(TextureCache["OpticalFlare.png"]);
            i.anchor.set(.5),
            i.y = -80,
            i.x = 600,
            this.effect.addChild(e, n, i);
            try {
                TweenMax.to(n, .3, {
                    data: "tlmn-tournament",
                    x: 0,
                    onComplete: function() {
                        try {
                            TweenMax.to(n, .3, {
                                data: "tlmn-tournament",
                                x: 600,
                                alpha: .1,
                                delay: 1,
                                onComplete: function() {
                                    n.destroy()
                                }
                            })
                        } catch (t) {}
                    }
                })
            } catch (t) {}
            try {
                TweenMax.to(e, .7, {
                    data: "tlmn-tournament",
                    x: 0,
                    onComplete: function() {
                        TweenMax.to(e, .3, {
                            data: "tlmn-tournament",
                            x: 600,
                            alpha: .1,
                            delay: .5,
                            onComplete: function() {
                                e.destroy()
                            }
                        })
                    }
                })
            } catch (t) {}
            try {
                TweenMax.to(i, .7, {
                    data: "tlmn-tournament",
                    x: 0,
                    onComplete: function() {
                        TweenMax.to(i, .3, {
                            data: "tlmn-tournament",
                            x: -600,
                            alpha: .1,
                            delay: .5,
                            onComplete: function() {
                                i.destroy()
                            }
                        })
                    }
                })
            } catch (t) {}
        }
        ,
        d.prototype.danhBai = function(t, e) {
            console.log("danhBai", t, e),
            this.removeTimer();
            var n = this.getPlayerByAccountId(t);
            if (null != n && void 0 !== n) {
                var i, o = 0, s = 160 * (.5 - Math.random()) - 10 * e.length, a = 80 * (.5 - Math.random()) - 10, r = 15 - 30 * Math.random(), h = new Container;
                this.draftCardsContainer.addChild(h),
                this.currentCards.push(h);
                var l = this.checkHieuUng(this.getCardNumber(e));
                if ("" !== l && this.showEffect(l),
                t === this.currentPlayer.AccountID) {
                    var c = []
                      , d = void 0;
                    if (null == n || void 0 === n)
                        return;
                    for (this.handCards = n.handCards,
                    i = 0; i < n.handCards.length; i++)
                        if (c.push(n.handCards[i].OrdinalValue),
                        0 <= (d = $.inArray(n.handCards[i].OrdinalValue, e))) {
                            n.handCards[i].s = .8,
                            n.handCards[i].filters = null,
                            n.handCards[i].interactive = !1,
                            n.handCards[i].buttonMode = !1;
                            try {
                                TweenMax.to(n.handCards[i], .5, {
                                    data: "tlmn-tournament",
                                    x: s + 20 * o,
                                    y: a,
                                    rotation: p.Util.DegreeToRadian(r)
                                })
                            } catch (t) {}
                            try {
                                TweenMax.to(n.handCards[i].scale, .5, {
                                    data: "tlmn-tournament",
                                    x: .8,
                                    y: .8
                                })
                            } catch (t) {}
                            h.addChild(n.handCards[i]),
                            o++
                        }
                    for (i = 0; i < e.length; i++)
                        0 <= (d = $.inArray(e[i], c)) && (c.splice(d, 1),
                        n.handCards.splice(d, 1));
                    for (i = 0; i < n.handCards.length; i++)
                        TweenMax.to(n.handCards[i], .2, {
                            data: "tlmn-tournament",
                            x: this.handCardsPos[n.pos].x + 65 * i,
                            onComplete: function() {}
                        });
                    this.selectedCards = []
                } else {
                    for (i = 0; i < e.length; i++) {
                        var u = new Sprite(TextureCache[this.cardsMap[e[i]]]);
                        u.anchor.set(.5),
                        u.scale.set(.01),
                        u.s = .8,
                        u.position.set(n.jokCard.x, n.jokCard.y),
                        h.addChild(u);
                        try {
                            TweenMax.to(u, .5, {
                                data: "tlmn-tournament",
                                x: s + 20 * i,
                                y: a,
                                rotation: p.Util.DegreeToRadian(r)
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(u.scale, .5, {
                                data: "tlmn-tournament",
                                x: .8,
                                y: .8
                            })
                        } catch (t) {}
                    }
                    n.numbCards = n.numbCards - e.length,
                    n.updateCards(n.numbCards)
                }
                this.overlayOtherCurrentCard()
            }
        }
        ,
        d.prototype.sortHandCards = function(t) {
            var e, n = this.roomModel.Players;
            for (e in n)
                if (n[e].AccountID === this.currentPlayer.AccountID) {
                    n[e].HandCards = t;
                    break
                }
            this.getPlayerByAccountId(this.currentPlayer.AccountID).generateHandCards(t),
            this.selectedCards = []
        }
        ,
        d.prototype.AllowChanNgay = function(t) {}
        ,
        d.prototype.CancelChanNgay = function(t) {}
        ,
        d.prototype.getTxtResult = function(t) {
            var e = "";
            switch (t) {
            case 0:
                e = "ca144";
                break;
            case 1:
                e = "ca68";
                break;
            case 2:
                e = "ca66";
                break;
            case 3:
                e = "ca69";
                break;
            case 4:
                e = "ca143";
                break;
            case 5:
                e = "ca64"
            }
            return Message.GetMessage(e)
        }
        ,
        d.prototype.showResult = function(t) {
            console.log("result", t);
            var e, n = this;
            for (this.isFinish = !0,
            this.disableButtons(),
            e = 0; e < this.currentCards.length; e++)
                for (a = 0; a < this.currentCards[e].children.length; a++)
                    this.unOverlay(this.currentCards[e].children[a]),
                    this.closeCard(this.currentCards[e].children[a]);
            if (this.removeEffect(),
            n.currentCards = [],
            t) {
                for (e in (this.roomModel = t).Players) {
                    var i = t.Players[e];
                    if (-1 !== i.Position) {
                        p = n.getPlayerByAccountId(i.AccountID);
                        for (var o, s = [], a = 0; a < t.SessionResult.ResultList.length; a++)
                            if (t.SessionResult.ResultList[a].AccountId === i.AccountID) {
                                s = t.SessionResult.ResultList[a].BaiThoi;
                                break
                            }
                        i.AccountID !== this.currentPlayer.AccountID && (o = t.SessionResult.ResultList.find(function(t) {
                            return t.AccountId == i.AccountID
                        }),
                        p.jokCard.visible = !1,
                        0 < i.HandCards.length && p.showCards(i.HandCards, s, o.ResultFamily))
                    }
                }
                for (e in t.SessionResult.ResultList) {
                    for (var r, h, l, c, d = t.SessionResult.ResultList[e], u = d.Money, p = this.getPlayerByAccountId(d.AccountId), f = void 0, m = 0; m < t.Players.length; m++)
                        if (t.Players[m].AccountID === d.AccountId) {
                            f = t.Players[m];
                            break
                        }
                    if (5 === d.ResultFamily) {
                        var y = new AnimatedSprite(n.framesWin);
                        y.anchor.set(.5),
                        y.animationSpeed = .5,
                        y.play();
                        var g = new Sprite(TextureCache["ribbon.png"]);
                        g.anchor.set(.5);
                        var C, b, v = new Sprite(this.getTexture("toi-trang-"));
                        v.anchor.set(.5),
                        v.position.set(0, 22),
                        g.addChild(v),
                        p.effectContainer.addChild(y, g),
                        0 <= d.WinType && (C = new PIXI.Text(this.getTxtResult(d.WinType).toUpperCase(),{
                            fontFamily: this.fontFaceBold,
                            fontSize: d.AccountId === this.currentPlayer.AccountID ? 30 : 16,
                            fill: ["white"],
                            padding: 10,
                            align: "center"
                        }),
                        d.AccountId === this.currentPlayer.AccountID ? (C.anchor.set(.5),
                        C.position.set(-120, this.handCardsPos[0] - 100)) : (3 === p.pos ? C.anchor.set(0, .5) : C.anchor.set(1, .5),
                        C.position.set(n.handCardsPos[p.pos].x, n.handCardsPos[p.pos].y + 46 + C.height / 2)),
                        p.effectContainer.addChild(C),
                        b = f.HandCards,
                        $.each(b, function(t, e) {
                            n.unOverlay(e)
                        })),
                        d.AccountId === this.currentPlayer.AccountID ? (g.position.set(0, -30),
                        y.position.set(0, 0),
                        y.scale.set(1.5)) : (g.scale.set(.4),
                        g.position.set(p.avatar.x, p.avatar.y + p.avatar.height / 2 - g.height / 2),
                        y.scale.set(.7),
                        y.position.set(p.avatar.x, p.avatar.y))
                    } else {
                        switch (d.ResultFamily) {
                        case 0:
                        case 1:
                            r = "cong-";
                            break;
                        case 2:
                            r = "ung-";
                            break;
                        case 3:
                            r = "thua-";
                            break;
                        case 4:
                            r = "thang-"
                        }
                        0 < u ? ((h = new AnimatedSprite(n.framesWin)).anchor.set(.5),
                        h.position.set(p.avatar.x, p.avatar.y),
                        h.animationSpeed = .5,
                        h.play(),
                        p.effectContainer.addChild(h),
                        d.AccountId === this.currentPlayer.AccountID ? (h.scale.set(1.18),
                        h.y += 10) : (h.scale.set(1.05),
                        h.y += 8),
                        (l = new Sprite(this.getTexture(r))).anchor.set(.5),
                        l.position.set(p.avatar.x, p.avatar.y + p.avatar.height / 2 - l.height / 2),
                        p.effectContainer.addChild(l)) : ((l = new Sprite(this.getTexture(r))).anchor.set(.5),
                        (c = new Sprite(TextureCache["bg-black-effect.png"])).anchor.set(.5),
                        c.position.set(p.avatar.x, p.avatar.y + p.avatar.height / 2 - c.height / 2),
                        c.addChild(l),
                        p.effectContainer.addChild(c))
                    }
                    p.updateBalance(f.Chips),
                    p.showMoney(u)
                }
                setTimeout(function() {
                    return n.resetGame()
                }, 5e3)
            }
        }
        ,
        d.prototype.removeDraftCards = function() {
            this.draftCardsContainer && this.draftCardsContainer.destroy({
                children: !0
            }),
            this.draftCardsContainer = new Container,
            this.cardContainer.addChildAt(this.draftCardsContainer, 0)
        }
        ,
        d.prototype.removeTimer = function() {
            if (this.timer)
                try {
                    this.timer.clearTimer(),
                    this.timer = null
                } catch (t) {}
        }
        ,
        d.prototype.removeEffect = function() {
            for (var t = 0; t < this.players.length; t++)
                this.players[t] && this.players[t].removeEffect()
        }
        ,
        d.prototype.destroyEffect = function() {
            this.effect && this.effect.destroy({
                children: !0
            }),
            this.effect = new Container,
            this.effectContainer.addChild(this.effect)
        }
        ,
        d.prototype.tourFinished = function(t) {
            this.deleteTween(),
            this.inVisibleButtons(),
            this.boxFinish = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["bg-popup.png"]),
            this.boxFinish.anchor.set(.5);
            var e = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["title-tournament.png"]);
            e.anchor.set(.5),
            e.position.set(0, -309);
            var n = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["t-tournament.png"]);
            n.anchor.set(.5),
            n.position.set(0, -184);
            var i = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["bg-session.png"]);
            i.anchor.set(0, .5),
            i.position.set(-300, -184);
            var o = new PIXI.Text("#" + this.tourId,{
                fontFamily: this.fontFaceBold,
                fontSize: 14,
                fontWeight: "bold",
                fill: ["white"],
                padding: 10
            });
            o.anchor.set(0, .5),
            o.x = 5,
            i.addChild(o);
            var s = new PIXI.Sprite(this.assets.loader.resources.assetsTourTlmn.textures["bg-rank123.png"]);
            s.anchor.set(.5),
            s.y = 100,
            this.boxFinish.addChild(e, n, i, s),
            this.bgGame.addChild(this.boxFinish);
            var a = {
                1: {
                    x: 0,
                    y: -80,
                    d: 110,
                    nx: 0,
                    ny: -10,
                    mx: 0,
                    my: 10
                },
                2: {
                    x: -163,
                    y: -40,
                    d: 80,
                    nx: -163,
                    ny: 15,
                    mx: -163,
                    my: 35
                },
                3: {
                    x: 163,
                    y: -25,
                    d: 80,
                    nx: 163,
                    ny: 30,
                    mx: 163,
                    my: 50
                }
            }
              , r = this;
            $.each(t, function() {
                var t = a[this.Rank]
                  , e = "0" !== this.AvatarID ? this.AvatarID : this.AccountID % 30
                  , n = PIXI.Sprite.fromImage("/assets/images/avatar/" + e + ".png");
                n.width = n.height = t.d,
                n.anchor.set(.5),
                n.position.set(t.x, t.y);
                var i = new PIXI.Text(this.Nickname,{
                    fontFamily: r.fontFaceBold,
                    fontSize: 16,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10,
                    align: "center"
                });
                i.anchor.set(.5),
                i.position.set(t.nx, t.ny);
                var o = new PIXI.Text(r.formatNumber(this.PrizeValue),{
                    fontFamily: r.fontFaceBold,
                    fontSize: 14,
                    fontStyle: "italic",
                    fontWeight: "bold",
                    fill: ["#ff3879"],
                    padding: 10,
                    align: "center"
                });
                o.anchor.set(.5),
                o.position.set(t.mx, t.my),
                r.boxFinish.addChild(n, i, o)
            });
            var h = new Sprite(this.assets.loader.resources.assetsTourTlmn.textures["btn-normal.png"]);
            h.name = "btn-normal.png",
            h.anchor.set(.5),
            h.position.set(0, 190),
            h.addChild(new PIXI.Text(Message.GetMessage("sl30").toUpperCase(),{
                fontFamily: this.fontFaceBold,
                fontSize: "vi" === this.lang ? 20 : 14,
                fill: ["#ffffff", "#fff2c5"]
            })),
            h.getChildAt(0).anchor.set(.5),
            h.getChildAt(0).position.set(0, 0),
            h.interactive = !0,
            h.buttonMode = !0,
            h.on("pointerover", this.btnHover.bind(h, this)).on("pointerout", this.btnOut.bind(h, this)).on("pointerdown", this.btnDown.bind(h, this)).on("pointerup", function() {
                r.delete(),
                window.location.hash = "#/tournament/tlmn/"
            }),
            this.boxFinish.addChild(h)
        }
        ,
        d.prototype.getRank = function() {
            var e;
            null == this.roomModel || this.roomModel.TournamentID <= 0 || "" == this.roomModel.UniqueSessionID || (e = this,
            $.ajax({
                type: "GET",
                url: Config.Tour.tlmn.api + ("GetTableRank?TournamentID=" + this.roomModel.TournamentID + "&tableId=" + this.roomModel.UniqueSessionID),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                cache: !1,
                crossDomain: !0,
                xhrFields: {
                    withCredentials: !0
                },
                success: function(t) {
                    0 === t.c && 0 < t.d.length && $.each(t.d, function() {
                        var t = e.getPlayerByAccountId(this.accountID + ":" + this.portalID);
                        if (null == t)
                            return !0;
                        t.setRank(this.rank)
                    })
                },
                error: function() {}
            }))
        }
        ,
        d.prototype.delete = function() {
            window.removeEventListener("resize", this.resize),
            this.hub.connection.stop(),
            this.ready = !1,
            this.connected = !1,
            this.deleteWaitScreen();
            for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                "tlmn-tournament" === t[e].data && t[e].kill();
            try {
                this.application.destroy(!1)
            } catch (t) {}
        }
        ,
        d.prototype.clear = function() {
            try {
                this.assets.loader.destroy(),
                this.delete()
            } catch (t) {}
        }
        ,
        d);
        function d(t) {
            var o = h.call(this) || this;
            return o.deleteWaitScreen = function() {
                for (this.timeRemain = 0,
                clearTimeout(this.timeCount),
                this.txtNotify.visible = !1; 0 < this.playerContainer.children.length; )
                    this.playerContainer.children[0].destroy({
                        children: !0
                    });
                try {
                    try {
                        this.waitSound.stop()
                    } catch (t) {}
                } catch (t) {}
            }
            ,
            o.updateChips = function(t, e, n) {
                var i = o.getPlayerByAccountId(t);
                i && (i.updateBalance(n),
                i.showMoney(e))
            }
            ,
            o.flipCard = function(t) {
                var e = this;
                if (t)
                    try {
                        TweenMax.to(t.scale, .3, {
                            data: "tlmn-tournament",
                            x: .01,
                            onComplete: function() {
                                t.texture = e.assets.loader.resources.baiTourTlmn.textures[e.cardsMap[t.OrdinalValue]];
                                try {
                                    TweenMax.to(t.scale, .3, {
                                        data: "tlmn-tournament",
                                        x: t.s
                                    })
                                } catch (t) {}
                            }
                        })
                    } catch (t) {}
            }
            ,
            o.overlayOtherCurrentCard = function() {
                for (var t = 0; t < this.currentCards.length - 1; t++)
                    for (var e = 0; e < this.currentCards[t].children.length; e++)
                        this.overlay(this.currentCards[t].children[e])
            }
            ,
            o.checkHieuUng = function(t) {
                return 4 === t.length && t[1].CardNumber === t[0].CardNumber && t[2].CardNumber === t[3].CardNumber && t[1].CardNumber === t[3].CardNumber ? "tu-quy-" : 6 === t.length && t[1].CardNumber === t[0].CardNumber ? "3-doi-thong-" : 8 === t.length && t[1].CardNumber === t[0].CardNumber ? "4-doi-thong-" : ""
            }
            ,
            o.getCardNumber = function(t) {
                var e = [];
                for (var n in t) {
                    var i = {
                        CardSuite: t[n] % 4 * 13,
                        CardNumber: (t[n] - t[n] % 4) / 4 + 3,
                        OrdinalValue: t[n],
                        IsDraggable: !1,
                        Flip: !0
                    };
                    e.push(i)
                }
                return e
            }
            ,
            o.resetGame = function(t) {
                try {
                    o.deleteTween(),
                    o.removeDraftCards(),
                    o.destroyEffect(),
                    o.handCards = [],
                    o.selectedCards = [],
                    o.currentCards = [],
                    o.isFinish = !1;
                    for (var e = 0; e < o.players.length; e++)
                        o.players[e] && o.players[e].reset()
                } catch (t) {}
            }
            ,
            o.size = t.size,
            o.target = t.target,
            o.assets = new a.default,
            o.currencyId = t.currencyId,
            o.lang = Message.GetLanguageCode(),
            o.hubUrl = t.hubUrl,
            o.token = t.token,
            o.ready = !1,
            o.isLoad = !1,
            t.tourId && (o.tourId = t.tourId),
            t.roomId && (o.roomId = t.roomId),
            t.showInfo && (o.showInfo = t.showInfo),
            o
        }
        e.games = c
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var i = n(1)
          , o = (s.prototype.init = function() {
            this.connect(),
            this.listen()
        }
        ,
        s.prototype.connect = function() {
            var t = this;
            this.connection = (new i.HubConnectionBuilder).withUrl(this.url, {
                accessTokenFactory: function() {
                    return t.token
                },
                skipNegotiation: !0,
                transport: i.HttpTransportType.WebSockets
            }).build(),
            this.connection.serverTimeoutInMilliseconds = 1e5,
            this.connection.start().then(function() {
                console.log("connected"),
                t.game.connected || (t.game.connected = !0,
                t.joinTour(t.game.tourId, t.game.currencyId))
            }).catch(function(t) {
                return console.error(t)
            })
        }
        ,
        s.prototype.listen = function() {
            var i = this;
            this.connection.on("JoinRoom", function(t, e) {
                console.log("JoinRoom", t),
                i.game && i.game.joinRoom(t, e)
            }),
            this.connection.on("PlayerJoinGame", function(t, e) {
                if (console.log("PlayerJoinGame", t, e),
                null == t || null == e || null != e && !e.IsOpen) {
                    try {
                        i.game.delete()
                    } catch (t) {}
                    window.location.hash = "#/tournament/tlmn/"
                } else
                    null != e && i.game && i.game.joinGame(t, e)
            }),
            this.connection.on("PlayerJoinRoom", function(t) {
                console.log("PlayerJoinRoom", t),
                i.game && i.game.playerJoin(t)
            }),
            this.connection.on("PlayerJoinAnotherTable", function(t) {
                console.log("PlayerJoinAnotherTable", t),
                i.game && i.game.playerJoinAnotherTable(t)
            }),
            this.connection.on("Division", function(t, e) {
                console.log("Division", t, e),
                i.game && i.game.division(e)
            }),
            this.connection.on("ChangeDealer", function(t, e) {
                i.game && i.game.changeDealer(e)
            }),
            this.connection.on("ErrorMessage", function(t) {
                console.log("ErrorMessage", t),
                i.game && i.game.errorMessage(t)
            }),
            this.connection.on("Disconnect", function(t) {
                console.log("Disconnect", t),
                i.game && i.game.disconnect(t)
            }),
            this.connection.on("TourFinished", function(t) {
                i.game && i.game.tourFinished(t)
            }),
            this.connection.on("TourInfo", function(t) {
                i.game && i.game.updateTableInfo(t)
            }),
            this.connection.on("PlayerRegisterLeave", function(t) {
                console.log("PlayerRegisterLeave", t),
                i.game && i.game.playerRegisterLeave(t)
            }),
            this.connection.on("PlayerLeave", function(t) {
                console.log("PlayerLeave", t),
                i.game && i.game.playerLeave(t)
            }),
            this.connection.on("UpdateConnectionStatus", function(t) {
                console.log("UpdateConnectionStatus", t),
                i.game && i.game.updateConnectionStatus(t)
            }),
            this.connection.on("EndRound", function() {
                i.game && i.game.endRound()
            }),
            this.connection.on("StartGame", function(t) {
                console.log("StartGame", t),
                i.game && i.game.startGame(t)
            }),
            this.connection.on("DanhBai", function(t, e) {
                console.log("DanhBai", t, e),
                i.game && i.game.danhBai(t, e)
            }),
            this.connection.on("BoLuot", function(t) {
                console.log("BoLuot", t),
                i.game && i.game.boLuot(t)
            }),
            this.connection.on("AllowChanNgay", function(t) {
                console.log("AllowChanNgay", t),
                i.game && i.game.chanNgay(t)
            }),
            this.connection.on("CancelChanNgay", function() {
                console.log("CancelChanNgay"),
                i.game && i.game.cancelChanNgay()
            }),
            this.connection.on("SortCards", function(t) {
                console.log("SortCards", t),
                i.game && i.game.sortHandCards(t)
            }),
            this.connection.on("UpdateChips", function(t, e, n) {
                console.log("UpdateChips", t, e, n),
                i.game && i.game.updateChips(t, e, n)
            }),
            this.connection.on("ShowResult", function(t) {
                console.log("ShowResult", t),
                i.game && i.game.showResult(t)
            }),
            this.connection.on("StartActions", function(t, e, n) {
                console.log("StartActions", t, e, n),
                i.game && i.game.startActions(t, e, n)
            }),
            this.connection.on("recieveMessage", function(t, e, n) {
                i.game && i.game.recieveMessage(t, e, n)
            })
        }
        ,
        s.prototype.joinTour = function(t, e) {
            this.connection.invoke("PlayNow", t, e).then(function(t) {
                console.log("PlayNow", t)
            })
        }
        ,
        s.prototype.joinViewer = function(t, e) {
            this.connection.invoke("JoinViewer", t, e).then(function(t) {
                console.log("JoinViewer", t)
            })
        }
        ,
        s.prototype.playerRegister = function(t) {
            this.connection.invoke("PlayerRegister", t).then(function(t) {
                console.log("PlayerRegister", t)
            })
        }
        ,
        s.prototype.checkTournament = function(t) {
            this.connection.invoke("CheckTournament", t).then(function(t) {
                console.log("CheckTournament", t)
            })
        }
        ,
        s.prototype.registerLeave = function(t) {
            this.connection.invoke("RegisterLeave", t).then(function(t) {
                console.log("RegisterLeave", t)
            })
        }
        ,
        s.prototype.sendMessage = function(t) {
            this.connection.invoke("SendMessage", t).then(function(t) {
                console.log("SendMessage", t)
            })
        }
        ,
        s.prototype.getTournamentInfo = function(t) {
            this.connection.invoke("GetTournamentInfo", t).then(function(t) {})
        }
        ,
        s.prototype.danhBai = function(t) {
            this.connection.invoke("DanhBai", this.game.tourId, t, this.game.currencyId).then(function(t) {
                console.log("DanhBai", t)
            }).catch(function(t) {
                console.log("e", t)
            })
        }
        ,
        s.prototype.boLuot = function() {
            this.connection.invoke("BoLuot", this.game.tourId, this.game.currencyId).then(function(t) {})
        }
        ,
        s.prototype.sortHandCards = function() {
            this.connection.invoke("SortHandCards", this.game.tourId, this.game.currencyId).then(function(t) {})
        }
        ,
        s);
        function s(t, e, n) {
            this.url = e,
            this.token = t,
            this.game = n,
            this.init()
        }
        e.default = o
    }
    , function(t, e, n) {
        "use strict";
        var i, o = this && this.__extends || (i = function(t, e) {
            return (i = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var n in e)
                    e.hasOwnProperty(n) && (t[n] = e[n])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function n() {
                this.constructor = t
            }
            i(t, e),
            t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
            new n)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s, a = n(0), r = (s = a.Assets,
        o(h, s),
        h);
        function h() {
            var t = s.call(this) || this;
            return t.assets = [{
                id: "assetsTourTlmn",
                src: "/tournament/poker/assets/poker-tour.json"
            }, {
                id: "baiTourTlmn",
                src: "/assets/images/common/bai.json"
            }, {
                id: "commonTourTlmn",
                src: "/assets/images/common/common.json"
            }, {
                id: "dealerTourTlmn",
                src: "/assets/images/common/dealer.json"
            }, {
                id: "fireworkTourTlmn",
                src: "/assets/images/common/firework.json"
            }, {
                id: "finalTableTlmn",
                src: "/tournament/poker/assets/final_table.png"
            }, {
                id: "win.effect",
                src: "/assets/images/common/win.png"
            }, {
                id: "assetsTlmn",
                src: "/assets/images/tlmn/tlmn.json"
            }],
            t.loadAssets = function() {
                t.add(t.assets)
            }
            ,
            t.loadAssets(),
            t
        }
        e.default = r
    }
    , function(t, e, n) {
        "use strict";
        var i, o = this && this.__extends || (i = function(t, e) {
            return (i = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var n in e)
                    e.hasOwnProperty(n) && (t[n] = e[n])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function n() {
                this.constructor = t
            }
            i(t, e),
            t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
            new n)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s, a = n(0), r = (s = PIXI.Container,
        o(h, s),
        h.prototype.isCurrentPlayer = function() {
            var t = App.account.portalID
              , e = App.account.accountID;
            return e === e + ":" + t
        }
        ,
        h.prototype.initAvatar = function() {
            var t = "0" !== this.player.Account.AvatarID && "" !== this.player.Account.AvatarID ? this.player.Account.AvatarID : this.player.Account.AccountID % 30;
            this.avatar = PIXI.Sprite.fromImage("/assets/images/avatar/" + t + ".png"),
            this.avatar.anchor.set(.5),
            this.avatar.width = this.w,
            this.avatar.height = this.h,
            this.avatar.interactive = !0,
            this.avatar.buttonMode = !0,
            this.avatar.position.set(this.xy[0], this.xy[1]),
            this.addChild(this.avatar)
        }
        ,
        h.prototype.initBox = function() {
            this.box = new PIXI.Sprite(this.game.assets.loader.resources.commonTourTlmn.textures["bg-avatar.png"]),
            this.box.anchor.set(.5),
            this.box.position.set(this.avatar.x, this.avatar.y + this.avatar.height / 2 + this.box.height / 2 + 5),
            this.addChild(this.avatar, this.box),
            this.txtUserName = new PIXI.Text(this.player.Account.NickName.substring(0, 15) + (15 < this.player.Account.NickName.length ? "..." : ""),{
                fontFamily: "Arial",
                fontSize: 11,
                fontWeight: "bold",
                fill: ["white"],
                padding: 10
            }),
            this.txtUserName.anchor.set(.5),
            this.txtUserName.position.set(0, -7),
            this.txtMoney = new PIXI.Text(a.Util.ParseMoney(this.player.Chips),{
                fontFamily: "Arial",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["yellow"],
                padding: 10
            }),
            this.txtMoney.anchor.set(.5),
            this.txtMoney.position.set(0, 7),
            this.box.addChild(this.txtUserName, this.txtMoney)
        }
        ,
        h.prototype.initStatus = function() {
            this.disStatus = new PIXI.Sprite(this.game.assets.loader.resources.commonTourTlmn.textures["ic-disconnect.png"]),
            this.disStatus.anchor.set(.5),
            this.disStatus.position.set(this.avatar.x - this.avatar.width / 2, this.avatar.y - 21),
            this.disStatus.visible = !1,
            this.leaveStatus = new PIXI.Sprite(this.game.assets.loader.resources.commonTourTlmn.textures["ic-quit.png"]),
            this.leaveStatus.anchor.set(.5),
            this.leaveStatus.position.set(this.avatar.x - this.avatar.width / 2, this.avatar.y + 21),
            this.leaveStatus.visible = !1,
            this.addChild(this.disStatus, this.leaveStatus)
        }
        ,
        h.prototype.updateBalance = function(t) {
            this.txtMoney.text = a.Util.ParseMoney(t),
            this.chip = t
        }
        ,
        h.prototype.updateStatus = function(t) {
            1 === t ? this.isUnLeave || this.isLeave ? (this.isUnLeave = !1,
            this.leaveStatus.visible = !1,
            this.isLeave = !1,
            this.accountId === this.game.currentPlayer.AccountID && this.game.showStatus(Message.GetMessage("me9"), 2e3)) : this.disStatus.visible = !1 : 2 === t ? (this.isLeave = !0,
            this.leaveStatus.visible = !0,
            this.accountId === this.game.currentPlayer.AccountID && this.game.showStatus(Message.GetMessage("me8"), 2e3)) : 0 === t && (this.disStatus.visible = !0)
        }
        ,
        h.prototype.showMoney = function(t, e) {
            var n = new PIXI.Text((0 < t ? "+" : "") + a.Util.ParseMoney(t),{
                fontFamily: this.game.fontFaceBold,
                fontSize: 20,
                fill: "yellow"
            });
            n.anchor.set(.5),
            n.position.set(this.avatar.x, this.avatar.y),
            this.handContainer.addChild(n),
            TweenMax.to(n, 2, {
                data: "tlmn-tournament",
                y: n.y - 100,
                alpha: 0
            })
        }
        ,
        h.prototype.removeHandCards = function() {
            this.handContainer && this.handContainer.destroy({
                children: !0
            }),
            this.handContainer = new Container,
            this.addChild(this.handContainer)
        }
        ,
        h.prototype.removeDivideCards = function() {
            if (this.divideContainer)
                try {
                    this.divideContainer.destroy({
                        children: !0
                    })
                } catch (t) {}
            this.divideContainer = new Container,
            this.divideContainer.visible = !0,
            this.game.divideContainer.addChild(this.divideContainer)
        }
        ,
        h.prototype.removeEffect = function() {
            if (this.effectContainer)
                try {
                    this.effectContainer.destroy({
                        children: !0
                    })
                } catch (t) {}
            this.effectContainer = new Container,
            this.effectContainer.visible = !0,
            this.game.effectContainer.addChild(this.effectContainer)
        }
        ,
        h.prototype.generateHandCards = function(t) {
            this.removeHandCards(),
            this.handCards = [];
            for (var e = this.game, n = this, i = 0; i < t.length; i++) {
                var o = new Sprite(this.game.assets.loader.resources.baiTourTlmn.textures["joker.png"]);
                o.anchor.set(.5),
                o.OrdinalValue = void 0 !== t[i].OrdinalValue ? t[i].OrdinalValue : t[i].ordinalValue,
                o.s = e.handCardsPos[this.pos].scale,
                o.posY = e.handCardsPos[this.pos].y,
                o.scale.set(o.s),
                o.position.set(e.handCardsPos[this.pos].x, e.handCardsPos[this.pos].y),
                o.isSeleted = !1,
                o.on("pointerdown", e.cardDown.bind(o, e)),
                this.handCards.push(o),
                this.handContainer.addChild(o)
            }
            for (i = this.handCards.length - 1; 0 <= i; i--)
                this.handCards[i] && this.flipHand(this.handCards[i], i);
            setTimeout(function() {
                n.enableCards(),
                e.enableButton(e.btnSort)
            }, 1e3)
        }
        ,
        h.prototype.flipHand = function(t, e) {
            try {
                TweenMax.to(t, .4, {
                    data: "tlmn-tournament",
                    x: this.game.handCardsPos[0].x + 65 * e
                })
            } catch (t) {}
            setTimeout(this.game.flipCard(t), 400)
        }
        ,
        h.prototype.enableCards = function() {
            for (var t = this.handCards.length - 1; 0 <= t; t--)
                this.handCards[t].interactive = !0,
                this.handCards[t].buttonMode = !0
        }
        ,
        h.prototype.disableCards = function() {
            for (var t = this.handCards.length - 1; 0 <= t; t--)
                this.handCards[t].interactive = !1,
                this.handCards[t].buttonMode = !1
        }
        ,
        h.prototype.updateCards = function(t) {
            this.numbCards = t,
            this.txtCards.text = t,
            this.jokCard.visible = 0 < this.numbCards && !this.isCurrentPlayer()
        }
        ,
        h.prototype.divide = function() {
            this.removeDivideCards();
            for (var t = 0; t < 13; t++) {
                var e = new Sprite(this.game.assets.loader.resources.baiTourTlmn.textures["joker.png"]);
                e.anchor.set(.5),
                this.divideContainer.addChild(e),
                e.scale.set(.01),
                e.position.set(this.game.dealer.x, this.game.dealer.y);
                try {
                    TweenMax.to(e.scale, .5, {
                        data: "tlmn-tournament",
                        x: this.game.handCardsPos[this.pos].scale,
                        y: this.game.handCardsPos[this.pos].scale,
                        delay: .07 * t
                    })
                } catch (t) {}
                try {
                    TweenMax.to(e, .5, {
                        data: "tlmn-tournament",
                        x: this.game.handCardsPos[this.pos].x,
                        y: this.game.handCardsPos[this.pos].y,
                        delay: .07 * t
                    })
                } catch (t) {}
            }
        }
        ,
        h.prototype.hideDivide = function() {
            this.divideContainer && (this.divideContainer.visible = !1)
        }
        ,
        h.prototype.showCards = function(t, e, n) {
            this.removeHandCards();
            for (var i = 0; i < t.length; i++) {
                var o = new Sprite(TextureCache[this.game.cardsMap[t[i].OrdinalValue]]);
                o.anchor.set(.5),
                o.position.set(this.game.handCardsPos[this.pos].x, this.game.handCardsPos[this.pos].y),
                3 === this.pos ? this.handContainer.addChild(o) : this.handContainer.addChildAt(o, 0);
                try {
                    TweenMax.to(o, .5, {
                        data: "tlmn-tournament",
                        x: o.x + 30 * i * (3 === this.pos ? 1 : -1)
                    })
                } catch (t) {}
                $.inArray(t[i].OrdinalValue, e) < 0 && 5 !== n && this.game.overlay(o)
            }
        }
        ,
        h.prototype.setRank = function(t) {
            try {
                this.rank.destroy({
                    children: !0
                })
            } catch (t) {}
            var e;
            this.rank = new PIXI.Sprite(this.game.assets.loader.resources.assetsTourTlmn.textures[t < 4 ? "rank-" + t + ".png" : "bg-rank.png"]),
            this.rank.anchor.set(.5),
            this.rank.position.set(this.game.rankPos[this.pos][0], this.game.rankPos[this.pos][1]),
            this.addChild(this.rank),
            3 < t && ((e = new PIXI.Text(t,{
                fontFamily: this.game.fontFaceBold,
                fontSize: 13,
                fill: "#fff"
            })).anchor.set(.5),
            this.rank.addChild(e))
        }
        ,
        h);
        function h(t) {
            var n = s.call(this) || this;
            return n.pos = 0,
            n.w = 140,
            n.h = 140,
            n.b = 85,
            n.balance = 0,
            n.handCards = [],
            n.numbCards = 0,
            n.selectedCards = [],
            n.isUnLeave = !1,
            n.isLeave = !1,
            n.chip = 0,
            n.showWin = function() {
                var t = new AnimatedSprite(n.game.framesWin);
                t.anchor.set(.5),
                0 == n.pos ? (t.scale.set(1.18),
                t.y += 10) : (t.scale.set(1.05),
                t.y += 8),
                t.position.set(n.avatar.x, n.avatar.y + 10),
                t.animationSpeed = .5,
                t.play(),
                n.effectContainer.addChild(t);
                var e = new Sprite(n.game.assets.loader.resources.commonTourTlmn.textures["thang-" + n.game.lang + ".png"]);
                e.anchor.set(.5),
                e.scale.set(0 === n.pos ? .9 : .8),
                e.position.set(n.avatar.x, n.avatar.y + n.avatar.height / 2 - e.height / 2),
                n.effectContainer.addChild(e)
            }
            ,
            n.showLose = function() {
                var t = new Sprite(n.game.assets.loader.resources.commonTourTlmn.textures["bg-black-effect.png"]);
                t.anchor.set(.5);
                var e = new Sprite(n.game.assets.loader.resources.commonTourTlmn.textures["thua-" + n.game.lang + ".png"]);
                e.anchor.set(.5),
                t.addChild(e),
                t.scale.set(0 === n.pos ? .9 : .8),
                t.position.set(n.avatar.x, n.avatar.y + n.avatar.height / 2 - t.height / 2),
                n.effectContainer.addChild(t)
            }
            ,
            n.reset = function() {
                n.removeDivideCards(),
                n.removeEffect(),
                n.removeHandCards(),
                n.numbCards = 0,
                n.jokCard.visible = !1,
                n.selectedCards = []
            }
            ,
            n.pos = t.position,
            n.player = t.player,
            n.chip = t.player.Chips,
            n.accountId = t.player.AccountID,
            n.xy = t.xy,
            n.game = t.game,
            t.w && (n.w = t.w),
            t.h && (n.h = t.h),
            t.b && (n.b = t.b),
            n.handCards = [],
            n.numbCards = 0,
            n.selectedCards = [],
            n.jokCard = new Sprite(n.game.assets.loader.resources.baiTourTlmn.textures["joker.png"]),
            n.jokCard.anchor.set(.5),
            n.jokCard.position.set(n.game.handCardsPos[n.pos].x, n.game.handCardsPos[n.pos].y),
            n.txtCards = new PIXI.Text("0",{
                fontFamily: n.game.fontFaceBold,
                fontSize: 30,
                fill: ["#fff"]
            }),
            n.txtCards.anchor.set(.5),
            n.jokCard.addChild(n.txtCards),
            n.jokCard.visible = 0 < n.numbCards && !n.isCurrentPlayer(),
            n.addChild(n.jokCard),
            n.initAvatar(),
            n.initBox(),
            n.initStatus(),
            n.reset(),
            n
        }
        e.default = r
    }
    , function(t, e, n) {
        "use strict";
        var i, o, s;
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.variable = e.tlmnActionName = e.tlmnToiTrangType = e.tlmnResultFamily = void 0,
        (i = e.tlmnResultFamily || (e.tlmnResultFamily = {}))[i.CONG_VA_THOI = 0] = "CONG_VA_THOI",
        i[i.CONG = 1] = "CONG",
        i[i.THOI_BAI = 2] = "THOI_BAI",
        i[i.BET = 3] = "BET",
        i[i.NHAT = 4] = "NHAT",
        i[i.TOI_TRANG = 5] = "TOI_TRANG",
        (o = e.tlmnToiTrangType || (e.tlmnToiTrangType = {}))[o.None = -1] = "None",
        o[o.TuQuyBa = 0] = "TuQuyBa",
        o[o.BaDoiThongChuaBaBich = 1] = "BaDoiThongChuaBaBich",
        o[o.SanhRong = 2] = "SanhRong",
        o[o.NamDoiThong = 3] = "NamDoiThong",
        o[o.SauDoiBatKy = 4] = "SauDoiBatKy",
        o[o.TuQuyHai = 5] = "TuQuyHai",
        (s = e.tlmnActionName || (e.tlmnActionName = {}))[s.START_GAME = 1e3] = "START_GAME",
        s[s.BOC_BAI = 0] = "BOC_BAI",
        s[s.DANH_BAI = 1] = "DANH_BAI",
        s[s.BO_LUOT = 2] = "BO_LUOT",
        s[s.KET_THUC = 3] = "KET_THUC";
        var a = (r.prototype.formatTimeRemain = function(t) {
            return Math.floor(t / 60) + ":" + (t % 60 < 10 ? "0" + t % 60 : t % 60)
        }
        ,
        r);
        function r() {
            this.fontRobotoCondensedRegular = "RobotoCondensed-Regular",
            this.fontRobotoCondensedBold = "RobotoCondensed-Bold",
            this.fontFaceBold = "Roboto-Bold",
            this.fontFace = "Roboto-Light",
            this.cardsMap = ["3bich.png", "3tep.png", "3do.png", "3co.png", "4bich.png", "4tep.png", "4do.png", "4co.png", "5bich.png", "5tep.png", "5do.png", "5co.png", "6bich.png", "6tep.png", "6do.png", "6co.png", "7bich.png", "7tep.png", "7do.png", "7co.png", "8bich.png", "8tep.png", "8do.png", "8co.png", "9bich.png", "9tep.png", "9do.png", "9co.png", "10bich.png", "10tep.png", "10do.png", "10co.png", "11bich.png", "11tep.png", "11do.png", "11co.png", "12bich.png", "12tep.png", "12do.png", "12co.png", "13bich.png", "13tep.png", "13do.png", "13co.png", "1bich.png", "1tep.png", "1do.png", "1co.png", "2bich.png", "2tep.png", "2do.png", "2co.png", "joker.png"],
            this.accountId = 0,
            this.ready = !1,
            this.connected = !1,
            this.tableCon = null,
            this.rankPos = [[-590, 170], [450, -195]],
            this.playerPos = [[-500, 106], [360, -240]],
            this.handCardsPos = [{
                x: -360,
                y: 206,
                scale: 1.5
            }, {
                x: 250,
                y: -208,
                scale: 1
            }],
            this.divideCardsPos = [{
                x: -385,
                y: 156,
                scale: 1
            }, {
                x: 250,
                y: -208,
                scale: 1
            }],
            this.players = [null, null],
            this.moneyText = ["COIN", "GAM"],
            this.cardOri = {
                width: 68,
                height: 92,
                rotation: 10
            },
            this.cardOwn = {
                width: 96,
                height: 130
            },
            this.cardOther = {
                width: 46,
                height: 63
            },
            this.handCards = [],
            this.currentCards = [],
            this.framesFinal = [[4708, 0, 1, 1, 0, 0, 0], [711, 0, 708, 108, 0, -55, -17], [2073, 0, 648, 108, 0, -85, -17], [3319, 0, 587, 108, 0, -116, -17], [0, 108, 528, 108, 0, -146, -17], [480, 324, 468, 108, 0, -176, -17], [1841, 324, 408, 108, 0, -206, -17], [2249, 324, 349, 108, 0, -236, -17], [2598, 324, 288, 108, 0, -267, -17], [2886, 324, 228, 108, 0, -297, -17], [4519, 324, 198, 108, 0, -297, -17], [3723, 324, 199, 108, 0, -296, -17], [3922, 324, 199, 108, 0, -296, -17], [4121, 324, 199, 108, 0, -295, -17], [4320, 324, 199, 108, 0, -295, -17], [3872, 216, 480, 108, 0, -97, -17], [1013, 108, 484, 108, 0, -85, -17], [1497, 108, 484, 108, 0, -76, -17], [1981, 108, 484, 108, 0, -74, -17], [2465, 108, 484, 108, 0, -86, -17], [2949, 108, 484, 108, 0, -98, -17], [3433, 108, 484, 108, 0, -111, -17], [3917, 108, 484, 108, 0, -123, -17], [0, 216, 484, 108, 0, -135, -17], [484, 216, 484, 108, 0, -147, -17], [968, 216, 484, 108, 0, -159, -17], [1452, 216, 484, 108, 0, -172, -17], [1936, 216, 484, 108, 0, -184, -17], [2420, 216, 484, 108, 0, -196, -17], [2904, 216, 484, 108, 0, -196, -17], [3388, 216, 484, 108, 0, -196, -17], [0, 324, 480, 108, 0, -199, -17], [948, 324, 464, 108, 0, -208, -17], [3521, 324, 202, 108, 0, -285, -17], [3318, 324, 203, 108, 0, -285, -17], [3114, 324, 204, 108, 0, -285, -17], [3114, 324, 204, 108, 0, -285, -17], [3114, 324, 204, 108, 0, -285, -17], [4448, 0, 260, 108, 0, -259, -17], [4401, 108, 317, 108, 0, -233, -17], [4352, 216, 373, 108, 0, -207, -17], [1412, 324, 429, 108, 0, -181, -17], [528, 108, 485, 108, 0, -155, -17], [3906, 0, 542, 108, 0, -129, -17], [2721, 0, 598, 108, 0, -103, -17], [1419, 0, 654, 108, 0, -77, -17], [0, 0, 711, 108, 0, -51, -17], [4708, 0, 1, 1, 0, 0, 0]],
            this.selectedCards = [],
            this.divideCard = [],
            this.divisionCard = [],
            this.isFinish = !1,
            this.filterCard = new PIXI.filters.OutlineFilter(3,15572500),
            this.isPlaying = !1
        }
        e.variable = a
    }
    ],
    r.c = l,
    r.d = function(t, e, n) {
        r.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }
    ,
    r.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    r.t = function(e, t) {
        if (1 & t && (e = r(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var n = Object.create(null);
        if (r.r(n),
        Object.defineProperty(n, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                r.d(n, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return n
    }
    ,
    r.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return r.d(e, "a", e),
        e
    }
    ,
    r.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    r.p = "/",
    r(r.s = 12);
    function r(t) {
        if (l[t])
            return l[t].exports;
        var e = l[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return h[t].call(e.exports, e, e.exports, r),
        e.l = !0,
        e.exports
    }
    var h, l
});

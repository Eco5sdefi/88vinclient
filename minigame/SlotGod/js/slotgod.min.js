!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define("slotgod", [], e) : "object" == typeof exports ? exports.slotgod = e() : t.slotgod = e()
}(window, function() {
    return i = {},
    o.m = s = {
        6: function(t, e, s) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.game = void 0;
            var i = (o.prototype.remByVal = function(t, e) {
                for (var s = 0; s < t.length; s++)
                    t[s] == e && (t.splice(s, 1),
                    s--)
            }
            ,
            o.prototype.removeEmpty = function(t) {
                for (var e = [], s = 0; s < t.length; s++)
                    isNaN(t[s]) || e.push(t[s]);
                return e
            }
            ,
            o.prototype.convertArraytoString = function(t) {
                if ("string" == typeof t)
                    return t;
                for (var e = "", s = 0; s < t.length; s++)
                    isNaN(t[s]) || (e += "," + t[s]);
                return e.substring(1)
            }
            ,
            o.prototype.getRoomName = function(t, e) {
                var s = this.gameData[this.currencyId + "_" + (e || this.historyType)];
                if (!s)
                    return "";
                var i = s["" + (t - 1)];
                return i ? i.BetValue : ""
            }
            ,
            o.prototype.getTotalPrizeData = function(t) {
                var e = 0;
                return 0 == t.length ? e : e = t.split(";").length
            }
            ,
            o.prototype.getTotalBetLine = function(t) {
                return t.split(",").length
            }
            ,
            o.prototype.formatNumber = function(t) {
                for (var e = (t += "").split(","), s = e[0], i = 1 < e.length ? "," + e[1] : "", o = /(\d+)(\d{3})/; o.test(s); )
                    s = s.replace(o, "$1.$2");
                return s + i
            }
            ,
            o.prototype.reverseMatrix = function(t) {
                for (var e = t.split(","), s = [], i = [], o = 0; o < 3; o++) {
                    s = [];
                    for (var n = 0; n < 3; n++)
                        s.push(e[3 * n + o]);
                    i.push(s)
                }
                return i
            }
            ,
            o.prototype.resetTweenTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            o.prototype.showMessage = function(t) {
                var e = this;
                $(".mg-ps .notice").html(t),
                $(".mg-ps .notice").show(),
                setTimeout(function() {
                    $(".mg-ps .notice").hide(),
                    e.resetAll()
                }, 3e3)
            }
            ,
            o.prototype.init = function() {
                var t, e;
                0 < $("#gameSlotGod").length || (this.currencyId = libs.MiniGame.currencyId,
                this.roomType = libs.MiniGame.roomType,
                this.betType = libs.MiniGame.betType,
                this.mediaUrl = libs.MiniGame.urlRoot + "SlotGod/",
                this.apiUrl = libs.MiniGame.apiUrl + "api/SlotGod/",
                t = jQuery.createTemplateURL(this.mediaUrl + "templates/game.html"),
                e = jQuery.processTemplateToText(t),
                $("#minigame").append(e),
                $("#gameSlotGod").draggable(),
                $("#lblLine").html(Message.GetMessage("ps6")),
                $("#lblAuto").html(Message.GetMessage("ps4")),
                $("#lblSpin").html(Message.GetMessage("ps3")),
                $(".mg-ps .actions .speed .button-speed").prop("title", Message.GetMessage("mnpk1")),
                $("#lblChooseLine").html(Message.GetMessage("ps17")),
                $("#lblFast").html(Message.GetMessage("ps21")),
                $("#lblOdd").html(Message.GetMessage("sl12")),
                $("#lblEven").html(Message.GetMessage("sl11")),
                $("#lblAll").html(Message.GetMessage("sl13")),
                $("#lblCancel").html(Message.GetMessage("sl14")),
                this.resetTweenTab(),
                this.loadAssets(),
                this.initEvents(),
                this.showLineChoose(),
                this.isInit = !0,
                libs.MiniGame.checkAutoShowGame("gameSlotGod") ? this.showGui() : this.hideGui(),
                App.resizeWindow())
            }
            ,
            o.prototype.showMoneyType = function() {
                var t, e = this;
                this.gameData[this.currencyId + "_" + this.betType] ? this.gameData[this.currencyId + "_" + this.betType].forEach(function(t) {
                    $("#gameSlotGod .bets .bet:eq(" + (t.RoomID - 1) + ")").html("<span>" + libs.Util.ConvertMoney(t.BetValue) + "<span>")
                }) : (t = this.apiUrl + "GetGameRoom?currencyID=" + this.currencyId + "&betType=" + this.betType + "&r=" + Math.random(),
                libs.Util.GetData(t, "", function(t) {
                    null != t && 0 <= t.c && (t.d.forEach(function(t) {
                        $("#gameSlotGod .bets .bet:eq(" + (t.RoomID - 1) + ")").html("<span>" + libs.Util.ConvertMoney(t.BetValue) + "<span>")
                    }),
                    e.gameData[e.currencyId + "_" + e.betType] = t.d)
                })),
                2 == this.betType ? ($("#gameSlotGod .ic-money").removeClass("active"),
                $("#gameSlotGod .ic-money.money-2").addClass("active"),
                $("#jp-slotgod").css("color", "#fff"),
                $("#jp-slotgod").removeClass("x2")) : ($("#gameSlotGod .ic-money").removeClass("active"),
                $("#gameSlotGod .ic-money.money-1").addClass("active"),
                $("#jp-slotgod").css("color", "#ff0")),
                $("#gameSlotGod .bets .bet").removeClass("active"),
                $("#gameSlotGod .bets .bet:eq(" + (this.roomId - 1) + ")").addClass("active"),
                this.selectRoom()
            }
            ,
            o.prototype.selectRoom = function(t) {
                if (void 0 !== t) {
                    if (t < 1 || 3 < t)
                        return;
                    if (this.isSpin || this.isAutoSpin) {
                        var e = (this.isAutoSpin,
                        Message.GetMessage("ps8"));
                        return void this.showMessage(e)
                    }
                    this.roomId = t,
                    sessionStorage.setItem("slotGod.roomId", t)
                }
                this.resetAll(),
                $("#gameSlotGod .bets .bet").removeClass("active"),
                $("#gameSlotGod .bets .bet:eq(" + (this.roomId - 1) + ")").addClass("active"),
                this.getJackpot()
            }
            ,
            o.prototype.changeMoney = function() {
                this.isSpin || this.isAutoSpin ? this.showMessage(Message.GetMessage("ps8")) : 1 == this.roomType && 1 == this.betType || (1 == this.betType ? this.betType = 2 : this.betType = 1,
                sessionStorage.setItem("slotGod.betType", this.betType),
                this.roomId = 1,
                this.showMoneyType())
            }
            ,
            o.prototype.showHideLine = function(t) {
                if (!this.isSpin)
                    switch (t) {
                    case 0:
                        $(".select-lines").addClass("active");
                        break;
                    case 1:
                        $(".select-lines").removeClass("active")
                    }
            }
            ,
            o.prototype.chooseSingleLine = function(t) {
                var e = parseInt($(t).find("span.number").html());
                isNaN(e) || ($(t).hasClass("active") ? ($(t).addClass("active"),
                this.remByVal(this.lineData, e)) : ($(t).addClass("active"),
                this.lineData.push(e)),
                this.showLineChoose())
            }
            ,
            o.prototype.chooseMoreLine = function(t) {
                var e = [];
                switch (t) {
                case 1:
                    e = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19];
                    break;
                case 2:
                    e = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20];
                    break;
                case 3:
                    e = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
                }
                this.lineData = e,
                this.showLineChoose()
            }
            ,
            o.prototype.showLineChoose = function() {
                var t = this;
                t.lineData = this.removeEmpty(t.lineData);
                var e = t.lineData.length;
                $("#txtLine").html(e),
                $(".select-lines .line-box li").removeClass("active");
                for (var s = 0; s < e; s++)
                    $(".select-lines .line-box li").eq(t.lineData[s] - 1).addClass("active");
                sessionStorage.setItem("slotGod.lines", JSON.stringify(t.lineData))
            }
            ,
            o.prototype.showGui = function() {
                this.isShow || (this.isShow = !0,
                $("#gameSlotGod").show(),
                $(".minigame-expand .game .ic-ps").removeClass("blink"),
                this.showMoneyType(),
                this.isAutoSpin && this.autoSpin())
            }
            ,
            o.prototype.hideGui = function() {
                if (this.isShow) {
                    this.isShow = !1,
                    $("#gameSlotGod").hide(),
                    this.isAutoSpin && $(".minigame-expand .game .ic-ps").addClass("blink");
                    try {
                        1 == libs.MiniGame.gameHub.connection.connectionState && libs.MiniGame.hubObj.HideGodSlot().catch(function() {})
                    } catch (t) {}
                }
            }
            ,
            o.prototype.loadAssets = function() {
                this.loader = new PIXI.loaders.Loader,
                PIXI.utils.skipHello();
                var t = document.getElementById("canvas-slotgod");
                this.app = new PIXI.Application(304,225,{
                    antialias: !1,
                    transparent: !0,
                    view: t
                });
                for (var e = this, s = 0; s < this.assets.length; s++)
                    "" !== this.assets[s].id ? this.loader.add(this.assets[s].id, this.mediaUrl + this.assets[s].src) : this.loader.add(this.mediaUrl + this.assets[s].src);
                this.loader.load(function() {
                    e.columnContainer1 = new PIXI.Container,
                    e.columnContainer2 = new PIXI.Container,
                    e.columnContainer3 = new PIXI.Container,
                    e.app.stage.addChild(e.columnContainer1, e.columnContainer2, e.columnContainer3),
                    e.initSlots()
                })
            }
            ,
            o.prototype.initEvents = function() {
                var t = this;
                $("#gameSlotGod .buttons .button-close").unbind("click").click(function() {
                    t.hideGui()
                }),
                $("#gameSlotGod .button-guide").unbind("click").click(function() {
                    t.showGuide()
                }),
                $("#gameSlotGod .button-history").unbind("click").click(function() {
                    t.showHistory()
                }),
                $("#gameSlotGod .button-trophy").unbind("click").click(function() {
                    t.showRank()
                }),
                $("#sg-event").unbind("click").click(function() {
                    t.showEvent()
                }),
                $("#gameSlotGod .bets .bet").unbind("click").click(function() {
                    t.isAutoSpin && t.showMessage(Message.GetMessage("ps7")),
                    t.selectRoom($(this).index() + 1)
                }),
                $("#gameSlotGod .ic-money").unbind("click").click(function() {
                    t.changeMoney()
                }),
                $("#gameSlotGod .line-col-l i, .line-col-r i").hover(function() {
                    $(this).addClass("active"),
                    $(".lines .line-" + $(this).data("line")).addClass("active")
                }, function() {
                    $(this).removeClass("active"),
                    $(".lines .line-" + $(this).data("line")).removeClass("active")
                }),
                $(".button-line").click(function() {
                    t.showHideLine(0)
                }),
                $(".select-lines .line-box li").unbind("click").click(function() {
                    t.chooseSingleLine(this)
                }),
                $(".select-lines .button-close").click(function() {
                    t.showHideLine(1)
                }),
                $("#gameSlotGod .select-lines .actions .button").unbind("click").click(function() {
                    t.chooseMoreLine($(this).index() + 1)
                }),
                $("#btnStopSpin").unbind("click").click(function() {
                    t.stopAutoSpin()
                }),
                $("#btnSpin").unbind("click").click(function() {
                    t.initSpin()
                }),
                $("#btnAutoSpin").unbind("click").click(function() {
                    t.autoSpin()
                }),
                $("#input-speed").on("input", function() {
                    t.isSpin || (t.isQuick = $(this).prop("checked"))
                })
            }
            ,
            o.prototype.showEvent = function() {
                void 0 === this.tempEvent[Message.GetLanguage()] && (this.tempEvent[Message.GetLanguage()] = jQuery.createTemplateURL(this.mediaUrl + "templates/event/x2policy_" + Message.GetLanguage() + ".html")),
                libs.MiniGame.showPopup(),
                libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.tempEvent[Message.GetLanguage()]), {
                    scrollId: ".scroll-tx",
                    height: "590px"
                })
            }
            ,
            o.prototype.showRank = function(t) {
                void 0 === t && (t = this.betType),
                this.historyType = t,
                void 0 === this.temTopWinner && (this.temTopWinner = jQuery.createTemplateURL(this.mediaUrl + "templates/topWinner.html")),
                libs.MiniGame.showPopup(),
                this.temTopWinner.setParam("AccountID", "undefined" != typeof App && App.account ? App.account.accountID : ""),
                this.temTopWinner.setParam("PortalID", "undefined" != typeof App && App.account ? App.account.portalID : "");
                var e = this.apiUrl + "GetTopWinners"
                  , s = {
                    currencyID: this.currencyId,
                    betType: t,
                    topCount: 100
                }
                  , i = this;
                libs.Util.GetData(e, s, function(t) {
                    -1 < t.c && (i.currencyId = 1,
                    i.dataHistory = t.d,
                    i.bindTopWinner(1))
                })
            }
            ,
            o.prototype.bindTopWinner = function(t) {
                if (null != this.dataHistory) {
                    for (var e = [], s = 11 * (t - 1); s < 11 * t && !(this.dataHistory.length <= s); s++) {
                        var i = this.dataHistory[s];
                        if (e.push(i),
                        11 <= e.length)
                            break
                    }
                    libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temTopWinner, {
                        data: e
                    })),
                    $("#pager").pager({
                        pagenumber: t,
                        pagecount: Math.ceil(gameSlotGod.dataHistory.length / 10),
                        buttonClickCallback: function(t) {
                            gameSlotGod.bindTopWinner(t)
                        }
                    }),
                    this.currentPage = t,
                    libs.MiniGame.setActiveTab(this.historyType),
                    $("#t1rank").unbind("click").click(function() {
                        gameSlotGod.showRank(1)
                    }),
                    $("#t2rank").unbind("click").click(function() {
                        gameSlotGod.showRank(2)
                    })
                }
            }
            ,
            o.prototype.showHistory = function(t) {
                void 0 === t && (t = this.betType),
                this.historyType = t,
                this.currentPage = 1,
                void 0 === this.tempHistory && (this.tempHistory = jQuery.createTemplateURL(this.mediaUrl + "templates/accountHistory.html")),
                libs.MiniGame.showPopup();
                var e = this.apiUrl + "GetAccountHistory"
                  , s = {
                    currencyID: this.currencyId,
                    betType: t,
                    topCount: 500
                }
                  , i = this;
                libs.Util.GetData(e, s, function(t) {
                    0 <= t.c && (i.currentPage = 1,
                    i.dataHistory = t.d,
                    i.bindAccountHistory(1))
                })
            }
            ,
            o.prototype.bindAccountHistory = function(t) {
                if (null != this.dataHistory) {
                    for (var e = [], s = 8 * (t - 1); s < 8 * t && !(this.dataHistory.length <= s); s++) {
                        var i = this.dataHistory[s];
                        if (e.push(i),
                        8 <= e.length)
                            break
                    }
                    for (var o = [], n = "", a = 0; a < e.length; a++) {
                        n = "",
                        o = e[a].PrizeData.split(";");
                        for (var l = 0; l < o.length; l++)
                            n += o[l].split(",")[0] + ",";
                        n = n.substring(0, n.length - 1),
                        e[a].PrizeLine = n
                    }
                    libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.tempHistory, {
                        data: e
                    })),
                    $("#pager").pager({
                        pagenumber: t,
                        pagecount: Math.ceil(gameSlotGod.dataHistory.length / 10),
                        buttonClickCallback: function(t) {
                            gameSlotGod.bindAccountHistory(t)
                        }
                    }),
                    this.currentPage = t,
                    libs.MiniGame.setActiveTab(this.historyType),
                    $("#t1History").unbind("click").click(function() {
                        gameSlotGod.showHistory(1)
                    }),
                    $("#t2History").unbind("click").click(function() {
                        gameSlotGod.showHistory(2)
                    })
                }
            }
            ,
            o.prototype.backToHistory = function() {
                0 != this.dataHistory.length && this.bindAccountHistory(this.currentPage)
            }
            ,
            o.prototype.historyDetail = function(t, e) {
                if (null != this.dataHistory) {
                    for (var i, s = 0; s < this.dataHistory.length; s++)
                        if (this.dataHistory[s].SpinID == t && this.dataHistory[s].RoomID == e) {
                            i = this.dataHistory[s];
                            break
                        }
                    for (var o = [], n = [], a = i.PrizeData.split(";"), l = i.LineData.split(","), r = 0; r < a.length; r++) {
                        var c = {};
                        c.LineID = a[r].split(",")[0],
                        c.PrizeID = a[r].split(",")[1],
                        c.PrizeValue = a[r].split(",")[2],
                        o.push(c)
                    }
                    for (var h = 0; h < l.length; h++)
                        !function(e) {
                            var t = o.filter(function(t) {
                                return t.LineID === l[e]
                            })
                              , s = {};
                            s.LineID = l[e],
                            s.SpinID = i.SpinID,
                            s.CreatedTime = i.CreatedTime,
                            s.TotalBetValue = i.TotalBetValue,
                            s.TotalPrizeValue = i.TotalPrizeValue,
                            s.BetValue = i.BetValue,
                            0 == t.length ? (s.PrizeID = 0,
                            s.PrizeValue = 0) : (s.PrizeID = t[0].PrizeID,
                            s.PrizeValue = t[0].PrizeValue),
                            n.push(s)
                        }(h);
                    i.data = n,
                    void 0 === this.temHistoryDetail && (this.temHistoryDetail = jQuery.createTemplateURL(this.mediaUrl + "templates/historyDetails.html")),
                    $("#Popup_Container").setTemplate(this.temHistoryDetail),
                    $("#Popup_Container").processTemplate(i),
                    1 == this.historyType ? $("#eg_pophistory").addClass("popup-gold") : $("#eg_pophistory").addClass("popup-coin"),
                    libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temHistoryDetail, i));
                    var p = ".scroll-tx";
                    void 0 !== this.options && this.options.scrollId && (p = this.options.scrollId),
                    0 < $(p).length && "function" == typeof $(p).slimScroll && (void 0 === this.options && (this.options = {
                        height: "590px"
                    }),
                    $(p).slimScroll(this.options))
                }
            }
            ,
            o.prototype.showGuide = function() {
                libs.MiniGame.showPopup(),
                void 0 === this.tempGuide[Message.GetLanguage()] && (this.tempGuide[Message.GetLanguage()] = jQuery.createTemplateURL(this.mediaUrl + "templates/guide/guide_" + Message.GetLanguage() + ".html")),
                libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.tempGuide[Message.GetLanguage()]), {
                    scrollId: ".scroll-tx",
                    height: "590px"
                })
            }
            ,
            o.prototype.getJackpot = function() {
                1 == libs.MiniGame.gameHub.connection.connectionState && libs.MiniGame.hubObj.GetGodJackpot(this.currencyId, this.betType, this.roomId).then(function() {}).catch(function() {})
            }
            ,
            o.prototype.updateJackpot = function(t) {
                this.countJack ? this.countJack.update(t.JackpotFund) : this.countJack = new libs.Util.CountUp("jp-slotgod",!1,!1,0,t.JackpotFund,0,8,void 0),
                this.showInfoEvent(t.X2Info)
            }
            ,
            o.prototype.showInfoEvent = function(t) {
                if (!this.enableEvent || 0 !== this.eventCurrency && this.eventCurrency !== this.currencyId || !t)
                    return $("#sg-event").hide(),
                    void $("#jp-slotgod").removeClass("x2");
                var e, s = new Date(t.NextEventDateTime), i = t.NextEventDateTime;
                switch ("string" == typeof i && (0 < (i = i.replace(/\-/g, "/").replace(/[T|Z]/g, " ")).indexOf(".") && (i = i.substring(0, i.indexOf("."))),
                s = new Date(i)),
                t.Status) {
                case 1:
                    $("#sg-event").show();
                    var o, n = new Date;
                    if ((0 < t.Jackpot_Waiting || 0 < t.JackpotX2_Remain) && s.getDate() == n.getDate() && n < s) {
                        o = (o = libs.Util.formDateTimehms(t.NextEventDateTime, 2)).substring(0, 5),
                        $("#jp-slotgod").removeClass("x2"),
                        $("#sg-event").html('<div class="event active"><span class="t1" title="' + libs.Util.formDateTimehms(t.NextEventDateTime, 3) + '">' + Message.GetMessage("ev24") + '</span><span class="t2">' + o + '</span><span class="t3"></span></div>');
                        break
                    }
                    if (0 < t.Jackpot_Waiting) {
                        this.timeInfoX2 || (this.timeInfoX2 = setInterval(function() {
                            $("#sg-event .event").toggle()
                        }, 5e3)),
                        t && t.Jackpot_Waiting == t.Jackpot_Waiting || ($("#sg-event").html('<div class="event active"><span class="t1">' + Message.GetMessage("ev50") + '</span><span class="t2">' + t.Jackpot_Waiting + " " + Message.GetMessage("ev49") + '</span><span class="t3">(x2)</span></div>'),
                        $("#sg-event").html('<div class="event active" style="display: none"><span class="t1">' + Message.GetMessage("ev25") + '</span><span class="t2">' + t.JackpotX2_Remain + " " + Message.GetMessage("ev49") + '</span><span class="t3">x2</span></div>')),
                        $("#jp-slotgod").removeClass("x2"),
                        $("#sg-event .event").removeClass("active");
                        break
                    }
                    if (0 < t.JackpotX2_Remain) {
                        $("#sg-event").html('<div class="event active"><span class="t1">' + Message.GetMessage("ev25") + '</span><span class="t2">' + t.JackpotX2_Remain + " " + Message.GetMessage("ev49") + '</span><span class="t3">x2</span></div>'),
                        $("#jp-slotgod").addClass("x2");
                        break
                    }
                case 0:
                    t.RoomID < 3 && s >= new Date ? (e = s.getDay(),
                    o = (o = libs.Util.formDateTimehms(t.NextEventDateTime, 2)).substring(0, 5),
                    $("#jp-slotgod").removeClass("x2"),
                    $("#sg-event").show(),
                    $("#sg-event").html('<div class="event active" title="' + libs.Util.formDateTimehms(t.NextEventDateTime, 3) + '"><span class="t1"">' + Message.GetMessage("ev24") + '</span><span class="t2">' + o + '</span><span class="t3">' + Message.GetMessage("slotgod.event.weekday-" + (e + 1)) + "</span></div>")) : ($("#sg-event").hide(),
                    $("#jp-slotgod").removeClass("x2"));
                    break;
                default:
                    $("#sg-event").hide(),
                    $("#jp-slotgod").removeClass("x2")
                }
            }
            ,
            o.prototype.initSlots = function() {
                var t;
                this.startPosition = 187.5;
                for (var e = 0, s = this.totalItems - 1; 0 <= s; s--)
                    t = Math.floor(6 * Math.random()) + 1,
                    this.column1[s] = new Sprite(this.loader.resources.SlotGodsEggs.textures["ps-egg-" + t]),
                    this.column1[s].inx = t,
                    this.column1[s].x = 51,
                    this.column1[s].anchor.set(.5),
                    this.column1[s].y = this.startPosition - 75 * e,
                    this.columnContainer1.addChild(this.column1[s]),
                    t = Math.floor(6 * Math.random()) + 1,
                    this.column2[s] = new Sprite(this.loader.resources.SlotGodsEggs.textures["ps-egg-" + t]),
                    this.column2[s].inx = t,
                    this.column2[s].x = 152,
                    this.column2[s].anchor.set(.5),
                    this.column2[s].y = this.startPosition - 75 * e,
                    this.columnContainer2.addChild(this.column2[s]),
                    t = Math.floor(6 * Math.random()) + 1,
                    this.column3[s] = new Sprite(this.loader.resources.SlotGodsEggs.textures["ps-egg-" + t]),
                    this.column3[s].inx = t,
                    this.column3[s].x = 253,
                    this.column3[s].anchor.set(.5),
                    this.column3[s].y = this.startPosition - 75 * e,
                    this.columnContainer3.addChild(this.column3[s]),
                    e++;
                this.startHeight = this.column1[0].y
            }
            ,
            o.prototype.changeSlots = function() {
                for (var t, e = 0; e < this.totalItems - 3; e++)
                    t = Math.floor(6 * Math.random()) + 1,
                    this.column1[e].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + t],
                    t = Math.floor(6 * Math.random()) + 1,
                    this.column2[e].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + t],
                    t = Math.floor(6 * Math.random()) + 1,
                    this.column3[e].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + t]
            }
            ,
            o.prototype.disableLines = function() {
                $("#gameSlotGod .line-col-l i, .line-col-r i").removeClass("active"),
                $(".lines i").removeClass("active")
            }
            ,
            o.prototype.clearTimer = function() {
                this.timeEachLine && clearInterval(this.timeEachLine),
                this.timeWin && clearTimeout(this.timeWin),
                this.timeSpin && clearTimeout(this.timeSpin),
                this.timeEachLine = null,
                this.timeWin = null,
                this.timeSpin = null
            }
            ,
            o.prototype.clearEffect = function() {
                $("#ef-slotgod").html(""),
                $("#ef-slotgod").hide()
            }
            ,
            o.prototype.disableButtons = function() {
                $("#btnLines").addClass("disabled"),
                $("#btnSpin").addClass("disabled"),
                this.isAutoSpin ? ($("#btnAutoSpin").hide(),
                $("#btnAutoSpin").addClass("disabled"),
                $("#btnStopSpin").show(),
                $("#btnStopSpin").removeClass("disabled")) : ($("#btnAutoSpin").show(),
                $("#btnAutoSpin").addClass("disabled"),
                $("#btnStopSpin").hide(),
                $("#btnStopSpin").addClass("disabled")),
                $("#gameSlotGod .bets .bet").addClass("disabled"),
                $("#gameSlotGod .ic-money").addClass("disabled"),
                $(".mg-ps .actions .speed").addClass("disabled")
            }
            ,
            o.prototype.enableButtons = function() {
                $("#btnLines").removeClass("disabled"),
                $("#btnSpin").removeClass("disabled"),
                this.isAutoSpin ? ($("#btnAutoSpin").hide(),
                $("#btnAutoSpin").addClass("disabled"),
                $("#btnStopSpin").show(),
                $("#btnStopSpin").removeClass("disabled")) : ($("#btnAutoSpin").show(),
                $("#btnAutoSpin").removeClass("disabled"),
                $("#btnStopSpin").hide(),
                $("#btnStopSpin").addClass("disabled")),
                $("#gameSlotGod .bets .bet").removeClass("disabled"),
                $("#gameSlotGod .ic-money").removeClass("disabled"),
                $(".mg-ps .actions .speed").removeClass("disabled")
            }
            ,
            o.prototype.resetAll = function() {
                this.disableLines(),
                this.clearTimer(),
                this.clearEffect(),
                $("#gameSlotGod .notice").hide(),
                this.numbCount = 0,
                this.isBigWin = this.isJackpot = this.isJackpotX2 = !1
            }
            ,
            o.prototype.updateSession = function(t) {
                $("#sg-session").html("#" + t)
            }
            ,
            o.prototype.stopAutoSpin = function() {
                var t = this;
                if (this.isAutoSpin) {
                    if (this.isAutoSpin = !1,
                    sessionStorage.removeItem("slotGod.autospin"),
                    $("#btnAutoSpin").show(),
                    $("#btnStopSpin").hide(),
                    $("#btnStopSpin").addClass("disabled"),
                    Config.isSpin)
                        return;
                    this.timeSpin = setTimeout(function() {
                        return t.enableButtons()
                    }, 2e3)
                }
            }
            ,
            o.prototype.autoSpin = function() {
                this.isAutoSpin = !0,
                sessionStorage.setItem("slotGod.autospin", this.isAutoSpin),
                this.initSpin()
            }
            ,
            o.prototype.initSpin = function() {
                if (this.resetAll(),
                2 != libs.MiniGame.gameHub.connection.connectionState && !this.isSpin) {
                    var s = this;
                    this.timeSpin = setTimeout(function() {
                        s.isSpin && (s.isSpin = !1,
                        s.stopAutoSpin(),
                        s.enableButtons())
                    }, 8e3);
                    var t = this.convertArraytoString(this.lineData);
                    if (0 == t.length)
                        return s.isSpin = !1,
                        this.showMessage(Message.GetMessage("ps10")),
                        void (this.isAutoSpin && this.stopAutoSpin());
                    this.disableButtons();
                    try {
                        libs.MiniGame.hubObj.ISpin(this.currencyId, this.betType, this.roomId, t).then(function(t) {
                            if (t < 0) {
                                var e = "";
                                switch (t) {
                                case -48:
                                case -50:
                                case -51:
                                case -102:
                                case -232:
                                case -233:
                                case -60500:
                                case -60200:
                                case -60051:
                                case -60201:
                                case -60212:
                                case -60213:
                                case -60214:
                                case -60215:
                                case -60216:
                                    e = "me" + t;
                                    break;
                                default:
                                    e = "me-99"
                                }
                                s.showMessage(Message.GetMessage(e, [t])),
                                s.isSpin = !1,
                                s.isAutoSpin && s.stopAutoSpin(),
                                s.enableButtons()
                            }
                        }).catch(function() {
                            s.isSpin = !1,
                            s.isAutoSpin && s.stopAutoSpin(),
                            s.enableButtons()
                        })
                    } catch (t) {
                        s.showMessage(Message.GetMessage("sl71")),
                        s.isSpin = !1,
                        s.stopAutoSpin(),
                        s.enableButtons()
                    }
                }
            }
            ,
            o.prototype.startSpin = function(t) {
                if (console.log("spin", t),
                !this.isSpin && null != t && 0 !== t.SlotData.length) {
                    if (this.roomData = t,
                    this.isSpin = !0,
                    this.updateSession(t.SpinID),
                    this.slotData = [],
                    this.slotData = t.SlotData.split(","),
                    this.changeSlots(),
                    this.column1[1].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[0]],
                    this.column1[1].inx = this.slotData[0],
                    this.column1[2].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[3]],
                    this.column1[2].inx = this.slotData[3],
                    this.column1[3].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[6]],
                    this.column1[3].inx = this.slotData[6],
                    this.column2[1].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[1]],
                    this.column2[1].inx = this.slotData[1],
                    this.column2[2].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[4]],
                    this.column2[2].inx = this.slotData[4],
                    this.column2[3].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[7]],
                    this.column2[3].inx = this.slotData[7],
                    this.column3[1].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[2]],
                    this.column3[1].inx = this.slotData[2],
                    this.column3[2].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[5]],
                    this.column3[2].inx = this.slotData[5],
                    this.column3[3].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[8]],
                    this.column3[3].inx = this.slotData[8],
                    this.isQuick && (this.column1[11].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[0]],
                    this.column1[11].inx = this.slotData[0],
                    this.column1[12].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[3]],
                    this.column1[12].inx = this.slotData[3],
                    this.column1[13].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[6]],
                    this.column1[13].inx = this.slotData[6],
                    this.column2[11].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[1]],
                    this.column2[11].inx = this.slotData[1],
                    this.column2[12].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[4]],
                    this.column2[12].inx = this.slotData[4],
                    this.column2[13].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[7]],
                    this.column2[13].inx = this.slotData[7],
                    this.column3[11].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[2]],
                    this.column3[11].inx = this.slotData[2],
                    this.column3[12].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[5]],
                    this.column3[12].inx = this.slotData[5],
                    this.column3[13].texture = this.loader.resources.SlotGodsEggs.textures["ps-egg-" + this.slotData[8]],
                    this.column3[13].inx = this.slotData[8]),
                    this.linesWin = [],
                    0 < t.TotalPrizeValue) {
                        for (var e = t.PrizeData.split(";"), s = 0; s < e.length; s++)
                            this.linesWin.push(e[s].split(",")[0]);
                        t.IsJackpot && t.IxX2 ? this.isJackpotX2 = !0 : t.IsJackpot ? this.isJackpot = !0 : t.TotalPrizeValue >= this.multi * this.getRoomName(this.roomId, this.betType) && (this.isBigWin = !0),
                        libs.Util.ClearTimeOut(this.timeSpin)
                    }
                    this.spin()
                }
            }
            ,
            o.prototype.spin = function() {
                var t = this;
                t.isQuick ? (t.timeTw = .5,
                t.timeB = .25,
                t.delayFirst = .15,
                t.spinTo = -t.startHeight - 750) : (t.timeTw = 1,
                t.timeB = .5,
                t.spinTo = -t.startHeight,
                t.delayFirst = .3),
                TweenMax.to(t.columnContainer1, t.timeTw, {
                    y: t.spinTo + t.pointN,
                    delay: 0,
                    data: "slotgod",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        TweenMax.to(t.columnContainer1, t.timeB, {
                            y: t.spinTo + t.pointB,
                            data: "slotgod",
                            ease: Elastic.easeOut,
                            onComplete: function() {
                                t.columnContainer1.y = 0,
                                t.column1[t.totalItems - 3].texture = t.column1[1].texture,
                                t.column1[t.totalItems - 3].inx = t.column1[1].inx,
                                t.column1[t.totalItems - 2].texture = t.column1[2].texture,
                                t.column1[t.totalItems - 2].inx = t.column1[2].inx,
                                t.column1[t.totalItems - 1].texture = t.column1[3].texture,
                                t.column1[t.totalItems - 1].inx = t.column1[3].inx
                            }
                        })
                    }
                }),
                TweenMax.to(t.columnContainer2, t.timeTw, {
                    y: t.spinTo + t.pointN,
                    delay: t.delayFirst,
                    data: "slotgod",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        TweenMax.to(t.columnContainer2, t.timeB, {
                            y: t.spinTo + t.pointB,
                            data: "slotgod",
                            ease: Elastic.easeOut,
                            onComplete: function() {
                                t.column2[t.totalItems - 3].texture = t.column2[1].texture,
                                t.column2[t.totalItems - 3].inx = t.column2[1].inx,
                                t.column2[t.totalItems - 2].texture = t.column2[2].texture,
                                t.column2[t.totalItems - 2].inx = t.column2[2].inx,
                                t.column2[t.totalItems - 1].texture = t.column2[3].texture,
                                t.column2[t.totalItems - 1].inx = t.column2[3].inx,
                                t.columnContainer2.y = 0
                            }
                        })
                    }
                }),
                TweenMax.to(t.columnContainer3, t.timeTw, {
                    y: t.spinTo + t.pointN,
                    delay: 2 * t.delayFirst,
                    data: "slotgod",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        TweenMax.to(t.columnContainer3, t.timeB, {
                            y: t.spinTo + t.pointB,
                            data: "slotgod",
                            ease: Elastic.easeOut,
                            onComplete: function() {
                                t.column3[t.totalItems - 3].texture = t.column3[1].texture,
                                t.column3[t.totalItems - 3].inx = t.column3[1].inx,
                                t.column3[t.totalItems - 2].texture = t.column3[2].texture,
                                t.column3[t.totalItems - 2].inx = t.column3[2].inx,
                                t.column3[t.totalItems - 1].texture = t.column3[3].texture,
                                t.column3[t.totalItems - 1].inx = t.column3[3].inx,
                                t.columnContainer3.y = 0,
                                t.showWin()
                            }
                        })
                    }
                })
            }
            ,
            o.prototype.showAllLines = function() {
                for (var t = 0; t < this.linesWin.length; t++)
                    $(".lines .line-" + this.linesWin[t]).addClass("active"),
                    $("#gameSlotGod .line i").find("[data-line='" + this.linesWin[t] + "']").addClass("active")
            }
            ,
            o.prototype.countMoney = function(t, e, s) {
                new libs.Util.CountUp(t,!1,!1,0,e,0,s,void 0).start()
            }
            ,
            o.prototype.showWin = function() {
                var t = this;
                if (this.isSpin = !1,
                $(".mg-ps .actions .speed").removeClass("disabled"),
                this.roomData.TotalPrizeValue <= 0)
                    this.checkAutoSpin() || setTimeout(function() {
                        return t.enableButtons()
                    }, 1500);
                else {
                    if (2 < this.numbCount)
                        return;
                    this.showAllLines(),
                    $("#ef-slotgod").html(this.isJackpotX2 ? this.jackpotX2Div : this.isJackpot ? this.jackpotDiv : this.isBigWin ? this.bigWinDiv : this.normalDiv),
                    $("#ef-slotgod").show(),
                    this.timeSpin = this.countMoney("txtMoneyWin", this.roomData.TotalPrizeValue, this.isJackpot || this.isJackpotX2 ? 6 : this.isBigWin ? 3 : 1),
                    setTimeout(function() {
                        return t.afterWin()
                    }, this.isJackpot || this.isJackpotX2 ? 7e3 : this.isBigWin ? 3500 : 1500)
                }
            }
            ,
            o.prototype.afterWin = function() {
                0 === this.numbCount && (this.roomData.Balance && libs.Util.UpdateBalance(this.betType, this.roomData.Balance),
                !this.isShow && 0 < this.roomData.TotalPrizeValue && (libs.MiniGame.isOpen ? ($("#q-slotgold").html("<span>+" + libs.Util.ParseMoney(this.roomData.TotalPrizeValue) + "</span>"),
                $("#q-slotgold span").css("margin-left", -$("#q-slotgold span").width() / 2),
                $("#q-slotgold span").css("position", "absolute"),
                $("#q-slotgold span").animate({
                    top: "-100px",
                    opacity: 0
                }, 4e3, function() {
                    $("#q-slotgold").html("")
                })) : ($("#q-slotgold-n").html("<span>+" + libs.Util.ParseMoney(this.roomData.TotalPrizeValue) + "</span>"),
                $("#q-slotgold-n span").css("margin-left", -$("#q-slotgold-n span").width() / 2),
                $("#q-slotgold-n span").css("position", "absolute"),
                $("#q-slotgold-n span").animate({
                    top: "-100px",
                    opacity: 0
                }, 4e3, function() {
                    $("#q-slotgold-n").html("")
                })))),
                this.checkAutoSpin() || (this.enableButtons(),
                this.disableLines(),
                this.clearEffect(),
                this.showEachLine())
            }
            ,
            o.prototype.checkAutoSpin = function() {
                var t = this;
                return this.isAutoSpin ? (this.timeSpin = setTimeout(function() {
                    return t.initSpin()
                }, 1e3),
                !0) : this.isAutoSpin = !1
            }
            ,
            o.prototype.showEachLine = function() {
                var t = this
                  , e = this
                  , s = this.linesWin.length
                  , i = 0;
                0 !== s ? (this.numbCount++,
                this.timeEachLine = setInterval(function() {
                    if (e.isSpin)
                        libs.Util.ClearTimeInterval(e.timeEachLine);
                    else if (e.disableLines(),
                    $(".lines .line-" + t.linesWin[i]).addClass("active"),
                    $("#gameSlotGod .line i").find("[data-line='" + t.linesWin[i] + "']").addClass("active"),
                    ++i === s) {
                        if (libs.Util.ClearTimeInterval(e.timeEachLine),
                        e.isAutoSpin)
                            return void e.initSpin();
                        e.numbCount < 3 ? e.timeSpin = setTimeout(function() {
                            e.showWin()
                        }, 1400) : setTimeout(function() {
                            e.resetAll()
                        }, 1200)
                    }
                }, 1200)) : libs.Util.ClearTimeInterval(this.timeEachLine)
            }
            ,
            o);
            function o(t) {
                this.isLoaded = !1,
                this.enableEvent = !0,
                this.eventCurrency = 1,
                this.currencyId = 1,
                this.betType = 1,
                this.roomId = 1,
                this.roomType = 0,
                this.isInit = !1,
                this.isSpin = !1,
                this.isShow = !1,
                this.column1 = {},
                this.column2 = {},
                this.column3 = {},
                this.isAutoSpin = !1,
                this.lineData = [],
                this.totalItems = 21,
                this.startHeight = 0,
                this.numbCount = 0,
                this.timeTw = 1,
                this.timeB = .5,
                this.pointB = -37.5,
                this.pointN = -19.5,
                this.tempGuide = {},
                this.historyType = 1,
                this.currentPage = 1,
                this.roomData = {},
                this.gameData = {},
                this.tempEvent = {},
                this.isBigWin = !1,
                this.isJackpot = !1,
                this.isJackpotX2 = !1,
                this.normalDiv = '<span class="light"></span><div class="win" id="txtMoneyWin"></div>',
                this.bigWinDiv = '<span class="light"></span><span class="bigwin active"></span><div class="win" id="txtMoneyWin"></div>',
                this.jackpotDiv = '<span class="light"></span><span class="jackpot active"></span><div class="win" id="txtMoneyWin"></div>',
                this.jackpotX2Div = '<span class="light"></span><span class="jackpot active x2"></span><div class="win" id="txtMoneyWin"></div>',
                this.linesWin = [],
                this.multi = 70,
                this.isQuick = !1,
                this.assets = [{
                    id: "SlotGodsEggs",
                    src: "assets/ps-eggs.json"
                }],
                this.spinTo = 0,
                this.delayFirst = 0;
                var e = libs.Util.getSessionStorage("slotGod.betType");
                e && 0 < e && e < 3 && (this.betType = e);
                var s = sessionStorage.getItem("slotGod.roomId");
                s && 0 < (s = parseInt(s)) && s < 4 && (this.roomId = s);
                var i = sessionStorage.getItem("slotGod.autospin");
                i && 1 == (i = JSON.parse(i)) && (this.isAutoSpin = !0);
                var o = sessionStorage.getItem("slotGod.lines");
                o ? this.lineData = JSON.parse(o) : 1 === this.roomId ? this.lineData = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20] : this.lineData.push(1),
                this.init()
            }
            e.game = i
        }
    },
    o.c = i,
    o.d = function(t, e, s) {
        o.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: s
        })
    }
    ,
    o.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    o.t = function(e, t) {
        if (1 & t && (e = o(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var s = Object.create(null);
        if (o.r(s),
        Object.defineProperty(s, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                o.d(s, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return s
    }
    ,
    o.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return o.d(e, "a", e),
        e
    }
    ,
    o.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    o.p = "/",
    o(o.s = 6);
    function o(t) {
        if (i[t])
            return i[t].exports;
        var e = i[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return s[t].call(e.exports, e, e.exports, o),
        e.l = !0,
        e.exports
    }
    var s, i
});

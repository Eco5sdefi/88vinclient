!function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t(require("signalR")) : "function" == typeof define && define.amd ? define("luckydice", ["signalR"], t) : "object" == typeof exports ? exports.luckydice = t(require("signalR")) : e.luckydice = t(e.signalR)
}(window, function(i) {
    return n = {},
    a.m = s = [function(e, t) {
        e.exports = i
    }
    , , function(e, t, i) {
        "use strict";
        var n = this && this.__spreadArrays || function() {
            for (var e = 0, t = 0, i = arguments.length; t < i; t++)
                e += arguments[t].length;
            for (var s = Array(e), a = 0, t = 0; t < i; t++)
                for (var n = arguments[t], o = 0, c = n.length; o < c; o++,
                a++)
                    s[a] = n[o];
            return s
        }
        ;
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.game = void 0;
        var s = i(0)
          , a = i(3)
          , o = (c.prototype.setActiveGame = function() {
            $("#ld-table-name").attr("name", this.gameName[this.gameId - 1])
        }
        ,
        c.prototype.setAutoClose = function() {
            var e = this;
            this.timeAutoClose = 120,
            this.intervalClose || (this.intervalClose = setInterval(function() {
                return e.autoClose()
            }, 1e3))
        }
        ,
        c.prototype.autoClose = function() {
            var e = gameLuckyDice;
            0 == e.timeAutoClose && 0 < e.intervalClose ? (e.hideGui(),
            clearInterval(e.intervalClose),
            e.intervalClose = 0) : e.timeAutoClose--
        }
        ,
        c.prototype.startFix = function(e, t) {
            t.position.left = gameLuckyDice.left,
            t.position.top = gameLuckyDice.top
        }
        ,
        c.prototype.dragFix = function(e, t) {
            var i = t.position.left - t.originalPosition.left
              , s = t.originalPosition.left + i / window.ratioS
              , a = t.position.top - t.originalPosition.top
              , n = t.originalPosition.top + a / window.ratioS;
            t.position.left = s,
            t.position.top = n,
            gameLuckyDice.left = s,
            gameLuckyDice.top = n
        }
        ,
        c.prototype.setUrl = function() {
            var e = libs.Util.getSessionStorage("MiniGameLuckyDiceServer");
            !e && Config.MiniGame.listServerLuckyDice && 0 < Config.MiniGame.listServerLuckyDice.length && (e = Config.MiniGame.listServerLuckyDice[libs.Util.RandomFrom(0, Config.MiniGame.listServerLuckyDice.length - 1)],
            libs.Util.setSessionStorage("MiniGameLuckyDiceServer", e)),
            libs.MiniGame.hubsLuckyDice = e,
            this.apiUrl = null !== Config.MiniGame.miniApiUrlLuckyDice && "" !== Config.MiniGame.miniApiUrlLuckyDice ? Config.MiniGame.miniApiUrlLuckyDice : libs.MiniGame.apiUrl,
            this.apiUrl += "api/MultiLuckyDice/"
        }
        ,
        c.prototype.initHub = function(e) {
            var t = this;
            libs.MiniGame.gameHubLuckyDice || (this.setUrl(),
            libs.MiniGame.gameHubLuckyDice = (new s.HubConnectionBuilder).withUrl(libs.MiniGame.hubsLuckyDice + libs.MiniGame.hubName, {
                accessTokenFactory: function() {
                    return libs.MiniGame.token
                },
                skipNegotiation: !0,
                transport: s.HttpTransportType.WebSockets
            }).configureLogging(s.LogLevel.Information).build(),
            libs.MiniGame.gameHubLuckyDice.serverTimeoutInMilliseconds = 1e5,
            libs.MiniGame.gameHubLuckyDice.onclose(function() {
                t.isHubStarted && t.startHub()
            })),
            libs.MiniGame.hubObjLuckyDice || (libs.MiniGame.hubObjLuckyDice = new libs.MiniHubLuckyDice(libs.MiniGame.gameHubLuckyDice)),
            this.startHub(e)
        }
        ,
        c.prototype.stopHub = function() {
            try {
                this.isHubStarted = !1,
                2 != libs.MiniGame.gameHubLuckyDice.connection.connectionState && libs.MiniGame.gameHubLuckyDice.stop()
            } catch (e) {}
        }
        ,
        c.prototype.startHub = function(t) {
            var i = this;
            try {
                1 != libs.MiniGame.gameHubLuckyDice.connection.connectionState ? libs.MiniGame.gameHubLuckyDice.start().then(function(e) {
                    libs.MiniGame.hubObjLuckyDice.Listen(),
                    i.isHubStarted = !0,
                    $(".minigame-expand .game a").removeClass("disabled"),
                    "function" == typeof t && t.call()
                }).catch(function(e) {
                    $(".minigame-expand .game a").eq(2).addClass("disabled"),
                    libs.MiniGame.isPlaying && setTimeout(function() {
                        i.startHub(t)
                    }, 1e4)
                }) : t && t.call()
            } catch (e) {}
        }
        ,
        c.prototype.init = function() {
            var e, t, i = this;
            0 < $("#gameLuckyDice").length || (this.mediaUrl = libs.MiniGame.urlRoot + "LuckyDice/",
            this.apiUrl = libs.MiniGame.apiUrl + "api/MultiLuckyDice/",
            this.gameId = 1,
            this.currencyId = libs.MiniGame.currencyId,
            this.betType = libs.MiniGame.betType,
            this.roomType = libs.MiniGame.roomType,
            e = jQuery.createTemplateURL(this.mediaUrl + "templates/game.html"),
            t = jQuery.processTemplateToText(e),
            $("#minigame").append(t),
            $("#gameLuckyDice").draggable({
                start: gameLuckyDice.startFix,
                drag: gameLuckyDice.dragFix
            }),
            this.initQuick(),
            this.loadAssets(),
            this.initEvent(),
            sessionStorage.getItem("luckdice-room") && (this.gameId = parseInt(sessionStorage.getItem("luckdice-room"))),
            Config.MiniGame.useOwnHub ? this.initHub(function() {
                i.showGame()
            }) : this.showGame())
        }
        ,
        c.prototype.showGame = function() {
            for (var e = this, t = -1, i = -1, s = 0; s < this.gameIds.length; s++)
                this.gameIds[s] !== this.gameId && (-1 === t ? t = s : i = s);
            this.genMiniGames(t, i),
            this.setActiveGame(),
            libs.MiniGame.checkAutoShowGame("gameLuckyDice") && this.showGui(),
            libs.Util.ClearTimeInterval(this.timerRemain),
            this.timerRemain = setInterval(function() {
                return e.updateTimer(e)
            }, 1e3),
            App.resizeWindow()
        }
        ,
        c.prototype.initQuick = function() {
            for (var e = "", t = 0; t < this.quickBet.length; t++) {
                var i = this.quickBet[t];
                e += '<span data-t="' + i[0] + '" data-m="' + i[2] + '" class="bet' + i[3] + '">' + (1 === i[0] ? Message.GetMessage(i[1]) : i[1]) + "</span>"
            }
            $("#gameLuckyDice .game-pad .quick .bets").html(e),
            $("#txtBet").html(Message.GetMessage("tx41")),
            $("#txtCancelQuick").html(Message.GetMessage("tx9")),
            $("#txCloseQuick").html(Message.GetMessage("ib15"))
        }
        ,
        c.prototype.initEvent = function() {
            var e = this
              , a = this;
            $("#gameLuckyDice .game .button-guide").unbind("click").click(function() {
                e.showGuide()
            }),
            $("#gameLuckyDice .game .button-history").unbind("click").click(function() {
                e.showAccountHistory(a.betType)
            }),
            $("#gameLuckyDice .game .button-trophy").unbind("click").click(function() {
                e.showRank(a.betType)
            }),
            $("#gameLuckyDice .game .button-chat").unbind("click").click(function() {
                e.showChat()
            }),
            $("#gameLuckyDice .game .button-close").unbind("click").click(function() {
                e.hideGui(),
                $(".overlay-mg").removeClass("show"),
                $("#gameLuckyDice .game .button-light").addClass("on")
            }),
            $("#gameLuckyDice .game .money-types .money-type").unbind("click").click(function() {
                $("#gameLuckyDice .game .money-types .money-type").toggleClass("active"),
                e.useCoinStar($("#gameLuckyDice .game .money-types .money-type").eq(0).hasClass("active") ? 1 : 2)
            }),
            $("#txBetOther").unbind("click").click(function() {}),
            $("#gameLuckyDice .game .button-chart").unbind("click").click(function() {
                e.showStatitics()
            }),
            $("#gameLuckyDice .game .button-light").unbind("click").click(function() {
                $("#gameLuckyDice .game .button-light").toggleClass("on"),
                $(".overlay-mg").toggleClass("show")
            }),
            $("#txtbetpersonOver, #txtbetpersonUnder").unbind("keypress").on("keypress", function(e) {
                "13" == e.which && (e.stopPropagation(),
                e.preventDefault(),
                a.postBet())
            }),
            $("#txtCancelQuick").unbind("click").click(function() {
                $("#txtBet").addClass("disabled"),
                $("#txtbetpersonOver").val(0),
                $("#txtbetpersonUnder").val(0),
                a.showBetButton(0)
            }),
            $("#btnNan").unbind("click").click(function() {
                $("#btnNan").toggleClass("active"),
                a.hideResult = $("#btnNan").hasClass("active")
            }),
            !a.enableTopTXEvent || 0 != a.enableEventCurrency && a.enableEventCurrency != a.currencyId ? ($("#gameLuckyDice .event-1").hide(),
            $("#gameLuckyDice .event-2").hide()) : ($("#gameLuckyDice .event-1").show(),
            $("#gameLuckyDice .event-2").show(),
            $("#gameLuckyDice .event-1").unbind("click").click(function() {
                return a.showTopEvent()
            }),
            $("#gameLuckyDice .event-2 .event-title").unbind("click").click(function() {
                return a.showEventChest()
            })),
            $("#gameLuckyDice .game-pad .bets span").unbind("click").click(function() {
                var e, t, i, s;
                a.isBetting || (e = parseInt($(this).data("t")),
                t = parseInt($(this).data("m")),
                1 === e ? 0 < t && a.setQuickBet(t, gameLuckyDice.gate) : ("" !== (i = 2 === a.gate ? $("#txtbetpersonOver").val().toString() : $("#txtbetpersonUnder").val().toString()) && !isNaN(i) || (i = 0),
                i = parseInt(i),
                i += t,
                1 == (s = gameLuckyDice.betType) && (i < 100 ? i = 100 : 1e8 < i && (i = 1e8)),
                2 == s && (i < 1e3 ? i = 1e3 : 1e9 < i && (i = 1e9)),
                2 === a.gate ? $("#txtbetpersonOver").val(i) : $("#txtbetpersonUnder").val(i),
                0 < i ? a.showBetButton(i) : a.showBetButton(0),
                a.disableBtnRebet(),
                $("#txtBet").removeClass("disabled")))
            }),
            $("#txtBet").unbind("click").click(function() {
                a.postBet()
            }),
            $("#txCloseQuick").unbind("click").click(function() {
                $(".game-pad").hide(),
                $("#txtbetpersonOver").val(0),
                $("#txtbetpersonUnder").val(0),
                a.showBetButton(0)
            })
        }
        ,
        c.prototype.createStar = function() {
            for (var e = 0; e < this.starAmount; e++) {
                var t = {
                    sprite: new PIXI.Sprite(this.loader.resources.dice.textures["ld-dice-space.png"]),
                    z: 0,
                    x: 0,
                    y: 0
                };
                t.sprite.anchor.x = .5,
                t.sprite.anchor.y = .7,
                this.randomizeStar(t, !0),
                this.app.stage.addChild(t.sprite),
                this.stars.push(t)
            }
        }
        ,
        c.prototype.hideStar = function() {
            try {
                this.showLight = !1;
                for (var e = 0; e < this.stars.length; e++)
                    this.stars[e].sprite.visible = !1
            } catch (e) {}
        }
        ,
        c.prototype.randomizeStar = function(e, t) {
            e.z = t ? 2e3 * Math.random() : this.cameraZ + 1e3 * Math.random() + 2e3;
            var i = Math.random() * Math.PI * 2
              , s = 50 * Math.random() + 1;
            e.x = Math.cos(i) * s,
            e.y = Math.sin(i) * s
        }
        ,
        c.prototype.changeStar = function(e) {
            if (this.showLight) {
                this.speed += (this.warpSpeed - this.speed) / 20,
                this.cameraZ += 10 * e * (this.speed + this.baseSpeed);
                for (var t = 0; t < this.starAmount; t++) {
                    var i = this.stars[t];
                    i.z < this.cameraZ && this.randomizeStar(i);
                    var s = i.z - this.cameraZ;
                    i.sprite.visible = !0,
                    i.sprite.x = i.x * (this.fov / s) * this.app.renderer.screen.width + this.app.renderer.screen.width / 2,
                    i.sprite.y = i.y * (this.fov / s) * this.app.renderer.screen.width + this.app.renderer.screen.height / 2;
                    var a = i.sprite.x - this.app.renderer.screen.width / 2
                      , n = i.sprite.y - this.app.renderer.screen.height / 2
                      , o = Math.sqrt(a * a + n + n)
                      , c = Math.max(0, (2e3 - s) / 2e3);
                    i.sprite.scale.x = c * this.starBaseSize,
                    i.sprite.scale.y = c * this.starBaseSize + c * this.speed * this.starStretch * o / this.app.renderer.screen.width,
                    i.sprite.rotation = Math.atan2(n, a) + Math.PI / 2
                }
            } else
                this.hideStar()
        }
        ,
        c.prototype.loadAssets = function() {
            var t = this;
            this.loader = new PIXI.loaders.Loader,
            PIXI.utils.skipHello();
            var e = document.getElementById("cv-ld");
            this.app = new PIXI.Application(328,328,{
                antialias: !1,
                transparent: !0,
                view: e
            });
            for (var i = this, s = 0; s < this.assets.length; s++)
                "" !== this.assets[s].id ? this.loader.add(this.assets[s].id, this.mediaUrl + this.assets[s].src) : this.loader.add(this.mediaUrl + this.assets[s].src);
            this.loader.load(function() {
                t.aniDice = [];
                for (var e = 0; e < 20; e++)
                    t.aniDice.push(t.loader.resources.dice.textures["ld-dice-" + (e < 10 ? "0" : "") + e + ".png"]);
                t.createStar(),
                t.dragon = new Sprite(t.loader.resources.dice.textures["tx-count-circle.png"]),
                t.dragon.anchor.set(.5),
                t.dragon.position.set(164, 164),
                t.dragon.scale.set(.97),
                t.dragon.visible = !1,
                t.mask = new Graphics,
                t.mask.beginFill(16724736),
                t.mask.drawCircle(164, 164, 164, 164),
                t.app.stage.addChild(t.mask),
                t.app.stage.mask = t.mask,
                t.fireTop = new PIXI.particles.Emitter(t.dragon,[t.loader.resources.dice.textures["ld-dice-dot.png"]],t.loader.resources.fire.data),
                t.fireTop.emit = !0,
                t.fireTop.spawnPos.x = 90,
                t.fireTop.spawnPos.y = -115,
                t.fireBottom = new PIXI.particles.Emitter(t.dragon,[t.loader.resources.dice.textures["ld-dice-dot.png"]],t.loader.resources.fire.data),
                t.fireBottom.emit = !0,
                t.fireBottom.rotation = 180,
                t.fireBottom.spawnPos.x = -100,
                t.fireBottom.spawnPos.y = 110,
                t.txtTimeOneTmp = new Sprite(t.loader.resources.dice.textures["ld-text-0.png"]),
                t.txtTimeOneTmp.anchor.set(1, .5),
                t.txtTimeOneTmp.position.set(158, -164),
                t.txtTimeTwoTmp = new Sprite(t.loader.resources.dice.textures["ld-text-0.png"]),
                t.txtTimeTwoTmp.anchor.set(0, .5),
                t.txtTimeTwoTmp.position.set(158, -164),
                t.diceBg = new Sprite(t.loader.resources.dice.textures["ld-dice-20.png"]),
                t.diceBg.anchor.set(.5),
                t.diceBg.position.set(164, 164),
                t.diceBg.visible = !1,
                t.txtTimeOne = new Sprite(t.loader.resources.dice.textures["ld-text-0.png"]),
                t.txtTimeOne.anchor.set(1, .5),
                t.txtTimeOne.position.set(158, 164),
                t.txtTimeOne.visible = !1,
                t.txtTimeTwo = new Sprite(t.loader.resources.dice.textures["ld-text-0.png"]),
                t.txtTimeTwo.anchor.set(0, .5),
                t.txtTimeTwo.position.set(158, 164),
                t.txtTimeTwo.visible = !1,
                t.diceOne = new Sprite(t.loader.resources.dice.textures["ld-dice-1.png"]),
                t.diceOne.anchor.set(.5),
                t.diceOne.scale.set(t.dicePos[0].s),
                t.diceOne.position.set(t.dicePos[0].x, t.dicePos[0].y),
                t.diceOne.rotation = t.dicePos[0].r,
                t.diceTwo = new Sprite(t.loader.resources.dice.textures["ld-dice-1"]),
                t.diceTwo.anchor.set(.5),
                t.diceTwo.scale.set(t.dicePos[1].s),
                t.diceTwo.position.set(t.dicePos[1].x, t.dicePos[1].y),
                t.diceTwo.rotation = t.dicePos[1].r,
                t.diceThree = new Sprite(t.loader.resources.dice.textures["ld-dice-1"]),
                t.diceThree.anchor.set(.5),
                t.diceThree.scale.set(t.dicePos[2].s),
                t.diceThree.position.set(t.dicePos[2].x, t.dicePos[2].y),
                t.diceThree.rotation = t.dicePos[2].r,
                t.app.stage.addChild(t.dragon, t.txtTimeOneTmp, t.txtTimeTwoTmp, t.txtTimeOne, t.txtTimeTwo, t.diceBg),
                t.diceBg.addChild(t.diceOne, t.diceTwo, t.diceThree),
                t.isLoaded = !0,
                t.app.ticker.add(function() {
                    i.update(i)
                }),
                t.app.ticker.add(function(e) {
                    return i.changeStar(e)
                })
            })
        }
        ,
        c.prototype.update = function(e) {
            e && e.dragon && e.showDragon && (e.dragon.rotation += .1);
            var t = Date.now();
            if (e.fireBottom && e.showDragon)
                try {
                    e.fireBottom.update(.001 * (t - e.elapsed))
                } catch (e) {}
            if (e.fireTop && e.showDragon)
                try {
                    e.fireTop.update(.001 * (t - e.elapsed))
                } catch (e) {}
            e.elapsed = t
        }
        ,
        c.prototype.getCurrentRooms = function() {
            try {
                if (!Config.MiniGame.useOwnHub && 2 == libs.MiniGame.gameHub.connection.connectionState || Config.MiniGame.useOwnHub && 2 == libs.MiniGame.gameHubLuckyDice.connection.connectionState)
                    return;
                for (var e = 0; e < this.gameIds.length; e++)
                    Config.MiniGame.useOwnHub ? libs.MiniGame.hubObjLuckyDice.GetCurrentRooms(this.gameIds[e], this.currencyId, this.betType).catch(function() {}) : libs.MiniGame.hubObj.GetCurrentRooms(this.gameIds[e], this.currencyId, this.betType).catch(function() {})
            } catch (e) {}
        }
        ,
        c.prototype.useCoinStar = function(e) {
            1 === this.roomType && e != this.betType || (e && (this.betType = e,
            sessionStorage.setItem("luckydice.typeBet", e)),
            $("#txtbetpersonOver").val(0),
            $("#txtbetpersonUnder").val(0),
            $("#totalbetOver").text("0"),
            $("#totalbetUnder").text("0"),
            $("#betpersonOver").text("0"),
            $("#betpersonUnder").text("0"),
            $("#personUnder").html("(000)"),
            $("#personOver").html("(000)"),
            this.showBetButton(0),
            2 === this.betType ? ($(".money-type .silver").addClass("active"),
            $(".money-type .gold").removeClass("active")) : ($(".money-type .silver").removeClass("active"),
            $(".money-type .gold").addClass("active")),
            this.getCurrentRooms())
        }
        ,
        c.prototype.showGui = function() {
            $("#gameLuckyDice").show(),
            this.useCoinStar(this.betType),
            this.isShow = !0,
            this.defaultChat && !$("#gameLuckyDice .chat").hasClass("show") && setTimeout(function() {
                a.ChatTx.showChat(!0)
            }, 1e3),
            this.enableTopTXEvent && this.getEventChestAccountInfo()
        }
        ,
        c.prototype.hideGui = function() {
            $("#gameLuckyDice").hide(),
            gameLuckyDice.isShowStatitics = !1,
            clearInterval(this.getChestTimer),
            clearTimeout(this.effectPrizeTimer),
            clearTimeout(this.reEffectPrizeTimer),
            this.getChestTimer = null,
            this.effectPrizeTimer = null,
            this.reEffectPrizeTimer = null,
            this.isShowStatitics = !1,
            this.isShow = !1,
            this.hideDice(),
            $("#gameLuckyDice .event-2 .content div").each(function(e, t) {
                $(t).removeClass("effect"),
                $(t).find("span").remove(),
                $(t).append('<span class="reward"></span'),
                $(t).data("expire-time", ""),
                $(t).data("expire-date", ""),
                $(t).data("is-opened", "")
            })
        }
        ,
        c.prototype.hideDice = function() {
            try {
                if (!Config.MiniGame.useOwnHub && 2 == libs.MiniGame.gameHub.connection.connectionState || Config.MiniGame.useOwnHub && 2 == libs.MiniGame.gameHubLuckyDice.connection.connectionState)
                    return;
                for (var e = 0; e < this.gameIds.length; e++)
                    Config.MiniGame.useOwnHub ? libs.MiniGame.hubObjLuckyDice.HideDice(this.gameIds[e]).catch(function() {}) : libs.MiniGame.hubObj.HideDice(this.gameIds[e]).catch(function() {})
            } catch (e) {}
        }
        ,
        c.prototype.showChat = function() {
            $("#gameLuckyDice .chat").hasClass("show") ? a.ChatTx.showChat(!1) : a.ChatTx.showChat(!0)
        }
        ,
        c.prototype.showGuide = function() {
            libs.MiniGame.showPopup(),
            void 0 === this.temGuide[Message.GetLanguage()] && (this.temGuide[Message.GetLanguage()] = jQuery.createTemplateURL(this.mediaUrl + "templates/guide/popGuide_" + Message.GetLanguage() + ".html")),
            this.temGuide[Message.GetLanguage()].setParam("MediaUrl", this.mediaUrl),
            this.temGuide[Message.GetLanguage()].setParam("money", Config.MoneyText[1]),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temGuide[Message.GetLanguage()])),
            libs.MiniGame.setActiveTab(1),
            this.setAutoClose()
        }
        ,
        c.prototype.bindingSelectMonth = function(e) {
            var t = new Date
              , i = new Date(e.getFullYear(),e.getMonth(),e.daysOfMonth());
            for ($("#eventMonthSelect").html(""); i < t; )
                $("#eventMonthSelect").append('<option value="' + i.toDateString() + '">' + (i.getMonth() + 1) + "/" + i.getFullYear() + "</option>"),
                (i = new Date(i.getFullYear(),i.getMonth() + 1,1)).getMonth() < t.getMonth() || t.getDate() > i.daysOfMonth() ? i.setDate(i.daysOfMonth()) : i.setDate(t.getDate());
            t < e ? t = new Date(e) : i < t && (t = new Date(i)),
            $("#eventMonthSelect").val(t.toDateString()),
            $("#eventMonthSelect option").length < 2 && $("#eventMonthSelect").hide()
        }
        ,
        c.prototype.bindingSelectDate = function(e) {
            var t, i = new Date, s = this.topEventTXDay;
            e.getFullYear() === new Date(this.topEventTXStart).getFullYear() && e.getMonth() === new Date(this.topEventTXStart).getMonth() ? e = new Date(this.topEventTXStart) : s = (e = new Date(e.getFullYear(),e.getMonth(),1)).daysOfMonth(),
            $("#eventDateSelect").html("");
            for (var a = 0; a < s; a++)
                t = new Date(e.getFullYear(),e.getMonth(),e.getDate() + a),
                $("#eventDateSelect").append('<option value="' + t.toDateString() + '">' + libs.Util.formDateTimehms(t, 1) + (t.toDateString() == i.toDateString() ? Message.GetMessage("mn19") : "") + "</option>");
            i < e ? i = new Date(e) : t < i && (i = new Date(t)),
            $("#eventDateSelect").val(i.toDateString())
        }
        ,
        c.prototype.showTopEvent = function(e) {
            libs.MiniGame.showPopup();
            var t = this;
            void 0 !== e && "string" == typeof e || (e = "bxhngay"),
            "thele" == e ? (void 0 === this.temp["top-event-rule-" + Message.GetLanguage()] && (this.temp["top-event-rule-" + Message.GetLanguage()] = jQuery.createTemplateURL(this.mediaUrl + "templates/event/topEventTheLe_" + Message.GetLanguage() + ".html")),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temp["top-event-rule-" + Message.GetLanguage()]), {
                scrollId: ".scroll-tx",
                height: "590px"
            })) : ("bxhchung" == e ? (void 0 === this.temp["top-event-final"] && (this.temp["top-event-final"] = jQuery.createTemplateURL(this.mediaUrl + "templates/event/topEventFinal.html")),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temp["top-event-final"]), {
                scrollId: ".scroll-tx",
                height: "590px"
            }),
            $("#eventMonthSelect").change(function() {
                t.bindTopEvent(e)
            })) : (void 0 === this.temp["top-event"] && (this.temp["top-event"] = jQuery.createTemplateURL(this.mediaUrl + "templates/event/topEvent.html")),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temp["top-event"]), {
                scrollId: ".scroll-tx",
                height: "590px"
            }),
            $("#eventMonthSelect").change(function() {
                t.bindingSelectDate(new Date($("#eventMonthSelect").val() || t.topEventTXStart)),
                t.bindTopEvent(e)
            }),
            $("#eventDateSelect").change(function() {
                t.bindTopEvent(e)
            })),
            t.bindingSelectMonth(new Date(t.topEventTXStart)),
            void 0 === t.temp["top-event-item"] && (t.temp["top-event-item"] = jQuery.createTemplateURL(gameLuckyDice.mediaUrl + "templates/event/topEventItem.html")),
            t.temp["top-event-item"].setParam("PortalID", App.account.portalID),
            t.temp["top-event-item"].setParam("AccountID", App.account.accountID),
            $("#eventMonthSelect").change()),
            gameLuckyDice.setAutoClose()
        }
        ,
        c.prototype.bindTopEvent = function(e) {
            var t = $("#eventDateSelect").val()
              , i = 1
              , s = this;
            "bxhchung" == e && (i = 3,
            t = $("#eventMonthSelect").val()),
            t = t || (new Date).toDateString();
            var a = gameLuckyDice.apiUrl + "GetTopEvent?currencyID=" + s.currencyId + "&GameID=" + s.gameId + "&eventType=" + i + "&eventDate=" + t + "&topCount=10&r=" + Math.random();
            libs.Util.GetData(a, null, function(e) {
                -1 < e.c ? (e = e.d,
                s.temp["top-event-item"].setParam("Type", i),
                $("#topEven1").html(jQuery.processTemplateToText(s.temp["top-event-item"], e)),
                $("#topEven1 .morebxh .more-tx").click(function() {
                    $("#topEven1").hasClass("full") ? ($("#topEven1").removeClass("full"),
                    $(this).text(Message.GetMessage("ev32"))) : ($("#topEven1").addClass("full"),
                    $(this).text(Message.GetMessage("ev33")))
                })) : $("#topEven1").html('<tr class="my-tx"><td colspan="5">' + Message.GetMessage("mn17") + "</td></tr>")
            }, function(e) {
                e.responseJSON && e.responseJSON.c < 0 ? $("#topEven1").html('<tr class="my-tx"><td colspan="5">' + Message.GetMessage("me" + e.responseJSON.c) + "</td></tr>") : $("#topEven1").html('<tr class="my-tx"><td colspan="5">' + Message.GetMessage("me33") + "</td></tr>")
            });
            var n = 2;
            "bxhchung" == e && (n = 4);
            var o = s.apiUrl + "GetTopEvent?currencyID=" + s.currencyId + "&GameID=" + s.gameId + "&eventType=" + n + "&eventDate=" + t + "&topCount=10&r=" + Math.random();
            libs.Util.GetData(o, null, function(e) {
                -1 < e.c ? (e = e.d,
                s.temp["top-event-item"].setParam("Type", n),
                $("#topEven2").html(jQuery.processTemplateToText(s.temp["top-event-item"], e)),
                $("#topEven2 .morebxh .more-tx").click(function() {
                    $("#topEven2").hasClass("full") ? ($("#topEven2").removeClass("full"),
                    $(this).text(Message.GetMessage("ev32"))) : ($("#topEven2").addClass("full"),
                    $(this).text(Message.GetMessage("ev33")))
                })) : $("#topEven2").html('<tr class="my-tx"><td colspan="5">' + Message.GetMessage("mn17") + "</td></tr>")
            }, function(e) {
                e.responseJSON && e.responseJSON.c < 0 ? $("#topEven1").html('<tr class="my-tx"><td colspan="5">' + Message.GetMessage("me" + e.responseJSON.c) + "</td></tr>") : $("#topEven1").html('<tr class="my-tx"><td colspan="5">' + Message.GetMessage("me33") + "</td></tr>")
            })
        }
        ,
        c.prototype.showMessage = function(e, t) {
            var i = t;
            void 0 !== i && !isNaN(i) || (i = 3e3);
            var s = $("#gameLuckyDice .game .message");
            s.html('<span style="color:' + ("error" == t ? "red" : "success" == t ? "lime" : "white") + '">' + e + "</span>"),
            s.show(),
            0 < i && setTimeout(function() {
                s.html(""),
                s.hide()
            }, i)
        }
        ,
        c.prototype.getHistory = function(t, e) {
            var i, s = this;
            null == this.cacheData && "" != this.cacheData ? (i = this.apiUrl + "GetAccountHistory?currencyID=" + this.currencyId + "&gameID=" + (e || this.gameId) + "&betType=" + this.type + "&topCount=500&r=" + Math.random(),
            libs.Util.PostData(i, null, function(e) {
                -1 < e.c && (s.cacheData = e.d,
                s.bindHistory(t))
            })) : s.bindHistory(t)
        }
        ,
        c.prototype.bindHistory = function(e) {
            $("#itemHis").html(jQuery.processTemplateToText(gameLuckyDice.temHistoryItem, gameLuckyDice.cacheData.slice((e - 1) * libs.MiniGame.rowPerPage, e * libs.MiniGame.rowPerPage))),
            libs.MiniGame.pageCount = Math.ceil(gameLuckyDice.cacheData.length / libs.MiniGame.rowPerPage),
            isNaN(libs.MiniGame.pageCount) && (libs.MiniGame.pageCount = 1),
            $("#pager").pager({
                pagenumber: e,
                pagecount: libs.MiniGame.pageCount,
                buttonClickCallback: gameLuckyDice.bindHistory
            })
        }
        ,
        c.prototype.showAccountHistory = function(e, t) {
            libs.MiniGame.showPopup(),
            void 0 === this.temHistory && (this.temHistory = jQuery.createTemplateURL(this.mediaUrl + "templates/popHistory.html")),
            void 0 === this.temHistoryItem && (this.temHistoryItem = jQuery.createTemplateURL(this.mediaUrl + "templates/historyItem.html")),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temHistory));
            var i = 1 === (t = t || this.gameId) ? 1 : 2 === t ? 0 : 2;
            this.type = e,
            this.cacheData = null,
            this.getHistory(1, t),
            this.setAutoClose(),
            libs.MiniGame.setActiveTab(gameLuckyDice.type),
            $(".popup-tx-history .head-tab-ctrls .tab-ctrl").removeClass("active"),
            $(".popup-tx-history .head-tab-ctrls .tab-ctrl").eq(i).addClass("active"),
            $(".popup-tx-history .head-tab-ctrls .tab-ctrl").unbind("click").click(function() {
                var e = 1 === $(this).index() ? 1 : 2 === $(this).index() ? 3 : 2;
                gameLuckyDice.showAccountHistory(1, e)
            }),
            $("#t1History").unbind("click").click(function() {
                gameLuckyDice.showAccountHistory(1, t)
            }),
            $("#t2History").unbind("click").click(function() {
                gameLuckyDice.showAccountHistory(2, t)
            })
        }
        ,
        c.prototype.bindRank = function(e, t) {
            var i = this
              , s = this.apiUrl + "GetTopWinners?currencyID=" + this.currencyId + "&gameID=" + (t || this.gameId) + "&betType=" + e + "&topCount=10&r=" + Math.random();
            libs.Util.PostData(s, null, function(e) {
                -1 < e.c && (i.temItemRank.setParam("PortalID", App.account.portalID),
                i.temItemRank.setParam("AccountID", App.account.accountID),
                $("#itemsRank").html(jQuery.processTemplateToText(i.temItemRank, e.d)))
            })
        }
        ,
        c.prototype.showRank = function(e, t) {
            libs.MiniGame.showPopup(),
            void 0 === this.temRank && (this.temRank = jQuery.createTemplateURL(this.mediaUrl + "templates/popRank.html")),
            void 0 === this.temItemRank && (this.temItemRank = jQuery.createTemplateURL(this.mediaUrl + "templates/rankItem.html"));
            var i = 1 === (t = t || this.gameId) ? 1 : 2 === t ? 0 : 2;
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temRank)),
            this.bindRank(e, t),
            this.setAutoClose(),
            libs.MiniGame.setActiveTab(e),
            $(".popup-tx-rank .head-tab-ctrls .tab-ctrl").removeClass("active"),
            $(".popup-tx-rank .head-tab-ctrls .tab-ctrl").eq(i).addClass("active"),
            $(".popup-tx-rank .head-tab-ctrls .tab-ctrl").unbind("click").click(function() {
                var e = 1 === $(this).index() ? 1 : 2 === $(this).index() ? 3 : 2;
                gameLuckyDice.showRank(1, e)
            }),
            $("#t1rank").unbind("click").click(function() {
                gameLuckyDice.showRank(1, t)
            }),
            $("#t2rank").unbind("click").click(function() {
                gameLuckyDice.showRank(2, t)
            })
        }
        ,
        c.prototype.showBetButton = function(e) {
            0 < e ? ($(".tip-bet").text(libs.Util.ParseMoney(e)),
            $(".tip-bet").show()) : ($(".tip-bet").hide(),
            $(".tip-bet").text(""))
        }
        ,
        c.prototype.reset = function() {
            $("#totalresult").hide(),
            $("#totalbetOver").text("0"),
            $("#totalbetUnder").text("0"),
            $("#betpersonOver").text("0"),
            $("#betpersonUnder").text("0"),
            $("#txtbetpersonOver").val(0),
            $("#txtbetpersonUnder").val(0),
            $(".game-pad").hide(),
            this.isBet = !1,
            this.showBetButton(0),
            sessionStorage.setItem("luckydice.totalbet", "0")
        }
        ,
        c.prototype.setQuickBet = function(e, t) {
            var i, s, a;
            "null" !== sessionStorage.getItem("luckydice.rebetted" + this.gameId) || null != (i = sessionStorage.getItem("luckydice.lastbet" + this.betType + this.gameId)) && (s = parseInt(i),
            s *= e,
            1 == (a = this.betType) && (s < 100 ? s = 100 : 1e8 < s && (s = 1e8)),
            2 == a && (s < 1e3 ? s = 1e3 : 1e9 < s && (s = 1e9)),
            2 == t ? $("#txtbetpersonOver").val(s) : $("#txtbetpersonUnder").val(s),
            0 < s ? this.showBetButton(s) : this.showBetButton(0),
            this.disableBtnRebet(),
            $("#txtBet").removeClass("disabled"))
        }
        ,
        c.prototype.disableBtnRebet = function() {
            $("#gameLuckyDice .game-pad .bets span:last-child").addClass("disabled")
        }
        ,
        c.prototype.checkBtnRebet = function() {
            var e, t;
            "null" === sessionStorage.getItem("luckydice.rebetted" + this.gameId) && (null == (e = sessionStorage.getItem("luckydice.lastbet" + this.betType + this.gameId)) || (t = parseInt(e)) <= this.maxBet && t >= this.maxBet / 2 ? $("#gameLuckyDice .game-pad .bets span:last-child").addClass("disabled") : $("#gameLuckyDice .game-pad .bets span:last-child").removeClass("disabled"))
        }
        ,
        c.prototype.setSession = function(e) {
            this.gameSession = e,
            $("#session-ld").html("#" + e)
        }
        ,
        c.prototype.setAllowbet = function(e) {
            (libs.MiniGame.isBet = e) ? ($("#txtbetpersonOver").removeAttr("disabled"),
            $("#txtbetpersonUnder").removeAttr("disabled")) : ($("#txtbetpersonOver").attr("disabled", "disabled"),
            $("#txtbetpersonUnder").attr("disabled", "disabled"),
            $(".game-pad").removeClass("show"),
            this.isBet = !1,
            sessionStorage.setItem("luckydice.rebetted" + this.gameId, null),
            this.showBetButton(0))
        }
        ,
        c.prototype.resetMain = function(e) {
            this.timeCanvas && clearTimeout(this.timeCanvas);
            try {
                this.dice.destroy({
                    children: !0
                })
            } catch (e) {}
            try {
                this.wave.destroy({
                    children: !0
                })
            } catch (e) {}
            this.diceBg.visible = this.dragon.visible = !1,
            this.hideTxtTimer(),
            this.hideDragon(),
            this.hideStar(),
            $("#txtTimerBet").hide(),
            $("#gateOver").removeClass("active"),
            $("#gateUnder").removeClass("active"),
            $("#totalDice").hide(),
            $("#totalbetOver").text("0"),
            $("#totalbetUnder").text("0"),
            $("#betpersonOver").text("0"),
            $("#betpersonUnder").text("0"),
            $("#txtbetpersonOver").val(0),
            $("#txtbetpersonUnder").val(0),
            $("#personUnder").html("(000)"),
            $("#personOver").html("(000)"),
            $(".game-pad").hide(),
            $("#diskHide").hide(),
            $("#btnNan").addClass("show"),
            e || (this.sessionResult[this.gameId - 1] = null,
            this.roomInfo[this.gameId - 1] = null,
            this.betPerson[this.gameId - 1] = null)
        }
        ,
        c.prototype.resetOther = function(e, t) {
            $("#totalbetOver-" + e).text("0"),
            $("#totalbetUnder-" + e).text("0"),
            $("#txtResult-" + e).html(""),
            $("#txtResult-" + e).hide(),
            t || (this.sessionResult[e - 1] = null,
            this.roomInfo[e - 1] = null,
            this.betPerson[e - 1] = null)
        }
        ,
        c.prototype.changeGame = function(e, t) {
            var i = this.gameId
              , s = -1
              , a = -1;
            if (0 === t) {
                s = i - 1;
                for (var n = 0; n < this.gameIds.length; n++)
                    if (n !== s && this.gameIds[n] !== i && this.gameIds[n] !== e) {
                        a = n;
                        break
                    }
            } else
                for (a = i - 1,
                n = 0; n < this.gameIds.length; n++)
                    if (this.gameId[n] !== a && this.gameIds[n] !== i && this.gameIds[n] !== e) {
                        s = n;
                        break
                    }
            for (this.gameId = e,
            sessionStorage.setItem("luckdice-room", this.gameId),
            this.resetMain(!0),
            this.genMiniGames(s, a),
            this.setActiveGame(),
            this.genGameHistory(this.gameHistoryArr[this.gameId - 1], !0, "mainTurnTx"),
            this.updateRoomInfo(this.roomInfo[this.gameId - 1]),
            this.updateBetOfAccount(this.betPerson[this.gameId - 1]),
            this.updateResult(this.sessionResult[this.gameId - 1], !0),
            2 < this.currentSession[this.gameId - 1].RemainBetting ? this.setAllowbet(!0) : this.setAllowbet(!1),
            n = 0; n < this.gameIds.length; n++)
                this.gameIds[n] !== this.gameId && (this.resetOther(this.gameIds[n], !0),
                this.updateRoomInfo(this.roomInfo[this.gameIds[n] - 1]),
                this.updateBetOfAccount(this.betPerson[this.gameIds[n] - 1]),
                this.updateResult(this.sessionResult[this.gameIds[n] - 1], !0),
                this.genGameHistory(this.gameHistoryArr[this.gameIds[n] - 1], !1, "turn-game-" + this.gameIds[n]))
        }
        ,
        c.prototype.hideTxtTimer = function() {
            try {
                this.txtTimeOne.visible = this.txtTimeTwo.visible = this.txtTimeOneTmp.visible = this.txtTimeTwoTmp.visible = !1,
                this.txtTimeOne.texture = TextureCache["ld-text-v-6.png"],
                this.txtTimeTwo.texture = TextureCache["ld-text-v-0.png"],
                this.txtTimeOneTmp.texture = TextureCache["ld-text-v-6.png"],
                this.txtTimeTwoTmp.texture = TextureCache["ld-text-v-0.png"],
                this.hideDragon()
            } catch (e) {}
        }
        ,
        c.prototype.showTxtTimer = function() {
            try {
                this.txtTimeOne.visible = this.txtTimeTwo.visible = this.txtTimeOneTmp.visible = this.txtTimeTwoTmp.visible = !0
            } catch (e) {}
        }
        ,
        c.prototype.hideDragon = function() {
            try {
                this.dragon.visible = this.showDragon = !1
            } catch (e) {}
        }
        ,
        c.prototype.displayDragon = function() {
            try {
                this.dragon.visible = this.showDragon = !0
            } catch (e) {}
        }
        ,
        c.prototype.txtTimerTween = function(e) {
            var t = this;
            try {
                if (e < 0)
                    return void this.hideTxtTimer();
                this.showTxtTimer();
                var i = e.toString().split("")
                  , s = "ld-text-" + (e < 10 ? "d" : "v") + "-";
                if (this.isFirst)
                    return this.txtTimeOne.texture = this.loader.resources.dice.textures[s + (e < 10 ? "0" : i[0]) + ".png"],
                    this.txtTimeTwo.texture = this.loader.resources.dice.textures[s + (e < 10 ? i[0] : i[1]) + ".png"],
                    void (this.isFirst = !1);
                e % 10 == 9 && e < 59 ? (this.txtTimeOneTmp.texture = this.loader.resources.dice.textures[s + (e < 10 ? "0" : i[0]) + ".png"],
                this.txtTimeOneTmp.alpha = 0,
                this.txtTimeTwoTmp.texture = this.loader.resources.dice.textures[s + (e < 10 ? i[0] : i[1]) + ".png"],
                this.txtTimeTwoTmp.alpha = 0,
                TweenMax.to(this.txtTimeOneTmp, .8, {
                    y: 164,
                    alpha: 1,
                    ease: Power3.easeInOut
                }),
                TweenMax.to(this.txtTimeTwoTmp, .8, {
                    y: 164,
                    alpha: 1,
                    ease: Power3.easeInOut
                }),
                TweenMax.to(this.txtTimeOne, .8, {
                    y: 228,
                    alpha: 0,
                    ease: Power3.easeInOut
                }),
                TweenMax.to(this.txtTimeTwo, .8, {
                    y: 228,
                    alpha: 0,
                    ease: Power3.easeInOut,
                    onComplete: function() {
                        return t.swapTxt(e)
                    }
                })) : e < 59 ? (this.txtTimeOne.texture = this.loader.resources.dice.textures[s + (e < 10 ? "0" : i[0]) + ".png"],
                this.txtTimeTwoTmp.texture = this.loader.resources.dice.textures[s + (e < 10 ? i[0] : i[1]) + ".png"],
                this.txtTimeTwoTmp.alpha = 0,
                TweenMax.to(this.txtTimeTwoTmp, .8, {
                    y: 164,
                    alpha: 1,
                    ease: Power3.easeInOut
                }),
                TweenMax.to(this.txtTimeTwo, .8, {
                    y: 228,
                    alpha: 0,
                    ease: Power3.easeInOut,
                    onComplete: function() {
                        return t.swapTxt(e)
                    }
                })) : this.swapTxt(e)
            } catch (e) {}
        }
        ,
        c.prototype.swapTxt = function(e) {
            var t = e.toString().split("")
              , i = "ld-text-" + (e < 10 ? "d" : "v") + "-";
            TweenMax.to(this.txtTimeOneTmp, 0, {
                y: 100,
                alpha: 0
            }),
            TweenMax.to(this.txtTimeTwoTmp, 0, {
                y: 100,
                alpha: 0
            }),
            this.txtTimeOne.texture = this.loader.resources.dice.textures[i + (e < 10 ? "0" : t[0]) + ".png"],
            TweenMax.to(this.txtTimeOne, 0, {
                y: 164,
                alpha: 1
            }),
            this.txtTimeTwo.texture = this.loader.resources.dice.textures[i + (e < 10 ? t[0] : t[1]) + ".png"],
            TweenMax.to(this.txtTimeTwo, 0, {
                y: 164,
                alpha: 1
            })
        }
        ,
        c.prototype.updateTimer = function(e) {
            for (var t = 0; t < e.currentSession.length; t++) {
                var i, s, a = e.currentSession[t];
                a && (i = a.RemainWaiting,
                s = a.RemainBetting,
                a.GameID === e.gameId ? 0 < i ? (i--,
                a.RemainWaiting = i,
                e.setAllowbet(!1),
                $("#txtTimerBet").hide(),
                e.hideTxtTimer(),
                e.hideStar(),
                (e.hideResult || i < 20) && ($("#txtTimerHide").html(libs.Util.formatTime(i)),
                $("#txtTimerHide").show()),
                18 === i && 0 !== e.gameSession && (Config.MiniGame.useOwnHub ? libs.MiniGame.hubObjLuckyDice.GetAccountResult(e.gameId, e.currencyId, e.gameSession) : libs.MiniGame.hubObj.GetAccountResult(e.gameId, e.currencyId, e.gameSession)),
                i < 2 && (e.justReset = !0,
                e.resetMain())) : (i <= 0 && ($("#txtTimerHide").hide(),
                60 !== s || e.justReset ? e.justReset = !1 : e.resetMain()),
                0 <= s && (s--,
                a.RemainBetting = s,
                $("#txtTimerBet").removeClass("red").removeClass("gray")),
                e.showTxtTimer(),
                $("#txtTimerBet").html(libs.Util.formatTime(s)),
                e.txtTimerTween(s),
                0 < s && s < 30 && e.displayDragon(),
                s < 10 && (e.showLight = !0),
                2 < s ? e.setAllowbet(!0) : (e.setAllowbet(!1),
                $("#txtTimerBet").addClass("red")),
                0 === s && (libs.MiniGame.isBet = !1)) : 0 < i ? (i--,
                a.RemainWaiting = i,
                $("#txtTimerBet-" + a.GameID).hide(),
                (e.hideResult || i < 20) && ($("#txtTimerHide-" + a.GameID).html(libs.Util.formatTime(i, 2)),
                $("#txtTimerHide-" + a.GameID).show()),
                18 === i && 0 !== e.gameSession && (Config.MiniGame.useOwnHub ? libs.MiniGame.hubObjLuckyDice.GetAccountResult(a.GameID, e.currencyId, e.gameSession) : libs.MiniGame.hubObj.GetAccountResult(a.GameID, e.currencyId, e.gameSession)),
                i < 2 && e.resetOther(a.GameID)) : (i <= 0 && ($("#txtTimerHide-" + a.GameID).hide(),
                60 === s && e.resetOther(a.GameID)),
                0 < s && (s--,
                a.RemainBetting = s,
                $("#txtTimerBet-" + a.GameID).removeClass("red").removeClass("gray")),
                $("#txtTimerBet-" + a.GameID).show(),
                $("#txtTimerBet-" + a.GameID).html(libs.Util.formatTime(s, 2)),
                s < 2 && $("#txtTimerBet-" + a.GameID).addClass("red")))
            }
        }
        ,
        c.prototype.updateSession = function(e) {
            null != e && (1 == e.GameStatus && 60 == e.RemainBetting && (e.GameID == this.gameId ? this.resetMain() : this.resetOther(e.GameID)),
            this.currentSession[e.GameID - 1] = e,
            this.gameId === e.GameID && this.setSession(e.GameSessionID))
        }
        ,
        c.prototype.showGameHistory = function(e) {
            e && ((this.gameHistoryArr[e[0].GameID - 1] = e)[0].GameID === this.gameId && this.genGameHistory(e, !0, "mainTurnTx"),
            this.genGameHistory(e, !1, "turn-game-" + e[0].GameID))
        }
        ,
        c.prototype.genGameHistory = function(e, t, i) {
            for (var s = "", a = this, n = t ? e.length - 1 : e.length - 4; 0 <= n; n--) {
                var o = "#" + e[n].GameSessionID + ": " + Message.GetMessage(2 == e[n].LocationIDWin ? "tx1" : "tx2") + " - " + e[n].DiceSum + " (" + e[n].Dice1 + " " + e[n].Dice2 + " " + e[n].Dice3 + ")"
                  , c = 10 < e[n].DiceSum ? t ? "ic-black" : "black" : t ? "ic-white" : "white";
                0 === n && t && (c += " bounce stroke"),
                s += '<i title="' + o + '" class="' + (c += " " + e[n].GameSessionID) + '" data-value="' + encodeURIComponent(JSON.stringify(e[n])) + '"></i>'
            }
            $("#" + i).html(s),
            t && ($("#" + i + " i").unbind("click").click(function() {
                a.sessionData = JSON.parse(decodeURIComponent($(this).data("value"))),
                a.showSessionDetail(a.betType)
            }),
            a.sessionData && a.sessionData.GameSessionID && ($("#mainTurnTx i." + a.sessionData.GameSessionID).is(":first-child") ? $("#txSessionPrev").attr("disabled", "disabled") : $("#txSessionPrev").removeAttr("disabled"),
            $("#mainTurnTx i." + a.sessionData.GameSessionID).is(":last-child") ? $("#txSessionNext").attr("disabled", "disabled") : $("#txSessionNext").removeAttr("disabled")),
            a.gameHistory = e,
            a.isShowStatitics && a.updateStatitics())
        }
        ,
        c.prototype.genMiniGames = function(e, t) {
            var i = this;
            $("#gameLuckyDice .mini-tables").html(""),
            $("#gameLuckyDice .mini-tables").append(this.miniDiv[e]),
            $("#gameLuckyDice .mini-tables").append(this.miniDiv[t]),
            $("#gameLuckyDice .mini-tables .mt").unbind("click").click(function() {
                i.changeGame($(this).data("id"), $(this).index())
            })
        }
        ,
        c.prototype.showSessionDetail = function(e) {
            libs.MiniGame.showPopup(),
            void 0 === this.temSessionDetail && (this.temSessionDetail = jQuery.createTemplateURL(this.mediaUrl + "templates/sessionDetail.html")),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temSessionDetail), {
                scrollId: "#txDetails",
                height: "440px",
                alwaysVisible: 1
            });
            var i = this;
            $("#txSessionPrev").unbind("click").click(function() {
                var e = i.sessionData.GameSessionID
                  , t = $("#mainTurnTx i." + (e - 1));
                0 < t.length && (i.sessionData = JSON.parse(decodeURIComponent(t.data("value"))),
                i.getSessionDetail())
            }),
            $("#txSessionNext").unbind("click").click(function() {
                var e = i.sessionData.GameSessionID
                  , t = $("#mainTurnTx i." + (e + 1));
                0 < t.length && (i.sessionData = JSON.parse(decodeURIComponent(t.data("value"))),
                i.getSessionDetail())
            }),
            $(".popup-tx-session .sd-tbl-head .left .tbl-h span").unbind("click").click(function() {
                var e = $(this).data("sort")
                  , e = ($(this).data("type"),
                void 0 === e || "desc" == e ? "asc" : "desc");
                $(this).data("sort", e);
                var t = $(this).index();
                i.sortSessionDetails(t, e, 1)
            }),
            $(".popup-tx-session .sd-tbl-head .right .tbl-h span").unbind("click").click(function() {
                var e = $(this).data("sort")
                  , e = ($(this).data("type"),
                void 0 === e || "desc" == e ? "asc" : "desc");
                $(this).data("sort", e);
                var t = $(this).index();
                i.sortSessionDetails(t, e, 2)
            }),
            i.type = e,
            i.getSessionDetail(),
            i.setAutoClose(),
            libs.MiniGame.setActiveTab(i.type)
        }
        ,
        c.prototype.getSessionDetail = function() {
            var e = this.sessionData.GameSessionID;
            $("#txSessionID").text(e),
            $("#txResult").html('<span class="dice _' + this.sessionData.Dice1 + '"></span><span class="dice _' + this.sessionData.Dice2 + '"></span><span class="dice _' + this.sessionData.Dice3 + '"></span><span class="number">' + this.sessionData.DiceSum + "</span>"),
            $(".popup-tx-session .sd-head .left, .popup-tx-session .sd-head .right").removeClass("active"),
            10 < this.sessionData.DiceSum ? $(".popup-tx-session .sd-head .left").addClass("active") : $(".popup-tx-session .sd-head .right").addClass("active"),
            $("#mainTurnTx i").removeClass("bounce").removeClass("stroke"),
            $("#mainTurnTx i." + e).addClass("bounce").addClass("stroke"),
            $("#mainTurnTx i." + e).is(":first-child") ? $("#txSessionPrev").addClass("disabled") : $("#txSessionPrev").removeClass("disabled"),
            $("#mainTurnTx i." + e).is(":last-child") ? $("#txSessionNext").addClass("disabled") : $("#txSessionNext").removeClass("disabled");
            var t = this
              , i = this.apiUrl + "GetSessionBetDetails?currencyID=" + this.currencyId + "&GameID=" + this.gameId + "&sessionID=" + e + "&betType=" + gameLuckyDice.type + "&r=" + Math.random();
            libs.Util.PostData(i, null, function(e) {
                -1 < e.c && (e = e.d,
                t.bindSessionDetail(e))
            })
        }
        ,
        c.prototype.bindSessionDetail = function(e) {
            var i = []
              , s = []
              , a = 0
              , n = 0
              , o = 0
              , c = 0;
            $.each(e.l, function(e, t) {
                1 == t.LocationID ? (s.push(t),
                n += t.BetValue,
                c += t.RefundValue) : 2 == t.LocationID && (i.push(t),
                a += t.BetValue,
                o += t.RefundValue)
            }),
            0 < e.l.length && $("#txDate").text(libs.Util.formDateTimehms(e.l[0].CreatedTime, 1)),
            $("#txSessionID").text(e.g),
            $("#txTongHoanTai").text(libs.Util.ParseMoney(o)),
            $("#txTongDatTai").text(libs.Util.ParseMoney(a)),
            $("#txTongHoanXiu").text(libs.Util.ParseMoney(c)),
            $("#txTongDatXiu").text(libs.Util.ParseMoney(n)),
            this.dataTai = i,
            this.dataXiu = s,
            this.genSessionDetail(i, s)
        }
        ,
        c.prototype.genSessionDetail = function(e, t) {
            var i = 0
              , s = e
              , a = t;
            this.dataTai = e,
            this.dataXiu = t,
            i = a.length > s.length ? a.length : s.length;
            for (var n, o = "", c = 0; c < i; c++)
                o += '<div class="tblbr">',
                s[c] ? (n = s[c].AccountID == App.account.accountID && s[c].PortalID == App.account.portalID ? ' style="color: #ff0"' : "",
                o += '<div class="left">\n                    <div class="tbl-b">\n                        <span class="col time">' + libs.Util.formDateTimehms(s[c].CreatedTime, 2) + '</span>\n                        <span class="col name"' + n + ">" + libs.Util.getNameSetStyle(s[c].Nickname) + '</span>\n                        <span class="col m1">' + libs.Util.ParseMoney(s[c].RefundValue) + '</span>\n                        <span class="col m2">' + libs.Util.ParseMoney(s[c].BetValue) + "</span>\n                    </div>\n                </div>") : o += '<div class="left">\n                    <div class="tbl-b">\n                        <span class="col time"></span>\n                        <span class="col name"></span>\n                        <span class="col m1"></span>\n                        <span class="col m2"></span>\n                    </div>\n                </div>',
                a[c] ? (n = a[c].AccountID == App.account.accountID && a[c].PortalID == App.account.portalID ? ' style="color: #ff0"' : "",
                o += '<div class="right">\n                    <div class="tbl-b">\n                        <span class="col m2">' + libs.Util.ParseMoney(a[c].BetValue) + '</span>\n                        <span class="col m1">' + libs.Util.ParseMoney(a[c].RefundValue) + '</span>\n                        <span class="col name"' + n + ">" + libs.Util.getNameSetStyle(a[c].Nickname) + '</span>\n                        <span class="col time">' + libs.Util.formDateTimehms(a[c].CreatedTime, 2) + "</span>\n                    </div>\n                </div>") : o += '<div class="right">\n                    <div class="tbl-b">\n                        <span class="col m2"></span>\n                        <span class="col m1"></span>\n                        <span class="col name"></span>\n                        <span class="col time"></span>\n                    </div>\n                </div>',
                o += "</div>";
            $("#txDetails").html(o)
        }
        ,
        c.prototype.sortSessionDetails = function(i, s, a) {
            var e = n(this.dataTai)
              , t = n(this.dataXiu);
            (1 === a ? e : t).sort(function(e, t) {
                if (1 === a) {
                    if (0 === i)
                        return "desc" == s ? e.CreatedTime > t.CreatedTime ? 1 : e.CreatedTime < t.CreatedTime ? -1 : 0 : e.CreatedTime < t.CreatedTime ? 1 : e.CreatedTime > t.CreatedTime ? -1 : 0;
                    if (1 === i)
                        return "desc" == s ? e.Nickname > t.Nickname ? 1 : e.Nickname < t.Nickname ? -1 : 0 : e.Nickname < t.Nickname ? 1 : e.Nickname > t.Nickname ? -1 : 0;
                    if (2 === i)
                        return "desc" == s ? t.RefundValue - e.RefundValue : e.RefundValue - t.RefundValue;
                    if (3 === i)
                        return "desc" == s ? t.BetValue - e.BetValue : e.BetValue - t.BetValue
                } else {
                    if (0 === i)
                        return "desc" == s ? t.BetValue - e.BetValue : e.BetValue - t.BetValue;
                    if (1 === i)
                        return "desc" == s ? t.RefundValue - e.RefundValue : e.RefundValue - t.RefundValue;
                    if (2 === i)
                        return "desc" == s ? e.Nickname > t.Nickname ? 1 : e.Nickname < t.Nickname ? -1 : 0 : e.Nickname < t.Nickname ? 1 : e.Nickname > t.Nickname ? -1 : 0;
                    if (3 === i)
                        return "desc" == s ? e.CreatedTime > t.CreatedTime ? 1 : e.CreatedTime < t.CreatedTime ? -1 : 0 : e.CreatedTime < t.CreatedTime ? 1 : e.CreatedTime > t.CreatedTime ? -1 : 0
                }
            }),
            this.genSessionDetail(e, t)
        }
        ,
        c.prototype.updateRoomInfo = function(e) {
            var t = 0
              , i = 0
              , s = 0
              , a = 0
              , n = -1;
            null != e && 0 < e.length && "" != e[0] && null != e[0] && e[0].BetType == this.betType && (t = e[0].TotalBetValue2,
            i = e[0].TotalBetValue1,
            s = e[0].TotalAccount2,
            a = e[0].TotalAccount1,
            n = e[0].GameID,
            this.roomInfo[n - 1] = e),
            n === this.gameId ? ($("#totalbetOver").html(libs.Util.ConvertMoney(t, 1)),
            $("#totalbetUnder").html(libs.Util.ConvertMoney(i, 1)),
            $("#personOver").html("(" + (s < 10 ? "00" : s < 100 ? "0" : "") + libs.Util.ParseMoney(s) + ")"),
            $("#personUnder").html("(" + (s < 10 ? "00" : a < 100 ? "0" : "") + libs.Util.ParseMoney(a) + ")")) : ($("#totalbetOver-" + n).html(libs.Util.ConvertMoney(t, null, !0)),
            $("#totalbetUnder-" + n).html(libs.Util.ConvertMoney(i, null, !0)))
        }
        ,
        c.prototype.updateResult = function(e, t) {
            if (null != e) {
                if (this.currentSession[e.GameID - 1] && 2 === this.currentSession[e.GameID - 1].GameStatus && this.currentSession[e.GameID - 1].RemainWaiting < 4)
                    return;
                if (!this.isLoaded) {
                    var i = this;
                    return void setTimeout(function() {
                        return i.updateResult(e)
                    }, 500)
                }
                (!this.sessionResult[e.GameID - 1] || t || this.sessionResult[e.GameID - 1] && this.sessionResult[e.GameID - 1].GameSessionID !== e.GameSessionID) && ((this.sessionResult[e.GameID - 1] = e).GameID === this.gameId ? (this.hideToShowResult(),
                t ? (this.setDice(e),
                this.showTotalDice(e),
                this.showGateWin(e, !0)) : this.showResultCanvas(e)) : this.showResultCss(e))
            }
        }
        ,
        c.prototype.setDice = function(e) {
            var t = this;
            this.diceBg.visible = !0,
            t.diceOne.texture = t.loader.resources.dice.textures["ld-dice-" + e.Dice1 + ".png"],
            t.diceTwo.texture = t.loader.resources.dice.textures["ld-dice-" + e.Dice2 + ".png"],
            t.diceThree.texture = t.loader.resources.dice.textures["ld-dice-" + e.Dice3 + ".png"]
        }
        ,
        c.prototype.hideToShowResult = function() {
            $("#btnNan").removeClass("show"),
            $(".game-pad").hide()
        }
        ,
        c.prototype.bindDragDisk = function() {
            var s = this;
            $("#diskHide").show(),
            $("#diskHide").css("top", "69px"),
            $("#diskHide").css("left", "360px");
            var i = setTimeout(function() {
                var e, t, i = $("#diskHide").position();
                -188 < i.top && i.top < 388 && -4 < Math.abs(i.left) && Math.abs(i.left) < 696 && (t = void 0,
                -188 <= i.top && i.top < 69 ? e = "-288px" : 69 <= i.top && i.top <= 361 && (e = "388px"),
                107 <= i.left && i.left < 345 ? t = "-4px" : 360 <= i.left && i.left <= 584 && (t = "696px"),
                $("#diskHide").draggable("disable"),
                $("#diskHide").animate({
                    left: t,
                    top: e
                }, function() {
                    s.setDice(s.sessionResult[s.gameId - 1]),
                    s.showGateWin(s.sessionResult[s.gameId - 1], !0)
                }))
            }, 23e3);
            $("#diskHide").data("ui-draggable") ? $("#diskHide").draggable("enable") : $("#diskHide").draggable({
                start: function(e, t) {},
                stop: function(e, t) {
                    if ((Math.abs(t.position.top) < 87 || Math.abs(t.position.top) < 27) && (Math.abs(t.position.left) < 315 || Math.abs(t.position.left) < 375))
                        return $("#diskHide").css("top", "69px"),
                        void $("#diskHide").css("left", "360px");
                    (t.position.top < -188 || 346 < t.position.top || Math.abs(t.position.left) < 107 || 584 < Math.abs(t.position.left) || 500 < Math.abs(t.position.left) && 600 < Math.abs(t.position.top) + Math.abs(t.position.left) || Math.abs(t.position.left) < 115 && 290 < Math.abs(t.position.top) + Math.abs(t.position.left)) && (500 < Math.abs(t.position.left) && 600 < Math.abs(t.position.top) + Math.abs(t.position.left) || Math.abs(t.position.left) < 115 && 290 < Math.abs(t.position.top) + Math.abs(t.position.left) ? Math.abs(t.position.top) > Math.abs(t.position.left) ? t.position.top < 69 ? $("#diskHide").css("top", "-288px") : $("#diskHide").css("top", "388px") : Math.abs(t.position.top) < Math.abs(t.position.left) && (t.position.left < 360 ? $("#diskHide").css("left", "-4px") : $("#diskHide").css("left", "696px")) : t.position.top < -188 ? $("#diskHide").css("top", "-288px") : 361 < t.position.top ? $("#diskHide").css("top", "696px") : t.position.left < 107 ? $("#diskHide").css("left", "-4px") : 584 < t.position.left && $("#diskHide").css("left", "696px"),
                    $("#diskHide").draggable("disable"),
                    s.setDice(s.sessionResult[s.gameId - 1]),
                    s.showGateWin(s.sessionResult[s.gameId - 1], !0),
                    clearTimeout(i))
                },
                drag: function(e, t) {
                    388 < t.position.top ? t.position.top = 388 : t.position.top < -288 && (t.position.top = -288),
                    696 < t.position.left ? t.position.left = 696 : t.position.left < -4 && (t.position.left = -4),
                    $("#diskHide").css("top", t.position.top + "px"),
                    $("#diskHide").css("left", t.position.left + "px")
                }
            })
        }
        ,
        c.prototype.showResultCanvas = function(e) {
            var t = this;
            if (this.isLoaded) {
                this.hideTxtTimer(),
                this.hideStar(),
                this.hideDragon();
                try {
                    this.dice.destroy({
                        children: !0
                    })
                } catch (e) {}
                this.wave = new PIXI.Sprite(this.loader.resources.dice.textures["tx-fx-out.png"]),
                this.wave.anchor.set(.5),
                this.wave.position.set(164, 164),
                this.app.stage.addChild(this.wave);
                var i = TweenMax.to(this.wave, .8, {
                    alpha: 0,
                    rotation: 180
                })
                  , s = this;
                setTimeout(function() {
                    $("#txtTimerBet").hide(),
                    s.dice = new AnimatedSprite(s.aniDice),
                    s.dice.anchor.set(.5),
                    s.dice.position.set(164, 164),
                    s.dice.animationSpeed = .45,
                    s.dice.scale.set(1.65),
                    s.dice.loop = !1,
                    s.app.stage.addChild(s.dice),
                    s.dice.onComplete = function() {
                        s.dice.visible = !1
                    }
                    ,
                    s.dice.play(),
                    s.timeCanvas = setTimeout(function() {
                        if (i)
                            try {
                                i.kill()
                            } catch (e) {}
                        try {
                            s.wave.destroy({
                                children: !0
                            })
                        } catch (e) {}
                        s.dice.visible = !1,
                        s.showTotalDice(e),
                        s.setDice(e),
                        s.hideResult ? s.bindDragDisk() : s.showGateWin(e, !0),
                        s.diceBg.visible = !0
                    }, 800)
                }, 600)
            } else
                setTimeout(function() {
                    return t.showResultCanvas(e)
                }, 500)
        }
        ,
        c.prototype.showTotalDice = function(e) {
            var t = parseInt(e.Dice1) + parseInt(e.Dice2) + parseInt(e.Dice3);
            this.isShow || (libs.MiniGame.isOpen ? ($("#q-luckydice").html("<span>+" + Message.GetMessage(10 < t ? "tx1" : "tx2") + "</span>"),
            $("#q-luckydice span").css("margin-left", -$("#q-luckydice span").width() / 2),
            $("#q-luckydice span").css("position", "absolute"),
            $("#q-luckydice span").animate({
                top: "-100px",
                opacity: 0
            }, 4e3, function() {
                $(this).remove()
            })) : ($("#q-luckydice-n").html("<span>+" + Message.GetMessage(10 < t ? "tx1" : "tx2") + "</span>"),
            $("#q-luckydice-n span").css("margin-left", -$("#q-luckydice-n span").width() / 2),
            $("#q-luckydice-n span").css("position", "absolute"),
            $("#q-luckydice-n span").animate({
                top: "-100px",
                opacity: 0
            }, 4e3, function() {
                $(this).remove()
            }))),
            $("#totalDice").html(t),
            $("#totalDice").show()
        }
        ,
        c.prototype.showGateWin = function(e, t) {
            var i = parseInt(e.Dice1) + parseInt(e.Dice2) + parseInt(e.Dice3);
            t && (10 < i ? $("#gateOver").addClass("active") : $("#gateUnder").addClass("active"))
        }
        ,
        c.prototype.showResultCss = function(e) {
            var t, i = this;
            $("#txtResult-" + e.GameID).length <= 0 ? setTimeout(function() {
                return i.showResultCss(e)
            }, 500) : ($("#txtTimerBet-" + e.GameID).hide(),
            t = parseInt(e.Dice1) + parseInt(e.Dice2) + parseInt(e.Dice3),
            this.isShow || (libs.MiniGame.isOpen ? ($("#q-luckydice").html("<span>+" + Message.GetMessage(10 < t ? "tx1" : "tx2") + "</span>"),
            $("#q-luckydice span").css("margin-left", -$("#q-luckydice span").width() / 2),
            $("#q-luckydice span").css("position", "absolute"),
            $("#q-luckydice span").animate({
                top: "-100px",
                opacity: 0
            }, 4e3, function() {
                $(this).remove()
            })) : ($("#q-luckydice-n").html("<span>+" + Message.GetMessage(10 < t ? "tx1" : "tx2") + "</span>"),
            $("#q-luckydice-n span").css("margin-left", -$("#q-luckydice-n span").width() / 2),
            $("#q-luckydice-n span").css("position", "absolute"),
            $("#q-luckydice-n span").animate({
                top: "-100px",
                opacity: 0
            }, 4e3, function() {
                $(this).remove()
            }))),
            $("#txtResult-" + e.GameID).html('<span class="' + (10 < t ? "big" : "small") + '"></span><span class="number">' + t + "</span>"),
            $("#txtResult-" + e.GameID).show())
        }
        ,
        c.prototype.onChangeInputValidate = function(e) {
            e.value = e.value.replace(/[^0-9\.]/g, ""),
            "txtbetpersonOver" == e.id ? $("#txtbetpersonUnder").val(0) : "txtbetpersonUnder" == e.id && $("#txtbetpersonOver").val(0),
            0 < e.value ? gameLuckyDice.showBetButton(e.value) : gameLuckyDice.showBetButton(0)
        }
        ,
        c.prototype.onBlur = function(e) {
            "" == e.value && (e.value = "0"),
            "0" != e.value && "" != e.value && libs.MiniGame.isBet || gameLuckyDice.showBetButton(0)
        }
        ,
        c.prototype.postBet = function() {
            var e = parseInt($("#txtbetpersonOver").val().toString()) || 0
              , t = parseInt($("#txtbetpersonUnder").val().toString()) || 0
              , i = parseInt($("#betpersonOver").text().toString() || $("#txtbetpersonOver").val().toString()) || 0
              , s = parseInt($("#betpersonUnder").text().toString() || $("#txtbetpersonUnder").val().toString()) || 0;
            if (0 != e || 0 != t) {
                if (0 < e && 0 < t || 0 < e && 0 < s || 0 < t && 0 < i)
                    return this.showMessage(Message.GetMessage("me-60208"), "error"),
                    void (2 === this.gate ? $("#txtbetpersonOver").val("") : $("#txtbetpersonUnder").val(""));
                var a = this.betType
                  , n = 0 < e ? 2 : 1
                  , o = 0 < e ? e : t
                  , c = this.currentSession[this.gameId - 1] && 0 < this.currentSession[this.gameId - 1].RemainBetting ? this.currentSession[this.gameId - 1].RemainBetting - 2 : 50;
                this.showMessage(Message.GetMessage("tx42"), 1e3 * c),
                this.isBetting || (this.isBetting = !0,
                this.setBet(this.gameId, this.currencyId, a, n, o))
            } else
                this.showMessage(Message.GetMessage("me-60007"), "error")
        }
        ,
        c.prototype.setBet = function(e, t, i, s, a) {
            var n = this;
            try {
                if (!Config.MiniGame.useOwnHub && 2 == libs.MiniGame.gameHub.connection.connectionState || Config.MiniGame.useOwnHub && 2 == libs.MiniGame.gameHubLuckyDice.connection.connectionState)
                    return;
                Config.MiniGame.useOwnHub ? libs.MiniGame.hubObjLuckyDice.SetBet(e, t, i, s, a).then(function(e) {
                    n.postBetResponse(e, s)
                }).catch(function() {}) : libs.MiniGame.hubObj.SetBet(e, t, i, s, a).then(function(e) {
                    n.postBetResponse(e, s)
                }).catch(function() {})
            } catch (e) {}
        }
        ,
        c.prototype.postBetResponse = function(e, t) {
            if (this.isBetting = !1,
            console.log("responseStatus", e),
            0 <= e)
                t && 2 != t || $("#txtbetpersonOver").val(""),
                t && 1 != t || $("#txtbetpersonUnder").val(""),
                this.showBetButton(0),
                this.showMessage(Message.GetMessage("tx3"), "success"),
                $("#txtBet").addClass("disabled"),
                this.isBet = !0;
            else {
                var i = "";
                switch (e) {
                case -1e5:
                    var s = libs.MiniGame.currentSession && 0 < libs.MiniGame.currentSession.RemainBetting ? libs.MiniGame.currentSession.RemainBetting : 50;
                    return void gameLuckyDice.showMessage(Message.GetMessage("tx42"), 1e3 * s);
                case -48:
                case -50:
                case -51:
                case -400:
                case -102:
                case -207:
                case -208:
                case -212:
                case -213:
                case -214:
                case -232:
                case -200:
                case -201:
                case -202:
                case -60002:
                case -60200:
                case -60201:
                case -60202:
                case -60207:
                case -60208:
                case -60212:
                case -60213:
                case -60214:
                case -60232:
                    i = "me" + e;
                    break;
                default:
                    i = "me-99"
                }
                gameLuckyDice.showMessage(Message.GetMessage(i, [e]), "error"),
                -208 != e && -60208 != e || (2 === gameLuckyDice.gate ? $("#txtbetpersonOver").val("") : $("#txtbetpersonUnder").val(""))
            }
        }
        ,
        c.prototype.updateBetOfAccount = function(e, t) {
            var i = 0
              , s = 0
              , a = 0;
            if (null != e && 0 < e.length) {
                this.betPerson[e[0].GameID - 1] = e;
                for (var n = 0; n < e.length; n++)
                    1 == e[n].LocationID ? i += parseInt(e[n].BetValue) : 2 == e[n].LocationID && (s += parseInt(e[n].BetValue)),
                    a += parseInt(e[n].BetValue)
            }
            a && (sessionStorage.setItem("luckydice.lastbet" + this.betType + this.gameId, a.toString()),
            this.isBet = !0),
            e && 0 < e.length && e[0].GameID === this.gameId && ($("#betpersonUnder").text(libs.Util.ParseMoney(i)),
            $("#betpersonOver").text(libs.Util.ParseMoney(s))),
            t && libs.Util.UpdateBalance(this.betType, t)
        }
        ,
        c.prototype.resultOfAccount = function(e) {
            console.log("resultOfAccount", e);
            var t = 0
              , i = 0
              , s = 0
              , a = 0;
            if (null != e && 0 < e.length)
                for (var n = 0; n < e.length; n++)
                    "" != e[n] && null != e[n] && (1 == e[n].BetType ? (t += e[n].PrizeValue,
                    s += e[n].RefundValue) : 2 == e[n].BetType && (i += e[n].PrizeValue,
                    a += e[n].RefundValue));
            this.gameId === e[0].GameID ? this.showResultMain(t, i, s, a) : this.showResultOther(t, i, s, a, e[0].GameID),
            libs.Util.IncreaseBalance(t + s, i + a)
        }
        ,
        c.prototype.showResultMain = function(e, t, i, s) {
            var a = 0;
            0 < e && (this.txtSumGold = new PIXI.Text("+" + libs.Util.ParseMoney(e),{
                fontFamily: "Roboto",
                fontSize: 28,
                fill: "crimson",
                align: "center"
            }),
            this.txtSumGold.anchor.set(.5),
            this.txtSumGold.position.set(164, 164),
            this.app.stage.addChild(this.txtSumGold),
            TweenMax.to(this.txtSumGold, 4, {
                y: 0,
                alpha: 0,
                data: "ld-tween"
            })),
            0 < t && (this.txtSumCoin = new PIXI.Text("+" + libs.Util.ParseMoney(t),{
                fontFamily: "Roboto",
                fontSize: 28,
                fill: "crimson",
                align: "center"
            }),
            this.txtSumCoin.anchor.set(.5),
            this.txtSumCoin.position.set(164, 164),
            this.app.stage.addChild(this.txtSumCoin),
            a++,
            TweenMax.to(this.txtSumCoin, 4, {
                y: 0,
                alpha: 0,
                data: "ld-tween",
                delay: .7 * a
            })),
            0 < i && (this.txtRefundGold = new PIXI.Text("+" + libs.Util.ParseMoney(i),{
                fontFamily: "Roboto",
                fontSize: 28,
                fill: "crimson",
                align: "center"
            }),
            this.txtRefundGold.anchor.set(.5),
            this.txtRefundGold.position.set(164, 164),
            this.app.stage.addChild(this.txtRefundGold),
            a++,
            TweenMax.to(this.txtRefundGold, 4, {
                y: 0,
                alpha: 0,
                data: "ld-tween",
                delay: .7 * a
            })),
            0 < s && (this.txtRefundCoin = new PIXI.Text("+" + libs.Util.ParseMoney(s),{
                fontFamily: "Roboto",
                fontSize: 28,
                fill: "crimson",
                align: "center"
            }),
            this.txtRefundCoin.anchor.set(.5),
            this.txtRefundCoin.position.set(164, 164),
            this.app.stage.addChild(this.txtRefundCoin),
            a++,
            TweenMax.to(this.txtRefundCoin, 4, {
                y: 0,
                alpha: 0,
                data: "ld-tween",
                delay: .7 * a
            })),
            this.isShow || this.showResultWhenHide(e, t, i, s)
        }
        ,
        c.prototype.showResultOther = function(e, t, i, s, a) {
            var n = "";
            0 < e && (n += ' <p style="color:red">+' + libs.Util.ParseMoney(e) + "</p>"),
            0 < t && (n += ' <p style="color:#FFFFFF">+' + libs.Util.ParseMoney(t) + "</p>"),
            0 < i && (n += ' <p style="color:red">+' + libs.Util.ParseMoney(i) + "</p>"),
            0 < s && (n += ' <p style="color:#FFFFFF">+' + libs.Util.ParseMoney(s) + "</p>"),
            this.isShow || this.showResultWhenHide(e, t, i, s),
            $("#mini-money-" + a).html(n),
            $("#mini-money-" + a).css("opacity", "1"),
            $("#mini-money-" + a).css("top", "50%"),
            $("#mini-money-" + a).css("margin-left", -$("#mini-money-" + a).width() / 2),
            $("#mini-money-" + a).animate({
                top: "-60px",
                opacity: 0
            }, 5e3, function() {
                $(this).html("")
            })
        }
        ,
        c.prototype.showResultWhenHide = function(e, t, i, s) {
            var a = "";
            0 < e && (a += ' <p style="color:red">+' + libs.Util.ParseMoney(e) + "</p>"),
            0 < t && (a += ' <p style="color:#FFFFFF">+' + libs.Util.ParseMoney(t) + "</p>"),
            0 < i && (a += ' <p style="color:red">+' + libs.Util.ParseMoney(i) + "</p>"),
            0 < s && (a += ' <p style="color:#FFFFFF">+' + libs.Util.ParseMoney(s) + "</p>"),
            libs.MiniGame.isOpen ? ($("#q-luckydice").html("<span>+" + a + "</span>"),
            $("#q-luckydice span").css("margin-left", -$("#q-luckydice span").width() / 2),
            $("#q-luckydice span").css("position", "absolute"),
            $("#q-luckydice span").animate({
                top: "-100px",
                opacity: 0
            }, 4e3, function() {
                $(this).remove()
            })) : ($("#q-luckydice-n").html("<span>+" + a + "</span>"),
            $("#q-luckydice-n span").css("margin-left", -$("#q-luckydice-n span").width() / 2),
            $("#q-luckydice-n span").css("position", "absolute"),
            $("#q-luckydice-n span").animate({
                top: "-100px",
                opacity: 0
            }, 4e3, function() {
                $(this).remove()
            }))
        }
        ,
        c.prototype.showEventChest = function(e, t) {
            var i, s = this;
            libs.MiniGame.showPopup(),
            void 0 !== e && "string" == typeof e || (e = "lichsu"),
            "thele" == e ? (void 0 === this.temp["event-chest-rule-" + Message.GetLanguage()] && (this.temp["event-chest-rule-" + Message.GetLanguage()] = jQuery.createTemplateURL(this.mediaUrl + "templates/eventchest/thele_" + Message.GetLanguage() + ".html")),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(this.temp["event-chest-rule-" + Message.GetLanguage()]), {
                scrollId: ".scroll-tx",
                height: "590px"
            })) : "thongke" == e ? (void 0 === this.temp["event-chest-top"] && (this.temp["event-chest-top"] = jQuery.createTemplateURL(this.mediaUrl + "templates/eventchest/top.html")),
            this.temp["event-chest-top"].setParam("PortalID", App.account.portalID),
            this.temp["event-chest-top"].setParam("AccountID", App.account.accountID),
            void 0 === t && (t = 1),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(s.temp["event-chest-top"], null), {
                scrollId: ".scroll-tx",
                height: "538px"
            }),
            i = this.apiUrl + "GetTopEventChest?currencyID=" + this.currencyId + "&GameID=" + this.gameId + "&prizeID=" + t + "&topCount=100&r=" + Math.random(),
            libs.Util.GetData(i, null, function(e) {
                null != e && -1 < e.c ? (e = e.d,
                libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(s.temp["event-chest-top"], e), {
                    scrollId: ".scroll-tx",
                    height: "538px"
                }),
                $(".event-chest-tab .top").removeClass("active"),
                $(".event-chest-tab .top.prize-" + t).addClass("active")) : (libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(s.temp["event-chest-top"], null), {
                    scrollId: ".scroll-tx",
                    height: "538px"
                }),
                $(".event-chest-tab .top").removeClass("active"),
                $(".event-chest-tab .top.prize-" + t).addClass("active"),
                $("#topEven1").html('<tr class="my-tx"><td colspan="4">' + Message.GetMessage("mn17") + "</td></tr>"))
            }, function(e) {
                libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(s.temp["event-chest-top"], null), {
                    scrollId: ".scroll-tx",
                    height: "538px"
                }),
                $(".event-chest-tab .top").removeClass("active"),
                $(".event-chest-tab .top.prize-" + t).addClass("active"),
                $("#topEven1").html('<tr class="my-tx"><td colspan="4">' + Message.GetMessage("mn17") + "</td></tr>")
            })) : (void 0 === s.temp["event-chest-history"] && (s.temp["event-chest-history"] = jQuery.createTemplateURL(s.mediaUrl + "templates/eventchest/history.html")),
            libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(s.temp["event-chest-history"], null), {
                scrollId: ".scroll-tx",
                height: "590px"
            }),
            i = s.apiUrl + "GetEventChestAccountInfo?currencyID=" + s.currencyId + "&GameID=" + this.gameId + "&topCount=100&onlyNew=false&r=" + Math.random(),
            libs.Util.GetData(i, null, function(e) {
                null != e && -1 < e.c ? (e = e.d,
                libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(s.temp["event-chest-history"], e), {
                    scrollId: ".scroll-tx",
                    height: "590px"
                })) : (libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(s.temp["event-chest-history"], null), {
                    scrollId: ".scroll-tx",
                    height: "590px"
                }),
                $("#topEven1").html('<tr class="my-tx"><td colspan="7">' + Message.GetMessage("mn17") + "</td></tr>"))
            }, function(e) {
                libs.MiniGame.bindPopupContent(jQuery.processTemplateToText(s.temp["event-chest-history"], null), {
                    scrollId: ".scroll-tx",
                    height: "590px"
                }),
                $("#topEven1").html('<tr class="my-tx"><td colspan="7">' + Message.GetMessage("mn17") + "</td></tr>")
            }),
            s.timeoutEventHistory || (s.timeoutEventHistory = setInterval(function() {
                $(".popup-guide tr").each(function(e, t) {
                    if (0 < $(t).find("td > div").length) {
                        var i = $(t).find("td > div")
                          , s = $(i).data("time");
                        if (void 0 !== s) {
                            if (--s < 0)
                                return void $(i).remove();
                            $(i).data("time", s),
                            $(i).html("(" + libs.Util.formatTime(s) + ")")
                        }
                    }
                })
            }, 1e3)))
        }
        ,
        c.prototype.showStatitics = function() {
            if (void 0 === this.temStatitics && (this.temStatitics = jQuery.createTemplateURL(gameLuckyDice.mediaUrl + "templates/statitics.html")),
            $("#statistic-left-tx").hasClass("show") || $("#statistic-right-tx").hasClass("show"))
                return $("#statistic-left-tx").removeClass("show"),
                $("#statistic-right-tx").removeClass("show"),
                void (this.isShowStatitics = !1);
            this.isShowStatitics = !0,
            $(".dice-game-block .left-statistic-tx").addClass("active"),
            $(".dice-game-block .right-statistic-tx").addClass("active"),
            $(".session-watch .button-close").unbind("click").click(function() {
                $(this).parent().removeClass("show")
            }),
            this.updateStatitics()
        }
        ,
        c.prototype.updateStatitics = function() {
            var e = this.apiUrl + "GetStatitics?GameID=" + this.gameId + "&r=" + Math.random()
              , t = this;
            libs.Util.PostData(e, null, function(e) {
                (e = e.d).LastSession = null != t.gameHistory ? t.gameHistory[0] : {},
                $("#statistic-tx").html(jQuery.processTemplateToText(t.temStatitics, e)),
                $(".session-watch .button-close").unbind("click").click(function() {
                    $(this).parent().removeClass("show")
                }),
                $("#statistic-right-tx input").change(function() {
                    var e = parseInt($(this).data("value"));
                    0 == e && t.chart1 ? (t.chart1.options.data[e].visible = $(this).prop("checked"),
                    t.chart1.render()) : t.chart2 && (t.chart2.options.data[e].visible = $(this).prop("checked"),
                    t.chart2.render())
                }),
                t.renderHistoryChart()
            })
        }
        ,
        c.prototype.renderHistoryChart = function() {
            var e = [[], [], [], []];
            $.each(this.gameHistory, function() {
                e[0].push({
                    x: this.GameSessionID,
                    y: this.DiceSum,
                    markerColor: 10 < this.DiceSum ? "#000" : "#FFF"
                }),
                e[1].push({
                    x: this.GameSessionID,
                    y: this.Dice1
                }),
                e[2].push({
                    x: this.GameSessionID,
                    y: this.Dice2
                }),
                e[3].push({
                    x: this.GameSessionID,
                    y: this.Dice3
                })
            }),
            this.chart1 = new CanvasJS.Chart("chart-tx1",{
                highlightEnabled: !0,
                width: 418,
                height: 127,
                backgroundColor: "transparent",
                title: {
                    text: ""
                },
                axisX: {
                    lineColor: "#7447da",
                    gridColor: "#7447da",
                    labelFontSize: 0,
                    labelFontColor: "#fff",
                    gridThickness: 1,
                    interval: 1,
                    tickLength: 0,
                    includeZero: !1,
                    labelFormatter: function(e) {
                        return ""
                    },
                    margin: -12
                },
                axisY: {
                    lineColor: "#7447da",
                    gridColor: "#7447da",
                    labelFontSize: 12,
                    labelFontColor: "#FD4285",
                    labelMaxWidth: 20,
                    gridThickness: 1,
                    interval: 3,
                    tickLength: 3,
                    includeZero: !1,
                    minimum: 2,
                    maximum: 19
                },
                toolTip: {
                    shared: !0,
                    backgroundColor: "#ccc",
                    contentFormatter: function(e) {
                        for (var t = "#" + e.entries[0].dataPoint.x + ": " + Message.GetMessage(10 < e.entries[0].dataPoint.y ? "tx1" : "tx2") + " " + e.entries[0].dataPoint.y + " (", i = 1; i < e.entries.length; i++)
                            1 < i && (t += "-"),
                            t += e.entries[i].dataPoint.y;
                        return t += ")"
                    }
                },
                data: [{
                    type: "line",
                    color: "#ffc324",
                    markerSize: 10,
                    markerType: "circle",
                    markerColor: "#ffc324",
                    dataPoints: e[0]
                }, {
                    visible: !1,
                    dataPoints: e[1]
                }, {
                    visible: !1,
                    dataPoints: e[2]
                }, {
                    visible: !1,
                    dataPoints: e[3]
                }]
            }),
            this.chart1.render(),
            this.chart2 = new CanvasJS.Chart("chart-tx2",{
                highlightEnabled: !0,
                width: 418,
                height: 127,
                backgroundColor: "transparent",
                title: {
                    text: ""
                },
                axisX: {
                    lineColor: "#fff",
                    gridColor: "#7447da",
                    labelFontSize: 0,
                    labelFontColor: "#fff",
                    gridThickness: 1,
                    interval: 1,
                    tickLength: 0,
                    includeZero: !1,
                    labelFormatter: function(e) {
                        return ""
                    },
                    margin: -12
                },
                axisY: {
                    lineColor: "#fff",
                    lineThickness: 1,
                    gridColor: "#7447da",
                    labelFontSize: 12,
                    labelFontColor: "#FD4285",
                    labelMaxWidth: 10,
                    margin: 10,
                    gridThickness: 1,
                    interval: 1,
                    tickLength: 0,
                    includeZero: !1,
                    minimum: 0,
                    maximum: 7
                },
                toolTip: {
                    shared: !0,
                    backgroundColor: "#ccc",
                    contentFormatter: function(e) {
                        for (var t = "#" + e.entries[0].dataPoint.x + ": " + Message.GetMessage(10 < e.entries[0].dataPoint.y ? "tx1" : "tx2") + " " + e.entries[0].dataPoint.y + " (", i = 1; i < e.entries.length; i++)
                            1 < i && (t += "-"),
                            t += e.entries[i].dataPoint.y;
                        return t += ")"
                    }
                },
                data: [{
                    name: Message.GetMessage("tx33"),
                    visible: !1,
                    dataPoints: e[0]
                }, {
                    name: Message.GetMessage("tx34"),
                    type: "line",
                    lineThickness: 1,
                    color: "#fff200",
                    markerSize: 4,
                    markerType: "circle",
                    markerColor: "#fff200",
                    dataPoints: e[1]
                }, {
                    name: Message.GetMessage("tx35"),
                    type: "line",
                    lineThickness: 1,
                    color: "#fd4383",
                    markerSize: 4,
                    markerType: "circle",
                    markerColor: "#fd4383",
                    dataPoints: e[2]
                }, {
                    name: Message.GetMessage("tx36"),
                    type: "line",
                    lineThickness: 1,
                    color: "#00ffff",
                    markerSize: 4,
                    markerType: "circle",
                    markerColor: "#00ffff",
                    dataPoints: e[3]
                }]
            }),
            this.chart2.render()
        }
        ,
        c.prototype.getEventChestAccountInfo = function() {
            var t = this
              , n = this
              , e = this.apiUrl + "GetEventChestAccountInfo?currencyID=" + this.currencyId + "&GameID=" + this.gameId + "&r=" + Math.random();
            libs.Util.GetData(e, null, function(e) {
                if (!(null == e || e.c < 0 || null == e.d)) {
                    var t = !1;
                    n.countChest = e.d.ListChest.length;
                    var i = e.d.ListChest.reverse();
                    $("#gameLuckyDice .event-2 .content div").each(function(e, t) {
                        $(t).removeClass("effect"),
                        $(t).find("span").remove(),
                        $(t).append('<span class="reward"></span'),
                        $(t).data("expire-time", ""),
                        $(t).data("expire-date", ""),
                        $(t).data("is-opened", "")
                    });
                    for (var s = 0; s < n.countChest; s++) {
                        var a = i[s];
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").removeClass("effect"),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").find("span").remove(),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").append('<span class="reward"></span'),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").data("expire-time", ""),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").data("expire-date", ""),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").data("is-opened", ""),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").unbind("click"),
                        0 == a.PrizeValue && 0 == a.SpecialGift ? ($("#gameLuckyDice .event-2 .content div:eq(" + s + ") span.reward").addClass("prize-" + a.PrizeID),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").data("chest", a.ChestID),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").click(function() {
                            n.postEventChestOpen(this)
                        }),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").data("is-opened", "false"),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").data("expire-date", a.ExpireTime),
                        t = !0) : 0 < a.SpecialGift ? $("#gameLuckyDice .event-2 .content div:eq(" + s + ") span.reward").addClass("special-prize-" + a.SpecialGift) : 0 < a.PrizeValue && $("#gameLuckyDice .event-2 .content div:eq(" + s + ") span.reward").addClass("prize-value-" + a.PrizeValue),
                        0 <= a.AwardTimeCount ? ($("#gameLuckyDice .event-2 .content div:eq(" + s + ")").data("time", a.AwardTimeCount),
                        $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").append('<span class="time">' + libs.Util.formatTime(a.AwardTimeCount, 1) + "</span>")) : 0 <= a.ExpireTimeCount && $("#gameLuckyDice .event-2 .content div:eq(" + s + ")").data("expire-time", a.ExpireTimeCount)
                    }
                    t && (clearTimeout(n.reEffectPrizeTimer),
                    n.showEffectChestNotOpen())
                }
            }),
            n.getChestTimer || (n.getChestTimer = setInterval(function() {
                $("#gameLuckyDice .event-2 .content div").each(function(e, t) {
                    var i = $(t).data("expire-time");
                    if (void 0 !== i && "" !== i) {
                        if (--i < 0)
                            return $(t).removeClass("effect"),
                            $(t).unbind("click"),
                            $(t).find("span").remove(),
                            $(t).append('<span class="reward"></span'),
                            $(t).data("expire-time", ""),
                            $(t).data("expire-date", ""),
                            void $(t).data("is-opened", "");
                        $(t).data("expire-time", i)
                    }
                    var s = $(t).data("time");
                    if (void 0 !== s && "" !== s) {
                        if (--s < 0)
                            return $(t).data("time", ""),
                            void n.effectReceivePrize(t);
                        $(t).data("time", s),
                        $(t).find("span.time") ? $(t).find("span.time").html(libs.Util.formatTime(s, 1)) : $(t).html('<span class="time">' + libs.Util.formatTime(s, 1) + "</span>")
                    }
                });
                for (var e = 0; e < t.currentSession.length; e++)
                    n.currentSession[e] && 58 == n.currentSession[e].RemainBetting && n.getEventChestCheck()
            }, 1e3))
        }
        ,
        c.prototype.showEffectChestNotOpen = function() {
            var n = !1
              , e = gameLuckyDice;
            clearTimeout(this.reEffectPrizeTimer),
            this.reEffectPrizeTimer = null,
            $("#gameLuckyDice .event-2 .content div").each(function(e, t) {
                var i = new Date
                  , s = new Date($(t).data("expire-date"))
                  , a = $(t).data("is-opened");
                void 0 !== s && "" !== s && i < s && "false" === a && ($(t).addClass("effect"),
                n = !0)
            }),
            setTimeout(function() {
                return e.removEffectChestNotOpen()
            }, 5e3),
            n ? e.reEffectPrizeTimer = setTimeout(function() {
                return e.showEffectChestNotOpen()
            }, e.timeRe) : (clearTimeout(e.reEffectPrizeTimer),
            e.reEffectPrizeTimer = null)
        }
        ,
        c.prototype.removEffectChestNotOpen = function() {
            $("#gameLuckyDice .event-2 .content div").each(function(e, t) {
                $(t).removeClass("effect")
            })
        }
        ,
        c.prototype.postEventChestOpen = function(t) {
            $(t).removeClass("effect"),
            $(t).addClass("disabled");
            var e = $(t).data("chest")
              , i = this
              , s = i.apiUrl + "PostEventChestOpen"
              , a = {
                CurrencyID: i.currencyId,
                ChestID: e,
                GameID: i.gameId
            };
            libs.Util.PostData(s, a, function(e) {
                e && -1 < e.c && e.d ? ($(t).data("expire-time", ""),
                $(t).data("expire-date", ""),
                $(t).data("is-opened", ""),
                $(t).unbind("click"),
                0 < e.d.SpecialGift ? i.effectSpecial(t, 0, e.d) : 0 < e.d.PrizeValue && i.effectValue(t, 0, e.d)) : ($(t).removeClass("effect"),
                gameLuckyDice.showMessage(Message.GetMessage("me-99", [e.c]), "error"))
            }, function(e) {
                i.showMessage(Message.GetMessage("me-99"), "error"),
                $(t).removeClass("effect")
            })
        }
        ,
        c.prototype.checkChestExist = function(s) {
            var a = !1;
            return $("#gameLuckyDice .event-2 .content div").each(function(e, t) {
                var i = $(t).data("chest");
                s == i && (a = !0)
            }),
            a
        }
        ,
        c.prototype.getEventChestCheck = function() {
            var i = this
              , e = i.apiUrl + "GetEventChestCheck?currencyID=" + i.currencyId + "&GameID=" + i.gameId + "&r=" + Math.random();
            libs.Util.GetData(e, null, function(e) {
                var t;
                e && -1 < e.c && e.d && 0 < e.c && !i.checkChestExist(e.c) && 0 < e.d.PrizeID && (t = "#gameLuckyDice .event-2 .content div:eq(" + i.countChest++ + ")",
                i.effectPrize(t, 0, e.d))
            }, function(e) {})
        }
        ,
        c.prototype.effectPrize = function(e, t, i) {
            var s = gameLuckyDice;
            console.log("start", t),
            $(e).addClass("effect"),
            $(e).find("span.reward").addClass("prize-" + i.PrizeID),
            $(e).data("is-opened", "false"),
            $(e).data("chest", i.ChestID),
            console.log("cc", i.ChestID);
            var a = new Date;
            a.setDate(a.getDate() + 1),
            $(e).data("expire-date", a),
            1 < t ? ($(e).removeClass("effect"),
            $(e).unbind("click").click(function() {
                s.postEventChestOpen(this)
            })) : (t++,
            s.effectPrizeTimer = setTimeout(s.effectPrize, 5e3, e, t, i),
            s.reEffectPrizeTimer || (s.reEffectPrizeTimer = setTimeout(s.showEffectChestNotOpen, s.timeRe)))
        }
        ,
        c.prototype.effectSpecial = function(e, t, i) {
            var s;
            $(e).removeClass("effect"),
            30 < t ? ($(e).data("time", i.AwardTimeCount),
            $(e).find("span.time").html(libs.Util.formatTime(i.AwardTimeCount, 1)),
            $(e).find("span.reward").addClass("special-prize-" + i.SpecialGift)) : (s = t++ % this.listPrizeValue.length,
            $(e).find("span.reward").addClass("prize-value-" + this.listPrizeValue[s]),
            setTimeout(this.effectSpecial, 80, e, t, i))
        }
        ,
        c.prototype.effectValue = function(e, t, i) {
            var s, a = gameLuckyDice;
            $(e).removeClass().addClass("box"),
            30 < t ? ($(e).data("time", i.AwardTimeCount),
            $(e).html(""),
            $(e).append('<span class="reward prize-value-' + i.PrizeValue + '"></span>'),
            $(e).append('<span class="time">' + libs.Util.formatTime(i.AwardTimeCount, 1) + "</span>")) : (s = t++ % a.listPrizeValue.length,
            $(e).find("span.reward").removeClass().addClass("reward").addClass("prize-value-" + a.listPrizeValue[s]),
            setTimeout(a.effectValue, 80, e, t, i))
        }
        ,
        c.prototype.effectReceivePrize = function(e) {
            this.countChest--,
            $(e).find("span.reward").animate({
                marginTop: "-80px"
            }, 2e3, function() {
                $(this).removeClass().addClass("reward"),
                $(this).css("margin-top", "0px"),
                $(this).parent().find("span.time").remove()
            })
        }
        ,
        c);
        function c(e) {
            this.isBet = !1,
            this.gameIds = [1, 2, 3],
            this.gameId = 1,
            this.gameName = ["hongkong", "lasvegas", "macau"],
            this.gameNameShort = ["HK", "LVG", "MC"],
            this.gate = 0,
            this.currencyId = 1,
            this.betType = 1,
            this.roomType = 2,
            this.MoneyPortal = ["", "G-vin", "M-vin", "R-vin", "M-win", "W-vin"],
            this.currentSession = [null, null, null],
            this.defaultChat = !0,
            this.enableTopTXEvent = !0,
            this.enableEventCurrency = 1,
            this.topEventTXStart = "01/20/2019",
            this.topEventTXDay = 12,
            this.getChestTimer = null,
            this.effectPrizeTimer = null,
            this.reEffectPrizeTimer = null,
            this.isShowStatitics = !1,
            this.hideResult = !1,
            this.timeAutoClose = 120,
            this.isBetting = !1,
            this.isLoaded = !1,
            this.sessionResult = [null, null, null],
            this.roomInfo = [null, null, null],
            this.betPerson = [null, null, null],
            this.gameHistoryArr = [null, null, null],
            this.temGuide = {},
            this.maxBet = 1e8,
            this.left = 420,
            this.top = 320,
            this.isShow = !1,
            this.isHubStarted = !1,
            this.isPlaying = !1,
            this.isFirst = !0,
            this.miniDiv = ['<div class="mt mt-hongkong" data-name="hongkong" data-id="1" id="mini-tx-1"> <div class="left"> <span class="bet" id="totalbetOver-1">0</span> </div><div class="right"> <span class="bet" id="totalbetUnder-1">0</span> </div><div class="center"> <div class="countdown" id="txtTimerBet-1">0</div><div class="result" id="txtResult-1"> </div><span class="countdown-circle" style="display: none" id="txtTimerHide-1">0</span><div id="mini-money-1" class="mini-money-w"></div></div><div class="turn-bar" id="turn-game-1"> </div></div>', '<div class="mt mt-lasvegas" data-name="lasvegas" data-id="2" id="mini-tx-2"> <div class="left"> <span class="bet" id="totalbetOver-2">0</span> </div><div class="right"> <span class="bet" id="totalbetUnder-2">0</span> </div><div class="center"> <div class="countdown" id="txtTimerBet-2">0</div><div class="result" id="txtResult-2"> </div><span class="countdown-circle" style="display: none" id="txtTimerHide-2">0</span><div id="mini-money-2" class="mini-money-w"></div></div><div class="turn-bar" id="turn-game-2"> </div></div>', '<div class="mt mt-macau" data-name="macau" data-id="3" id="mini-tx-3"> <div class="left"> <span class="bet" id="totalbetOver-3">0</span> </div><div class="right"> <span class="bet" id="totalbetUnder-3">0</span> </div><div class="center"> <div class="countdown" id="txtTimerBet-3">0</div><div class="result" id="txtResult-3"> </div><span class="countdown-circle" style="display: none" id="txtTimerHide-3">0</span><div id="mini-money-3" class="mini-money-w"></div></div><div class="turn-bar" id="turn-game-3"></div></div>'],
            this.dicePos = [{
                s: 1,
                r: -.6,
                x: 6,
                y: -57
            }, {
                s: 1,
                r: -.1,
                x: -59,
                y: 46.5
            }, {
                s: 1,
                r: .75,
                x: 62,
                y: 44
            }],
            this.quickBet = [[0, "10.000", 1e4, ""], [0, "50.000", 5e4, ""], [0, "100K", 1e5, ""], [0, "500K", 5e5, ""], [0, "1M", 1e6, ""], [0, "10M", 1e7, ""], [0, "50M", 5e7, ""], [1, "X2", 2, ""]],
            this.assets = [{
                id: "dice",
                src: "assets/ld-dice.json"
            }, {
                id: "fire",
                src: "assets/firely.json"
            }],
            this.showDragon = !1,
            this.showLight = !1,
            this.starAmount = 100,
            this.cameraZ = 0,
            this.fov = 20,
            this.baseSpeed = .025,
            this.speed = 0,
            this.warpSpeed = 1,
            this.starStretch = 1.5,
            this.starBaseSize = .05,
            this.stars = [],
            this.temp = {},
            this.justReset = !1,
            this.dataTai = [],
            this.dataXiu = [],
            this.onFocus = function(e) {
                var t = gameLuckyDice;
                t.setAutoClose(),
                "txtbetpersonOver" == e.id ? $("#txtbetpersonUnder").val(0) : "txtbetpersonUnder" == e.id && $("#txtbetpersonOver").val(0),
                "0" != e.value && "" != e.value || (e.value = ""),
                0 < e.value && (t.showBetButton(e.value),
                e.setSelectionRange(0, e.value.length));
                var i = "txtbetpersonUnder" === e.id ? 1 : 2;
                $(".game-pad").hide(),
                2 !== t.betType && $(".game-pad").show(),
                t.checkBtnRebet(),
                $("#txtBet").addClass("disabled"),
                t.gate = i
            }
            ,
            this.timeRe = 12e4,
            this.listPrizeValue = [1e3, 5e3, 1e4, 2e4, 3e4, 5e4, 1e5, 2e5, 3e5, 5e5, 1e6, 2e6, 3e6, 5e6, 1e7, 25e6, 1e8, 2, 1];
            var t = libs.Util.getSessionStorage("uckydice.typeBet");
            t && 0 < t && t < 3 && (this.betType = t),
            this.init()
        }
        t.game = o
    }
    , function(e, t, i) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ChatTx = void 0;
        var a = i(0);
        t.ChatTx = {
            channel: "game_taixiu",
            firstLoad: !1,
            bottomPos: null,
            MIN_ALLOW_CHAT: 1e4,
            MIN_LEVEL_ALLOW_CHAT: 1,
            MIN_VIPPOINT_ALLOW_CHAT: 10,
            showChat: function(e) {
                var s = this;
                if (void 0 === window.ChatConnection && (window.ChatConnection = (new a.HubConnectionBuilder).withUrl(Config.CHAT_URL, {
                    accessTokenFactory: function() {
                        return libs.MiniGame.token
                    },
                    transport: a.HttpTransportType.WebSockets,
                    skipNegotiation: !0
                }).configureLogging(a.LogLevel.Information).build()),
                window.ChatConnection.client || (window.ChatConnection.on("listLastMessages", function(e) {
                    0 !== Object.keys(e).length && 0 !== e.length ? (this.firstLoad = !0,
                    $.each(e, function(e, t) {
                        window.ChatConnection.client.receiveMessage(t)
                    }),
                    this.firstLoad = !1,
                    $("#gameLuckyDice .chat .messages").slimScroll({
                        scrollTo: $("#gameLuckyDice .chat .messages").prop("scrollHeight")
                    }),
                    $("#ld-scroll-b").hide(),
                    s.bottomPos = $("#gameLuckyDice .chat .messages")[0].scrollHeight,
                    $("#gameLuckyDice .chat .messages").unbind("scroll").bind("scroll", function() {
                        var e = $("#gameLuckyDice .chat .messages");
                        e[0].scrollHeight - e.scrollTop() - e.outerHeight() < 1 ? ($("#ld-scroll-b").hide(),
                        s.bottomPos = $("#gameLuckyDice .chat .messages")[0].scrollHeight) : ($("#ld-scroll-b").show(),
                        s.bottomPos = 0)
                    })) : $("#gameLuckyDice .chat .messages").html("")
                }),
                window.ChatConnection.on("receiveMessage", function(e) {
                    0 !== Object.keys(e).length && 0 !== e.length ? $.each(e, function(e, t) {
                        window.ChatConnection.client.receiveMessage(t)
                    }) : $("#gameLuckyDice .chat .messages").html("")
                }),
                window.ChatConnection.client = {
                    receiveMessage: function(e) {
                        if (e.i == s.channel && e.c) {
                            var t = App.account.accountID;
                            if ($("#gameLuckyDice .chat .messages").append('<div class="message' + (t == e.a ? " current" : "") + (0 === e.a ? " system" : "") + '"><span class="name"' + ("Hệ thống" === e.n ? ' style="color: red; font-weight: bold"' : "") + ">" + libs.Util.getNameSetStyle(e.n) + '</span> <span class="text">' + (0 === e.a ? e.c.replace(/\\n/g, "<br />").replace(/\n/g, "<br />") : e.c) + "</span></div>"),
                            t == e.a)
                                return void $("#gameLuckyDice .chat .messages").slimScroll({
                                    scrollTo: $("#gameLuckyDice .chat .messages").prop("scrollHeight")
                                });
                            var i = $("#gameLuckyDice .chat .messages").prop("scrollHeight");
                            0 < s.bottomPos && i > s.bottomPos && ($("#gameLuckyDice .chat .messages").slimScroll({
                                scrollTo: $("#gameLuckyDice .chat .messages").prop("scrollHeight")
                            }),
                            $("#ld-scroll-b").hide(),
                            s.bottomPos = $("#gameLuckyDice .chat .messages")[0].scrollHeight)
                        }
                    }
                }),
                window.ChatConnection.server || (window.ChatConnection.server = {
                    registerChat: function(e) {
                        return window.ChatConnection.invoke("registerChat", {
                            ChannelID: e
                        })
                    },
                    unregisterChat: function(e) {
                        return window.ChatConnection.invoke("unregisterChat", {
                            ChannelID: e
                        })
                    },
                    sendMessage: function(e, t) {
                        return window.ChatConnection.invoke("SendMessage", {
                            ChannelID: t,
                            Message: e
                        })
                    }
                }),
                $("#gameLuckyDice .chat").hasClass("show") || !e)
                    return $("#gameLuckyDice .chat").removeClass("show"),
                    window.ChatConnection.server.unregisterChat(s.channel).catch(function() {}),
                    void ("undefined" != typeof ga && ga("send", "event", "LuckyDice", "Chat", e ? "Close-Button" : "Close"));
                $("#gameLuckyDice .chat").addClass("show"),
                "undefined" != typeof ga && ga("send", "event", "LuckyDice", "Chat", "Open"),
                $("#gameLuckyDice .chat .messages").slimScroll({
                    width: "89%",
                    top: "40px",
                    left: "25px",
                    start: "bottom",
                    height: "470px",
                    alwaysVisible: !1,
                    disableFadeOut: !0,
                    color: "#fff",
                    opacity: .8,
                    railVisible: !0,
                    railOpacity: .6
                }),
                $("#ld-scroll-b").unbind("click").click(function() {
                    $("#gameLuckyDice .chat .messages").slimScroll({
                        scrollTo: $("#gameLuckyDice .chat .messages").prop("scrollHeight")
                    }),
                    $("#ld-scroll-b").hide()
                }),
                $("#gameLuckyDice .chat .messages").slimScroll().bind("slimscroll", function(e, t) {
                    "bottom" == t && $("#ld-scroll-b").hide()
                }),
                $("#gameLuckyDice .chat-section .button-chat-hide").unbind("click").click(function() {
                    s.showChat(!1)
                }),
                $("#gameLuckyDice .chat input").unbind("keypress").keypress(function(e) {
                    var t;
                    e.stopPropagation(),
                    13 == e.keyCode && (t = $(this).val(),
                    window.ChatConnection.server.sendMessage(t, s.channel).then(function(e) {
                        0 <= e.c && $("#gameLuckyDice .chat input").val("")
                    }).catch(function() {}),
                    "undefined" != typeof ga && ga("send", "event", "LuckyDice", "Chat", "Send-Message-Enter"))
                }),
                $("#gameLuckyDice .chat .input .button-send").unbind("click").click(function(e) {
                    var t = $("#gameLuckyDice .chat .chat-content input").val();
                    window.ChatConnection.server.sendMessage(t, s.channel).then(function(e) {
                        e && $("#gameLuckyDice .chat input").val("")
                    }).catch(function() {}),
                    "undefined" != typeof ga && ga("send", "event", "LuckyDice", "Chat", "Send-Message-Button")
                }),
                $("#gameLuckyDice .chat input").attr("placeholder", Message.GetMessage("ch01")),
                $("#gameLuckyDice .chat .button-send").html(Message.GetMessage("ch00")),
                $("#gameLuckyDice .chat .input input").attr("disabled", "disabled"),
                $("#gameLuckyDice .chat .messages").html(""),
                1 != window.ChatConnection.connection.connectionState ? window.ChatConnection.start().then(function(e) {
                    App.connectChatSucess(),
                    s.registerChatLuckyDice()
                }).catch(function(e) {}) : s.registerChatLuckyDice()
            },
            registerChatLuckyDice: function() {
                var i = this;
                window.ChatConnection.server.registerChat(this.channel).then(function(e) {
                    if (e.c < 0) {
                        var t = "";
                        switch (e.c) {
                        case -70002:
                            t = Message.GetMessage("me-48");
                            break;
                        case -70001:
                            t = Message.GetMessage("chat-51", [i.MIN_ALLOW_CHAT, window.Config.MoneyText[1]]);
                            break;
                        case -70003:
                            t = Message.GetMessage("chat-511", [i.MIN_VIPPOINT_ALLOW_CHAT]);
                            break;
                        case -70004:
                            t = Message.GetMessage("chat-512", [i.MIN_LEVEL_ALLOW_CHAT]);
                            break;
                        case -70006:
                            t = Message.GetMessage("chat-200");
                            break;
                        case -70005:
                            t = Message.GetMessage("chat-600");
                            break;
                        default:
                            t = Message.GetMessage("me-99")
                        }
                        $("#gameLuckyDice .chat input").attr("placeholder", t),
                        $("#gameLuckyDice .chat input").attr("disabled", "disabled")
                    } else
                        $("#gameLuckyDice .chat input").attr("placeholder", Message.GetMessage("ch02")),
                        $("#gameLuckyDice .chat input").removeAttr("disabled")
                }).catch(function() {})
            }
        }
    }
    ],
    a.c = n,
    a.d = function(e, t, i) {
        a.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: i
        })
    }
    ,
    a.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    a.t = function(t, e) {
        if (1 & e && (t = a(t)),
        8 & e)
            return t;
        if (4 & e && "object" == typeof t && t && t.__esModule)
            return t;
        var i = Object.create(null);
        if (a.r(i),
        Object.defineProperty(i, "default", {
            enumerable: !0,
            value: t
        }),
        2 & e && "string" != typeof t)
            for (var s in t)
                a.d(i, s, function(e) {
                    return t[e]
                }
                .bind(null, s));
        return i
    }
    ,
    a.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default
        }
        : function() {
            return e
        }
        ;
        return a.d(t, "a", t),
        t
    }
    ,
    a.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    a.p = "/",
    a(a.s = 2);
    function a(e) {
        if (n[e])
            return n[e].exports;
        var t = n[e] = {
            i: e,
            l: !1,
            exports: {}
        };
        return s[e].call(t.exports, t, t.exports, a),
        t.l = !0,
        t.exports
    }
    var s, n
});

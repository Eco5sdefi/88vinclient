!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : "function" == typeof define && define.amd ? define("forest", ["libs", "pixi-sound", "signalR", "WebFont"], e) : "object" == typeof exports ? exports.forest = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : t.forest = e(t.libs, t["pixi-sound"], t.signalR, t.WebFont)
}(window, function(i, n, o, s) {
    return l = {},
    a.m = r = {
        0: function(t, e) {
            t.exports = i
        },
        1: function(t, e) {
            t.exports = n
        },
        10: function(t, e, i) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.Config = void 0;
            e.Config = {
                hubUrl: "",
                apiUrl: "",
                api: "",
                lang: null,
                roomId: 1,
                countJpLobby: [null, null, null],
                countJp: null,
                countMoneyJw: null,
                countMoney: null,
                isMobile: !1,
                isOrientation: !1,
                isLobby: !0,
                arrRoom: [100, 1e3, 1e4],
                messages: null,
                ready: !1,
                music: !0,
                sound: !0,
                timeJackpot: null,
                timeSpin: null,
                timePop: null,
                timeBonusOrFree: null,
                timeOutEachLine: null,
                timeIntEachLine: null,
                timeShowWin: null,
                timeBonus: null,
                timerEvent: null,
                currencyId: 1,
                isTry: !1,
                freeSpinCount: 0,
                isFreeSpin: !1,
                totalFreePrize: 0,
                isTicket: !1,
                isAutoSpin: !1,
                isSpin: !1,
                isBonus: !1,
                isWinFree: !1,
                isX2: !1,
                isLogin: !1,
                inRoom: !1,
                gameId: 211,
                autoSpinCount: 0,
                numbShowEachLine: 0,
                numberDown: 0,
                isQuick: !1,
                isBigWin: !1,
                isJackpot: !1,
                isSuperWin: !1,
                isMegaWin: !1,
                payLines: [],
                lineItemsArr: [],
                totalLines: 0,
                betValue: 0,
                moneyType: 0,
                totalFreeSpin: 0,
                slotData: [],
                linesWin: [],
                itemsWinAr: [],
                itemsWin: [],
                totalBetConfig: {
                    BigWin: 100,
                    SuperWin: 500,
                    MegaWin: 1e3
                },
                autoSpinMode: 0,
                useBlur: !0,
                openMore: !1
            }
        },
        18: function(t, e, i) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.lines = void 0;
            var o = i(19)
              , n = {
                CurrentLine: "",
                CurrentLineArray: [],
                TotalLines: 0,
                SetLines: function(t, e) {
                    var i, n;
                    0 === e.length ? (this.CurrentLine = "1",
                    this.CurrentLineArray = [1]) : (i = [],
                    n = e.split(","),
                    $.each(n, function(t, e) {
                        i.push(parseInt(e))
                    }),
                    this.CurrentLineArray = i,
                    this.CurrentLine = e),
                    t.txtLines.text = this.CurrentLineArray.length,
                    this.TotalLines = this.CurrentLineArray.length,
                    this.ShowLines(),
                    o.contents.UpdateTotalBet(t, t.currentPlayer.BetValue * this.TotalLines),
                    $("#lineCount").html(this.TotalLines)
                },
                ChooseLines: function(t) {
                    this.CurrentLineArray = [],
                    this.CurrentLine = "";
                    var i = this;
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button").removeClass("active"),
                    $('#forest-overlayContainer .selectLines .lineContainer input[type="checkbox"]').each(function(t, e) {
                        $(e).is(":checked") && i.CurrentLineArray.push(t + 1)
                    }),
                    0 == this.CurrentLineArray.length && (this.CurrentLineArray = [1]),
                    this.CurrentLine = this.CurrentLineArray.join(","),
                    this.SetLines(t, this.CurrentLine)
                },
                ResetAllLines: function() {
                    for (var t = 1; t < 21; t++)
                        $("#bs-line-" + t).prop("checked", !1)
                },
                ShowLines: function() {
                    this.ResetAllLines();
                    for (var t = 0; t < this.CurrentLineArray.length; t++)
                        $("#bs-line-" + this.CurrentLineArray[t]).prop("checked", !0)
                },
                EvenSelect: function(t) {
                    this.ResetAllLines(),
                    this.SetLines(t, "2,4,6,8,10,12,14,16,18,20"),
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button").removeClass("active"),
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button:eq(2)").addClass("active")
                },
                OddSelect: function(t) {
                    this.ResetAllLines(),
                    this.SetLines(t, "1,3,5,7,9,11,13,15,17,19"),
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button").removeClass("active"),
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button:eq(3)").addClass("active")
                },
                AllSelect: function(t) {
                    this.ResetAllLines(),
                    this.SetLines(t, "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20"),
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button").removeClass("active"),
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button:eq(0)").addClass("active")
                },
                CancelSelect: function() {
                    this.ResetAllLines(),
                    this.CurrentLine = "",
                    this.CurrentLineArray = [],
                    this.TotalLines = 0,
                    $("#lineCount").html(this.TotalLines),
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button").removeClass("active"),
                    $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button:eq(1)").addClass("active")
                }
            };
            e.lines = n
        },
        19: function(t, o, e) {
            "use strict";
            Object.defineProperty(o, "__esModule", {
                value: !0
            }),
            o.contents = void 0;
            var u = e(10)
              , h = e(0)
              , i = e(18);
            o.contents = {
                timer: 0,
                page: 0,
                pageSize: 10,
                UpdateBalance: function(t, e) {
                    0 <= e && (t.txtBalance.text = h.Util.ParseMoney(e, void 0))
                },
                GetEvent: function(e) {
                    h.Util.ClearTimeOut(e.timerEvent),
                    $.ajax({
                        type: "GET",
                        url: u.Config.api + "api/game/GetSlotEvent?CurrencyID=" + u.Config.currencyId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        cache: !1,
                        crossDomain: !0,
                        xhrFields: {
                            withCredentials: !0
                        },
                        success: function(t) {
                            t && t.d && e && e.updateEvent(t.d)
                        },
                        error: function() {}
                    })
                },
                GetJackpot: function(n) {
                    h.Util.ClearTimeOut(u.Config.timeJackpot),
                    $.ajax({
                        type: "GET",
                        url: u.Config.hubUrl + "/api/game/JackpotGetAll?CurrencyID=" + u.Config.currencyId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        cache: !1,
                        crossDomain: !0,
                        xhrFields: {
                            withCredentials: !0
                        },
                        success: function(t) {
                            if (t && t.d && n)
                                for (var e = t.d, i = 0; i < e.length; i++)
                                    u.Config.roomId === e[i].roomID && o.contents.CountJackPot(n.txtJackpot, !0, !1, e[i].jackpotFund, 1);
                            u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                                o.contents.GetJackpot(n)
                            }, 5e3))
                        },
                        error: function() {
                            u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                                o.contents.GetJackpot(n)
                            }, 5e3))
                        }
                    })
                },
                GetTicket: function(e) {
                    $.ajax({
                        type: "GET",
                        url: u.Config.apiUrl + "GetAccountTicket/?currencyID=" + u.Config.currencyId + "&GameID=" + u.Config.gameId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        cache: !1,
                        headers: {
                            Authorization: "Bearer " + e.token
                        },
                        crossDomain: !0,
                        xhrFields: {
                            withCredentials: !0
                        },
                        success: function(t) {
                            0 < t.d.length ? o.contents.UpdateTicket(e, t.d) : (u.Config.isTicket = !1,
                            e.txtFreeTicket.visible = !1)
                        }
                    })
                },
                CountJackPot: function(t, e, i, n, o) {
                    null === u.Config.countJp ? (u.Config.countJp = new h.Util.CountUp(t,e,i,0,n,0,o,void 0),
                    u.Config.countJp.start()) : u.Config.countJp.update(n)
                },
                ChangeResources: function(t) {
                    var e;
                    u.Config.ready && ((e = t).lblBalance.text = Message.GetMessage("hi05"),
                    e.lblLines.text = Message.GetMessage("sl7"),
                    e.lblBetValue.text = Message.GetMessage("sl6"),
                    e.lblTotalBet.text = Message.GetMessage("sl4"),
                    e.lblJustWon.text = Message.GetMessage("sl5"),
                    $("#lbl-totalbet").html(Message.GetMessage("sl4")),
                    $("#lbl-bet").html(Message.GetMessage("sl6")),
                    $("#lbl-lines").html(Message.GetMessage("sl7")),
                    $("#lbl-All").html(Message.GetMessage("sl13")),
                    $("#lbl-Deselect").html(Message.GetMessage("sl14")),
                    $("#lbl-Even").html(Message.GetMessage("sl11")),
                    $("#lbl-Odd").html(Message.GetMessage("sl12")))
                },
                CountNumber: function(t, e, i, n, o, s, a, r) {
                    var l = new h.Util.CountUp(t,e,i,n,o,0,a,void 0);
                    r ? l.start(r) : l.start()
                },
                CountMoney: function(t, e, i, n, o, s, a, r, l) {
                    l ? u.Config.countMoneyJw = new h.Util.CountUp(t,e,i,n,o,0,a,void 0) : u.Config.countMoney = new h.Util.CountUp(t,e,i,n,o,0,a,void 0),
                    r ? l ? u.Config.countMoneyJw.start(r) : u.Config.countMoney.start(r) : l ? u.Config.countMoneyJw.start() : u.Config.countMoney.start()
                },
                UpdateFreeSpin: function(t) {
                    var e = t;
                    u.Config.freeSpinCount--,
                    0 < u.Config.freeSpinCount ? (e.txtFreeTurn.text = Message.GetMessage("sl20") + ": " + u.Config.freeSpinCount,
                    e.txtFreeTurn.visible = !0,
                    e.txtFreeTurn.position.set(e.mainContainer.children[0].x + e.mainContainer.children[0].width / 2, 35)) : e.txtFreeTurn.visible = !1
                },
                UpdateTotalPrizeFreeSpin: function(t) {
                    var e = t;
                    u.Config.isFreeSpin ? (u.Config.totalFreePrize += t.currentPlayer.SpinData.PayLinePrizeValue,
                    e.txtJustWon.text = h.Util.ParseMoney(u.Config.totalFreePrize, void 0)) : u.Config.totalFreePrize = 0
                },
                UpdateLastWon: function(t, e) {
                    t.txtJustWon.text = h.Util.ParseMoney(e, void 0)
                },
                UpdatePrizeValue: function(t, e) {
                    t.txtBetValue.text = h.Util.ParseMoney(e, void 0)
                },
                UpdateTotalBet: function(t, e) {
                    t.txtTotalBet.text = h.Util.ParseMoney(e, void 0),
                    $("#totalBet").html(h.Util.ParseMoney(e)),
                    document.getElementById("betRange").value = (u.Config.roomId - 1).toString(),
                    $("#bet-slider .slider-progress").css("width", 100 * (u.Config.roomId - 1) / 2 + "%")
                },
                UpdateLines: function(t, e) {
                    i.lines.SetLines(t, e)
                },
                UpdateTicket: function(t, e) {
                    var i = t;
                    e[u.Config.roomId - 1] && 0 < e[u.Config.roomId - 1].balance ? (i.txtFreeTicket.text = Message.GetMessage("sl61") + ": " + e[u.Config.roomId - 1].balance,
                    i.boxFreeTicket.visible = !0,
                    u.Config.isTicket || o.contents.UpdateLines(i, "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20"),
                    u.Config.isTicket = !0) : (u.Config.isTicket = !1,
                    i.boxFreeTicket.visible = !1)
                },
                UpdateControl: function(t) {
                    o.contents.UpdateLastWon(t, null != t.currentPlayer.SlotInfo ? t.currentPlayer.SlotInfo.LastPrizeValue : 0),
                    o.contents.UpdateLines(t, t.line ? t.line : t.currentPlayer.SlotInfo.LastLineData),
                    o.contents.UpdatePrizeValue(t, t.currentPlayer.BetValue),
                    o.contents.UpdateTotalBet(t, t.currentPlayer.BetValue * i.lines.TotalLines),
                    t.line = null
                },
                DisableButton: function(t, e, i) {
                    t.buttonMode = !1,
                    t.interactive = !1
                },
                EnableButton: function(t, e) {
                    t.buttonMode = !0,
                    t.interactive = !0
                },
                DisableButtons: function(t) {
                    var e = t;
                    o.contents.DisableButton(e.btnAuto),
                    o.contents.DisableButton(e.btnSpin),
                    o.contents.DisableButton(e.btnBetSetting),
                    o.contents.DisableButton(e.btnQuick),
                    u.Config.isAutoSpin ? (e.btnAuto.visible = !1,
                    e.btnStopAuto.visible = !0,
                    u.Config.isFreeSpin || (e.boxTurnAuto.visible = !0)) : (u.Config.isFreeSpin || (e.btnAuto.visible = !0),
                    e.btnStopAuto.visible = !1,
                    e.boxTurnAuto.visible = !1)
                },
                EnableButtons: function(t) {
                    var e = t;
                    o.contents.EnableButton(e.btnAuto),
                    o.contents.EnableButton(e.btnSpin),
                    o.contents.EnableButton(e.btnBetSetting),
                    o.contents.EnableButton(e.btnQuick),
                    u.Config.isAutoSpin ? (e.btnAuto.visible = !1,
                    e.btnStopAuto.visible = !0,
                    e.boxTurnAuto.visible = !0) : (e.btnAuto.visible = !0,
                    e.btnStopAuto.visible = !1,
                    e.boxTurnAuto.visible = !1),
                    e.btnSpin.visible = !0
                },
                UpdateAutoSpin: function(t) {
                    u.Config.isAutoSpin && (u.Config.autoSpinCount--,
                    0 <= u.Config.autoSpinCount && (t.txtAutoSpin.text = h.Util.ParseMoney(u.Config.autoSpinCount, void 0),
                    window.App.isAuto && sessionStorage.setItem("Auto-" + t.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";" + u.Config.isAutoSpin + ";" + i.lines.CurrentLine)),
                    u.Config.autoSpinCount <= 0 && o.contents.StopAutoSpin(t)),
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").length && $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").html(0 < u.Config.autoSpinCount ? h.Util.ParseMoney(u.Config.autoSpinCount) : ""),
                    $("#list-jp-icon-" + u.Config.gameId + "-playing").length && $("#list-jp-icon-" + u.Config.gameId + "-playing").html(0 < u.Config.autoSpinCount ? h.Util.ParseMoney(u.Config.autoSpinCount) : "")
                },
                StopAutoSpin: function(t) {
                    var e = t;
                    if (u.Config.isAutoSpin) {
                        if (u.Config.isAutoSpin = !1,
                        e.btnStopAuto.visible = !1,
                        e.btnAuto.visible = !0,
                        e.btnStopAuto.visible = !1,
                        e.boxTurnAuto.visible = !1,
                        $("#rolling-" + t.storage).removeClass("active"),
                        $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId).removeClass("button-playing").addClass("button-play"),
                        $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                        $("#ljp-" + u.Config.gameId + "-room-" + u.Config.roomId).parent().removeClass("playing"),
                        $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").html(""),
                        $("#list-jp-icon-" + u.Config.gameId + "-playing").html(""),
                        sessionStorage.removeItem("Auto-" + t.storage),
                        window.App.isAutoForest = !1,
                        e.btnSpin.visible || (e.btnSpin.visible = !0),
                        e.txtAutoSpin.text = "0",
                        u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree)
                            return;
                        u.Config.timeSpin = setTimeout(function() {
                            return o.contents.EnableButtons(t)
                        }, 2e3)
                    }
                },
                CheckLoginOrInRoom: function(t) {
                    var e = t;
                    return !(u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree) && (u.Config.isLogin ? !!u.Config.inRoom || (e.showMessage(Message.GetMessage("sl79")),
                    !1) : (e.showMessage(Language.GetMessage("app003")),
                    !1))
                },
                DeleteTimer: function() {
                    h.Util.ClearTimeOut(u.Config.timeSpin),
                    h.Util.ClearTimeOut(u.Config.timeBonus),
                    h.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                    h.Util.ClearTimeOut(u.Config.timeOutEachLine),
                    h.Util.ClearTimeOut(u.Config.timeShowWin),
                    h.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                    h.Util.ClearTimeOut(u.Config.timeJackpot),
                    h.Util.ClearTimeOut(u.Config.timePop)
                },
                ClearTimer: function() {
                    h.Util.ClearTimeOut(u.Config.timeSpin),
                    h.Util.ClearTimeOut(u.Config.timeBonus),
                    h.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                    h.Util.ClearTimeOut(u.Config.timeOutEachLine),
                    h.Util.ClearTimeOut(u.Config.timeShowWin),
                    h.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                    h.Util.ClearTimeOut(u.Config.timePop)
                },
                DeleteTwEffect: function() {
                    for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                        "forest-eff" === t[e].data && t[e].kill()
                },
                DeleteTweens: function() {
                    for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                        "forest-eff" !== t[e].data && "forest" !== t[e].data && "money-fall-forest" !== t[e].data || t[e].kill()
                }
            }
        },
        2: function(t, e) {
            t.exports = o
        },
        3: function(t, e) {
            t.exports = s
        },
        55: function(t, e, i) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.game = void 0;
            var n = i(56)
              , o = i(3)
              , s = (a.prototype.delete = function() {
                this.game.Delete()
            }
            ,
            a.prototype.startAuto = function() {
                return this.game.StartAuto()
            }
            ,
            a.prototype.stopAuto = function() {
                this.game.StopAuto()
            }
            ,
            a.prototype.checkAuto = function() {
                return this.game.CheckAuto()
            }
            ,
            a.prototype.setSilent = function() {
                this.game.SetSilent()
            }
            ,
            a.prototype.getRoomId = function() {
                return this.game.getRoomId()
            }
            ,
            a.prototype.restartAuto = function(t, e, i) {
                this.game.RestartAuto(t, e, i)
            }
            ,
            a);
            function a(t) {
                o.load({
                    custom: {
                        families: ["SVN-Supercell Magic"]
                    },
                    fontactive: function() {}
                }),
                this.game = new n.games(t)
            }
            e.game = s
        },
        56: function(t, e, i) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.games = void 0;
            var r = i(0)
              , n = i(57)
              , o = i(18)
              , l = i(10)
              , a = i(19)
              , s = i(58)
              , u = i(59);
            i(1);
            var h = (c.prototype.GetAutoSpin = function() {
                var t = sessionStorage.getItem("Auto-" + this.storage);
                if (this.isSilent = !1,
                t) {
                    var e = t.split(";");
                    if ("true" === e[2] && (-1 === parseInt(e[1]) || 0 < parseInt(e[1])))
                        return l.Config.autoSpinCount = parseInt(e[1]),
                        l.Config.isAutoSpin = window.App.isAutoForest = !0,
                        window.App.isAuto = !0,
                        $(".multislot-expand").addClass("active"),
                        l.Config.roomId = parseInt(e[0]),
                        void (e[3] && (this.line = e[3]))
                }
                sessionStorage.removeItem("Auto-" + this.storage)
            }
            ,
            c.prototype.Init = function() {
                PIXI.utils.skipHello(),
                l.Config.isMobile = r.Util.IsMobile(),
                l.Config.isOrientation = r.Util.IsOrientation(),
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    view: this.target
                });
                var t = this;
                this.application.ticker.add(function() {
                    t.Update(t)
                }),
                this.InitContainer();
                for (var e = 0; e < this.assets.length; e++)
                    "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
                this.loader.on("progress", function() {
                    return t.Loading(t)
                }),
                this.loader.load(function() {
                    setTimeout(function() {
                        t.InitGame(),
                        t.InitHubs(),
                        $("#divLoading").hide()
                    }, 1e3)
                })
            }
            ,
            c.prototype.Loading = function(t) {
                $("#divLoading").show(),
                $("#popupJackpot").removeClass("show"),
                0 < $("#divLoading .loading-percent").length ? ($("#divLoading .loading-percent").css("width", parseInt(t.loader.progress) + "%"),
                $("#divLoading .loading-text").html(parseInt(t.loader.progress) + "%")) : ($("#loading-progress span").css("width", parseInt(t.loader.progress) + "%"),
                $("#loading-progress-txt").html(parseInt(t.loader.progress) + "%"))
            }
            ,
            c.prototype.InitHubs = function() {
                this.hubs = new n.default(l.Config.hubUrl.replace("api", "") + "gameHub",this.token,this)
            }
            ,
            c.prototype.Update = function(t) {
                var e = Date.now();
                if (t.emitterNoise)
                    try {
                        t.emitterNoise.update(.001 * (e - t.elapsed))
                    } catch (t) {}
                if (t.emitterEffect)
                    try {
                        t.emitterEffect.update(.001 * (e - t.elapsed))
                    } catch (t) {}
                if (t.emitterLeaves)
                    try {
                        t.emitterLeaves.update(.001 * (e - t.elapsed))
                    } catch (t) {}
                t.elapsed = e
            }
            ,
            c.prototype.ResetTweenTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            c.prototype.InitContainer = function() {
                this.bgContainer = new Container,
                this.loaderContainer = new Container,
                this.linesContainer = new Container,
                this.machineContainer = new Container,
                this.mainContainer = new Container,
                this.iconsContainer = new Container,
                this.containerColumn1 = new Container,
                this.containerColumn2 = new Container,
                this.containerColumn3 = new Container,
                this.containerColumn4 = new Container,
                this.containerColumn5 = new Container,
                this.popupContainer = new Container,
                this.guideContainer = new Container,
                this.moneyContainer = new Container,
                this.columnContainer = new Container,
                this.eventContainer = new Container,
                this.mainContainer.addChild(this.columnContainer),
                this.columnContainer.addChild(this.containerColumn1, this.containerColumn2, this.containerColumn3, this.containerColumn4, this.containerColumn5),
                this.application.stage.addChild(this.loaderContainer, this.bgContainer, this.linesContainer, this.machineContainer, this.eventContainer, this.moneyContainer, this.guideContainer, this.popupContainer)
            }
            ,
            c.prototype.InitGame = function() {
                var t = this;
                this.filter = new PIXI.filters.ColorMatrixFilter,
                this.filter.matrix = [1, 0, 0, .1, 0, 0, 1, 0, .1, 0, 0, 0, 1, .1, 0, 0, 0, 0, 1, 0],
                this.filterGray = new PIXI.filters.ColorMatrixFilter,
                this.filterGray.matrix = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0],
                this.InitFrames(),
                this.InitBg(),
                this.InitMachine(),
                this.InitButton(),
                this.InitMask(),
                this.InitSlots(),
                this.InitPopup(),
                this.InitPopupWin(),
                this.InitPaytable(),
                this.InitBetLines(),
                this.InitEvents(),
                this.InitEvent(),
                this.itemsMainGame = [this.column1[this.totalItems - 3], this.column2[this.totalItems - 3], this.column3[this.totalItems - 3], this.column4[this.totalItems - 3], this.column5[this.totalItems - 3], this.column1[this.totalItems - 2], this.column2[this.totalItems - 2], this.column3[this.totalItems - 2], this.column4[this.totalItems - 2], this.column5[this.totalItems - 2], this.column1[this.totalItems - 1], this.column2[this.totalItems - 1], this.column3[this.totalItems - 1], this.column4[this.totalItems - 1], this.column5[this.totalItems - 1]];
                try {
                    this.bgSound = this.loader.resources.music.sound,
                    this.bgSound.volume = .5,
                    this.bgSound.loop = !0,
                    this.bgSound.play(),
                    this.bgSoundFree = this.loader.resources.music_freespins.sound,
                    this.bgSoundFree.volume = .2,
                    this.bgSoundFree.loop = !0,
                    this.reelSound = this.loader.resources.spin.sound,
                    this.reelSound.loop = !0,
                    this.countSound = this.loader.resources.countup.sound,
                    this.countSound.loop = !0,
                    this.countSound.volume = 2,
                    this.bigWinSound = this.loader.resources.high_win.sound,
                    this.bigWinSound.loop = !0,
                    this.jackpotSound = this.loader.resources.jackpot.sound,
                    this.jackpotSound.loop = !0
                } catch (t) {}
                if (l.Config.ready = !0,
                a.contents.ChangeResources(this),
                l.Config.music)
                    try {
                        this.bgSound.play()
                    } catch (t) {}
                a.contents.DisableButtons(this),
                a.contents.EnableButton(this.btnBack),
                this.iconEvent.visible = !1,
                window.Config.EnableXEvent && a.contents.GetEvent(this),
                this.Resize(this),
                this.ResetTweenTab(),
                this.resizeFunc = function() {
                    return t.Resize(t)
                }
                ,
                window.addEventListener("resize", this.resizeFunc)
            }
            ,
            c.prototype.Resize = function(t) {
                t.size = [$(window).width(), $(window).height()];
                var e = Math.min(t.size[0] / 1920, t.size[1] / 1280);
                t.machineContainer.scale.set(e),
                t.machineContainer.position.set(t.size[0] / 2 - t.machineContainer.width / 2, t.size[1] / 2 - t.machineContainer.height / 2 + 255 * e),
                t.backGround.scale.set(.78 * Math.max(t.size[0] / 1920, 1)),
                t.backGround.position.set(t.size[0] / 2 - t.backGround.width / 2, t.size[1] / 2 - t.backGround.height / 2),
                t.ui.scale.set(e),
                t.ui.position.set(t.size[0] / 2 - t.ui.width / 2, t.size[1] / 2 - t.ui.height / 2 + 550 * e),
                t.btnBack.scale.set(.7),
                t.btnBack.x = 30 * e,
                t.btnBack.y = this.size[1] / 2 - t.btnBack.height / 2 - 480 * e,
                t.btnHide.scale.set(.7),
                t.btnHide.x = t.btnBack.x + t.btnBack.width + t.btnBack.children[0].width + 5 * e,
                t.btnHide.y = t.btnBack.y,
                t.iconEvent.scale.set(Math.max(t.size[0] / 1920, 1)),
                t.iconEvent.position.set(t.size[0] - 150 * e, 150 * e),
                l.Config.isBonus && void 0 !== t.bonus && (t.bonus.bonusContainer.scale.set(e),
                t.bonus.bonusContainer.position.set(t.size[0] / 2 - t.bonus.bonusContainer.width / 2, t.size[1] / 2 - t.bonus.bonusContainer.height / 2 + 135 * e)),
                t.ratio = [e, e]
            }
            ,
            c.prototype.mapItems = function(t) {
                var e = "";
                switch (parseInt(t)) {
                case 1:
                    e = "bonus";
                    break;
                case 2:
                    e = "freespin";
                    break;
                case 3:
                    e = "jackpot";
                    break;
                case 4:
                    e = "dog";
                    break;
                case 5:
                    e = "mushroom";
                    break;
                case 6:
                    e = "bean";
                    break;
                case 7:
                    e = "grape";
                    break;
                default:
                    e = ""
                }
                return e
            }
            ,
            c.prototype.InitFrames = function() {
                var t;
                for (this.framesItems = [],
                this.framesWild = [],
                this.framesMush = [],
                this.framesDoor = [],
                this.framesGate = [],
                this.framesJarGreen = [],
                this.framesJarRed = [],
                this.assetbutterfly = [],
                this.assetbutterfly2 = [],
                this.framesCoins = [],
                this.assetCandle = [],
                this.framesLightingX = [],
                t = 0; t < 8; t++) {
                    for (var e = [], i = 0; i < 30; i++)
                        e.push(this.loader.resources.itemAnimations.textures[this.mapItems(t + 1) + "_000" + (i < 10 ? "0" : "") + i + ".png"]);
                    this.framesItems.push(e)
                }
                for (i = 0; i < 20; i++)
                    this.framesLightingX.push(this.loader.resources.fxJackpot.textures["fxJackpotSheets_000" + (i < 10 ? "0" : "") + i + ".png"]);
                for (this.assetbutterfly = [],
                i = 0; i < 30; i++)
                    this.assetbutterfly.push(this.loader.resources.bgAnimation.textures["butterfly_000" + (i < 10 ? "0" + i : i) + ".png"]),
                    this.assetbutterfly2.push(this.loader.resources.bgAnimation.textures["butterfly2_000" + (i < 10 ? "0" + i : i) + ".png"]),
                    this.assetCandle.push(this.loader.resources.bgAnimation.textures["candle_000" + (i < 10 ? "0" + i : i) + ".png"]);
                this.framesCoins = framesFromTilesetImage("coinForest", 30, 31)
            }
            ,
            c.prototype.InitBg = function() {
                this.backGround = new Sprite(this.loader.resources.bgForest.texture),
                this.bgContainer.addChild(this.backGround);
                var t = new AnimatedSprite(this.assetbutterfly);
                t.animationSpeed = .4,
                t.play(),
                t.x = 1950,
                t.y = 660,
                t.rotation = -.3,
                this.backGround.addChild(t);
                var e = new AnimatedSprite(this.assetbutterfly2);
                e.animationSpeed = .4,
                e.play(),
                e.x = 100,
                e.y = 925,
                this.backGround.addChild(e),
                this.emitterNoise = new PIXI.particles.Emitter(this.backGround,[this.loader.resources.machine.textures["particle.png"]],this.loader.resources.noiseParticle.data),
                this.emitterNoise.emit = !0
            }
            ,
            c.prototype.InitMachine = function() {
                var t = new Sprite(this.loader.resources.machine.textures["machine.png"]);
                this.majorjackpot = new Sprite(this.loader.resources.machine.textures["bgjackpot.png"]),
                this.majorjackpot.x = 70,
                this.majorjackpot.y = -410,
                this.txtJackpot = new BitmapText("250.000",{
                    font: "72px fontjackpot"
                }),
                this.majorjackpot.addChild(this.txtJackpot),
                this.txtJackpot.anchor.x = .5,
                this.txtJackpot.x = 550,
                this.txtJackpot.y = 270,
                this.txtJackpot.letterSpacing = -6,
                this.txtSession = new PIXI.Text("#0",{
                    fontFamily: this.fontEmbed,
                    fontSize: 16,
                    fill: ["#fff"],
                    fontWeight: "bold",
                    stroke: "#06372e",
                    strokeThickness: 2,
                    dropShadow: !0,
                    dropShadowColor: "#06372e",
                    dropShadowBlur: 4,
                    dropShadowAngle: Math.PI / 9,
                    dropShadowDistance: 0
                }),
                this.txtSession.anchor.set(0, .5),
                this.txtSession.position.set(20, -30),
                this.machineContainer.addChild(t, this.majorjackpot, this.txtSession);
                var e = new AnimatedSprite(this.assetbutterfly);
                for (var i in e.animationSpeed = .4,
                e.play(),
                e.x = 600,
                e.y = 165,
                e.rotation = .3,
                e.scale.set(.8),
                this.majorjackpot.addChild(e),
                this.xEvent = new Sprite(this.loader.resources.event.textures["ej-lb-x2"]),
                this.xEvent.anchor.set(.5),
                this.xEvent.scale.set(2),
                this.xEvent.position.set(850, 285),
                this.xEvent.visible = !1,
                this.majorjackpot.addChild(this.xEvent),
                this.machineContainer.addChild(this.mainContainer),
                this.loader.resources.lines.data) {
                    var n = this.loader.resources.lines.data[i]
                      , o = new Container;
                    for (var s in o.name = i.toString(),
                    o.x = -106,
                    o.y = -117,
                    o.visible = !1,
                    n) {
                        var a = new Sprite(this.loader.resources.machine.textures["line.png"]);
                        a.x = 243 * n[s].x,
                        a.y = 243 * n[s].y,
                        a.index = s,
                        a.anchor.set(0, .5),
                        a.rotation = n[s].r,
                        a.scale.x = n[s].s,
                        o.addChild(a)
                    }
                    this.mainContainer.addChild(o),
                    this.lines[i] = o
                }
                this.overlayMachine = new Graphics,
                this.overlayMachine.name = "overlayMachine",
                this.overlayMachine.beginFill(0, .7).drawRoundedRect(0, 0, 1245, 745, 35),
                this.overlayMachine.endFill(),
                this.overlayMachine.alpha = 1,
                this.overlayMachine.visible = !1,
                this.overlayMachine.buttonMode = !0,
                this.overlayMachine.interactive = !0,
                this.overlayMachine.on("pointerup", this.payTableItemOff.bind(this.overlayMachine, this)),
                this.mainContainer.addChild(this.overlayMachine),
                this.overlayItems = new Graphics,
                this.overlayItems.name = "overlayItems",
                this.overlayItems.beginFill(0, .7).drawRoundedRect(0, 0, 1245, 745, 35),
                this.overlayItems.endFill(),
                this.overlayItems.visible = !1,
                this.mainContainer.addChild(this.overlayItems)
            }
            ,
            c.prototype.InitButton = function() {
                var t = this;
                this.expandContainer = new Container,
                this.expandContainer.position.set(50, -250),
                this.expandContainer.visible = !1,
                this.btnSound = new PIXI.Sprite(this.loader.resources.ui.textures["btn-sound.png"]),
                this.btnSound.name = "btn-sound",
                this.btnSound.anchor.set(.5),
                this.btnSound.position.set(-100, -190),
                this.btnSound.addChild(new Sprite(TextureCache["icon-sound.png"])),
                this.btnSound.getChildAt(0).anchor.set(.5),
                this.btnSound.on("pointerover", function() {
                    t.btnSound.texture = t.loader.resources.ui.textures["btn-sound-hover.png"]
                }).on("pointerout", function() {
                    t.btnSound.texture = t.loader.resources.ui.textures["btn-sound.png"]
                }).on("pointerdown", function() {
                    t.btnSound.texture = t.loader.resources.ui.textures["btn-sound-click.png"]
                }).on("pointerup", this.btnSoundUp.bind(this.btnSound, this)),
                this.btnSound.interactive = !0,
                this.btnSound.buttonMode = !0,
                this.btnMusic = new Sprite(this.loader.resources.ui.textures["btn-music.png"]),
                this.btnMusic.name = "btn-music",
                this.btnMusic.anchor.set(.5),
                this.btnMusic.position.set(-100, -90),
                this.btnMusic.addChild(new Sprite(this.loader.resources.ui.textures["icon-music.png"])),
                this.btnMusic.getChildAt(0).anchor.set(.5),
                this.btnMusic.on("pointerover", function() {
                    t.btnMusic.texture = t.loader.resources.ui.textures["btn-music-hover.png"]
                }).on("pointerout", function() {
                    t.btnMusic.texture = t.loader.resources.ui.textures["btn-music.png"]
                }).on("pointerdown", function() {
                    t.btnMusic.texture = t.loader.resources.ui.textures["btn-music-click.png"]
                }).on("pointerup", this.btnMusicUp.bind(this.btnMusic, this)),
                this.btnMusic.interactive = !0,
                this.btnMusic.buttonMode = !0,
                this.btnHistory = new Sprite(this.loader.resources.ui.textures["btn-history.png"]),
                this.btnHistory.name = "btn-history",
                this.btnHistory.anchor.set(.5),
                this.btnHistory.position.set(-100, 10),
                this.btnHistory.addChild(new Sprite(this.loader.resources.ui.textures["icon-history.png"])),
                this.btnHistory.getChildAt(0).anchor.set(.5),
                this.btnHistory.on("pointerover", function() {
                    t.btnHistory.texture = t.loader.resources.ui.textures["btn-history-hover.png"]
                }).on("pointerout", function() {
                    t.btnHistory.texture = t.loader.resources.ui.textures["btn-history.png"]
                }).on("pointerdown", function() {
                    t.btnHistory.texture = t.loader.resources.ui.textures["btn-history-click.png"]
                }).on("pointerup", this.btnHistoryUp.bind(this.btnHistory, this)),
                this.btnHistory.interactive = !0,
                this.btnHistory.buttonMode = !0,
                this.btnRank = new Sprite(this.loader.resources.ui.textures["btn-rank.png"]),
                this.btnRank.name = "btn-rank",
                this.btnRank.anchor.set(.5),
                this.btnRank.position.set(-100, 110),
                this.btnRank.addChild(new Sprite(this.loader.resources.ui.textures["icon-rank.png"])),
                this.btnRank.getChildAt(0).anchor.set(.5),
                this.btnRank.on("pointerover", function() {
                    t.btnRank.texture = t.loader.resources.ui.textures["btn-rank-hover.png"]
                }).on("pointerout", function() {
                    t.btnRank.texture = t.loader.resources.ui.textures["btn-rank.png"]
                }).on("pointerdown", function() {
                    t.btnRank.texture = t.loader.resources.ui.textures["btn-rank-click.png"]
                }).on("pointerup", this.btnRankUp.bind(this.btnRank, this)),
                this.btnRank.interactive = !0,
                this.btnRank.buttonMode = !0,
                this.btnGuide = new Sprite(this.loader.resources.ui.textures["btn-help.png"]),
                this.btnGuide.name = "btn-help",
                this.btnGuide.anchor.set(.5),
                this.btnGuide.position.set(-100, 210),
                this.btnGuide.addChild(new Sprite(this.loader.resources.ui.textures["icon-help.png"])),
                this.btnGuide.getChildAt(0).anchor.set(.5),
                this.btnGuide.on("pointerover", function() {
                    t.btnGuide.texture = t.loader.resources.ui.textures["btn-help-hover.png"]
                }).on("pointerout", function() {
                    t.btnGuide.texture = t.loader.resources.ui.textures["btn-help.png"]
                }).on("pointerdown", function() {
                    t.btnGuide.texture = t.loader.resources.ui.textures["btn-help-click.png"]
                }).on("pointerup", this.btnGuideUp.bind(this.btnGuide, this)),
                this.btnGuide.interactive = !0,
                this.btnGuide.buttonMode = !0,
                this.btnMore = new Sprite(this.loader.resources.ui.textures["btn-more.png"]),
                this.btnMore.name = "btn-more",
                this.btnMore.anchor.set(.5),
                this.btnMore.position.set(-50, 70),
                this.btnMore.addChild(new Sprite(this.loader.resources.ui.textures["icon-more.png"])),
                this.btnMore.getChildAt(0).anchor.set(.5),
                this.btnMore.on("pointerover", function() {
                    t.btnMore.texture = t.loader.resources.ui.textures["btn-more-hover.png"]
                }).on("pointerout", function() {
                    t.btnMore.texture = t.loader.resources.ui.textures["btn-more.png"]
                }).on("pointerdown", function() {
                    t.btnMore.texture = t.loader.resources.ui.textures["btn-more-click.png"]
                }).on("pointerup", this.btnMoreUp.bind(this.btnMore, this)),
                this.btnMore.interactive = !0,
                this.btnMore.buttonMode = !0,
                this.expandContainer.addChild(this.btnSound, this.btnMusic, this.btnHistory, this.btnRank, this.btnGuide),
                this.ui = new Sprite(this.loader.resources.ui.textures["ui.png"]),
                this.ui.name = "UIContainer",
                this.application.stage.addChild(this.ui),
                this.uiTxtStyle = new PIXI.TextStyle({
                    fontFamily: this.fontEmbed,
                    fontSize: 20,
                    fill: ["#fadc1b", "#feae12"]
                }),
                this.uiLabelStyle = new PIXI.TextStyle({
                    fontFamily: this.fontEmbed,
                    fontSize: 16,
                    fill: ["#fff"],
                    fontWeight: "bold",
                    stroke: "#06372e",
                    strokeThickness: 2,
                    dropShadow: !0,
                    dropShadowColor: "#06372e",
                    dropShadowBlur: 4,
                    dropShadowAngle: Math.PI / 9,
                    dropShadowDistance: 0
                }),
                this.uiLabelStyle2 = new PIXI.TextStyle({
                    fontFamily: this.fontEmbed,
                    fontSize: 28,
                    fill: ["#ffffff"],
                    fontWeight: "bold",
                    stroke: "#06372e",
                    strokeThickness: 5,
                    dropShadow: !0,
                    dropShadowColor: "#06372e",
                    dropShadowBlur: 10,
                    dropShadowAngle: Math.PI / 20,
                    dropShadowDistance: 0
                }),
                this.boxBalance = new Sprite(this.loader.resources.ui.textures["bg-balance.png"]),
                this.boxBalance.position.set(1260, 45),
                this.lblBalance = new PIXI.Text(Message.GetMessage("hi05").toUpperCase(),this.uiLabelStyle),
                this.lblBalance.anchor.set(.5, 0),
                this.lblBalance.position.set(this.boxBalance.width / 2, -28),
                this.txtBalance = new PIXI.Text("0",this.uiTxtStyle),
                this.txtBalance.anchor.set(.5, 0),
                this.txtBalance.position.set(this.boxBalance.width / 2, 10),
                this.boxBalance.addChild(this.lblBalance, this.txtBalance),
                this.boxJustWon = new Sprite(this.loader.resources.ui.textures["bg-balance.png"]),
                this.boxJustWon.position.set(1050, 45),
                this.lblJustWon = new PIXI.Text(Message.GetMessage("sl5").toUpperCase(),this.uiLabelStyle),
                this.lblJustWon.anchor.set(.5, 0),
                this.lblJustWon.position.set(this.boxJustWon.width / 2, -28),
                this.txtJustWon = new PIXI.Text("0",this.uiTxtStyle),
                this.txtJustWon.anchor.set(.5, 0),
                this.txtJustWon.position.set(this.boxJustWon.width / 2, 10),
                this.boxJustWon.addChild(this.lblJustWon, this.txtJustWon),
                this.boxTotalBet = new Sprite(this.loader.resources.ui.textures["bg-bet.png"]),
                this.boxTotalBet.position.set(300, 45),
                this.lblTotalBet = new PIXI.Text(Message.GetMessage("sl4").toUpperCase(),this.uiLabelStyle),
                this.lblTotalBet.anchor.set(.5, 0),
                this.lblTotalBet.position.set(this.boxTotalBet.width / 2, -28),
                this.txtTotalBet = new PIXI.Text("100",this.uiTxtStyle),
                this.txtTotalBet.anchor.set(.5),
                this.txtTotalBet.position.set(this.boxTotalBet.width / 2, 23),
                this.boxTotalBet.addChild(this.lblTotalBet, this.txtTotalBet);
                var e = new AnimatedSprite(this.assetCandle);
                e.animationSpeed = .3,
                e.play(),
                e.x = -40,
                e.y = -60;
                var i, n, o = new AnimatedSprite(this.assetCandle);
                for (o.animationSpeed = .3,
                o.play(),
                o.x = 1540,
                o.scale.x = -1,
                o.y = -60,
                this.ui.addChild(this.boxBalance, this.boxTotalBet, this.boxJustWon, e, o),
                this.txtMoney = new BitmapText("0",{
                    font: "70px fontjackpot"
                }),
                this.txtMoney.name = "moneyWin",
                this.txtMoney.anchor.set(.5),
                this.txtMoney.y = 700,
                this.txtMoney.x = 620,
                this.txtMoney.visible = !1,
                this.machineContainer.addChild(this.txtMoney),
                this.boxLines = new Sprite(this.loader.resources.ui.textures["bg-line.png"]),
                this.boxLines.position.set(50, 45),
                this.lblLines = new PIXI.Text(Message.GetMessage("sl7").toUpperCase(),this.uiLabelStyle),
                this.lblLines.anchor.set(.5),
                this.lblLines.position.set(this.boxLines.width / 2, -15),
                this.txtLines = new PIXI.Text("0",this.uiTxtStyle),
                this.txtLines.anchor.set(.5),
                this.txtLines.position.set(this.boxLines.width / 2, 23),
                this.boxLines.addChild(this.lblLines, this.txtLines),
                this.ui.addChild(this.boxLines),
                this.boxBet = new Sprite(this.loader.resources.ui.textures["bg-bet.png"]),
                this.boxBet.position.set(135, 45),
                this.lblBetValue = new PIXI.Text(Message.GetMessage("sl6"),this.uiLabelStyle),
                this.lblBetValue.anchor.set(.5),
                this.lblBetValue.position.set(this.boxBet.width / 2, -15),
                this.txtBetValue = new PIXI.Text("0",this.uiTxtStyle),
                this.txtBetValue.anchor.set(.5),
                this.txtBetValue.position.set(this.boxBet.width / 2, 23),
                this.boxBet.addChild(this.lblBetValue, this.txtBetValue),
                this.ui.addChild(this.boxBet),
                this.ui.addChild(this.expandContainer, this.btnMore),
                this.boxAuto = new Sprite(this.loader.resources.ui.textures["bg-auto.png"]),
                this.boxAuto.position.set(890, -420),
                this.boxAuto.visible = !1,
                i = 55,
                n = 0; n < this.autoClientArr.length; n++) {
                    var s = new PIXI.Text(r.Util.ParseMoney(this.autoClientArr[n]),{
                        fontFamily: this.fontEmbed,
                        fontSize: 24,
                        fontWeight: "bold",
                        fill: "#fff",
                        stroke: "#5b2f1a",
                        strokeThickness: 3,
                        dropShadow: !0,
                        dropShadowColor: "#5b2f1a",
                        dropShadowBlur: 4,
                        dropShadowAngle: Math.PI / 9,
                        dropShadowDistance: 0
                    });
                    s.buttonMode = !0,
                    s.interactive = !0,
                    s.value = this.autoClientArr[n],
                    s.position.set(this.boxAuto.width / 2 - s.width / 2 + 10, i + 50),
                    s.on("pointerover", function() {
                        this.style.fill = "#ffeb7b"
                    }).on("pointerout", function() {
                        this.style.fill = "#ffffff"
                    }).on("pointerup", this.txtAutoDown.bind(s, this)),
                    i += 55,
                    this.boxAuto.addChild(s)
                }
                this.btnBetSetting = new Sprite(this.loader.resources.ui.textures["btn-bet.png"]),
                this.btnBetSetting.name = "btn-bet",
                this.btnBetSetting.scale.x = -1,
                this.btnBetSetting.anchor.set(.5),
                this.btnBetSetting.position.set(535, 60),
                this.btnBetSetting.addChild(new Sprite(this.loader.resources.ui.textures["icon-bet.png"])),
                this.btnBetSetting.getChildAt(0).anchor.set(.5),
                this.btnBetSetting.getChildAt(0).position.set(5, 0),
                this.btnBetSetting.on("pointerover", function() {
                    t.btnBetSetting.texture = t.loader.resources.ui.textures["btn-bet-hover.png"]
                }).on("pointerout", function() {
                    t.btnBetSetting.texture = t.loader.resources.ui.textures["btn-bet.png"]
                }).on("pointerdown", function() {
                    t.btnBetSetting.texture = t.loader.resources.ui.textures["btn-bet-click.png"]
                }).on("pointerup", this.btnBetSettingDown.bind(this.btnBetSetting, this)),
                this.btnBetSetting.interactive = !0,
                this.btnBetSetting.buttonMode = !0,
                this.btnSpin = new Sprite(this.loader.resources.ui.textures["btn-spin.png"]),
                this.btnSpin.name = "btn-spin",
                this.btnSpin.position.set(570, -40),
                this.btnSpin.addChild(new Sprite(this.loader.resources.ui.textures["icon-spin.png"])),
                this.btnSpin.getChildAt(0).anchor.set(.5),
                this.btnSpin.getChildAt(0).position.set(185, 95),
                this.btnSpin.on("pointerover", function() {
                    t.btnSpin.texture = t.loader.resources.ui.textures["btn-spin-hover.png"]
                }).on("pointerout", function() {
                    t.btnSpin.texture = t.loader.resources.ui.textures["btn-spin.png"]
                }).on("pointerdown", function() {
                    t.btnSpin.texture = t.loader.resources.ui.textures["btn-spin-click.png"]
                }).on("pointerup", this.btnSpinDown.bind(this.btnSpin, this)),
                this.btnSpin.interactive = !0,
                this.btnSpin.buttonMode = !0,
                this.btnAuto = new Sprite(this.loader.resources.ui.textures["btn-bet.png"]),
                this.btnAuto.name = "btn-auto",
                this.btnAuto.anchor.set(.5),
                this.btnAuto.position.set(973, 60),
                this.btnAuto.on("pointerover", function() {
                    t.btnAuto.texture = t.loader.resources.ui.textures["btn-bet-hover.png"]
                }).on("pointerout", function() {
                    t.btnAuto.texture = t.loader.resources.ui.textures["btn-bet.png"]
                }).on("pointerdown", function() {
                    t.btnAuto.texture = t.loader.resources.ui.textures["btn-bet-click.png"]
                }).on("pointerup", this.btnAutoDown.bind(this.btnAuto, this)),
                this.btnAuto.interactive = !0,
                this.btnAuto.buttonMode = !0;
                var a = new Sprite(this.loader.resources.ui.textures["icon-auto.png"]);
                a.anchor.set(.5),
                a.x = 0,
                a.y = 0,
                this.btnAuto.addChild(a),
                this.btnStopAuto = new Sprite(this.loader.resources.ui.textures["btn-bet.png"]),
                this.btnStopAuto.name = "btn-stop-auto",
                this.btnStopAuto.anchor.set(.5),
                this.btnStopAuto.position.set(973, 60),
                this.btnStopAuto.addChild(new Sprite(this.loader.resources.ui.textures["icon-stop.png"])),
                this.btnStopAuto.getChildAt(0).anchor.set(.5),
                this.btnStopAuto.getChildAt(0).position.set(0, 0),
                this.btnStopAuto.on("pointerover", function() {
                    t.btnStopAuto.texture = t.loader.resources.ui.textures["btn-bet-hover.png"]
                }).on("pointerout", function() {
                    t.btnStopAuto.texture = t.loader.resources.ui.textures["btn-bet.png"]
                }).on("pointerdown", function() {
                    t.btnStopAuto.texture = t.loader.resources.ui.textures["btn-bet-click.png"]
                }).on("pointerup", this.btnStopAutoDown.bind(this.btnStopAuto, this)),
                this.btnStopAuto.interactive = !0,
                this.btnStopAuto.buttonMode = !0,
                this.btnStopAuto.visible = !1,
                this.boxTurnAuto = new Sprite(this.loader.resources.ui.textures["bg-line.png"]),
                this.boxTurnAuto.anchor.set(.5),
                this.boxTurnAuto.position.set(971, 118),
                this.txtAutoSpin = new PIXI.Text(l.Config.autoSpinCount.toString(),{
                    fontFamily: this.fontEmbed,
                    fontSize: 20,
                    fontWeight: "bold",
                    fill: "#fff",
                    stroke: "#5b2f1a",
                    strokeThickness: 3,
                    dropShadow: !0,
                    dropShadowColor: "#5b2f1a",
                    dropShadowBlur: 4,
                    dropShadowAngle: Math.PI / 9,
                    dropShadowDistance: 0
                }),
                this.txtAutoSpin.anchor.set(.5),
                this.boxTurnAuto.addChild(this.txtAutoSpin),
                this.boxTurnAuto.interactive = !0,
                this.boxTurnAuto.buttonMode = !0,
                this.boxTurnAuto.visible = !1,
                this.txtUserName = new PIXI.Text("undefined" != typeof App && App.account ? App.account.nickname : "",{
                    fontFamily: this.fontEmbed,
                    fontSize: 20,
                    fontWeight: "bold",
                    fill: "#fff",
                    stroke: "#5b2f1a",
                    strokeThickness: 3,
                    dropShadow: !0,
                    dropShadowColor: "#5b2f1a",
                    dropShadowBlur: 4,
                    dropShadowAngle: Math.PI / 9,
                    dropShadowDistance: 0
                }),
                this.txtUserName.anchor.set(0, .5),
                this.txtUserName.position.set(130, -30),
                this.btnQuick = new Sprite(this.loader.resources.quick.textures["btn-quick.png"]),
                this.btnQuick.anchor.set(1, .5),
                this.btnQuick.position.set(1360, -30),
                this.btnQuick.addChild(new Sprite(this.loader.resources.quick.textures["icon-quick.png"])),
                this.btnQuick.children[0].position.set(-37.5, -25),
                this.btnQuick.addChild(new PIXI.Text(Message.GetMessage("mnpk1"),{
                    fontFamily: this.fontEmbed,
                    fontSize: 20,
                    fill: ["#ffffff"],
                    stroke: "#06372e",
                    strokeThickness: 5,
                    dropShadow: !0,
                    dropShadowColor: "#06372e",
                    dropShadowBlur: 10,
                    dropShadowAngle: Math.PI / 20,
                    dropShadowDistance: 0
                })),
                this.btnQuick.children[0].position.set(-37.5, -25),
                this.btnQuick.children[1].anchor.set(1, .5),
                this.btnQuick.children[1].position.set(-38, 0),
                this.btnQuick.on("pointerover", this.btnTintOver.bind(this.btnQuick, this)).on("pointerout", this.btnTintOut).on("pointerup", this.btnQuickDown.bind(this.btnQuick, this)),
                this.btnQuick.children[0].visible = !1,
                this.btnQuick.interactive = !0,
                this.btnQuick.buttonMode = !0,
                this.boxFreeTicket = new PIXI.mesh.NineSlicePlane(this.loader.resources.ui.textures["bg-line.png"],31,16,29,15),
                this.boxFreeTicket.width = 200,
                this.boxFreeTicket.height = 48,
                this.boxFreeTicket.position.set(655, -80),
                this.txtFreeTicket = new PIXI.Text("+0 Free",{
                    fontFamily: this.fontEmbed,
                    fontSize: 17,
                    fill: ["#ffffff"]
                }),
                this.txtFreeTicket.anchor.set(.5),
                this.txtFreeTicket.position.set(this.boxFreeTicket.width / 2, this.boxFreeTicket.height / 2 - 2),
                this.boxFreeTicket.addChild(this.txtFreeTicket),
                this.ui.addChild(this.boxAuto, this.btnBetSetting, this.btnSpin, this.btnAuto, this.btnStopAuto, this.boxTurnAuto, this.txtUserName, this.btnQuick, this.boxFreeTicket),
                this.txtFreeTurn = new PIXI.Text(Message.GetMessage("sl20") + ": 0",{
                    fontFamily: this.fontEmbed,
                    fontSize: 30,
                    fill: ["#ffffff"],
                    stroke: "#06372e",
                    strokeThickness: 5,
                    dropShadow: !0,
                    dropShadowColor: "#06372e",
                    dropShadowBlur: 10,
                    dropShadowAngle: Math.PI / 20,
                    dropShadowDistance: 0
                }),
                this.txtFreeTurn.anchor.set(.5, 0),
                this.txtFreeTurn.position.set(this.mainContainer.children[0].x + this.mainContainer.children[0].width / 2, 35),
                this.txtFreeTurn.visible = !1,
                this.mainContainer.addChild(this.txtFreeTurn),
                this.btnBack = new Sprite(this.loader.resources.ui.textures["home.png"]),
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(-380, -294),
                this.btnBack.addChild(new PIXI.Text(Message.GetMessage("sl29"),{
                    fontFamily: this.fontEmbed,
                    fontSize: 18,
                    fontWeight: "700",
                    fill: ["#fff"],
                    stroke: 2
                })),
                this.btnBack.children[0].anchor.set(.5),
                this.btnBack.children[0].position.set(50, 0),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.btnTintOver.bind(this.btnBack, this)).on("pointerout", this.btnTintOut).on("pointerup", this.BtnBackDown.bind(this.btnBack, this)),
                this.btnHide = new Sprite(this.loader.resources.hide.textures["icon-hide.png"]),
                this.btnHide.anchor.set(.5),
                this.btnHide.position.set(-380, -294),
                this.btnHide.addChild(new PIXI.Text(Message.GetMessage("sl99"),{
                    fontFamily: this.fontEmbed,
                    fontSize: 18,
                    fontWeight: "700",
                    fill: ["#fff"],
                    stroke: 2
                })),
                this.btnHide.children[0].anchor.set(0, .5),
                this.btnHide.children[0].position.set(16, 0),
                this.btnHide.interactive = !0,
                this.btnHide.buttonMode = !0,
                this.btnHide.on("pointerover", this.btnTintOver.bind(this.btnHide, this)).on("pointerout", this.btnTintOut).on("pointerup", this.btnHideDown.bind(this.btnHide, this)),
                this.application.stage.addChild(this.btnBack, this.btnHide)
            }
            ,
            c.prototype.createLightX = function() {
                this.lightingX || (this.lightingX = new AnimatedSprite(this.framesLightingX),
                this.lightingX.animationSpeed = .4,
                this.lightingX.loop = !0,
                this.lightingX.position.set(545, 320),
                this.lightingX.scale.set(1.5),
                this.lightingX.anchor.set(.5),
                this.lightingX.play(),
                this.majorjackpot.addChild(this.lightingX))
            }
            ,
            c.prototype.deleteLightX = function() {
                this.lightingX && this.lightingX.destroy({
                    children: !0
                }),
                this.lightingX = null
            }
            ,
            c.prototype.updateEvent = function(t) {
                var e = this;
                try {
                    for (var i = this.xEvent.visible = !1, n = 0; n < t.length; n++) {
                        var o, s = t[n];
                        s.nextJackpot < 0 ? this.arrBox[s.roomID - 1].children[1].visible = this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1 : 0 == s.nextJackpot ? (this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1,
                        this.arrBox[s.roomID - 1].children[1].texture = this.loader.resources.event.textures["ej-tg-x" + s.multiplier],
                        s.roomID != l.Config.roomId || l.Config.isTry || (this.xEvent.visible = !0,
                        this.xEvent.texture = this.loader.resources.event.textures["ej-lb-x" + s.multiplier],
                        i = !0)) : (this.arrBox[s.roomID - 1].children[1].visible = !1,
                        o = "X" + s.multiplier + " " + Message.GetMessage("ev50") + ("km" == l.Config.lang ? "     " : "        ") + Message.GetMessage("ev49"),
                        this.arrBox[s.roomID - 1].children[2].text = o,
                        this.arrBox[s.roomID - 1].children[3].children[0].text = s.nextJackpot,
                        this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !0)
                    }
                    i ? this.lightingX || this.createLightX() : this.deleteLightX(),
                    l.Config.timerEvent = setTimeout(function() {
                        a.contents.GetEvent(e)
                    }, window.Config.TIME_COUNT_GET_EVENT_X ? window.Config.TIME_COUNT_GET_EVENT_X : 5e3)
                } catch (t) {
                    clearTimeout(l.Config.timerEvent)
                }
            }
            ,
            c.prototype.InitEvent = function() {
                this.iconEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]),
                this.iconEvent.anchor.set(.5),
                this.iconEvent.position.set(this.size[0] / 2 - 100, this.size[1] / 2 + 100),
                this.iconEvent.interactive = !0,
                this.iconEvent.buttonMode = !0,
                this.iconEvent.on("pointerdown", this.onDragStart).on("pointerup", this.onDragEnd).on("pointerupoutside", this.onDragEnd).on("pointermove", this.onDragMove),
                this.boxEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-bg"]),
                this.boxEvent.anchor.set(.5, 0),
                this.boxEvent.position.set(.5, 5),
                this.room1Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
                this.room1Event.anchor.set(.5),
                this.room1Event.position.set(0, 71);
                var t = new PIXI.Text(r.Util.ParseMoney(l.Config.arrRoom[0]),{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fill: ["#aaf573"]
                });
                t.anchor.set(.5),
                t.position.set(0, -15),
                this.room1X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
                this.room1X.anchor.set(.5),
                this.room1X.position.set(0, 10);
                var e = Message.GetMessage("ev26") + ("km" == l.Config.lang ? "     " : "        ") + Message.GetMessage("ev49");
                this.txtRoom1 = new PIXI.Text(e,{
                    fontFamily: "Roboto",
                    fontSize: 13,
                    fontStyle: "italic",
                    fill: ["white"],
                    wordWrap: !0,
                    wordWrapWidth: 200
                }),
                this.txtRoom1.anchor.set(.5),
                this.txtRoom1.position.set(0, 10),
                this.boxJackRoom1 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
                this.boxJackRoom1.anchor.set(.5),
                "km" == l.Config.lang && this.boxJackRoom1.scale.set(.8),
                this.boxJackRoom1.position.set("km" == l.Config.lang ? 28 : "zh" == l.Config.lang ? 9 : "en" == l.Config.lang ? 16 : 13, 10),
                this.boxJackRoom1.addChild(new PIXI.Text("2",{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fontWeight: "bold",
                    fill: ["yellow"]
                })),
                this.boxJackRoom1.children[0].anchor.set(.5),
                this.room1Event.addChild(t, this.room1X, this.txtRoom1, this.boxJackRoom1),
                this.room1X.visible = this.boxJackRoom1.visible = this.txtRoom1.visible = !1,
                this.room2Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
                this.room2Event.anchor.set(.5),
                this.room2Event.position.set(0, 133);
                var i = new PIXI.Text(r.Util.ParseMoney(l.Config.arrRoom[1]),{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fill: ["#aaf573"]
                });
                i.anchor.set(.5),
                i.position.set(0, -15),
                this.room2X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
                this.room2X.anchor.set(.5),
                this.room2X.position.set(0, 10),
                this.txtRoom2 = new PIXI.Text(e,{
                    fontFamily: "Roboto",
                    fontSize: 13,
                    fontStyle: "italic",
                    fill: ["white"],
                    wordWrap: !0,
                    wordWrapWidth: 200
                }),
                this.txtRoom2.anchor.set(.5),
                this.txtRoom2.position.set(0, 10),
                this.boxJackRoom2 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
                this.boxJackRoom2.anchor.set(.5),
                "km" == l.Config.lang && this.boxJackRoom2.scale.set(.8),
                this.boxJackRoom2.position.set("km" == l.Config.lang ? 28 : "zh" == l.Config.lang ? 9 : "en" == l.Config.lang ? 16 : 13, 10),
                this.boxJackRoom2.addChild(new PIXI.Text("2",{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fontWeight: "bold",
                    fill: ["yellow"]
                })),
                this.boxJackRoom2.children[0].anchor.set(.5),
                this.room2Event.addChild(i, this.room2X, this.txtRoom2, this.boxJackRoom2),
                this.room2X.visible = this.boxJackRoom2.visible = this.txtRoom2.visible = !1,
                this.room3Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
                this.room3Event.anchor.set(.5),
                this.room3Event.position.set(0, 195);
                var n = new PIXI.Text(r.Util.ParseMoney(l.Config.arrRoom[2]),{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fill: ["#aaf573"]
                });
                n.anchor.set(.5),
                n.position.set(0, -15),
                this.room3X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
                this.room3X.anchor.set(.5),
                this.room3X.position.set(0, 10),
                this.txtRoom3 = new PIXI.Text(e,{
                    fontFamily: "Roboto",
                    fontSize: 13,
                    fontStyle: "italic",
                    fill: ["white"],
                    wordWrap: !0,
                    wordWrapWidth: 200
                }),
                this.txtRoom3.anchor.set(.5),
                this.txtRoom3.position.set(0, 10),
                this.boxJackRoom3 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
                this.boxJackRoom3.anchor.set(.5),
                "km" == l.Config.lang && this.boxJackRoom3.scale.set(.8),
                this.boxJackRoom3.position.set("km" == l.Config.lang ? 28 : "zh" == l.Config.lang ? 9 : "en" == l.Config.lang ? 16 : 13, 10),
                this.boxJackRoom3.addChild(new PIXI.Text("2",{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fontWeight: "bold",
                    fill: ["yellow"]
                })),
                this.boxJackRoom3.children[0].anchor.set(.5),
                this.room3Event.addChild(n, this.room3X, this.txtRoom3, this.boxJackRoom3),
                this.room3X.visible = this.boxJackRoom3.visible = this.txtRoom3.visible = !1,
                this.boxEvent.addChild(this.room1Event, this.room2Event, this.room3Event),
                this.arrBox = [this.room1Event, this.room2Event, this.room3Event],
                this.arrowEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-arrow"]),
                this.arrowEvent.anchor.set(.5),
                this.arrowEvent.position.set(0, 250),
                this.arrowEvent.scale.y = -1,
                this.arrowEvent.interactive = !0,
                this.arrowEvent.buttonMode = !0,
                this.arrowEvent.on("pointerdown", this.toogleEvent.bind(this.arrowEvent, this)).on("pointerup", this.toogleEventUp.bind(this.arrowEvent, this));
                var o = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]);
                o.anchor.set(.5),
                this.iconEvent.addChild(this.boxEvent, this.arrowEvent, o),
                this.eventContainer.addChild(this.iconEvent)
            }
            ,
            c.prototype.toogleEventUp = function(t) {
                t.iconEvent.interactive = !0
            }
            ,
            c.prototype.toogleEvent = function(t) {
                t.iconEvent.interactive = !1,
                -1 == t.arrowEvent.scale.y ? (t.arrowEvent.scale.y = 1,
                TweenMax.to(t.boxEvent, .5, {
                    alpha: 0,
                    data: "dancing"
                }),
                TweenMax.to(t.arrowEvent, .5, {
                    y: 50,
                    data: "dancing"
                })) : (TweenMax.to(t.boxEvent, .5, {
                    alpha: 1,
                    data: "dancing"
                }),
                TweenMax.to(t.arrowEvent, .5, {
                    y: 250,
                    data: "dancing"
                }),
                t.arrowEvent.scale.y = -1),
                setTimeout(function() {
                    t.iconEvent.interactive = !0
                }, 500)
            }
            ,
            c.prototype.onDragStart = function(t) {
                this.data = t.data,
                this.alpha = .9,
                this.dragging = !0
            }
            ,
            c.prototype.onDragEnd = function() {
                this.data = null,
                this.alpha = 1,
                this.dragging = !1
            }
            ,
            c.prototype.onDragMove = function() {
                var t, e = this;
                e.dragging && (t = e.data.getLocalPosition(e.parent),
                e.x = t.x,
                e.y = t.y)
            }
            ,
            c.prototype.InitMask = function() {
                this.mask = new Graphics,
                this.mask.beginFill(16724736),
                this.mask.beginFill(0, .7).drawRoundedRect(0, 0, 1245, 745, 35),
                this.mainContainer.addChild(this.mask),
                this.mainContainer.mask = this.mask
            }
            ,
            c.prototype.InitSlots = function() {
                var t;
                this.columnContainer.position.set(0, 622);
                for (var e = this.startPosition = 0, i = this.totalItems - 1; 0 <= i; i--)
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column1[i] = new Sprite(this.loader.resources.machine.textures[this.mapItems(t) + (3 < i && i < this.totalItems - 3 && l.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column1[i].anchor.set(.5),
                    this.column1[i].inx = t,
                    this.column1[i].x = 125,
                    this.column1[i].y = this.startPosition - 250 * e,
                    this.column1[i].coord = {
                        x: this.column1[i].x / 250,
                        y: this.column1[i].y / 250
                    },
                    this.containerColumn1.addChild(this.column1[i]),
                    e < 3 && (this.column1[i].buttonMode = !0,
                    this.column1[i].interactive = !0,
                    this.column1[i].on("pointerup", this.payTableItemOn.bind(this.column1[i], this))),
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column2[i] = new Sprite(this.loader.resources.machine.textures[this.mapItems(t) + (3 < i && i < this.totalItems - 3 && l.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column2[i].anchor.set(.5),
                    this.column2[i].inx = t,
                    this.column2[i].x = 375,
                    this.column2[i].y = this.startPosition - 250 * e,
                    this.column2[i].coord = {
                        x: this.column2[i].x / 250,
                        y: this.column2[i].y / 250
                    },
                    this.containerColumn2.addChild(this.column2[i]),
                    e < 3 && (this.column2[i].buttonMode = !0,
                    this.column2[i].interactive = !0,
                    this.column2[i].on("pointerup", this.payTableItemOn.bind(this.column2[i], this))),
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column3[i] = new Sprite(this.loader.resources.machine.textures[this.mapItems(t) + (3 < i && i < this.totalItems - 3 && l.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column3[i].anchor.set(.5),
                    this.column3[i].inx = t,
                    this.column3[i].x = 625,
                    this.column3[i].y = this.startPosition - 250 * e,
                    this.column3[i].coord = {
                        x: this.column3[i].x / 250,
                        y: this.column3[i].y / 250
                    },
                    this.containerColumn3.addChild(this.column3[i]),
                    e < 3 && (this.column3[i].buttonMode = !0,
                    this.column3[i].interactive = !0,
                    this.column3[i].on("pointerup", this.payTableItemOn.bind(this.column3[i], this))),
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column4[i] = new Sprite(this.loader.resources.machine.textures[this.mapItems(t) + (3 < i && i < this.totalItems - 3 && l.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column4[i].anchor.set(.5),
                    this.column4[i].inx = t,
                    this.column4[i].x = 875,
                    this.column4[i].y = this.startPosition - 250 * e,
                    this.column4[i].coord = {
                        x: this.column4[i].x / 250,
                        y: this.column4[i].y / 250
                    },
                    this.containerColumn4.addChild(this.column4[i]),
                    e < 3 && (this.column4[i].buttonMode = !0,
                    this.column4[i].interactive = !0,
                    this.column4[i].on("pointerup", this.payTableItemOn.bind(this.column4[i], this))),
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column5[i] = new Sprite(this.loader.resources.machine.textures[this.mapItems(t) + (3 < i && i < this.totalItems - 3 && l.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column5[i].anchor.set(.5),
                    this.column5[i].inx = t,
                    this.column5[i].x = 1125,
                    this.column5[i].y = this.startPosition - 250 * e,
                    this.column5[i].coord = {
                        x: this.column5[i].x / 250,
                        y: this.column5[i].y / 250
                    },
                    this.containerColumn5.addChild(this.column5[i]),
                    e < 3 && (this.column5[i].buttonMode = !0,
                    this.column5[i].interactive = !0,
                    this.column5[i].on("pointerup", this.payTableItemOn.bind(this.column5[i], this))),
                    e++;
                this.startHeight = this.column1[0].y
            }
            ,
            c.prototype.InitPopup = function() {
                this.boxPopup = new Sprite(this.loader.resources.machine.textures["bgpop.png"]),
                this.boxPopup.name = "boxPopup",
                this.boxPopup.position.set(160, 90);
                var t = new PIXI.Text("",{
                    fontFamily: this.fontEmbed,
                    fontSize: 20,
                    fontWeight: "700",
                    fill: ["#c3ffe5", "#70f5be"],
                    dropShadow: !0,
                    dropShadowColor: "#000",
                    dropShadowDistance: 2,
                    dropShadowBlur: 5,
                    dropShadowAlpha: .5,
                    dropShadowAngle: Math.PI / 2
                });
                t.anchor.set(.5),
                t.x = 470,
                t.y = 260,
                this.boxPopup.addChild(t),
                this.boxPopup.visible = !1,
                this.machineContainer.addChild(this.boxPopup)
            }
            ,
            c.prototype.InitPopupWin = function() {
                this.boxPopupWin = new Sprite(this.loader.resources.machine.textures["bgpop.png"]),
                this.boxPopupWin.name = "boxPopupWin",
                this.boxPopupWin.position.set(160, 90);
                var t = new BitmapText("0",{
                    font: "90px fontjackpot"
                });
                t.anchor.set(.5),
                t.x = 470,
                t.y = 260;
                var e = new PIXI.Text(Message.GetMessage("sl52"),{
                    fontFamily: this.fontEmbed,
                    fontSize: 58,
                    fill: ["#fff200"],
                    fontWeight: "bold"
                });
                e.anchor.set(.5),
                e.position.set(470, 58);
                var i = new PIXI.Text("trong",{
                    fontFamily: this.fontEmbed,
                    fontSize: 30,
                    fill: ["#fff"],
                    fontWeight: "bold",
                    stroke: "#000",
                    strokeThickness: 3,
                    wordWrap: !0,
                    wordWrapWidth: 800
                });
                i.anchor.set(.5),
                i.position.set(455, 400),
                this.boxPopupWin.addChild(e, t, i),
                this.machineContainer.addChild(this.boxPopupWin),
                this.boxPopupWin.visible = !1
            }
            ,
            c.prototype.InitBetLines = function() {
                var n = this;
                0 == $("forest-overlayContainer").length && ($("body").append('<div class="overlayContainer" id="forest-overlayContainer"><span class="close" id="closeOverlay"></span>' + this.divBetLines + "</div"),
                new sliderSetting({
                    id: "betRange",
                    onInput: function(t, e) {
                        var i;
                        a.contents.CheckLoginOrInRoom(n) && (i = parseInt(document.getElementById("betRange").value) + 1,
                        l.Config.roomId = i,
                        n.txtBetValue.text = r.Util.ParseMoney(l.Config.arrRoom[i - 1]),
                        n.txtTotalBet.setText(r.Util.ParseMoney(l.Config.arrRoom[i - 1] * n.currentPlayer.TotalLine)),
                        $("#totalBet").html(r.Util.ParseMoney(l.Config.arrRoom[i - 1] * n.currentPlayer.TotalLine)),
                        $("#betCount").html(r.Util.ParseMoney(l.Config.arrRoom[i - 1])),
                        n.JoinGame(l.Config.roomId),
                        $("#forest-overlayContainer .BetSetting .selectLines .buttons span.button").removeClass("active"))
                    }
                }).init(),
                $("#forest-overlayContainer .selectLines .buttons span.button:eq(0)").unbind("click").bind("click", function() {
                    o.lines.AllSelect(n)
                }),
                $("#forest-overlayContainer .selectLines .buttons .button:eq(1)").unbind("click").bind("click", function() {
                    o.lines.CancelSelect()
                }),
                $("#forest-overlayContainer .selectLines .buttons .button:eq(2)").unbind("click").bind("click", function() {
                    o.lines.EvenSelect(n)
                }),
                $("#forest-overlayContainer .selectLines .buttons .button:eq(3)").unbind("click").bind("click", function() {
                    o.lines.OddSelect(n)
                }))
            }
            ,
            c.prototype.InitEvents = function() {
                var t = this;
                $("#closeOverlay").unbind("click").click(function() {
                    $("#forest-overlayContainer").hide(),
                    o.lines.ChooseLines(t)
                }),
                $('#forest-overlayContainer .selectLines .lineContainer input[type="checkbox"]').unbind("click").bind("click", function() {
                    o.lines.ChooseLines(t)
                })
            }
            ,
            c.prototype.btnTintOver = function(t) {
                this.filters = [t.filter]
            }
            ,
            c.prototype.btnTintOut = function() {
                this.filters = null
            }
            ,
            c.prototype.InitPaytable = function() {
                this.paytableContainer = new Container,
                this.paytableContainer.name = "paytableContainer",
                this.machineContainer.addChild(this.paytableContainer),
                this.paytableContainer.position.set(0, 0),
                this.paytableContainer.visible = !1,
                this.paytableContainer.alpha = 0,
                this.paytableBg = new Sprite(this.loader.resources.machine.textures["info-item.png"]),
                this.paytableBg.anchor.set(.5),
                this.paytableBg.scale.x = 1,
                this.paytableContainer.addChild(this.paytableBg),
                this.paytableAni = new AnimatedSprite([this.loader.resources.machine.textures["grape.png"], this.loader.resources.machine.textures["dog.png"]]),
                this.paytableAni.animationSpeed = .5,
                this.paytableAni.anchor.set(.5),
                this.paytableAni.x = 20,
                this.paytableContainer.addChild(this.paytableAni),
                this.paytableMultiContainer = new Container,
                this.paytableContainer.addChild(this.paytableMultiContainer);
                var t = new PIXI.Text("5",this.textMultipleNumber);
                t.x = 20,
                t.y = -74;
                var e = new PIXI.Text("4",this.textMultipleNumber);
                e.x = 20,
                e.y = -20;
                var i = new PIXI.Text("3",this.textMultipleNumber);
                i.x = 20,
                i.y = 34;
                var n = new PIXI.Text("500",this.textMultipleStrong);
                n.x = 65,
                n.y = -74;
                var o = new PIXI.Text("400",this.textMultipleStrong);
                o.x = 65,
                o.y = -20;
                var s = new PIXI.Text("300",this.textMultipleStrong);
                s.x = 65,
                s.y = 34;
                var a = new PIXI.Text("50000",this.textMultipleLight);
                a.x = 65,
                a.y = -74;
                var r = new PIXI.Text("40000",this.textMultipleLight);
                r.x = 65,
                r.y = -20;
                var l = new PIXI.Text("30000",this.textMultipleLight);
                l.x = 65,
                l.y = 34,
                this.paytableMultiContainer.addChild(n, o, s, a, r, l, t, e, i)
            }
            ,
            c.prototype.BtnBackDown = function(t) {
                window.location.hash = "#",
                window.location.reload()
            }
            ,
            c.prototype.btnHideDown = function(t) {
                l.Config.isAutoSpin ? (window.App.isAuto = !0,
                window.App.isAuto && (sessionStorage.setItem("Auto-" + t.storage, l.Config.roomId + ";" + l.Config.autoSpinCount + ";" + l.Config.isAutoSpin + ";" + o.lines.CurrentLine),
                window.location.hash = "#",
                window.location.reload())) : t.showMessage(Message.GetMessage("sl98"))
            }
            ,
            c.prototype.payTableItemOn = function(t) {
                var e = this.coord
                  , i = this.inx;
                t.paytableContainer.visible = !0,
                t.paytableContainer.alpha = 0,
                TweenLite.to(t.paytableContainer, .5, {
                    alpha: 1
                }),
                t.overlayMachine.visible = !0,
                TweenLite.to(t.overlayMachine, .5, {
                    alpha: .95
                }),
                e.x < 2 ? (t.paytableBg.x = 170,
                t.paytableBg.scale.x = 1,
                t.paytableMultiContainer.x = 170,
                t.paytableContainer.x = 245 * e.x - 20,
                t.paytableContainer.y = 245 * e.y + 615,
                t.paytableAni.x = 20) : (t.paytableBg.scale.x = -1,
                t.paytableBg.x = -70,
                t.paytableMultiContainer.x = -275,
                t.paytableContainer.x = 245 * e.x - 30,
                t.paytableContainer.y = 245 * e.y + 615,
                t.paytableAni.x = 50),
                t.paytableAni.y = 0,
                t.paytableAni.textures = t.framesItems[i - 1];
                for (var n = 0; n < t.payValue[i - 1].length; n++) {
                    var o = t.payValue[i - 1][n];
                    2 == t.payValue[i - 1].length ? (t.paytableMultiContainer.getChildAt(2).visible = !1,
                    t.paytableMultiContainer.getChildAt(5).visible = !1,
                    t.paytableMultiContainer.getChildAt(8).visible = !1) : (t.paytableMultiContainer.getChildAt(2).visible = !0,
                    t.paytableMultiContainer.getChildAt(5).visible = !0,
                    t.paytableMultiContainer.getChildAt(8).visible = !0),
                    Math.round(o) === o ? (t.paytableMultiContainer.getChildAt(n).visible = !0,
                    t.paytableMultiContainer.getChildAt(n + 3).visible = !1,
                    t.paytableMultiContainer.getChildAt(n).text = r.Util.ParseMoney(o)) : (t.paytableMultiContainer.getChildAt(n).visible = !1,
                    t.paytableMultiContainer.getChildAt(n + 3).visible = !0,
                    t.paytableMultiContainer.getChildAt(n + 3).text = o)
                }
                t.paytableAni.play()
            }
            ,
            c.prototype.payTableItemOff = function(t) {
                var e = t;
                TweenLite.to(t.overlayMachine, .5, {
                    alpha: 0,
                    onComplete: function() {
                        e.overlayMachine.visible = !1,
                        e.overlayMachine.alpha = 1
                    }
                }),
                TweenLite.to(t.paytableContainer, .5, {
                    alpha: 0,
                    onComplete: function() {
                        e.paytableContainer.visible = !1
                    }
                })
            }
            ,
            c.prototype.btnSoundUp = function(t) {
                if (l.Config.sound)
                    try {
                        PIXI.sound.play("click1")
                    } catch (t) {}
                if (this.texture = t.loader.resources.ui.textures["btn-sound.png"],
                l.Config.sound) {
                    l.Config.sound = !1,
                    t.btnSound.getChildAt(0).texture = t.loader.resources.ui.textures["icon-sound-off.png"];
                    try {
                        t.jackpotSound.stop(),
                        t.bigWinSound.stop(),
                        t.countSound.stop()
                    } catch (t) {}
                } else
                    l.Config.sound = !0,
                    t.btnSound.getChildAt(0).texture = t.loader.resources.ui.textures["icon-sound.png"]
            }
            ,
            c.prototype.btnMusicUp = function(t) {
                if (l.Config.sound)
                    try {
                        PIXI.sound.play("click1")
                    } catch (t) {}
                if (this.texture = t.loader.resources.ui.textures["btn-music.png"],
                l.Config.music) {
                    l.Config.music = !1;
                    try {
                        t.bgSound.stop()
                    } catch (t) {}
                    t.btnMusic.getChildAt(0).texture = t.loader.resources.ui.textures["icon-music-off.png"]
                } else {
                    l.Config.music = !0;
                    try {
                        t.bgSound.play()
                    } catch (t) {}
                    t.btnMusic.getChildAt(0).texture = t.loader.resources.ui.textures["icon-music.png"]
                }
            }
            ,
            c.prototype.btnHistoryUp = function(t) {
                if (l.Config.sound)
                    try {
                        PIXI.sound.play("click1")
                    } catch (t) {}
                this.texture = t.loader.resources.ui.textures["btn-history.png"],
                t.his()
            }
            ,
            c.prototype.btnRankUp = function(t) {
                if (l.Config.sound)
                    try {
                        PIXI.sound.play("click1")
                    } catch (t) {}
                this.texture = t.loader.resources.ui.textures["btn-rank.png"],
                t.trans()
            }
            ,
            c.prototype.btnGuideUp = function(t) {}
            ,
            c.prototype.btnMoreUp = function(t) {
                if (l.Config.sound)
                    try {
                        PIXI.sound.play("click1")
                    } catch (t) {}
                this.texture = t.loader.resources.ui.textures["btn-more.png"],
                l.Config.openMore = !l.Config.openMore,
                l.Config.openMore ? (t.expandContainer.visible = !0,
                t.btnMore.children[0].rotation = -Math.PI) : (t.expandContainer.visible = !1,
                t.btnMore.children[0].rotation = 0)
            }
            ,
            c.prototype.btnBetSettingDown = function(t) {
                if (l.Config.sound)
                    try {
                        PIXI.sound.play("click2")
                    } catch (t) {}
                this.texture = t.loader.resources.ui.textures["btn-bet.png"],
                $("#forest-overlayContainer").is(":visible") ? $("#forest-overlayContainer").hide() : $("#forest-overlayContainer").show()
            }
            ,
            c.prototype.btnQuickDown = function(t) {
                l.Config.isQuick = !l.Config.isQuick,
                t.btnQuick.getChildAt(0).visible = l.Config.isQuick
            }
            ,
            c.prototype.txtAutoDown = function(t) {
                l.Config.autoSpinCount = parseInt(this.value),
                l.Config.isAutoSpin = window.App.isAutoForest = !0,
                t.txtAutoSpin.text = r.Util.ParseMoney(l.Config.autoSpinCount),
                t.boxAuto.visible = !1,
                t.btnStopAuto.visible = !0,
                $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
                window.App.isAuto && (window.App.showPopupMessage({
                    content: Message.GetMessage("sl94").replace("{0}", Message.GetMessage("na211")),
                    textDone: "OK"
                }),
                sessionStorage.setItem("Auto-" + t.storage, l.Config.roomId + ";" + l.Config.autoSpinCount + ";" + l.Config.isAutoSpin + ";" + o.lines.CurrentLine),
                $(".ml-slot-g-forest .state").removeClass("play").addClass("rolling"),
                $(".multislot-expand").addClass("active")),
                t.initSpin(t)
            }
            ,
            c.prototype.btnAutoDown = function(t) {
                if (l.Config.sound)
                    try {
                        PIXI.sound.play("click2")
                    } catch (t) {}
                this.texture = TextureCache["btn-bet.png"],
                t.boxAuto.visible = !t.boxAuto.visible,
                t.boxAuto.visible ? t.disableMainItems() : t.enableMainItems()
            }
            ,
            c.prototype.btnSpinDown = function(t) {
                t.initSpin(t)
            }
            ,
            c.prototype.btnStopAutoDown = function(t) {
                a.contents.StopAutoSpin(t)
            }
            ,
            c.prototype.JoinGame = function(t) {
                l.Config.isLogin ? this.hubs.connection.invoke("PlayNow", {
                    RoomID: t,
                    CurrencyID: l.Config.currencyId
                }) : this.showMessage(Language.GetMessage("app003"))
            }
            ,
            c.prototype.JoinRoom = function(t) {
                this.accountId = t.AccountID,
                this.currentPlayer = t,
                l.Config.isTry || (this.txtUserName.text = t.Account.Nickname,
                this.txtBalance.text = r.Util.ParseMoney(t.Account.GoldBalance, void 0),
                this.balance = t.Account.GoldBalance),
                this.xEvent.visible = !1,
                this.destroyEffect(),
                a.contents.ClearTimer(),
                l.Config.roomId = t.RoomID,
                l.Config.totalLines = this.line ? this.line.length : t.TotalLine,
                l.Config.betValue = t.BetValue,
                l.Config.inRoom = !0,
                l.Config.moneyType = t.moneyType,
                r.Util.ClearTimeOut(l.Config.timeJackpot),
                this.checkGame(),
                window.Config.EnableXEvent && a.contents.GetEvent(this)
            }
            ,
            c.prototype.checkGame = function() {
                if (a.contents.UpdateControl(this),
                a.contents.GetTicket(this),
                0 < this.currentPlayer.SlotInfo.FreeSpins)
                    return $("#forest-overlayContainer").hide(),
                    l.Config.isFreeSpin = !0,
                    a.contents.DisableButtons(this),
                    l.Config.totalFreeSpin = 0,
                    l.Config.freeSpinCount = 0,
                    void this.setupFreeSpin();
                l.Config.isFreeSpin = !1,
                this.txtFreeTurn.visible = !1,
                this.checkAutoSpin() || a.contents.EnableButtons(this)
            }
            ,
            c.prototype.changeSlots = function() {
                var t;
                this.column1[this.totalItems - 1].alpha = this.column1[this.totalItems - 2].alpha = this.column1[this.totalItems - 3].alpha = 1,
                this.column2[this.totalItems - 1].alpha = this.column2[this.totalItems - 2].alpha = this.column2[this.totalItems - 3].alpha = 1,
                this.column3[this.totalItems - 1].alpha = this.column3[this.totalItems - 2].alpha = this.column3[this.totalItems - 3].alpha = 1,
                this.column4[this.totalItems - 1].alpha = this.column4[this.totalItems - 2].alpha = this.column4[this.totalItems - 3].alpha = 1,
                this.column5[this.totalItems - 1].alpha = this.column5[this.totalItems - 2].alpha = this.column5[this.totalItems - 3].alpha = 1;
                for (var e = 0; e < this.totalItems - 3; e++)
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column1[e].texture = this.loader.resources.machine.textures[this.mapItems(t) + ((3 < e || 0 === e) && l.Config.useBlur ? "-blur" : "") + ".png"],
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column2[e].texture = this.loader.resources.machine.textures[this.mapItems(t) + ((3 < e || 0 === e) && l.Config.useBlur ? "-blur" : "") + ".png"],
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column3[e].texture = this.loader.resources.machine.textures[this.mapItems(t) + ((3 < e || 0 === e) && l.Config.useBlur ? "-blur" : "") + ".png"],
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column4[e].texture = this.loader.resources.machine.textures[this.mapItems(t) + ((3 < e || 0 === e) && l.Config.useBlur ? "-blur" : "") + ".png"],
                    t = Math.floor(7 * Math.random()) + 1,
                    this.column5[e].texture = this.loader.resources.machine.textures[this.mapItems(t) + ((3 < e || 0 === e) && l.Config.useBlur ? "-blur" : "") + ".png"]
            }
            ,
            c.prototype.beforeSpin = function() {
                a.contents.ClearTimer(),
                this.destroyEffect(),
                this.disableLines(),
                this.disableMainItems(),
                this.resetLines(),
                this.visibleIcons(),
                $("#forest-overlayContainer").hide(),
                l.Config.numbShowEachLine = 0,
                l.Config.numberDown = 0,
                a.contents.DisableButtons(this),
                l.Config.isBonus = l.Config.isBigWin = l.Config.isJackpot = l.Config.isWinFree = l.Config.isX2 = l.Config.isSuperWin = l.Config.isMegaWin = !1,
                this.txtMoney.visible = !1,
                this.txtMoney.text = "0",
                this.boxAuto.visible = !1,
                this.paytableContainer.visible = !1,
                this.overlayMachine.visible = !1,
                this.destroyMoney();
                try {
                    l.Config.countMoney.reset(),
                    l.Config.countMoneyJw.reset()
                } catch (t) {}
                try {
                    this.bigWinSound.stop()
                } catch (t) {}
                try {
                    this.jackpotSound.stop()
                } catch (t) {}
                try {
                    this.countSound.stop()
                } catch (t) {}
                if (this.isCount)
                    try {
                        this.txtJustWon.text = r.Util.ParseMoney(this.currentPlayer.SpinData.PayLinePrizeValue)
                    } catch (t) {}
                if (this.isCount = !1,
                l.Config.sound)
                    try {
                        this.bgSound.resume()
                    } catch (t) {}
                this.boxPopup.visible = !1,
                this.boxPopupWin.visible = !1,
                l.Config.payLines = [],
                l.Config.lineItemsArr = []
            }
            ,
            c.prototype.initSpin = function(t) {
                var e = t;
                if (!l.Config.isSpin) {
                    e.beforeSpin(),
                    1 !== this.hubs.connection.connection.connectionState && t.InitHubs(),
                    l.Config.countMoney = null,
                    l.Config.timeSpin = setTimeout(function() {
                        l.Config.isSpin && (l.Config.isSpin = !1,
                        a.contents.StopAutoSpin(e),
                        a.contents.EnableButtons(e))
                    }, 12e3);
                    try {
                        l.Config.isTry ? l.Config.isFreeSpin ? (-1 === e.trial.index && (e.trial.index = r.Util.RandomFrom(0, e.trial.dataFree.length - 1, void 0)),
                        e.trial.turn++,
                        e.startSpin(e.trial.dataFree[e.trial.index][e.trial.turn - 1])) : e.startSpin(e.trial.data[r.Util.RandomFrom(0, e.trial.data.length - 1, void 0)]) : l.Config.isTicket && !l.Config.isFreeSpin ? e.hubs.connection.invoke("SpinForTicket", {
                            MerchantID: 0,
                            RoomID: l.Config.roomId,
                            CurrencyID: l.Config.currencyId
                        }).catch(function() {
                            e.showMessage(Message.GetMessage("sl71")),
                            l.Config.isSpin = !1,
                            a.contents.StopAutoSpin(e),
                            a.contents.EnableButtons(e)
                        }) : e.hubs.connection.invoke("Spin", {
                            MerchantID: 0,
                            RoomID: l.Config.roomId,
                            CurrencyID: l.Config.currencyId,
                            Lines: o.lines.CurrentLine
                        }).then(function(t) {
                            t.c < 0 && (e.showError(t.c),
                            l.Config.isSpin = !1,
                            a.contents.StopAutoSpin(e),
                            a.contents.EnableButtons(e))
                        }).catch(function() {
                            e.showMessage(Message.GetMessage("sl71")),
                            l.Config.isSpin = !1,
                            a.contents.StopAutoSpin(e),
                            a.contents.EnableButtons(e)
                        })
                    } catch (t) {
                        e.showMessage(Message.GetMessage("sl71")),
                        l.Config.isSpin = !1,
                        a.contents.StopAutoSpin(e),
                        a.contents.EnableButtons(e)
                    }
                }
            }
            ,
            c.prototype.startSpin = function(t) {
                var n, e = this;
                console.log("result", t),
                a.contents.ClearTimer(),
                l.Config.isSpin || (e.currentPlayer = t,
                l.Config.isSpin = !0,
                e.txtSession.text = "#" + this.currentPlayer.SpinData.SpinID,
                l.Config.slotData = [],
                l.Config.slotData = t.SpinData.SlotsData.split(","),
                e.changeSlots(),
                this.column1[1].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[0]) + ".png"],
                this.column1[1].inx = l.Config.slotData[0],
                this.column1[2].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[5]) + ".png"],
                this.column1[2].inx = l.Config.slotData[5],
                this.column1[3].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[10]) + ".png"],
                this.column1[3].inx = l.Config.slotData[10],
                this.column2[1].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[1]) + ".png"],
                this.column2[1].inx = l.Config.slotData[1],
                this.column2[2].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[6]) + ".png"],
                this.column2[2].inx = l.Config.slotData[6],
                this.column2[3].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[11]) + ".png"],
                this.column2[3].inx = l.Config.slotData[11],
                this.column3[1].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[2]) + ".png"],
                this.column3[1].inx = l.Config.slotData[2],
                this.column3[2].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[7]) + ".png"],
                this.column3[2].inx = l.Config.slotData[7],
                this.column3[3].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[12]) + ".png"],
                this.column3[3].inx = l.Config.slotData[12],
                this.column4[1].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[3]) + ".png"],
                this.column4[1].inx = l.Config.slotData[3],
                this.column4[2].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[8]) + ".png"],
                this.column4[2].inx = l.Config.slotData[8],
                this.column4[3].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[13]) + ".png"],
                this.column4[3].inx = l.Config.slotData[13],
                this.column5[1].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[4]) + ".png"],
                this.column5[1].inx = l.Config.slotData[4],
                this.column5[2].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[9]) + ".png"],
                this.column5[2].inx = l.Config.slotData[9],
                this.column5[3].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[14]) + ".png"],
                this.column5[3].inx = l.Config.slotData[14],
                l.Config.isQuick && (this.column1[16].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[0]) + ".png"],
                this.column1[16].inx = l.Config.slotData[0],
                this.column1[17].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[5]) + ".png"],
                this.column1[17].inx = l.Config.slotData[5],
                this.column1[18].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[10]) + ".png"],
                this.column1[18].inx = l.Config.slotData[10],
                this.column2[16].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[1]) + ".png"],
                this.column2[16].inx = l.Config.slotData[1],
                this.column2[17].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[6]) + ".png"],
                this.column2[17].inx = l.Config.slotData[6],
                this.column2[18].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[11]) + ".png"],
                this.column2[18].inx = l.Config.slotData[11],
                this.column3[16].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[2]) + ".png"],
                this.column3[16].inx = l.Config.slotData[2],
                this.column3[17].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[7]) + ".png"],
                this.column3[17].inx = l.Config.slotData[7],
                this.column3[18].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[12]) + ".png"],
                this.column3[18].inx = l.Config.slotData[12],
                this.column4[16].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[3]) + ".png"],
                this.column4[16].inx = l.Config.slotData[3],
                this.column4[17].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[8]) + ".png"],
                this.column4[17].inx = l.Config.slotData[8],
                this.column4[18].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[13]) + ".png"],
                this.column4[18].inx = l.Config.slotData[13],
                this.column5[16].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[4]) + ".png"],
                this.column5[16].inx = l.Config.slotData[4],
                this.column5[17].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[9]) + ".png"],
                this.column5[17].inx = l.Config.slotData[9],
                this.column5[18].texture = this.loader.resources.machine.textures[this.mapItems(l.Config.slotData[14]) + ".png"],
                this.column5[18].inx = l.Config.slotData[14]),
                l.Config.linesWin = [],
                l.Config.itemsWinAr = [],
                l.Config.itemsWin = [],
                0 < (null != e.currentPlayer.SpinData.PrizesData ? Object.keys(e.currentPlayer.SpinData.PrizesData).length : 0) && (n = e.currentPlayer.SpinData.PrizesData.split(";"),
                $.each(e.currentPlayer.SpinData.PositionData.split(";"), function(t, e) {
                    var i = $.map(e.split(","), function(t) {
                        return parseInt(t)
                    });
                    l.Config.itemsWinAr.push(i),
                    l.Config.linesWin.push(n[t].split(",")[0]),
                    $.each(i, function(t, e) {
                        $.inArray(e, l.Config.itemsWin) < 0 && l.Config.itemsWin.push(e)
                    })
                })),
                (l.Config.isFreeSpin || l.Config.isTicket) && (e.currentPlayer.SpinData.TotalBetValue = o.lines.TotalLines * e.currentPlayer.BetValue),
                e.currentPlayer.SpinData.IsJackpot && (l.Config.isJackpot = !0),
                e.currentPlayer.SpinData.PayLinePrizeValue >= l.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue && (l.Config.isBigWin = !0),
                t.SpinData.IsFreeSpin && (l.Config.isWinFree = !0),
                null !== t.SpinData.BonusGameData && 0 < t.SpinData.BonusGameData.length && (l.Config.isBonus = !0),
                r.Util.ClearTimeOut(l.Config.timeSpin),
                l.Config.isFreeSpin || a.contents.UpdateAutoSpin(e),
                e.spin())
            }
            ,
            c.prototype.spin = function() {
                var t = this;
                if (t.pointNext = -695,
                t.pointBack = -765,
                a.contents.ClearTimer(),
                l.Config.isQuick ? (t.timeTween = .7,
                t.timeBack = .1,
                t.delayFirst = .15,
                t.spinTo = -t.startHeight - 3750) : (t.timeTween = 1.4,
                t.timeBack = .3,
                t.spinTo = -t.startHeight,
                t.delayFirst = .3),
                l.Config.sound)
                    try {
                        t.reelSpin.play()
                    } catch (t) {}
                TweenMax.to(t.containerColumn1, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: 0,
                    data: "forest",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        try {
                            t.reelSpin.stop()
                        } catch (t) {}
                        if (l.Config.sound)
                            try {
                                PIXI.sound.play("reel_stop")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn1, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "forest",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.containerColumn1.y = 0,
                                t.column1[t.totalItems - 3].texture = t.column1[1].texture,
                                t.column1[t.totalItems - 3].inx = t.column1[1].inx,
                                t.column1[t.totalItems - 2].texture = t.column1[2].texture,
                                t.column1[t.totalItems - 2].inx = t.column1[2].inx,
                                t.column1[t.totalItems - 1].texture = t.column1[3].texture,
                                t.column1[t.totalItems - 1].inx = t.column1[3].inx
                            }
                        })
                    }
                }),
                TweenMax.to(t.containerColumn2, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: t.delayFirst,
                    data: "forest",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        if (l.Config.sound)
                            try {
                                PIXI.sound.play("reel_stop")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn2, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "forest",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.column2[t.totalItems - 3].texture = t.column2[1].texture,
                                t.column2[t.totalItems - 3].inx = t.column2[1].inx,
                                t.column2[t.totalItems - 2].texture = t.column2[2].texture,
                                t.column2[t.totalItems - 2].inx = t.column2[2].inx,
                                t.column2[t.totalItems - 1].texture = t.column2[3].texture,
                                t.column2[t.totalItems - 1].inx = t.column2[3].inx,
                                t.containerColumn2.y = 0
                            }
                        })
                    }
                }),
                TweenMax.to(t.containerColumn3, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: 2 * t.delayFirst,
                    data: "forest",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        if (l.Config.sound)
                            try {
                                PIXI.sound.play("reel_stop")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn3, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "forest",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.column3[t.totalItems - 3].texture = t.column3[1].texture,
                                t.column3[t.totalItems - 3].inx = t.column3[1].inx,
                                t.column3[t.totalItems - 2].texture = t.column3[2].texture,
                                t.column3[t.totalItems - 2].inx = t.column3[2].inx,
                                t.column3[t.totalItems - 1].texture = t.column3[3].texture,
                                t.column3[t.totalItems - 1].inx = t.column3[3].inx,
                                t.containerColumn3.y = 0
                            }
                        })
                    }
                }),
                TweenMax.to(t.containerColumn4, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: 3 * t.delayFirst,
                    data: "forest",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        if (l.Config.sound)
                            try {
                                PIXI.sound.play("reel_stop")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn4, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "forest",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.column4[t.totalItems - 3].texture = t.column4[1].texture,
                                t.column4[t.totalItems - 3].inx = t.column4[1].inx,
                                t.column4[t.totalItems - 2].texture = t.column4[2].texture,
                                t.column4[t.totalItems - 2].inx = t.column4[2].inx,
                                t.column4[t.totalItems - 1].texture = t.column4[3].texture,
                                t.column4[t.totalItems - 1].inx = t.column4[3].inx,
                                t.containerColumn4.y = 0
                            }
                        })
                    }
                }),
                TweenMax.to(t.containerColumn5, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: 4 * t.delayFirst,
                    data: "forest",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        if (l.Config.sound)
                            try {
                                PIXI.sound.play("reel_stop")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn5, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "forest",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.column5[t.totalItems - 3].texture = t.column5[1].texture,
                                t.column5[t.totalItems - 3].inx = t.column5[1].inx,
                                t.column5[t.totalItems - 2].texture = t.column5[2].texture,
                                t.column5[t.totalItems - 2].inx = t.column5[2].inx,
                                t.column5[t.totalItems - 1].texture = t.column5[3].texture,
                                t.column5[t.totalItems - 1].inx = t.column5[3].inx,
                                t.containerColumn5.y = 0,
                                t.completeSpin()
                            }
                        })
                    }
                })
            }
            ,
            c.prototype.completeSpin = function() {
                if (l.Config.isSpin = !1,
                l.Config.sound)
                    try {
                        this.reelSpin.stop()
                    } catch (t) {}
                this.showWin()
            }
            ,
            c.prototype.showWin = function() {
                var t = this;
                l.Config.isAutoSpin && a.contents.EnableButton(t.btnQuick),
                l.Config.isTry || 1 !== l.Config.roomId || a.contents.GetTicket(t),
                0 === l.Config.numberDown && 15 === l.Config.slotData.length && (l.Config.isTry ? (this.trial.balance += (l.Config.isFreeSpin ? 0 : -2e5) + this.currentPlayer.SpinData.PayLinePrizeValue,
                t.txtBalanceTrial.text = r.Util.ParseMoney(this.trial.balance, void 0),
                a.contents.CountJackPot(t.txtJackpot, !0, !1, this.trial.jackPot + 2500, 1),
                this.trial.jackPot += 2500) : (a.contents.UpdateBalance(t, t.currentPlayer.Account.GoldBalance),
                this.balance = t.currentPlayer.Account.GoldBalance),
                t.txtJustWon.text = r.Util.ParseMoney(t.currentPlayer.SpinData.PayLinePrizeValue, void 0)),
                t.normalWinOrJackPotOrBigWin()
            }
            ,
            c.prototype.normalWinOrJackPotOrBigWin = function() {
                var t, e = this;
                if (e.destroyEffect(),
                e.visibleIcons(),
                l.Config.countMoney = null,
                l.Config.countMoneyJw = null,
                e.createAllIcon(),
                e.resetLines(),
                0 < e.currentPlayer.SpinData.PayLinePrizeValue) {
                    for (t = 0; t < l.Config.linesWin.length; t++)
                        l.Config.linesWin[t] < 26 && (e.lines["line_" + l.Config.linesWin[t]].visible = !0);
                    if (e.txtMoney.visible = !0,
                    0 === l.Config.numberDown && e.showInLobby(e.currentPlayer.SpinData.PayLinePrizeValue),
                    l.Config.isJackpot) {
                        try {
                            e.bgSound.pause()
                        } catch (t) {}
                        if (e.effectWin(1),
                        e.visibleIcons(),
                        l.Config.sound)
                            try {
                                e.jackpotSound.play()
                            } catch (t) {}
                        a.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {
                            0 !== l.Config.numberDown || l.Config.isBonus || l.Config.isFreeSpin || l.Config.isWinFree || l.Config.isAutoSpin || a.contents.EnableButtons(e)
                        }),
                        0 === l.Config.numberDown && (e.isCount = !0,
                        a.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {})),
                        l.Config.isAutoSpin && a.contents.StopAutoSpin(e),
                        l.Config.timeBonusOrFree = setTimeout(function() {
                            return e.freeOrBonus(e)
                        }, 25e3)
                    } else if (l.Config.isSuperWin || l.Config.isBigWin || l.Config.isMegaWin) {
                        try {
                            e.bgSound.pause()
                        } catch (t) {}
                        var i = 4 * e.currentPlayer.SpinData.PayLinePrizeValue / (l.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue);
                        if (l.Config.sound)
                            try {
                                e.countSound.play()
                            } catch (t) {}
                        a.contents.CountMoney(e.txtMoney, !0, !1, 0, l.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue, 0, 4, function() {
                            if (l.Config.sound)
                                try {
                                    PIXI.sound.play("countup_end")
                                } catch (t) {}
                            0 !== l.Config.numberDown || l.Config.isBonus || l.Config.isFreeSpin || l.Config.isWinFree || l.Config.isAutoSpin || a.contents.EnableButtons(e),
                            e.effectWin(2),
                            e.visibleIcons(),
                            a.contents.CountMoney(e.txtMoney, !0, !1, l.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue, e.currentPlayer.SpinData.PayLinePrizeValue, 0, i - 4, function() {
                                if (l.Config.sound)
                                    try {
                                        e.bigWinSound.play()
                                    } catch (t) {}
                                try {
                                    e.countSound.stop()
                                } catch (t) {}
                            })
                        }),
                        0 === l.Config.numberDown && (e.isCount = !0,
                        a.contents.CountMoney(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, i, function() {}, !0)),
                        l.Config.timeBonusOrFree = setTimeout(function() {
                            return e.freeOrBonus(e)
                        }, 1e3 * (16 + i))
                    } else {
                        if (a.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1),
                        l.Config.sound)
                            try {
                                PIXI.sound.play("low_win")
                            } catch (t) {}
                        l.Config.timeSpin = setTimeout(function() {}, 900),
                        0 === l.Config.numberDown && a.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1, function() {}),
                        l.Config.timeBonusOrFree = setTimeout(function() {
                            return e.freeOrBonus(e)
                        }, 1500)
                    }
                } else
                    l.Config.timeBonusOrFree = setTimeout(function() {
                        return e.freeOrBonus(e)
                    }, 0),
                    e.txtJustWon.text = r.Util.ParseMoney(e.currentPlayer.SpinData.PayLinePrizeValue, void 0)
            }
            ,
            c.prototype.freeOrBonus = function(t) {
                var e = t;
                e.isCount = !1;
                try {
                    e.destroyMoney(),
                    l.Config.countMoney.reset(),
                    l.Config.countMoneyJw.reset()
                } catch (t) {}
                l.Config.numberDown++,
                e.destroyEffect(),
                e.disableLines(),
                this.visibleIcons();
                try {
                    e.bigWinSound.stop()
                } catch (t) {}
                try {
                    e.jackpotSound.stop()
                } catch (t) {}
                try {
                    e.countSound.stop()
                } catch (t) {}
                if (l.Config.sound)
                    try {
                        e.bgSound.resume()
                    } catch (t) {}
                if (e.txtMoney.visible = !1,
                r.Util.ClearTimeOut(l.Config.timeBonusOrFree),
                l.Config.isFreeSpin && (a.contents.UpdateFreeSpin(e),
                a.contents.UpdateTotalPrizeFreeSpin(e)),
                l.Config.isBonus)
                    e.setupBonus();
                else if (l.Config.isWinFree)
                    e.setupFreeSpin();
                else {
                    if (l.Config.isFreeSpin)
                        return void (0 === l.Config.freeSpinCount ? l.Config.timeSpin = setTimeout(function() {
                            return e.finishFreeSpin(e)
                        }, 1 === l.Config.autoSpinMode ? 500 : 1500) : 1 !== l.Config.autoSpinMode && (l.Config.timeSpin = setTimeout(function() {
                            return e.initSpin(e)
                        }, 500)));
                    e.checkAutoSpin() || (a.contents.EnableButtons(e),
                    0 < e.currentPlayer.SpinData.PayLinePrizeValue && e.showEachLine())
                }
            }
            ,
            c.prototype.setupFreeSpin = function() {
                if (this.destroyEffect(),
                l.Config.sound)
                    try {
                        PIXI.sound.play("reward")
                    } catch (t) {}
                var t = this.currentPlayer.SlotInfo.FreeSpins;
                if (l.Config.isFreeSpin || (l.Config.freeSpinCount = l.Config.totalFreeSpin = l.Config.totalFreePrize = 0),
                l.Config.isFreeSpin = !0,
                l.Config.totalFreeSpin += t,
                l.Config.freeSpinCount += t,
                0 < l.Config.itemsWinAr.length)
                    for (var e = 0; e < l.Config.itemsWinAr.length; e++)
                        if (2 === parseInt(l.Config.slotData[l.Config.itemsWinAr[e][0] - 1])) {
                            this.createIconEffect(l.Config.itemsWinAr[e]);
                            break
                        }
                this.effect = new Container,
                this.effect.alpha = 0,
                this.machineContainer.addChild(this.effect),
                this.light1 = new Sprite(this.loader.resources.effects.textures["light.png"]),
                this.light1.x = 620,
                this.light1.y = 380,
                this.light1.anchor.set(.5),
                this.light1.tint = 16776960,
                this.effect.addChild(this.light1),
                this.light2 = new Sprite(this.loader.resources.effects.textures["light2.png"]),
                this.light2.x = 620,
                this.light2.y = 380,
                this.light2.anchor.set(.5),
                this.light2.tint = 16777215,
                this.effect.addChild(this.light2);
                var i = new Sprite(this.loader.resources.effects.textures["freespin.png"]);
                i.x = 620,
                i.y = 380,
                i.anchor.set(.5),
                this.effect.addChild(i);
                var n = new Container;
                n.x = 0,
                n.y = 60,
                i.addChild(n),
                TweenMax.to(this.effect, 1, {
                    alpha: 1,
                    data: "forest-eff"
                }),
                TweenMax.to(i.scale, .5, {
                    x: 1.04,
                    y: 1.04,
                    ease: Power1.easeInOut,
                    repeat: -1,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    data: "forest-effect-win"
                }),
                this.txtFreeTurn.visible = !0,
                this.txtFreeTurn.text = Message.GetMessage("sl20") + ": " + l.Config.freeSpinCount,
                this.txtFreeTurn.position.set(this.mainContainer.children[0].x + this.mainContainer.children[0].width / 2, 35);
                var o = this;
                if (l.Config.music)
                    try {
                        this.bgSound.stop(),
                        this.bgSoundFree.play()
                    } catch (t) {}
                l.Config.timeSpin = setTimeout(function() {
                    o.initSpin(o)
                }, 5e3)
            }
            ,
            c.prototype.finishFreeSpin = function(t) {
                var e = t;
                if (e.boxPopupWin.getChildAt(2).text = Message.GetMessage("sl82").replace("{0}", l.Config.totalFreeSpin),
                e.boxPopupWin.visible = !0,
                a.contents.CountNumber(e.boxPopupWin.getChildAt(1), !0, !1, 0, l.Config.totalFreePrize, 0, 1, function() {}),
                e.txtJustWon.text = r.Util.ParseMoney(l.Config.totalFreePrize, void 0),
                l.Config.totalFreeSpin = l.Config.totalFreePrize = l.Config.freeSpinCount = 0,
                l.Config.isFreeSpin = !1,
                e.txtFreeTurn.visible = !1,
                l.Config.isTry && (t.trial.index = -1,
                t.trial.turn = 0),
                l.Config.music)
                    try {
                        e.bgSound.play(),
                        e.bgSoundFree.stop()
                    } catch (t) {}
                l.Config.timeSpin = setTimeout(function() {
                    e.boxPopupWin.visible = !1,
                    e.checkAutoSpin() || (a.contents.EnableButtons(e),
                    this.enableMainItems())
                }, 3500)
            }
            ,
            c.prototype.setupBonus = function() {
                if ((n = this).destroyEffect(),
                l.Config.sound)
                    try {
                        PIXI.sound.play("pingSound")
                    } catch (t) {}
                setTimeout(function() {
                    if (l.Config.sound)
                        try {
                            PIXI.sound.play("reward")
                        } catch (t) {}
                }, 2e3);
                for (var t = 0; t < l.Config.itemsWinAr.length; t++)
                    3 === parseInt(l.Config.slotData[l.Config.itemsWinAr[t][0] - 1]) && this.createIconEffect(l.Config.itemsWinAr[t]);
                this.effect = new Container,
                this.effect.alpha = 0,
                this.machineContainer.addChild(this.effect),
                this.effect = new Container,
                this.effect.alpha = 0,
                this.machineContainer.addChild(this.effect),
                this.light1 = new Sprite(this.loader.resources.effects.textures["light.png"]),
                this.light1.x = 620,
                this.light1.y = 380,
                this.light1.anchor.set(.5),
                this.light1.tint = 16776960,
                this.effect.addChild(this.light1),
                this.light2 = new Sprite(this.loader.resources.effects.textures["light2.png"]),
                this.light2.x = 620,
                this.light2.y = 380,
                this.light2.anchor.set(.5),
                this.light2.tint = 16777215,
                this.effect.addChild(this.light2);
                var e = new Sprite(this.loader.resources.effects.textures["bonus.png"]);
                e.x = 620,
                e.y = 380,
                e.anchor.set(.5),
                this.effect.addChild(e);
                var i = new Container;
                i.x = 0,
                i.y = 60,
                e.addChild(i),
                TweenMax.to(this.effect, 1, {
                    alpha: 1,
                    data: "forest-eff"
                }),
                TweenMax.to(e.scale, .5, {
                    x: 1.04,
                    y: 1.04,
                    ease: Power1.easeInOut,
                    repeat: -1,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    data: "forest-eff"
                }),
                this.emitterEffect = new PIXI.particles.Emitter(i,[this.loader.resources.particles.textures["particle-2.png"]],this.loader.resources.fireflyParticle.data),
                this.emitterEffect.emit = !0,
                this.bonus = new s.bonus(this);
                var n = this;
                l.Config.timeSpin = setTimeout(function() {
                    n.bonus.init()
                }, 5e3)
            }
            ,
            c.prototype.finishBonus = function(t) {
                this.currentPlayer = t,
                a.contents.UpdateBalance(this, t.Account.Balance)
            }
            ,
            c.prototype.showEachLine = function() {
                var e = this;
                r.Util.ClearTimeOut(l.Config.timeOutEachLine);
                var i = l.Config.linesWin.length
                  , n = 0;
                0 !== i ? (l.Config.numbShowEachLine++,
                l.Config.timeIntEachLine = setInterval(function() {
                    if (l.Config.isSpin)
                        r.Util.ClearTimeInterval(l.Config.timeIntEachLine);
                    else if (e.destroyEffect(),
                    e.disableLines(),
                    e.visibleIcons(),
                    l.Config.linesWin[n] < 21)
                        l.Config.timeSpin = setTimeout(function() {
                            e.lines["line_" + l.Config.linesWin[n]].visible = !0;
                            var t = e.lines["line_" + l.Config.linesWin[n]].children;
                            if (TweenMax.staggerFrom(t, .5, {
                                data: "forest-eff",
                                alpha: 0,
                                onStart: function() {
                                    TweenLite.from(this.target.scale, .2, {
                                        x: 0
                                    })
                                }
                            }, .15),
                            e.createIconEffect(l.Config.itemsWinAr[n]),
                            ++n === i) {
                                if (r.Util.ClearTimeInterval(l.Config.timeIntEachLine),
                                l.Config.isAutoSpin && 0 < l.Config.autoSpinCount)
                                    return void e.initSpin(e);
                                l.Config.numbShowEachLine < 3 ? l.Config.timeShowWin = setTimeout(function() {
                                    e.normalWinOrJackPotOrBigWin()
                                }, 2600) : setTimeout(function() {
                                    e.destroyEffect(),
                                    e.visibleIcons(),
                                    e.disableLines(),
                                    e.enableMainItems()
                                }, 1200)
                            }
                        }, 50);
                    else if (++n === i) {
                        if (r.Util.ClearTimeInterval(l.Config.timeIntEachLine),
                        l.Config.isAutoSpin && 0 < l.Config.autoSpinCount)
                            return void e.initSpin(e);
                        l.Config.numbShowEachLine < 2 ? l.Config.timeShowWin = setTimeout(function() {
                            e.normalWinOrJackPotOrBigWin()
                        }, 2600) : setTimeout(function() {
                            e.destroyEffect(),
                            e.disableLines()
                        }, 1200)
                    }
                }, 1700)) : r.Util.ClearTimeInterval(l.Config.timeIntEachLine)
            }
            ,
            c.prototype.checkAutoSpin = function() {
                if (l.Config.isAutoSpin) {
                    var t = this;
                    return l.Config.timeSpin = setTimeout(function() {
                        t.initSpin(t)
                    }, 1500),
                    !0
                }
                return l.Config.isAutoSpin = !1,
                l.Config.autoSpinMode = 0,
                !1
            }
            ,
            c.prototype.createAllIcon = function() {
                if (this.overlayMachine.visible = !0,
                0 < l.Config.itemsWin.length)
                    for (var t = 0; t < l.Config.itemsWin.length; t++) {
                        this.itemsMainGame[l.Config.itemsWin[t] - 1].visible = !1;
                        var e = new AnimatedSprite(this.framesItems[this.itemsMainGame[l.Config.itemsWin[t] - 1].inx - 1]);
                        e.anchor.set(.5),
                        e.position.set(this.itemsMainGame[l.Config.itemsWin[t] - 1].x, this.itemsMainGame[l.Config.itemsWin[t] - 1].y),
                        e.inx = this.itemsMainGame[l.Config.itemsWin[t] - 1].inx,
                        e.coord = this.itemsMainGame[l.Config.itemsWin[t] - 1].coord,
                        e.animationSpeed = .5,
                        e.loop = !1,
                        e.play(),
                        this.iconsContainer.addChild(e)
                    }
            }
            ,
            c.prototype.createIconEffect = function(t) {
                if (this.overlayMachine.visible = !0,
                !(null == t || t.length <= 0))
                    for (var e = 0; e < t.length; e++) {
                        this.itemsMainGame[t[e] - 1].visible = !1;
                        var i = new AnimatedSprite(this.framesItems[this.itemsMainGame[t[e] - 1].inx - 1]);
                        i.anchor.set(.5),
                        i.position.set(this.itemsMainGame[t[e] - 1].x, this.itemsMainGame[t[e] - 1].y),
                        i.animationSpeed = .5,
                        i.inx = this.itemsMainGame[t[e] - 1].inx,
                        i.coord = this.itemsMainGame[t[e] - 1].coord,
                        i.buttonMode = !0,
                        i.interactive = !0,
                        i.on("pointerup", this.payTableItemOn),
                        i.loop = !1,
                        i.play(),
                        this.iconsContainer.addChild(i)
                    }
            }
            ,
            c.prototype.effectWin = function(t) {
                var e;
                if (this.destroyEffect(),
                0 === t || 1 === t || 2 === t || 3 === t || 4 === t) {
                    switch (t) {
                    case 1:
                        e = "jackpot.png";
                        break;
                    case 2:
                        e = "big-win.png";
                        break;
                    case 3:
                        e = "super-win.png";
                        break;
                    case 4:
                        e = "mega-win.png"
                    }
                    this.effect = new Container,
                    this.effect.name = "effectContainer",
                    this.effect.alpha = 0,
                    this.machineContainer.addChild(this.effect),
                    this.light1 = new Sprite(this.loader.resources.effects.textures["light.png"]),
                    this.light1.x = 620,
                    this.light1.y = 380,
                    this.light1.anchor.set(.5),
                    this.light1.tint = 16776960,
                    this.effect.addChild(this.light1),
                    this.light2 = new Sprite(this.loader.resources.effects.textures["light2.png"]),
                    this.light2.x = 620,
                    this.light2.y = 380,
                    this.light2.anchor.set(.5),
                    this.light2.tint = 16777215,
                    this.effect.addChild(this.light2);
                    var i, n, o = new Sprite(this.loader.resources.effects.textures[e]);
                    o.x = 620,
                    o.y = 380,
                    o.anchor.set(.5),
                    this.effect.addChild(o),
                    this.effectMoney(),
                    1 == t && 1 < this.currentPlayer.SpinData.JackpotNum && ((i = new Sprite(this.loader.resources.effects.textures["gold.png"])).x = 620,
                    i.y = 680,
                    i.anchor.set(.5),
                    this.effect.addChild(i),
                    n = new BitmapText(this.currentPlayer.SpinData.JackpotNum.toString(),{
                        font: "72px font2jackpot"
                    }),
                    this.effect.addChild(n),
                    n.anchor.x = .5,
                    n.x = 620,
                    n.y = 570,
                    n.letterSpacing = -6);
                    var s = new Container;
                    s.x = 0,
                    s.y = 60,
                    o.addChild(s),
                    TweenMax.to(this.effect, 1, {
                        alpha: 1,
                        data: "forest-eff"
                    }),
                    TweenMax.to(o.scale, .5, {
                        x: 1.04,
                        y: 1.04,
                        ease: Power1.easeInOut,
                        repeat: -1,
                        yoyo: !0,
                        yoyoEase: Power1.easeInOut,
                        data: "forest-eff"
                    }),
                    this.emitterEffect = new PIXI.particles.Emitter(s,[this.loader.resources.particles.textures["particle-2.png"]],this.loader.resources.fireflyParticle.data),
                    this.emitterEffect.emit = !0
                }
            }
            ,
            c.prototype.visibleIcons = function() {
                for (var t = 0; t < this.itemsMainGame.length; t++)
                    this.itemsMainGame[t].visible = !0
            }
            ,
            c.prototype.resetLines = function() {
                for (var t = 1; t <= Object.keys(this.lines).length; t++)
                    for (var e = 0; e < this.lines["line_" + t].children.length; e++)
                        this.lines["line_" + t].children[e].alpha = 1
            }
            ,
            c.prototype.disableMainItems = function() {
                for (var t = 0; t < this.itemsMainGame.length; t++)
                    this.itemsMainGame[t].interactive = !1,
                    this.itemsMainGame[t].buttonMode = !1
            }
            ,
            c.prototype.enableMainItems = function() {
                for (var t = 0; t < this.itemsMainGame.length; t++)
                    this.itemsMainGame[t].interactive = !0,
                    this.itemsMainGame[t].buttonMode = !0
            }
            ,
            c.prototype.disableLines = function() {
                for (var t = 0; t < Object.keys(this.lines).length; t++)
                    this.lines["line_" + (t + 1)].visible = !1
            }
            ,
            c.prototype.destroyEffect = function() {
                this.overlayMachine.visible = !1,
                a.contents.DeleteTwEffect();
                try {
                    this.emitterEffect.destroy({
                        children: !0
                    })
                } catch (t) {}
                try {
                    this.emitterLeaves.destroy({
                        children: !0
                    })
                } catch (t) {}
                try {
                    this.emitterNoise.destroy({
                        children: !0
                    })
                } catch (t) {}
                try {
                    this.light1 = this.light2 = this.light3 = null,
                    this.effect.destroy({
                        children: !0
                    }),
                    this.effect = null
                } catch (t) {}
                this.iconsContainer.destroy({
                    children: !0
                }),
                this.iconsContainer.name = "iconsContainer",
                this.iconsContainer = new Container,
                this.iconsContainer.x = this.columnContainer.x,
                this.iconsContainer.y = this.columnContainer.y,
                this.mainContainer.addChild(this.iconsContainer)
            }
            ,
            c.prototype.destroyMoney = function() {
                try {
                    for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                        "money-fall-forest" === t[e].data && t[e].kill();
                    for (var i = 0; i < this.moneyArr.length; i++)
                        this.moneyArr[i].destroy({
                            children: !0
                        })
                } catch (t) {}
                this.moneyArr = []
            }
            ,
            c.prototype.random = function(t, e) {
                var i;
                return null == e && (e = t,
                t = 0),
                e < t && (i = t,
                t = e,
                e = i),
                t + (e - t) * Math.random()
            }
            ,
            c.prototype.effectMoney = function() {
                this.moneyArr = [];
                for (var t = 0; t < this.total; t++)
                    this.moneyArr.push(new AnimatedSprite(this.framesCoins)),
                    this.moneyArr[t].anchor.set(.5),
                    this.moneyArr[t].animationSpeed = .3,
                    this.moneyArr[t].scale.set(this.random(.5, 1.4)),
                    this.moneyContainer.addChild(this.moneyArr[t]),
                    this.moneyArr[t].play(),
                    this.moneyArr[t].position.set(this.random(0, this.size[0]), this.random(-200, -150)),
                    TweenMax.to(this.moneyArr[t], this.random(1, 8), {
                        data: "money-fall-forest",
                        y: this.size[1] + 200,
                        ease: Linear.easeNone,
                        repeat: -1,
                        delay: -15
                    })
            }
            ,
            c.prototype.UpdateJackpot = function(t) {
                0 < t && !l.Config.isTry && a.contents.CountJackPot(this.txtJackpot, !0, !1, t, 3.5)
            }
            ,
            c.prototype.showError = function(t) {
                var e;
                switch (console.log("error", t),
                t) {
                case -51:
                    e = Message.GetMessage("sl40");
                    break;
                case -99:
                    e = Message.GetMessage("sl71");
                    break;
                case -600:
                    e = Message.GetMessage("sl70");
                    break;
                case -40004:
                    e = Message.GetMessage("sl69");
                    break;
                case -40005:
                    e = Message.GetMessage("sl66"),
                    setTimeout(App.handleBack, 2e3);
                    break;
                default:
                    e = t
                }
                this.showMessage(e)
            }
            ,
            c.prototype.showMessage = function(t) {
                var e = this.boxPopup
                  , i = this;
                e.getChildAt(0).setText(t),
                e.visible = !0,
                this.overlayMachine.visible = !0,
                l.Config.timePop = setTimeout(function() {
                    e.visible = !1,
                    i.overlayMachine.visible = !1
                }, 2e3)
            }
            ,
            c.prototype.Delete = function() {
                a.contents.DeleteTimer(),
                a.contents.DeleteTweens(),
                $("#forest-overlayContainer").remove();
                try {
                    PIXI.sound.stopAll(),
                    PIXI.sound.removeAll()
                } catch (t) {}
                window.removeEventListener("resize", this.resizeFunc);
                try {
                    this.loader.destroy()
                } catch (t) {}
                this.bonus && delete this.bonus,
                l.Config.isAutoSpin = l.Config.isSpin = l.Config.inRoom = l.Config.isBonus = l.Config.isWinFree = l.Config.isFreeSpin = !1,
                l.Config.isLogin = !1,
                a.contents.DeleteTimer(),
                l.Config.countJp = null;
                try {
                    this.loader && delete this.loader
                } catch (t) {}
                try {
                    document.URL.indexOf("slot") < 0 ? this.application.destroy(!0) : this.application.destroy(!1)
                } catch (t) {}
                try {
                    this.hubs.connection.stop()
                } catch (t) {}
            }
            ,
            c.prototype.StopAuto = function() {
                this.isAuto = !1,
                $("#rolling-" + this.storage).removeClass("active"),
                $("#list-jp-icon-" + l.Config.gameId + "-play").length && $("#list-jp-icon-" + l.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId).length && $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId).removeClass("button-playing").addClass("button-play"),
                $("#ljp-" + l.Config.gameId + "-room-" + l.Config.roomId).parent().removeClass("playing"),
                $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId + "-playing").html(""),
                $("#list-jp-icon-" + l.Config.gameId + "-playing").html("");
                try {
                    this.silent.setSession()
                } catch (t) {}
                try {
                    this.silent && window.App.gameSlots && "forest" === window.App.gameSlots.game.storage && window.App.gameSlots.game.StopAuto(),
                    a.contents.StopAutoSpin(this)
                } catch (t) {}
            }
            ,
            c.prototype.StartAuto = function() {
                var t = this;
                if (0 < this.silent.autoSpin) {
                    this.isAuto = !0,
                    $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
                    $("#list-jp-icon-" + l.Config.gameId + "-play").length && $("#list-jp-icon-" + l.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                    $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId).length && $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId).removeClass("button-play").addClass("button-playing"),
                    $("#ljp-" + l.Config.gameId + "-room-" + l.Config.roomId).parent().addClass("playing");
                    try {
                        if (this.silent && window.App.gameSlots && "forest" === window.App.gameSlots.game.storage)
                            return void window.App.gameSlots.game.StartAutoMain()
                    } catch (t) {}
                    return this.silent.setSession(),
                    setTimeout(function() {
                        return t.silent.initSpin(t.silent)
                    }, 500),
                    !0
                }
                return this.silent.removeSession(),
                !1
            }
            ,
            c.prototype.RestartAuto = function(t, e, i) {
                var n = this;
                this.isAuto = !0,
                $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
                $("#list-jp-icon-" + l.Config.gameId + "-play").length && $("#list-jp-icon-" + l.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                this.silent.autoSpin = i,
                t != l.Config.roomId ? (this.line = e,
                l.Config.roomId = t,
                this.silent.setSession(),
                1 === this.hubs.connection.connection.connectionState ? this.JoinGame(l.Config.roomId) : this.InitHubs()) : (o.lines.CurrentLine = e,
                1 === this.hubs.connection.connection.connectionState ? setTimeout(function() {
                    return n.silent.initSpin(n.silent)
                }, 200) : this.InitHubs()),
                $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId).length && $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + l.Config.gameId + "-room-" + l.Config.roomId).parent().addClass("playing")
            }
            ,
            c.prototype.StartAutoMain = function() {
                var t = this;
                l.Config.isAutoSpin = window.App.isAutoForest = !0,
                t.txtAutoSpin.text = r.Util.ParseMoney(l.Config.autoSpinCount),
                t.boxAuto.visible = !1,
                t.btnStopAuto.visible = !0,
                $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
                window.App.isAuto && (window.App.showPopupMessage({
                    content: Message.GetMessage("sl94").replace("{0}", Message.GetMessage("na211")),
                    textDone: "OK"
                }),
                sessionStorage.setItem("Auto-" + t.storage, l.Config.roomId + ";" + l.Config.autoSpinCount + ";" + l.Config.isAutoSpin + ";" + o.lines.CurrentLine),
                $(".multislot-expand").addClass("active")),
                t.initSpin(t)
            }
            ,
            c.prototype.CheckAuto = function() {
                return this.isAuto
            }
            ,
            c.prototype.SetSilent = function() {
                l.Config.isAutoSpin && (0 < l.Config.autoSpinCount || -1 === l.Config.autoSpinCount) && sessionStorage.setItem("Auto-" + this.storage, l.Config.roomId + ";" + l.Config.autoSpinCount + ";true;" + o.lines.CurrentLine)
            }
            ,
            c.prototype.getRoomId = function() {
                return console.log("Config.roomId", l.Config.roomId),
                l.Config.roomId
            }
            ,
            c.prototype.showInLobby = function(t) {
                var e;
                l.Config.isAutoSpin && ($("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + l.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + l.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#rolling-" + this.storage).hasClass("active") || $("#rolling-" + this.storage).addClass("active"),
                $("#ljp-" + l.Config.gameId + "-room-" + l.Config.roomId).parent().hasClass("playing") || $("#ljp-" + l.Config.gameId + "-room-" + l.Config.roomId).parent().addClass("playing"),
                $("#mn-lobby-rolling-forest").length && ($("#mn-lobby-rolling-forest").append('<span class="rolling-win">+' + r.Util.ParseMoney(t) + "</span>"),
                TweenMax.to($("#mn-lobby-rolling-forest .rolling-win"), 2, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                })),
                (e = $("#list-jp-icon-" + l.Config.gameId + "-room-" + l.Config.roomId)).length && (e.parent().append('<span class="win active">+' + r.Util.ParseMoney(t) + "</span>"),
                TweenMax.to(e.parent().find("span.win"), 1, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                })))
            }
            ,
            c.prototype.InitNotSilent = function(t) {
                this.isSilent = !1,
                this.size = t.size,
                this.target = t.target,
                this.loader = new PIXI.loaders.Loader,
                this.his = t.getHistory,
                this.trans = t.getStatistic,
                l.Config.ready = !1,
                this.GetAutoSpin(),
                this.CreateCanvas()
            }
            ,
            c.prototype.CreateCanvas = function() {
                PIXI.utils.skipHello(),
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    transparent: !0,
                    antialias: !0,
                    view: this.target
                });
                var t = this;
                this.application.ticker.add(function() {
                    t.Update(t)
                }),
                this.InitContainer();
                for (var e = 0; e < this.assets.length; e++)
                    "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
                this.loader.onProgress.add(function() {
                    return t.Loading(t)
                }),
                this.loader.load(function() {
                    t.InitGame(),
                    t.checkGame(),
                    $("#divLoading").hide()
                })
            }
            ,
            c);
            function c(t) {
                this.mainContainer = PIXI.Container,
                this.bgLobbyPos = [-192, 10, 212],
                this.isCount = !1,
                this.totalItems = 30,
                this.total = 100,
                this.fontEmbed = "SVN-Supercell Magic",
                this.fontEmbedGold = "SVN-Supercell Magic",
                this.fontEmbedSilver = "SVN-Supercell Magic",
                this.fontSystem = "Roboto",
                this.line = null,
                this.column1 = {},
                this.column2 = {},
                this.column3 = {},
                this.column4 = {},
                this.column5 = {},
                this.autoClientArr = [10, 50, 200, 1e3, 5e3],
                this.timeTween = 1.4,
                this.timeBack = .3,
                this.timeDelay = .1,
                this.timeSlow = .3,
                this.pointBack = -223,
                this.pointNext = -195,
                this.pointCenter = -2e3,
                this.timerCount = 1,
                this.balance = 0,
                this.isSilent = !1,
                this.isAuto = !1,
                this.divBetLines = '<div class="BetSetting forest-lines-container inner"><div class=head><span id=lbl-totalbet>Tổng đặt</span>: <span id=totalBet>100</span></div><div class=divider></div><div class=slider-title><span id=lbl-bet>Mức cược</span>: <span id=betCount>100</span></div><div class=sliderSetting id=bet-slider style=margin-bottom:30px><input id=betRange type=range class=slider list=betSettingLists max=1 min=0 value=0><datalist id=betSettingLists><option>100<option>1000<option>10000</datalist></div><div class=slider-title><span id=lbl-lines>Dòng</span>: <span id=lineCount>1</span></div><div class=selectLines><div class=buttons><span class=button><span id=lbl-All>All</span></span> <span class=button><span id=lbl-Deselect>Deselect</span></span> <span class=button><span id=lbl-Even>Even</span></span> <span class=button><span id=lbl-Odd>Odd</span></span></div><div class=lines><div class=lineContainer><input id=bs-line-1 type=checkbox rel=0> <input id=bs-line-2 type=checkbox rel=1> <input id=bs-line-3 type=checkbox rel=2> <input id=bs-line-4 type=checkbox rel=3> <input id=bs-line-5 type=checkbox rel=4> <input id=bs-line-6 type=checkbox rel=5> <input id=bs-line-7 type=checkbox rel=6> <input id=bs-line-8 type=checkbox rel=7> <input id=bs-line-9 type=checkbox rel=8> <input id=bs-line-10 type=checkbox rel=9> <input id=bs-line-11 type=checkbox rel=10> <input id=bs-line-12 type=checkbox rel=11> <input id=bs-line-13 type=checkbox rel=12> <input id=bs-line-14 type=checkbox rel=13> <input id=bs-line-15 type=checkbox rel=14> <input id=bs-line-16 type=checkbox rel=15> <input id=bs-line-17 type=checkbox rel=16> <input id=bs-line-18 type=checkbox rel=17> <input id=bs-line-19 type=checkbox rel=18> <input id=bs-line-20 type=checkbox rel=19> <label class="line line-1"for=bs-line-1><span class=number>1</span><span class=symbol></span></label> <label class="line line-2"for=bs-line-2><span class=number>2</span><span class=symbol></span></label> <label class="line line-3"for=bs-line-3><span class=number>3</span><span class=symbol></span></label> <label class="line line-4"for=bs-line-4><span class=number>4</span><span class=symbol></span></label> <label class="line line-5"for=bs-line-5><span class=number>5</span><span class=symbol></span></label> <label class="line line-6"for=bs-line-6><span class=number>6</span><span class=symbol></span></label> <label class="line line-7"for=bs-line-7><span class=number>7</span><span class=symbol></span></label> <label class="line line-8"for=bs-line-8><span class=number>8</span><span class=symbol></span></label> <label class="line line-9"for=bs-line-9><span class=number>9</span><span class=symbol></span></label> <label class="line line-10"for=bs-line-10><span class=number>10</span><span class=symbol></span></label> <label class="line line-11"for=bs-line-11><span class=number>11</span><span class=symbol></span></label> <label class="line line-12"for=bs-line-12><span class=number>12</span><span class=symbol></span></label> <label class="line line-13"for=bs-line-13><span class=number>13</span><span class=symbol></span></label> <label class="line line-14"for=bs-line-14><span class=number>14</span><span class=symbol></span></label> <label class="line line-15"for=bs-line-15><span class=number>15</span><span class=symbol></span></label> <label class="line line-16"for=bs-line-16><span class=number>16</span><span class=symbol></span></label> <label class="line line-17"for=bs-line-17><span class=number>17</span><span class=symbol></span></label> <label class="line line-18"for=bs-line-18><span class=number>18</span><span class=symbol></span></label> <label class="line line-19"for=bs-line-19><span class=number>19</span><span class=symbol></span></label> <label class="line line-20"for=bs-line-20><span class=number>20</span><span class=symbol></span></label></div></div></div><div class=divider></div></div>',
                this.assets = [{
                    id: "bgForest",
                    src: "/slots/forest/assets/images/background.jpg"
                }, {
                    id: "bgBonus",
                    src: "/slots/forest/assets/images/background.bonus.jpg"
                }, {
                    id: "effects",
                    src: "/slots/forest/json/effects.json"
                }, {
                    id: "machine",
                    src: "/slots/forest/json/machine.json"
                }, {
                    id: "itemAnimations",
                    src: "/slots/forest/json/ItemAnimations.json"
                }, {
                    id: "ui",
                    src: "/slots/forest/json/ui.desktop.json"
                }, {
                    id: "bonus",
                    src: "/slots/forest/json/bonus.json"
                }, {
                    id: "bgAnimation",
                    src: "/slots/forest/json/bganimation.json"
                }, {
                    id: "particles",
                    src: "/slots/forest/json/particles.json"
                }, {
                    id: "lines",
                    src: "/slots/forest/json/lines.json"
                }, {
                    id: "quick",
                    src: "/slots/forest/json/quick.json"
                }, {
                    id: "fxJackpot",
                    src: "/slots/forest/json/fxJackpot.json"
                }, {
                    id: "leavesParticle",
                    src: "/slots/forest/particles/fallenleaves.json"
                }, {
                    id: "noiseParticle",
                    src: "/slots/forest/particles/noise.json"
                }, {
                    id: "fireflyParticle",
                    src: "/slots/forest/particles/firefly.json"
                }, {
                    id: "event",
                    src: "/slots/forest/json/event.json"
                }, {
                    id: "coinForest",
                    src: "/slots/forest/assets/images/coin.png"
                }, {
                    id: "",
                    src: "/slots/forest/fonts/fontjackpot.xml"
                }, {
                    id: "",
                    src: "/slots/forest/fonts/font2jackpot.xml"
                }, {
                    id: "hide",
                    src: "/slots/forest/json/hide.json"
                }, {
                    id: "bonus_game",
                    src: "/slots/forest/assets/sounds/bonus_game.mp3"
                }, {
                    id: "button",
                    src: "/slots/forest/assets/sounds/button.mp3"
                }, {
                    id: "click1",
                    src: "/slots/forest/assets/sounds/click1.mp3"
                }, {
                    id: "click2",
                    src: "/slots/forest/assets/sounds/click2.mp3"
                }, {
                    id: "reward",
                    src: "/slots/forest/assets/sounds/reward.mp3"
                }, {
                    id: "countup",
                    src: "/slots/forest/assets/sounds/countup.mp3"
                }, {
                    id: "countup_end",
                    src: "/slots/forest/assets/sounds/countup_end.mp3"
                }, {
                    id: "free_game",
                    src: "/slots/forest/assets/sounds/free_game.mp3"
                }, {
                    id: "gold",
                    src: "/slots/forest/assets/sounds/gold.mp3"
                }, {
                    id: "gold_popup",
                    src: "/slots/forest/assets/sounds/gold_popup.mp3"
                }, {
                    id: "high_win",
                    src: "/slots/forest/assets/sounds/high_win.mp3"
                }, {
                    id: "jackpot",
                    src: "/slots/forest/assets/sounds/jackpot.mp3"
                }, {
                    id: "key",
                    src: "/slots/forest/assets/sounds/key.mp3"
                }, {
                    id: "low_win",
                    src: "/slots/forest/assets/sounds/low_win.mp3"
                }, {
                    id: "medium_win",
                    src: "/slots/forest/assets/sounds/medium_win.mp3"
                }, {
                    id: "music",
                    src: "/slots/forest/assets/sounds/music.mp3"
                }, {
                    id: "music_freespins",
                    src: "/slots/forest/assets/sounds/music_freespins.mp3"
                }, {
                    id: "pick_item",
                    src: "/slots/forest/assets/sounds/pick_item.mp3"
                }, {
                    id: "reel_stop",
                    src: "/slots/forest/assets/sounds/reel_stop.mp3"
                }, {
                    id: "spin",
                    src: "/slots/forest/assets/sounds/spin.mp3"
                }, {
                    id: "spin_button",
                    src: "/slots/forest/assets/sounds/spin_button.mp3"
                }, {
                    id: "stop_button",
                    src: "/slots/forest/assets/sounds/stop_button.mp3"
                }, {
                    id: "pingSound",
                    src: "/slots/forest/assets/sounds/ping.mp3"
                }, {
                    id: "popupSound",
                    src: "/slots/forest/assets/sounds/popup.mp3"
                }],
                this.lines = {},
                this.arrBox = [],
                this.textMultipleNumber = {
                    fontFamily: this.fontEmbed,
                    fontSize: 28,
                    fontWeight: 700,
                    fill: ["#ffffff"]
                },
                this.textMultipleStrong = {
                    fontFamily: this.fontEmbed,
                    fontSize: 28,
                    fontWeight: 800,
                    fill: ["#ffc76c"]
                },
                this.textMultipleLight = {
                    fontFamily: this.fontSystem,
                    fontSize: 28,
                    fontWeight: 700,
                    fill: ["#ffc76c"],
                    stroke: "#472615"
                },
                this.payValue = [["x8000", "Bonus x5", "Bonus"], ["15 freespins", "5 freespins", "1 freespin"], ["Jackpot", 30, 5], [500, 20, 4], [200, 15, 3], [75, 10, 2], [30, 6]],
                this.spinTo = 0,
                this.delayFirst = 0,
                t.isSilent && (this.isSilent = t.isSilent),
                t.storage && (this.storage = t.storage),
                this.token = t.token,
                l.Config.hubUrl = t.hubUrl,
                l.Config.apiUrl = t.apiUrl,
                l.Config.api = t.api,
                l.Config.lang = Language.GetLanguageCode(),
                t.currencyID ? l.Config.currencyId = t.currencyID : l.Config.currencyId = "undefined" != typeof App ? App.account.currencyID : 1,
                this.isSilent ? (l.Config.ready = !0,
                this.isAuto = !0,
                this.ResetTweenTab(),
                this.silent = new u.silent(this)) : (this.size = t.size,
                this.target = t.target,
                this.loader = new PIXI.loaders.Loader,
                this.his = t.getHistory,
                this.trans = t.getStatistic,
                l.Config.ready = !1,
                this.GetAutoSpin(),
                this.Init())
            }
            e.games = h
        },
        57: function(t, e, i) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var n = i(2)
              , o = i(10)
              , s = (a.prototype.Init = function() {
                var e = this;
                this.connection = (new n.HubConnectionBuilder).withUrl(this.url, {
                    accessTokenFactory: function() {
                        return e.token
                    },
                    skipNegotiation: !0,
                    transport: n.HttpTransportType.WebSockets
                }).build(),
                this.connection.serverTimeoutInMilliseconds = 1e5,
                this.connection.start().then(function() {
                    o.Config.isLogin = !0,
                    console.log("connected"),
                    e.connection.invoke("PlayNow", {
                        RoomID: o.Config.roomId,
                        CurrencyID: o.Config.currencyId
                    })
                }).catch(function(t) {
                    return console.error(t)
                }),
                this.connection.on("JoinGame", function(t) {
                    e.game.isSilent ? e.game.silent.joinRoom(t) : e.game.JoinRoom(t)
                }),
                this.connection.on("ResultSpin", function(t) {
                    e.game.isSilent ? e.game.silent.startSpin(t) : e.game.startSpin(t)
                }),
                this.connection.on("MessageError", function(t) {
                    e.game.isSilent || e.game.showError(t)
                }),
                this.connection.on("ResultBonusGame", function(t) {
                    e.game.isSilent ? e.game.silent.finishBonus(t) : e.game.finishBonus(t)
                }),
                this.connection.on("UpdateJackpot", function(t) {
                    e.game.isSilent || e.game.UpdateJackpot(t)
                })
            }
            ,
            a);
            function a(t, e, i) {
                this.url = t,
                this.token = e,
                this.game = i,
                this.Init()
            }
            e.default = s
        },
        58: function(t, e, i) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.bonus = void 0;
            var m = i(0)
              , h = i(10)
              , b = i(19);
            i(1);
            var n = (o.prototype.init = function() {
                var t = this.game;
                if (t.boxPopup.visible = !1,
                t.destroyEffect(),
                t.disableLines(),
                t.visibleIcons(),
                t.txtMoney.visible = !1,
                b.contents.ClearTimer(),
                b.contents.DisableButtons(t),
                this.disableContainer(),
                h.Config.music)
                    try {
                        t.bgSound.stop(),
                        t.bgSoundFree.play()
                    } catch (t) {}
                this.bonusContainer = new Container,
                this.game.application.stage.addChildAt(this.bonusContainer, this.game.application.stage.children.length - 4),
                this.createButtons(),
                this.createBox(),
                this.updatePick(),
                this.txtMulti.text = "x" + this.startBonus,
                this.game.Resize(this.game),
                this.countDown(this)
            }
            ,
            o.prototype.createButtons = function() {
                var t = this.game
                  , e = new PIXI.Text(Message.GetMessage("sl85"),{
                    fontFamily: t.fontEmbed,
                    fontSize: 24,
                    fontWeight: "700",
                    fill: ["#ffff00", "#f18604"],
                    stroke: "#06372e",
                    strokeThickness: 2,
                    dropShadow: !0,
                    dropShadowColor: "#06372e",
                    dropShadowBlur: 5,
                    dropShadowAngle: Math.PI / 20,
                    dropShadowDistance: 0
                });
                e.anchor.set(.5),
                e.position.set(984, -100),
                this.bonusContainer.addChild(e),
                this.txtMoney = new PIXI.Text("0",{
                    fontFamily: t.fontEmbed,
                    fontSize: 42,
                    fill: ["#ffffff"],
                    stroke: "#0a2227",
                    strokeThickness: 4
                }),
                this.txtMoney.anchor.set(.5),
                this.txtMoney.y = -20,
                this.txtMoney.x = 625,
                this.bonusContainer.addChild(this.txtMoney),
                this.txtMulti = new PIXI.Text("0",{
                    fontFamily: t.fontEmbed,
                    fontSize: 42,
                    fill: ["#ffffff"],
                    stroke: "#0a2227",
                    strokeThickness: 4
                }),
                this.txtMulti.anchor.set(.5),
                this.txtMulti.position.set(984, -20),
                this.bonusContainer.addChild(this.txtMulti);
                var i = new PIXI.Text(Message.GetMessage("sl57"),{
                    fontFamily: t.fontEmbed,
                    fontSize: 24,
                    fontWeight: "700",
                    fill: ["#ffff00", "#f18604"],
                    stroke: "#06372e",
                    strokeThickness: 2,
                    dropShadow: !0,
                    dropShadowColor: "#06372e",
                    dropShadowBlur: 5,
                    dropShadowAngle: Math.PI / 20,
                    dropShadowDistance: 0
                });
                i.anchor.set(.5),
                i.position.set(237, -100),
                this.bonusContainer.addChild(i),
                this.txtPick = new PIXI.Text("0",{
                    fontFamily: t.fontEmbed,
                    fontSize: 42,
                    fontWeight: "700",
                    fill: ["#fff"],
                    stroke: "#0a2227",
                    strokeThickness: 4
                }),
                this.txtPick.name = "pick",
                this.txtPick.anchor.set(.5),
                this.txtPick.position.set(239, -20),
                this.bonusContainer.addChild(this.txtPick),
                this.btnQuickPlay = new Sprite(t.loader.resources.bonus.textures["btn-bonus.png"]),
                this.btnQuickPlay.anchor.set(.5),
                this.btnQuickPlay.position.set(620, 850),
                this.btnQuickPlay.interactive = !0,
                this.btnQuickPlay.buttonMode = !0;
                var n = new PIXI.Text(Message.GetMessage("sl56"),{
                    fontFamily: t.fontEmbed,
                    fontSize: 20,
                    fontWeight: "500",
                    fill: ["#974f07", "#52331e"],
                    dropShadow: !0,
                    dropShadowColor: "#000000",
                    dropShadowAlpha: .1,
                    dropShadowDistance: 2,
                    dropShadowAngle: Math.PI / 2
                });
                n.anchor.set(.5),
                this.btnQuickPlay.addChild(n),
                this.btnQuickPlay.on("pointerover", function() {
                    this.texture = t.loader.resources.bonus.textures["btn-bonus-hover.png"]
                }).on("pointerout", function() {
                    this.texture = t.loader.resources.bonus.textures["btn-bonus.png"]
                }).on("pointerdown", function() {
                    this.texture = t.loader.resources.bonus.textures["btn-bonus-click.png"]
                }).on("pointerup", this.btnQuickPlayDown.bind(this.btnQuickPlay, this)),
                this.txtTimer = new PIXI.Text(Message.GetMessage("sl78").replace("{0}", this.timer),{
                    fontFamily: t.fontEmbed,
                    fontSize: 20,
                    fontWeight: "700",
                    fill: ["#88ee00"]
                }),
                this.txtTimer.anchor.set(.5),
                this.txtTimer.position.set(623, 776),
                this.bonusContainer.addChild(this.btnQuickPlay, this.txtTimer)
            }
            ,
            o.prototype.createBox = function() {
                this.boxContainer = new Container,
                this.boxContainer.position.set(100, 70),
                this.bonusContainer.addChild(this.boxContainer);
                for (var t = 0, e = 0; e < 3; e++)
                    for (var i = 0; i < 5; i++)
                        this.boxArr[t] = new AnimatedSprite(this.boxBonusData),
                        this.boxArr[t].animationSpeed = .5,
                        this.boxArr[t].play(),
                        this.boxArr[t].scale.set(1),
                        this.boxArr[t].x = 245 * i + 40,
                        this.boxArr[t].y = 245 * e + 80,
                        this.boxArr[t].buttonMode = !0,
                        this.boxArr[t].interactive = !0,
                        this.boxArr[t].inx = 5 * e + i,
                        this.boxArr[t].anchor.set(.5),
                        this.boxContainer.addChild(this.boxArr[t]),
                        this.boxArr[t].on("pointerdown", this.boxDown.bind(this.boxArr[t], this)),
                        this.boxArr[t].on("pointerover", function() {
                            var t = new PIXI.filters.ColorMatrixFilter;
                            this.filters = [t],
                            t.brightness(1.2)
                        }),
                        this.boxArr[t].on("pointerout", function() {
                            var t = new PIXI.filters.ColorMatrixFilter;
                            this.filters = [t],
                            t.brightness(1)
                        }),
                        t++
            }
            ,
            o.prototype.disableContainer = function() {
                this.game.machineContainer.visible = !1,
                this.game.linesContainer.visible = !1,
                this.game.ui.visible = !1,
                this.game.btnMore.visible = !1,
                this.game.backGround.texture = this.game.loader.resources.bgBonus.texture
            }
            ,
            o.prototype.enableContainer = function() {
                this.game.machineContainer.visible = !0,
                this.game.linesContainer.visible = !0,
                this.game.ui.visible = !0,
                this.game.btnMore.visible = !0,
                this.game.backGround.texture = this.game.loader.resources.bgForest.texture
            }
            ,
            o.prototype.countDown = function(t) {
                var e = t;
                if (m.Util.ClearTimeOut(h.Config.timeBonus),
                e.timer--,
                e.txtTimer.text = Message.GetMessage("sl78").replace("{0}", e.timer),
                e.timer <= 0)
                    return e.txtTimer.visible = !1,
                    e.disableBox(),
                    void e.finishBonus(e);
                h.Config.timeBonus = setTimeout(function() {
                    return e.countDown(e)
                }, 1e3)
            }
            ,
            o.prototype.btnQuickPlayDown = function(t) {
                this.texture = t.game.loader.resources.bonus.textures["btn-bonus.png"],
                this.interactive = !1,
                this.buttonMode = !1,
                t.disableBox(),
                t.finishBonus(t)
            }
            ,
            o.prototype.disableBox = function() {
                for (var t = 0; t < Object.keys(this.boxArr).length; t++)
                    this.boxArr[t].interactive = !1,
                    this.boxArr[t].buttonMode = !1
            }
            ,
            o.prototype.enableBox = function() {
                if (!(this.step >= this.numberPick))
                    for (var t = 0; t < Object.keys(this.boxArr).length; t++)
                        $.inArray(t, this.boxSelected) < 0 && (this.boxArr[t].interactive = !0,
                        this.boxArr[t].buttonMode = !0)
            }
            ,
            o.prototype.boxDown = function(t) {
                var e, i, r, l, n, u = t;
                if (h.Config.sound)
                    try {
                        PIXI.sound.play("pick_item")
                    } catch (t) {}
                this.filters = [],
                m.Util.ClearTimeOut(h.Config.timeBonus),
                u.txtTimer.visible = !1,
                u.btnQuickPlay.buttonMode = !1,
                u.btnQuickPlay.interactive = !1,
                u.btnQuickPlay.visible = !1,
                u.step >= u.numberPick || u.isAward || u.isClicking || (i = (e = u.goldData[u.step].split(","))[1],
                r = e[3],
                l = u.getItem(i),
                u.isAward = "bonus" === l,
                this.interactive = !1,
                this.buttonMode = !1,
                u.btn = this,
                u.btn.visible = !1,
                u.disableBox(),
                u.boxSelected.push(u.btn.inx),
                u.step++,
                u.currentX = u.btn.x,
                u.currentY = u.btn.y,
                (n = new AnimatedSprite(u.effectItemData)).anchor.set(.5),
                n.x = u.btn.x,
                n.y = u.btn.y,
                n.animationSpeed = .8,
                n.scale.set(.7),
                n.loop = !1,
                n.play(),
                u.boxContainer.addChild(n),
                n.onComplete = function() {
                    if (this.destroy(),
                    TweenMax.to(u.btn, .5, {
                        alpha: 0
                    }),
                    "gold" === l) {
                        u.btn.interactive = !1,
                        u.btn.buttonMode = !1,
                        u.isClicking = !0;
                        var t = u.totalMoney;
                        u.totalMoney += parseInt(r),
                        b.contents.CountNumber(u.txtMoney, !0, !1, t, u.totalMoney, 0, 1, function() {});
                        var e = new Sprite(u.game.loader.resources.bonus.textures["gold.png"]);
                        e.x = u.btn.x,
                        e.y = u.btn.y,
                        e.alpha = 0,
                        e.anchor.set(.5),
                        u.boxContainer.addChild(e),
                        TweenMax.to(e, .3, {
                            alpha: 1
                        }),
                        TweenMax.to(e.scale, .3, {
                            x: 1,
                            y: 1,
                            ease: Power1.easeOut
                        });
                        var i = new PIXI.Text("0",{
                            fontFamily: u.game.fontEmbed,
                            fontSize: 24,
                            fill: ["#ffffff"],
                            stroke: "#0a2227",
                            strokeThickness: 4
                        });
                        i.anchor.set(.5),
                        i.money = 0,
                        i.y = 30,
                        e.addChild(i),
                        b.contents.CountNumber(i, !0, !1, 0, r, 0, .5, function() {
                            u.isClicking = !1,
                            u.enableBox(),
                            u.updatePick(),
                            u.step >= u.numberPick && !u.isAward && setTimeout(function() {
                                return u.finishBonus(u)
                            }, 2e3)
                        })
                    } else if ("lucky" === l) {
                        (o = new Sprite(u.game.loader.resources.bonus.textures["light3.png"])).anchor.set(.5),
                        o.x = u.btn.x,
                        o.y = u.btn.y,
                        o.tint = 16773632,
                        o.blendMode = PIXI.BLEND_MODES.ADD,
                        u.boxContainer.addChild(o),
                        u.lightBonus.push(o),
                        (s = new Sprite(u.game.loader.resources.bonus.textures["light2.png"])).anchor.set(.5),
                        s.x = u.btn.x,
                        s.y = u.btn.y,
                        s.tint = 16777215,
                        s.scale.set(2),
                        s.blendMode = PIXI.BLEND_MODES.ADD,
                        u.boxContainer.addChild(s),
                        u.lightBonus2.push(s);
                        var n = new Sprite(u.game.loader.resources.bonus.textures["flower.png"]);
                        if (n.anchor.set(.5),
                        n.x = u.btn.x,
                        n.y = u.btn.y,
                        n.alpha = 0,
                        n.scale.set(.5),
                        u.boxContainer.addChild(n),
                        h.Config.sound)
                            try {
                                PIXI.sound.play("key")
                            } catch (t) {}
                        TweenMax.to(n, .3, {
                            alpha: 1
                        }),
                        TweenMax.to(n.scale, .6, {
                            x: 1,
                            y: 1,
                            ease: Back.easeOut,
                            onComplete: function() {
                                u.startPick++,
                                u.updateMulti(),
                                u.enableBox()
                            }
                        })
                    } else {
                        var o, s;
                        (o = new Sprite(u.game.loader.resources.bonus.textures["light3.png"])).anchor.set(.5),
                        o.x = u.btn.x,
                        o.y = u.btn.y,
                        o.tint = 16773632,
                        o.blendMode = PIXI.BLEND_MODES.ADD,
                        u.boxContainer.addChild(o),
                        u.lightBonus.push(o),
                        (s = new Sprite(u.game.loader.resources.bonus.textures["light2.png"])).anchor.set(.5),
                        s.x = u.btn.x,
                        s.y = u.btn.y,
                        s.tint = 16777215,
                        s.scale.set(2),
                        s.blendMode = PIXI.BLEND_MODES.ADD,
                        u.boxContainer.addChild(s),
                        u.lightBonus2.push(s);
                        var a = new Sprite(u.game.loader.resources.bonus.textures["butter.png"]);
                        if (a.anchor.set(.5),
                        a.x = u.btn.x,
                        a.y = u.btn.y,
                        a.alpha = 0,
                        a.scale.set(.5),
                        u.boxContainer.addChild(a),
                        h.Config.sound)
                            try {
                                PIXI.sound.play("gold")
                            } catch (t) {}
                        u.updatePick(),
                        TweenMax.to(a, .2, {
                            alpha: 1
                        }),
                        TweenMax.to(a.scale, .6, {
                            x: 1,
                            y: 1,
                            ease: Back.easeOut,
                            onComplete: function() {
                                setTimeout(function() {
                                    return u.createMulti(u)
                                }, 1e3)
                            }
                        })
                    }
                }
                )
            }
            ,
            o.prototype.updateMulti = function() {
                this.startBonus++,
                this.txtMulti.text = this.startBonus
            }
            ,
            o.prototype.updatePick = function() {
                var t = this.startPick - this.step;
                0 <= t ? this.txtPick.text = t : (this.txtPick.text = "0",
                this.disableBox())
            }
            ,
            o.prototype.getItem = function(t) {
                var e = "";
                switch (parseInt(t)) {
                case 200:
                case 201:
                case 202:
                case 203:
                    e = "bonus";
                    break;
                case 210:
                    e = "lucky";
                    break;
                case 220:
                    e = "gold"
                }
                return e
            }
            ,
            o.prototype.createMulti = function(e) {
                var i = e.game;
                e.bonusMulti = new Container;
                var t = new PIXI.Graphics;
                t.beginFill(401192),
                t.drawRoundedRect(0, 0, 980, 500, 40),
                t.endFill(),
                t.alpha = .95,
                t.x = 130,
                t.y = 150,
                e.bonusMulti.addChild(t),
                e.bonusArr = [];
                for (var n = [[280, 280], [620, 280], [930, 280], [460, 520], [770, 520]], o = this, s = 0; s < 5; s++)
                    !function(t) {
                        e.bonusArr.push(new Sprite(i.loader.resources.bonus.textures["butter.png"])),
                        e.bonusArr[t].inx = t,
                        e.bonusArr[t].anchor.set(.5),
                        e.bonusArr[t].position.set(n[t][0], n[t][1]),
                        e.bonusArr[t].interactive = !0,
                        e.bonusArr[t].buttonMode = !0,
                        e.bonusArr[t].on("pointerover", function() {
                            e.bonusArr[t].texture = i.loader.resources.bonus.textures["butter2.png"]
                        }).on("pointerout", function() {
                            e.bonusArr[t].texture = i.loader.resources.bonus.textures["butter.png"]
                        }).on("pointerdown", e.bonusDown.bind(e.bonusArr[t], o)),
                        e.bonusMulti.addChild(e.bonusArr[t])
                    }(s);
                e.bonusContainer.addChild(e.bonusMulti)
            }
            ,
            o.prototype.bonusDown = function(i) {
                for (var n = i.game, t = [10, 10, 15, 15, 20], e = i.goldData[i.step - 1].split(","), o = e[3], s = 0; s < 5; s++)
                    i.bonusArr[s].interactive = !1,
                    i.bonusArr[s].buttonMode = !1;
                var a = n.currentPlayer.BetValue
                  , r = e[3]
                  , l = r / (this.startBonus * a)
                  , u = t.indexOf(l);
                t.splice(u, 1);
                var h = this.x;
                this.visible = !1;
                var c = new Sprite(i.game.loader.resources.bonus.textures["gold.png"]);
                c.x = this.x,
                c.y = this.y,
                c.alpha = 0,
                c.anchor.set(.5),
                c.scale.set(.8),
                TweenMax.to(c, .3, {
                    alpha: 1
                }),
                TweenMax.to(c.scale, .3, {
                    x: 1,
                    y: 1,
                    ease: Power1.easeOut
                });
                var p = new PIXI.Text("0",{
                    fontFamily: n.fontEmbed,
                    fontSize: 24,
                    fill: ["#ffffff"],
                    stroke: "#0a2227",
                    strokeThickness: 4
                });
                p.anchor.set(.5),
                p.money = 0,
                p.y = 30,
                c.addChild(p),
                b.contents.CountNumber(p, !0, !1, 0, r, 0, .5, function() {}),
                i.bonusMulti.addChild(c);
                var d, f, g = 0;
                for (s = 0; s < 5; s++)
                    h !== i.awardPosition[s][0] && (i.bonusArr[s].visible = !1,
                    (d = new Sprite(i.game.loader.resources.bonus.textures["gold.png"])).position.set(i.bonusArr[s].x, i.bonusArr[s].y + 20),
                    d.anchor.set(.5),
                    d.scale.set(.8),
                    d.alpha = .8,
                    (f = new PIXI.Text(m.Util.ParseMoney(t[g] * a * i.startBonus),{
                        fontFamily: n.fontEmbed,
                        fontSize: 24,
                        fill: ["#ffffff"],
                        stroke: "#0a2227",
                        strokeThickness: 4
                    })).anchor.set(.5),
                    f.money = 0,
                    f.y = 30,
                    d.addChild(f),
                    i.bonusMulti.addChild(d),
                    g++);
                i.isAward = !1,
                setTimeout(function() {
                    i.bonusMulti.destroy({
                        children: !0
                    }),
                    setTimeout(function() {
                        i.step >= i.numberPick ? setTimeout(function() {
                            return i.finishBonus(i)
                        }, 1200) : i.enableBox()
                    }, 300);
                    var t = i.totalMoney;
                    i.totalMoney += parseInt(o),
                    b.contents.CountNumber(i.txtMoney, !0, !1, t, i.totalMoney, 0, 1, function() {});
                    var e = new PIXI.Text(m.Util.ParseMoney(o),{
                        fontFamily: n.fontEmbed,
                        fontSize: 24,
                        fill: ["#ffffff"],
                        stroke: "#0a2227",
                        strokeThickness: 4
                    });
                    e.anchor.set(.5),
                    e.alpha = 0,
                    e.position.set(i.btn.x, i.btn.y + 30),
                    i.boxContainer.addChild(e),
                    TweenMax.to(e, 0, {
                        alpha: 1,
                        delay: .7,
                        ease: Power0.easeNone,
                        onComplete: function() {}
                    })
                }, 2e3)
            }
            ,
            o.prototype.finishBonus = function(t) {
                var e = t
                  , i = t.game;
                m.Util.ClearTimeOut(h.Config.timeBonus),
                e.txtTimer.visible = !1,
                h.Config.isTry || i.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: h.Config.roomId,
                    CurrencyID: h.Config.currencyId
                }).then(function() {}).catch(function() {});
                for (var n = 0, o = 0; o < e.goldData.length; o++)
                    n += parseInt(e.goldData[o].split(",")[3]);
                try {
                    e.bonusMulti.destroy({
                        children: !0
                    })
                } catch (t) {}
                try {
                    e.bonusContainer.destroy({
                        children: !0
                    })
                } catch (t) {}
                if (h.Config.sound)
                    try {
                        i.bgSoundFree.pause()
                    } catch (t) {}
                if (h.Config.sound)
                    try {
                        PIXI.sound.play("popupSound")
                    } catch (t) {}
                i.backGround.texture = i.loader.resources.bgForest.texture,
                i.boxPopupWin.getChildAt(2).text = Message.GetMessage("sl83"),
                i.boxPopupWin.visible = !0,
                b.contents.CountNumber(i.boxPopupWin.getChildAt(1), !0, !1, 0, n, 0, 1, function() {}),
                e.enableContainer(),
                h.Config.isFreeSpin && (h.Config.totalFreePrize += n),
                i.txtJustWon.text = m.Util.ParseMoney(n, void 0),
                h.Config.isTry ? (i.trial.balance += n,
                i.balanceTrial.text = Message.GetMessage("sl37") + ": " + m.Util.ParseMoney(i.trial.balance, void 0)) : (i.balance += n,
                b.contents.UpdateBalance(i, i.balance)),
                setTimeout(function() {
                    if (i.boxPopupWin.visible = !1,
                    h.Config.isBonus = !1,
                    delete i.bonus,
                    h.Config.sound)
                        try {
                            PIXI.sound.stop("popupSound")
                        } catch (t) {}
                    if (h.Config.music)
                        try {
                            i.bgSound.play()
                        } catch (t) {}
                    h.Config.isWinFree ? i.setupFreeSpin() : h.Config.isFreeSpin ? 0 === h.Config.freeSpinCount ? i.finishFreeSpin(i) : setTimeout(function() {
                        return i.initSpin(i)
                    }, 500) : i.checkAutoSpin() || (b.contents.EnableButtons(i),
                    0 < i.currentPlayer.SpinData.TotalPrizeValue && i.showEachLine())
                }, 3e3)
            }
            ,
            o);
            function o(t) {
                this.startBonus = 0,
                this.goldData = [],
                this.step = 0,
                this.startPick = 10,
                this.numberPick = 0,
                this.boxArr = {},
                this.boxSelected = [],
                this.isAward = !1,
                this.currentX = 0,
                this.currentY = 0,
                this.textArray = {},
                this.textIndex = 0,
                this.txtMulti = null,
                this.txtPick = null,
                this.txtSession = null,
                this.bonusContainer = null,
                this.rewardContainer = null,
                this.filter = null,
                this.position = null,
                this.btn = null,
                this.timer = 0,
                this.txtTimer = null,
                this.isClicking = !1,
                this.boxBonusData = [],
                this.keyData = [],
                this.totalMoney = 0,
                this.txtMoney = null,
                this.lightBonus = [],
                this.lightBonus2 = [],
                this.effectItemData = [],
                this.bonusArr = [],
                this.awardPosition = [[280, 280], [620, 280], [930, 280], [460, 520], [770, 520]],
                this.boxContainer = null,
                this.game = t,
                this.startPick = 10,
                this.timer = 15,
                this.totalMoney = 0,
                this.lightBonus = [],
                this.lightBonus2 = [],
                this.boxBonusData = [],
                this.effectItemData = [],
                this.step = 0,
                this.boxSelected = [],
                this.startBonus = t.currentPlayer.SpinData.StartBonus,
                this.goldData = t.currentPlayer.SpinData.BonusGameData.split(";"),
                this.numberPick = this.goldData.length;
                for (var e = 0; e < 30; e++)
                    this.boxBonusData.push(t.loader.resources.bonus.textures["worm_000" + (e < 10 ? "0" + e : e) + ".png"]),
                    this.effectItemData.push(t.loader.resources.bonus.textures["explosion_000" + (e < 10 ? "0" + e : e) + ".png"])
            }
            e.bonus = n
        },
        59: function(t, e, i) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.silent = void 0;
            var o = i(0)
              , s = i(10)
              , n = i(18)
              , a = (r.prototype.getAutoSpin = function() {
                var t = sessionStorage.getItem("Auto-" + this.game.storage);
                if (t) {
                    var e = t.split(";");
                    if (this.autoSpin = parseInt(e[1]),
                    -1 === this.autoSpin || 0 < this.autoSpin)
                        return s.Config.roomId = parseInt(e[0]),
                        e[3] && (this.game.line = e[3]),
                        !0
                }
                return !1
            }
            ,
            r.prototype.setAutoSpin = function() {
                0 < this.autoSpin ? (this.autoSpin--,
                this.setSession(),
                0 === this.autoSpin && (this.game.isAuto = !1,
                this.removeSession())) : 0 === this.autoSpin && (this.game.isAuto = !1,
                this.removeSession(),
                $("#rolling-" + this.game.storage).removeClass("active")),
                $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId + "-playing").length && $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId + "-playing").html(0 < this.autoSpin ? o.Util.ParseMoney(this.autoSpin) : ""),
                $("#list-jp-icon-" + s.Config.gameId + "-playing").length && $("#list-jp-icon-" + s.Config.gameId + "-playing").html(0 < this.autoSpin ? o.Util.ParseMoney(this.autoSpin) : "")
            }
            ,
            r.prototype.setSession = function() {
                sessionStorage.setItem("Auto-" + this.game.storage, s.Config.roomId + ";" + this.autoSpin + ";" + this.game.isAuto + ";" + n.lines.CurrentLine)
            }
            ,
            r.prototype.removeSession = function() {
                sessionStorage.removeItem("Auto-" + this.game.storage)
            }
            ,
            r.prototype.joinRoom = function(t) {
                this.game.accountId = t.AccountID,
                this.game.currentPlayer = t,
                this.game.balance = t.Account.GoldBalance,
                s.Config.roomId = t.RoomID,
                s.Config.betValue = t.BetValue,
                s.Config.inRoom = !0,
                s.Config.moneyType = t.moneyType,
                n.lines.CurrentLine = this.game.line ? this.game.line : t.SlotInfo.LastLineData,
                this.game.line = null,
                s.Config.totalLines = n.lines.CurrentLine.length,
                $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#rolling-" + this.game.storage).addClass("active"),
                $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().addClass("playing"),
                this.checkGame()
            }
            ,
            r.prototype.checkGame = function() {
                var t = this
                  , e = this.game.currentPlayer.SlotInfo.FreeSpins;
                0 < e && (s.Config.isFreeSpin = !0,
                s.Config.freeSpinCount = e),
                setTimeout(function() {
                    return t.initSpin(t)
                }, 1500)
            }
            ,
            r.prototype.initSpin = function(t) {
                var e = t;
                s.Config.isSpin || e.game.isAuto && e.game.isSilent && (s.Config.isSpin = !0,
                $("#mn-lobby-rolling-forest .rolling-win").remove(),
                s.Config.isBonus = s.Config.isWinFree = !1,
                e.game.hubs.connection.invoke("Spin", {
                    MerchantID: 0,
                    RoomID: s.Config.roomId,
                    CurrencyID: s.Config.currencyId,
                    Lines: n.lines.CurrentLine
                }).then(function(t) {
                    t.c < 0 && (s.Config.isSpin = !1,
                    setTimeout(function() {
                        return e.initSpin(e)
                    }, 4e3))
                }).catch(function() {
                    s.Config.isSpin = !1,
                    setTimeout(function() {
                        return e.initSpin(e)
                    }, 4e3)
                }))
            }
            ,
            r.prototype.startSpin = function(t) {
                this.game.currentPlayer = t,
                s.Config.slotData = [],
                s.Config.slotData = t.SpinData.SlotsData.split(","),
                o.Util.ClearTimeOut(s.Config.timeSpin),
                t.SpinData.IsJackpot && (this.autoSpin = 0),
                t.SpinData.IsFreeSpin && (s.Config.isWinFree = !0),
                null !== t.SpinData.BonusGameData && 0 < t.SpinData.BonusGameData.length && (s.Config.isBonus = !0),
                s.Config.isFreeSpin || this.setAutoSpin(),
                this.showWin()
            }
            ,
            r.prototype.showMoney = function(t, e) {
                var i, n = this;
                try {
                    $("#mn-lobby-rolling-forest").length && ($("#mn-lobby-rolling-forest").append('<span class="rolling-win">+' + o.Util.ParseMoney(t) + "</span>"),
                    TweenMax.to($("#mn-lobby-rolling-forest .rolling-win"), 2, {
                        css: {
                            opacity: "0",
                            top: "0px"
                        }
                    })),
                    $("#rolling-" + this.game.storage).hasClass("active") || $("#rolling-" + this.game.storage).addClass("active"),
                    $("#popupJackpot").hasClass("show") && ($("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-play").addClass("button-playing"),
                    $("#list-jp-icon-" + s.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                    $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().hasClass("playing") || $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().addClass("playing"),
                    (i = $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId)).length && (i.parent().append('<span class="win active">+' + o.Util.ParseMoney(t) + "</span>"),
                    TweenMax.to(i.parent().find("span.win"), 1, {
                        css: {
                            opacity: "0",
                            top: "0px"
                        }
                    }))),
                    setTimeout(function() {
                        e(n)
                    }, 2100)
                } catch (t) {
                    e(n)
                }
            }
            ,
            r.prototype.updateBalance = function(t) {
                0 < $(".tien1 .spanMoney").length && $(".tien1 .spanMoney").text(o.Util.ParseMoney(t)),
                0 < $("#divHeader .money-1 .text").length && $("#divHeader .money-1 .text").text(o.Util.ParseMoney(t))
            }
            ,
            r.prototype.increaseBalance = function(t) {
                var e;
                0 != t && (0 < $("#divHeader .money-1 .text").length ? (e = o.Util.unParseMoney($("#divHeader .money-1 .text").text()),
                e += t,
                $("#divHeader .money-1 .text").text(o.Util.ParseMoney(e))) : 0 < $(".tien1 .spanMoney").length && (e = o.Util.unParseMoney($(".tien1 .spanMoney").text()),
                e += t,
                $(".tien1 .spanMoney").text(o.Util.ParseMoney(e))))
            }
            ,
            r.prototype.updateFreeSpin = function() {
                s.Config.freeSpinCount--
            }
            ,
            r.prototype.showWin = function() {
                this.updateBalance(this.game.currentPlayer.Account.GoldBalance),
                0 < this.game.currentPlayer.SpinData.PayLinePrizeValue ? this.showMoney(this.game.currentPlayer.SpinData.PayLinePrizeValue, this.bonusOrFree) : this.bonusOrFree(this)
            }
            ,
            r.prototype.bonusOrFree = function(t) {
                var e;
                s.Config.isBonus ? t.callBonus() : (s.Config.isFreeSpin && t.updateFreeSpin(),
                s.Config.isWinFree = !0,
                e = t.game.currentPlayer.SlotInfo.FreeSpins,
                s.Config.isFreeSpin || (s.Config.freeSpinCount = 0),
                s.Config.isFreeSpin = !0,
                s.Config.freeSpinCount += e,
                s.Config.isWinFree = !1,
                s.Config.isFreeSpin && 0 === s.Config.freeSpinCount && (s.Config.isFreeSpin = !1),
                t.checkAutoSpin(t))
            }
            ,
            r.prototype.callBonus = function() {
                var e = this;
                this.game.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: s.Config.roomId,
                    CurrencyID: s.Config.currencyId
                }).then(function(t) {
                    0 <= t.c && e.finishBonus()
                }).catch(function() {
                    e.callBonus()
                })
            }
            ,
            r.prototype.finishBonus = function() {
                s.Config.isBonus = !1;
                for (var t = 0, e = this.game.currentPlayer.SpinData.BonusGameData.split(";"), i = 0; i < e.length; i++)
                    t += parseInt(e[i].split(",")[3]);
                this.increaseBalance(t),
                this.showMoney(t, this.bonusOrFree)
            }
            ,
            r.prototype.checkAutoSpin = function(t) {
                s.Config.isSpin = !1,
                -1 === t.autoSpin || 0 < t.autoSpin ? setTimeout(function() {
                    return t.initSpin(t)
                }, 4500) : (this.game.isAuto = !1,
                this.removeSession(),
                $("#rolling-" + t.game.storage).removeClass("active"),
                $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-playing").addClass("button-play"),
                $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().removeClass("playing"))
            }
            ,
            r);
            function r(t) {
                this.autoSpin = -1,
                this.game = t,
                this.getAutoSpin() && this.game.InitHubs()
            }
            e.silent = a
        }
    },
    a.c = l,
    a.d = function(t, e, i) {
        a.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: i
        })
    }
    ,
    a.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    a.t = function(e, t) {
        if (1 & t && (e = a(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var i = Object.create(null);
        if (a.r(i),
        Object.defineProperty(i, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var n in e)
                a.d(i, n, function(t) {
                    return e[t]
                }
                .bind(null, n));
        return i
    }
    ,
    a.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return a.d(e, "a", e),
        e
    }
    ,
    a.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    a.p = "/",
    a(a.s = 55);
    function a(t) {
        if (l[t])
            return l[t].exports;
        var e = l[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return r[t].call(e.exports, e, e.exports, a),
        e.l = !0,
        e.exports
    }
    var r, l
});

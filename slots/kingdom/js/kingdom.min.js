!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : "function" == typeof define && define.amd ? define("kingdom", ["libs", "pixi-sound", "signalR", "WebFont"], e) : "object" == typeof exports ? exports.kingdom = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : t.kingdom = e(t.libs, t["pixi-sound"], t.signalR, t.WebFont)
}(window, function(n, o, i, s) {
    return l = {},
    a.m = r = [function(t, e) {
        t.exports = n
    }
    , function(t, e) {
        t.exports = o
    }
    , function(t, e) {
        t.exports = i
    }
    , function(t, e) {
        t.exports = s
    }
    , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.Config = void 0;
        e.Config = {
            hubUrl: "",
            apiUrl: "",
            api: "",
            lang: null,
            roomId: 1,
            countJpLobby: [null, null, null],
            countJp: null,
            countMoneyJw: null,
            countMoney: null,
            isMobile: !1,
            isOrientation: !1,
            isLobby: !0,
            arrRoom: [100, 1e3, 1e4],
            messages: null,
            ready: !1,
            music: !0,
            sound: !0,
            timeJackpot: null,
            timeSpin: null,
            timePop: null,
            timeBonusOrFree: null,
            timeOutEachLine: null,
            timeIntEachLine: null,
            timeShowWin: null,
            timeBonus: null,
            timerEvent: null,
            currencyId: 1,
            isTry: !1,
            freeSpinCount: 0,
            isFreeSpin: !1,
            totalFreePrize: 0,
            isTicket: !1,
            isAutoSpin: !1,
            isSpin: !1,
            isBonus: !1,
            isWinFree: !1,
            isX2: !1,
            isLogin: !1,
            inRoom: !1,
            gameId: 201,
            autoSpinCount: -1,
            numbShowEachLine: 0,
            numberDown: 0,
            isQuick: !1,
            isBigWin: !1,
            isJackpot: !1,
            isSuperWin: !1,
            isMegaWin: !1,
            payLines: [],
            lineItemsArr: [],
            totalLines: 0,
            betValue: 0,
            moneyType: 0,
            totalFreeSpin: 0,
            slotData: [],
            linesWin: [],
            itemsWinAr: [],
            itemsWin: [],
            totalBetConfig: {
                BigWin: 100,
                SuperWin: 500,
                MegaWin: 1e3
            },
            autoSpinMode: 0
        }
    }
    , , , , , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.lines = void 0;
        var o = n(6)
          , s = n(15)
          , i = {
            CurrentLine: "",
            CurrentLineArray: [],
            TotalLines: 0,
            DisableAllLineSelect: function(t) {
                for (var e = 0; e < t.linesButton.length; e++)
                    t.linesButton[e].texture = TextureCache["Line_" + t.linesButton[e].line + "_normal.png"],
                    t.linesButton[e].active = !1
            },
            DisableAllLine: function(t) {
                for (var e = 0; e < 3; e++)
                    for (var n = 0; n < 20; n++)
                        t.linesImage[e][n].visible = !1
            },
            SetLines: function(t, e) {
                if (0 === t.length)
                    this.CurrentLine = "1",
                    this.CurrentLineArray = [1];
                else {
                    for (var n = [], o = t.split(","), i = 0; i < o.length; i++)
                        n.push(parseInt(o[i]));
                    this.CurrentLineArray = n,
                    this.CurrentLine = t
                }
                e.txtLines.text = this.CurrentLineArray.length,
                this.TotalLines = this.CurrentLineArray.length,
                this.ShowLines(e),
                s.contents.UpdateTotalBet(e, e.currentPlayer.BetValue * this.TotalLines)
            },
            ShowLines: function(t) {
                this.DisableAllLineSelect(t),
                t.disableLines();
                for (var e = 0; e < this.CurrentLineArray.length; e++)
                    t.linesButton[this.CurrentLineArray[e] - 1].texture = TextureCache["Line_" + t.linesButton[this.CurrentLineArray[e] - 1].line + "_active.png"],
                    t.linesButton[this.CurrentLineArray[e] - 1].active = !0,
                    t.linesButton[this.CurrentLineArray[e] - 1].visible = !0,
                    t.linesImage[o.Config.roomId - 1][this.CurrentLineArray[e] - 1].visible = !0
            },
            ArrayPop: function(t) {
                this.CurrentLineArray.splice(this.CurrentLineArray.indexOf(t), 1)
            },
            ArrayPush: function(t) {
                this.CurrentLineArray.push(t)
            },
            ChooseEachLine: function(t) {
                this.CurrentLineArray.sort(function(t, e) {
                    return t - e
                }),
                this.CurrentLine = "";
                for (var e = 0; e < this.CurrentLineArray.length; e++)
                    this.CurrentLine += this.CurrentLineArray[e] + ",";
                0 < this.CurrentLine.length && (this.CurrentLine = this.CurrentLine.substring(0, this.CurrentLine.length - 1)),
                t.txtLines.text = this.CurrentLineArray.length,
                this.TotalLines = this.CurrentLineArray.length,
                this.ShowLines(t)
            },
            ShowLinesWin: function(t, e) {
                if (0 < t.length)
                    for (var n = 0; n < t.length; n++)
                        e.linesImage[t[n] - 1].visible = !0
            }
        };
        e.lines = i
    }
    , function(t, i, e) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        }),
        i.contents = void 0;
        var u = e(6)
          , c = e(0)
          , n = e(14);
        i.contents = {
            timer: 0,
            page: 0,
            pageSize: 10,
            UpdateBalance: function(t, e) {
                0 <= e && (t.txtBalance.text = c.Util.ParseMoney(e, void 0))
            },
            GetEvent: function(e) {
                c.Util.ClearTimeOut(e.timerEvent),
                $.ajax({
                    type: "GET",
                    url: u.Config.api + "api/game/GetSlotEvent?CurrencyID=" + u.Config.currencyId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        t && t.d && e && e.updateEvent(t.d)
                    },
                    error: function() {}
                })
            },
            GetJackpot: function(o) {
                c.Util.ClearTimeOut(u.Config.timeJackpot),
                $.ajax({
                    type: "GET",
                    url: u.Config.api + "api/game/JackpotGetAll?CurrencyID=" + u.Config.currencyId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        if (t && t.d && o)
                            for (var e = t.d, n = 0; n < e.length; n++)
                                u.Config.isLobby && i.contents.CountJackPotLobby(n, o.arrJackpot[n], !0, !1, e[n].jackpotFund, 8),
                                u.Config.roomId === e[n].roomID && i.contents.CountJackPot(o.txtJackpot, !0, !1, e[n].jackpotFund, 1 === u.Config.roomId ? 3 : 5);
                        u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                            i.contents.GetJackpot(o)
                        }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                    },
                    error: function() {
                        u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                            i.contents.GetJackpot(o)
                        }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                    }
                })
            },
            GetTicket: function(e) {
                $.ajax({
                    type: "GET",
                    url: u.Config.apiUrl + "GetAccountTicket/?currencyID=" + u.Config.currencyId + "&GameID=" + u.Config.gameId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    headers: {
                        Authorization: "Bearer " + e.token
                    },
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        0 < t.d.length ? i.contents.UpdateTicket(e, t.d) : (u.Config.isTicket = !1,
                        e.boxFreeTicket.visible = !1)
                    }
                })
            },
            CountJackPotLobby: function(t, e, n, o, i, s) {
                null === u.Config.countJpLobby[t] ? (u.Config.countJpLobby[t] = new c.Util.CountUp(e,n,o,0,i,0,s,void 0),
                u.Config.countJpLobby[t].start()) : u.Config.countJpLobby[t].update(i)
            },
            CountJackPot: function(t, e, n, o, i) {
                null === u.Config.countJp ? (u.Config.countJp = new c.Util.CountUp(t,e,n,0,o,0,i,void 0),
                u.Config.countJp.start()) : u.Config.countJp.update(o)
            },
            ChangeResources: function(t) {
                if (u.Config.ready) {
                    var e = t;
                    e.lblLines.text = Message.GetMessage("sl7"),
                    e.lblBetValue.text = Message.GetMessage("sl6"),
                    e.lblTotalBet.text = Message.GetMessage("sl4"),
                    e.lblJustWon.text = Message.GetMessage("sl4"),
                    e.txtCongrats.text = Message.GetMessage("sl21"),
                    e.txtNotify.text = Message.GetMessage("sl27"),
                    e.btnAuto.getChildAt(0).text = Message.GetMessage("sl2"),
                    e.txtMode.text = u.Config.isTry ? Message.GetMessage("sl8") : Message.GetMessage("sl9"),
                    e.payTable.getChildAt(0).text = Message.GetMessage("sl18"),
                    e.boxPopupWin.getChildAt(2).text = Message.GetMessage("sl52"),
                    e.btnSpin.getChildAt(0).texture = null != TextureCache["text-spin-" + u.Config.lang + ".png"] ? TextureCache["text-spin-" + u.Config.lang + ".png"] : TextureCache["text-spin-en.png"],
                    e.btnStopAuto.getChildAt(0).texture = null != TextureCache["text-stop-" + u.Config.lang + ".png"] ? TextureCache["text-stop-" + u.Config.lang + ".png"] : TextureCache["text-stop-en.png"],
                    e.txtLinesChoose.text = Message.GetMessage("sl10");
                    for (var n = 0; n < e.buttonLines.length; n++)
                        e.buttonLines[n].getChildAt(0).text = Message.GetMessage("sl" + (11 + n))
                }
            },
            CountNumber: function(t, e, n, o, i, s, a, r) {
                var l = new c.Util.CountUp(t,e,n,o,i,0,a,void 0);
                r ? l.start(r) : l.start()
            },
            CountMoney: function(t, e, n, o, i, s, a, r, l) {
                l ? u.Config.countMoneyJw = new c.Util.CountUp(t,e,n,o,i,0,a,void 0) : u.Config.countMoney = new c.Util.CountUp(t,e,n,o,i,0,a,void 0),
                r ? l ? u.Config.countMoneyJw.start(r) : u.Config.countMoney.start(r) : l ? u.Config.countMoneyJw.start() : u.Config.countMoney.start()
            },
            UpdateFreeSpin: function(t) {
                var e = t;
                u.Config.freeSpinCount--,
                0 < u.Config.freeSpinCount ? (e.txtFreeTurn.text = Message.GetMessage("sl20") + ": " + u.Config.freeSpinCount,
                e.boxFree.visible = !0) : e.boxFree.visible = !1
            },
            UpdateTotalPrizeFreeSpin: function(t) {
                var e = t;
                u.Config.isFreeSpin ? (u.Config.totalFreePrize += t.currentPlayer.SpinData.PayLinePrizeValue,
                e.txtJustWon.text = c.Util.ParseMoney(u.Config.totalFreePrize, void 0)) : u.Config.totalFreePrize = 0
            },
            UpdateLastWon: function(t, e) {
                t.txtJustWon.text = c.Util.ParseMoney(e, void 0)
            },
            UpdatePrizeValue: function(t, e) {
                t.txtBetValue.text = c.Util.ParseMoney(e, void 0)
            },
            UpdateTotalBet: function(t, e) {
                t.txtTotalBet.text = c.Util.ParseMoney(e, void 0)
            },
            UpdateLines: function(t, e) {
                n.lines.SetLines(e, t)
            },
            UpdateTicket: function(t, e) {
                var n = t;
                e[u.Config.roomId - 1] && 0 < e[u.Config.roomId - 1].balance ? (n.txtFreeTicket.text = "+" + e[u.Config.roomId - 1].balance + " Free",
                n.boxFreeTicket.visible = !0,
                u.Config.isTicket || i.contents.UpdateLines(n, "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20"),
                u.Config.isTicket = !0) : (u.Config.isTicket = !1,
                n.boxFreeTicket.visible = !1)
            },
            UpdateControl: function(t) {
                i.contents.UpdateLastWon(t, null != t.currentPlayer.SlotInfo ? t.currentPlayer.SlotInfo.LastPrizeValue : 0),
                i.contents.UpdateLines(t, t.line ? t.line : t.currentPlayer.SlotInfo.LastLineData),
                i.contents.UpdatePrizeValue(t, t.currentPlayer.BetValue),
                i.contents.UpdateTotalBet(t, t.currentPlayer.BetValue * n.lines.TotalLines),
                t.line = null
            },
            DisableButton: function(t, e, n) {
                t.buttonMode = !1,
                t.interactive = !1,
                e ? t.texture = TextureCache[e] : t.tint = n
            },
            EnableButton: function(t, e) {
                t.buttonMode = !0,
                t.interactive = !0,
                e ? t.texture = TextureCache[e] : t.tint = 16777215
            },
            DisableButtons: function(t) {
                var e = t;
                i.contents.DisableButton(e.btnSpin, "button-spin-disable.png"),
                i.contents.DisableButton(e.btnMinusBet, "button-control-disable.png"),
                i.contents.DisableButton(e.btnPlusBet, "button-control-disable.png"),
                i.contents.DisableButton(e.btnLine, "button-line-disable.png"),
                i.contents.DisableButton(e.btnPlayMode, null, 10066329),
                !window.App.isAuto || !u.Config.isAutoSpin && window.App.isAuto ? i.contents.DisableButton(e.btnBack, null, 10066329) : i.contents.EnableButton(e.btnBack),
                i.contents.DisableButton(e.btnAuto, null, 10066329),
                i.contents.DisableButton(e.btnQuick, null, 10066329),
                u.Config.isAutoSpin ? e.btnStopAuto.visible = !0 : (u.Config.isFreeSpin || (e.btnAuto.visible = !0),
                e.btnStopAuto.visible = !1),
                u.Config.isQuick ? e.btnQuick.getChildAt(1).texture = e.loader.resources.quick.textures["quickspin-active.png"] : e.btnQuick.getChildAt(1).texture = e.loader.resources.quick.textures["quickspin.png"]
            },
            EnableButtons: function(t) {
                var e = t;
                i.contents.EnableButton(e.btnSpin, "button-spin-normal.png"),
                i.contents.EnableButton(e.btnMinusBet, "button-control-normal.png"),
                i.contents.EnableButton(e.btnPlusBet, "button-control-normal.png"),
                i.contents.EnableButton(e.btnLine, "button-line-normal.png"),
                i.contents.EnableButton(e.btnPlayMode),
                i.contents.EnableButton(e.btnAuto),
                i.contents.EnableButton(e.btnQuick),
                i.contents.EnableButton(e.btnBack),
                e.btnStopAuto.visible = u.Config.isAutoSpin,
                e.btnSpin.visible = !0
            },
            UpdateAutoSpin: function(t) {
                window.App.isAuto && window.App.isAuto && sessionStorage.setItem("Auto-" + t.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";" + u.Config.isAutoSpin + ";" + n.lines.CurrentLine)
            },
            StopAutoSpin: function(t) {
                var e = t;
                if (u.Config.isAutoSpin) {
                    if (u.Config.isAutoSpin = !1,
                    e.btnStopAuto.visible = !1,
                    e.btnSpin.visible || (e.btnSpin.visible = !0),
                    $("#rolling-" + t.storage).removeClass("active"),
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId).removeClass("button-playing").addClass("button-play"),
                    $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                    $("#ljp-" + u.Config.gameId + "-room-" + u.Config.roomId).parent().removeClass("playing"),
                    sessionStorage.removeItem("Auto-" + t.storage),
                    window.App.isAutoKingdom = !1,
                    u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree)
                        return;
                    u.Config.timeSpin = setTimeout(function() {
                        return i.contents.EnableButtons(t)
                    }, 2e3)
                }
            },
            CheckLoginOrInRoom: function(t) {
                var e = t;
                return !(u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree) && (u.Config.isLogin ? !!u.Config.inRoom || (e.showMessage(Message.GetMessage("sl79")),
                !1) : (e.showMessage(Language.GetMessage("app003")),
                !1))
            },
            DeleteTimer: function() {
                c.Util.ClearTimeOut(u.Config.timerEvent),
                c.Util.ClearTimeOut(u.Config.timeSpin),
                c.Util.ClearTimeOut(u.Config.timeBonus),
                c.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                c.Util.ClearTimeOut(u.Config.timeOutEachLine),
                c.Util.ClearTimeOut(u.Config.timeShowWin),
                c.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                c.Util.ClearTimeOut(u.Config.timeJackpot),
                c.Util.ClearTimeOut(u.Config.timePop)
            },
            ClearTimer: function() {
                c.Util.ClearTimeOut(u.Config.timeSpin),
                c.Util.ClearTimeOut(u.Config.timeBonus),
                c.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                c.Util.ClearTimeOut(u.Config.timeOutEachLine),
                c.Util.ClearTimeOut(u.Config.timeShowWin),
                c.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                c.Util.ClearTimeOut(u.Config.timePop)
            },
            DeleteTwEffect: function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "vq-eff" === t[e].data && t[e].kill()
            },
            DeleteTweens: function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "vq-eff" !== t[e].data && "vqz" !== t[e].data && "money-fall-kd" !== t[e].data || t[e].kill()
            }
        }
    }
    , , , , , , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.game = void 0;
        var o = n(25)
          , i = n(3)
          , s = (a.prototype.delete = function() {
            this.game.delete()
        }
        ,
        a.prototype.startAuto = function() {
            return this.game.StartAuto()
        }
        ,
        a.prototype.stopAuto = function() {
            this.game.StopAuto()
        }
        ,
        a.prototype.checkAuto = function() {
            return this.game.CheckAuto()
        }
        ,
        a.prototype.getRoomId = function() {
            return this.game.getRoomId()
        }
        ,
        a.prototype.setSilent = function() {
            this.game.SetSilent()
        }
        ,
        a.prototype.restartAuto = function(t, e) {
            this.game.RestartAuto(t, e)
        }
        ,
        a);
        function a(t) {
            i.load({
                custom: {
                    families: ["SVN-Rocker", "Roboto"]
                },
                fontactive: function() {}
            }),
            this.game = new o.games(t)
        }
        e.game = s
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.games = void 0;
        var s = n(0)
          , o = n(26)
          , i = n(14)
          , a = n(6)
          , r = n(15)
          , l = n(27)
          , u = n(28)
          , c = n(29);
        n(1);
        var h = (p.prototype.GetAutoSpin = function() {
            var t = sessionStorage.getItem("Auto-" + this.storage);
            if (this.isSilent = !1,
            t) {
                var e = t.split(";");
                if ("true" === e[2] && (-1 === parseInt(e[1]) || 0 < parseInt(e[1])))
                    return a.Config.autoSpinCount = parseInt(e[1]),
                    a.Config.isAutoSpin = window.App.isAutoKingdom = !0,
                    window.App.isAuto = !0,
                    $(".multislot-expand").addClass("active"),
                    a.Config.roomId = parseInt(e[0]),
                    e[3] && (this.line = e[3]),
                    void console.log(this.line)
            }
            sessionStorage.removeItem("Auto-" + this.storage)
        }
        ,
        p.prototype.Init = function() {
            var t, n = this;
            PIXI.utils.skipHello(),
            a.Config.isMobile = s.Util.IsMobile(),
            a.Config.isOrientation = s.Util.IsOrientation(),
            0 === $("#" + this.storage).length && ((t = document.createElement("canvas")).id = this.storage,
            document.body.appendChild(t),
            this.target = document.getElementById(this.storage + "-cvs")),
            console.log(this.target),
            setTimeout(function() {
                n.application = new PIXI.Application(n.size[0],n.size[1],{
                    antialias: !0,
                    view: n.target
                });
                var t = n;
                n.application.ticker.add(function() {
                    t.Update(t)
                }),
                n.InitContainer();
                for (var e = 0; e < n.assets.length; e++)
                    "" !== n.assets[e].id ? n.loader.add(n.assets[e].id, n.assets[e].src) : n.loader.add(n.assets[e].src);
                n.loader.on("progress", function() {
                    return t.Loading(t)
                }),
                n.loader.load(function() {
                    setTimeout(function() {
                        t.InitGame(),
                        t.InitHubs(),
                        $("#divLoading").hide()
                    }, 1e3)
                })
            }, 500)
        }
        ,
        p.prototype.Loading = function(t) {
            $("#divLoading").show(),
            $("#popupJackpot").removeClass("show"),
            0 < $("#divLoading .loading-percent").length ? ($("#divLoading .loading-percent").css("width", parseInt(t.loader.progress) + "%"),
            $("#divLoading .loading-text").html(parseInt(t.loader.progress) + "%")) : ($("#loading-progress span").css("width", parseInt(t.loader.progress) + "%"),
            $("#loading-progress-txt").html(parseInt(t.loader.progress) + "%"))
        }
        ,
        p.prototype.InitHubs = function() {
            var t = this;
            this.hubs ? 1 !== this.hubs.connection.connection.connectionState && this.hubs.connection.start().then(function() {
                a.Config.isLogin = !0,
                t.isSilent || a.Config.isAutoSpin || a.Config.inRoom ? t.hubs.connection.invoke("PlayNow", {
                    RoomID: a.Config.roomId,
                    CurrencyID: a.Config.currencyId
                }) : t.enableLoby(),
                console.log("connected")
            }).catch(function(t) {
                return console.error(t)
            }) : this.hubs = new o.default(a.Config.hubUrl + "gameHub",this.token,this)
        }
        ,
        p.prototype.Update = function(t) {
            var e = Date.now();
            if (t.smokeLeft)
                try {
                    t.smokeLeft.update(.001 * (e - t.elapsed))
                } catch (t) {}
            if (t.smokeRight)
                try {
                    t.smokeRight.update(.001 * (e - t.elapsed))
                } catch (t) {}
            if (t.dotLeft)
                try {
                    t.dotLeft.update(.001 * (e - t.elapsed))
                } catch (t) {}
            if (t.dotRight)
                try {
                    t.dotRight.update(.001 * (e - t.elapsed))
                } catch (t) {}
            if (t.dotRandom)
                try {
                    t.dotRandom.update(.001 * (e - t.elapsed))
                } catch (t) {}
            t.elapsed = e
        }
        ,
        p.prototype.ResetTweenTab = function() {
            window.addEventListener("blur", function() {
                TweenLite.lagSmoothing(0)
            }, !1),
            window.addEventListener("focus", function() {
                TweenLite.lagSmoothing(1e3, 16)
            }, !1)
        }
        ,
        p.prototype.InitContainer = function() {
            this.bgContainer = new Container,
            this.loaderContainer = new Container,
            this.linesContainer = new Container,
            this.machineContainer = new Container,
            this.mainContainer = new Container,
            this.iconsContainer = new Container,
            this.containerColumn1 = new Container,
            this.containerColumn2 = new Container,
            this.containerColumn3 = new Container,
            this.containerColumn4 = new Container,
            this.containerColumn5 = new Container,
            this.popupContainer = new Container,
            this.guideContainer = new Container,
            this.moneyContainer = new Container,
            this.columnContainer = new Container,
            this.eventContainer = new Container,
            this.columnContainer.addChild(this.containerColumn1, this.containerColumn2, this.containerColumn3, this.containerColumn4, this.containerColumn5),
            this.application.stage.addChild(this.loaderContainer, this.bgContainer, this.machineContainer, this.moneyContainer, this.guideContainer, this.popupContainer)
        }
        ,
        p.prototype.InitGame = function() {
            var t = this;
            this.filter = new PIXI.filters.ColorMatrixFilter,
            this.filter.matrix = [1, 0, 0, .1, 0, 0, 1, 0, .1, 0, 0, 0, 1, .1, 0, 0, 0, 0, 1, 0],
            this.filterGray = new PIXI.filters.ColorMatrixFilter,
            this.filterGray.matrix = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0],
            this.InitFrames(),
            this.InitBg(),
            this.InitMachine(),
            this.InitLinesImage(),
            this.InitBgRoom(),
            this.InitLobby(),
            this.InitSlots(),
            this.InitMask(),
            this.InitButton(),
            this.InitTrial(),
            this.InitLines(),
            this.InitPaytable(),
            this.InitPopup(),
            this.InitPopupWin(),
            this.machine.addChild(this.eventContainer),
            this.InitEvent(),
            this.itemsMainGame = [this.column1[this.totalItems - 3], this.column2[this.totalItems - 3], this.column3[this.totalItems - 3], this.column4[this.totalItems - 3], this.column5[this.totalItems - 3], this.column1[this.totalItems - 2], this.column2[this.totalItems - 2], this.column3[this.totalItems - 2], this.column4[this.totalItems - 2], this.column5[this.totalItems - 2], this.column1[this.totalItems - 1], this.column2[this.totalItems - 1], this.column3[this.totalItems - 1], this.column4[this.totalItems - 1], this.column5[this.totalItems - 1]],
            r.contents.GetJackpot(this),
            r.contents.ChangeResources(this),
            a.Config.ready = !0;
            try {
                this.reelSpin = this.loader.resources.reelSpin.sound,
                this.reelSpin.loop = !0,
                this.countSound = this.loader.resources.countSound.sound,
                this.countSound.loop = !0,
                this.countSound.volume = 2,
                this.bigWinSound = this.loader.resources.bigWinSound.sound,
                this.bigWinSound.loop = !1,
                this.jackpotSound = this.loader.resources.jackpotSound.sound,
                this.jackpotSound.loop = !1,
                this.bgSound = this.loader.resources.bgSound.sound,
                this.bgSound.volume = .4,
                this.bgSound.loop = !0
            } catch (t) {}
            if (a.Config.sound)
                try {
                    this.bgSound.play()
                } catch (t) {}
            r.contents.DisableButtons(this),
            r.contents.EnableButton(this.btnPlayMode),
            r.contents.EnableButton(this.btnBack),
            this.iconEvent.visible = !1,
            window.Config.EnableXEvent && r.contents.GetEvent(this),
            this.Resize(this),
            this.ResetTweenTab(),
            this.resizeFunc = function() {
                return t.Resize(t)
            }
            ,
            window.addEventListener("resize", this.resizeFunc)
        }
        ,
        p.prototype.Resize = function(t) {
            t.size = [$(window).width(), $(window).height()],
            t.application.renderer.resize($(window).width(), $(window).height()),
            t.backGround.scale.set(t.size[0] / 1920),
            t.backGround.anchor.set(.5),
            t.backGround.position.set(t.size[0] / 2, t.size[1] / 2),
            t.size[0] < 1188 || t.size[1] < 587 ? (t.machine.scale.set(Math.min(t.size[0] / 1188, t.size[1] / 587)),
            a.Config.isBonus && void 0 !== this.bonus && t.bonus.bonusContainer.scale.set(Math.min(t.size[0] / 983, t.size[1] / 668))) : (t.machine.scale.set(1),
            a.Config.isBonus && void 0 !== t.bonus && t.bonus.bonusContainer.scale.set(1)),
            t.machine.anchor.set(.5),
            t.machine.position.set(t.size[0] / 2, t.size[1] / 2),
            a.Config.isBonus && void 0 !== t.bonus && (t.bonus.bonusContainer.anchor.set(.5),
            t.bonus.bonusContainer.position.set(t.size[0] / 2, t.size[1] / 2))
        }
        ,
        p.prototype.InitFrames = function() {
            var t;
            for (this.framesFire = [],
            this.framesLight = [],
            this.framesWin = [],
            this.framesCoins = [],
            this.framesLightingX = [],
            t = 1; t < 7; t++)
                this.framesFire.push(TextureCache["Fire_0" + t + ".png"]),
                this.framesLight.push(TextureCache["LightCrack_0" + t + ".png"]);
            for (t = 1; t < 10; t++)
                this.framesWin.push(TextureCache["Win_0" + t + ".png"]);
            for (t = 0; t < 20; t++)
                this.framesLightingX.push(this.loader.resources.fxJackpot.textures["fxJackpotSheets_000" + (t < 10 ? "0" : "") + t + ".png"]);
            this.framesCoins = framesFromTilesetImage("coinVqz", 30, 31)
        }
        ,
        p.prototype.InitBg = function() {
            this.backGround = new Sprite(TextureCache.bgVqz),
            this.backGround.anchor.set(.5),
            this.bgContainer.addChild(this.backGround),
            this.smokeLeft = new PIXI.particles.Emitter(this.backGround,[TextureCache.smokeVqz, TextureCache.smokeVqz2],this.loader.resources.smokeParticle.data),
            this.smokeLeft.spawnPos.x = -900,
            this.smokeLeft.spawnPos.y = 100,
            this.smokeLeft.emit = !0,
            this.dotLeft = new PIXI.particles.Emitter(this.backGround,[TextureCache.dotVqz],this.loader.resources.firefly1Particle.data),
            this.dotLeft.spawnPos.x = -850,
            this.dotLeft.spawnPos.y = -200,
            this.dotLeft.emit = !0,
            this.smokeRight = new PIXI.particles.Emitter(this.backGround,[TextureCache.smokeVqz, TextureCache.smokeVqz2],this.loader.resources.smokeParticle.data),
            this.smokeRight.spawnPos.x = 600,
            this.smokeRight.spawnPos.y = 100,
            this.smokeRight.emit = !0,
            this.dotRight = new PIXI.particles.Emitter(this.backGround,[TextureCache.dotVqz],this.loader.resources.firefly1Particle.data),
            this.dotRight.spawnPos.x = 500,
            this.dotRight.spawnPos.y = -200,
            this.dotRight.emit = !0,
            this.dotRandom = new PIXI.particles.Emitter(this.backGround,[TextureCache.dotVqz2],this.loader.resources.firefly2Particle.data),
            this.dotRandom.spawnPos.x = -this.size[0] / 2,
            this.dotRandom.spawnPos.y = -this.size[1] / 2,
            this.dotRandom.emit = !0
        }
        ,
        p.prototype.InitMachine = function() {
            this.machine = new Sprite(TextureCache.machineVqz),
            this.machine.anchor.set(.5),
            this.machine.position.set(this.size[0] / 2, this.size[1] / 2),
            this.machineContainer.addChild(this.machine),
            this.machine.addChild(this.linesContainer)
        }
        ,
        p.prototype.createLightX = function() {
            this.lightingX || (this.lightingX = new AnimatedSprite(this.framesLightingX),
            this.lightingX.animationSpeed = .4,
            this.lightingX.loop = !0,
            this.lightingX.position.set(10, -202),
            this.lightingX.anchor.set(.5),
            this.lightingX.play(),
            this.topButton.addChild(this.lightingX))
        }
        ,
        p.prototype.deleteLightX = function() {
            this.lightingX && this.lightingX.destroy({
                children: !0
            }),
            this.lightingX = null
        }
        ,
        p.prototype.updateEvent = function(t) {
            var e = this;
            try {
                for (var n = this.xEvent.visible = !1, o = 0; o < t.length; o++) {
                    var i, s = t[o];
                    this.xLobby[s.roomID - 1].visible = !1,
                    s.nextJackpot < 0 ? this.arrBox[s.roomID - 1].children[1].visible = this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1 : 0 == s.nextJackpot ? (this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1,
                    this.arrBox[s.roomID - 1].children[1].texture = this.loader.resources.event.textures["ej-tg-x" + s.multiplier],
                    a.Config.inRoom ? s.roomID != a.Config.roomId || a.Config.isTry || (this.xEvent.visible = !0,
                    this.xEvent.texture = this.loader.resources.event.textures["ej-lb-x" + s.multiplier],
                    n = !0) : (this.xLobby[s.roomID - 1].visible = !0,
                    this.xLobby[s.roomID - 1].texture = this.loader.resources.event.textures["ej-lb-x" + s.multiplier])) : (this.arrBox[s.roomID - 1].children[1].visible = !1,
                    i = "X" + s.multiplier + " " + Message.GetMessage("ev50") + ("km" == a.Config.lang ? "     " : "        ") + Message.GetMessage("ev49"),
                    this.arrBox[s.roomID - 1].children[2].text = i,
                    this.arrBox[s.roomID - 1].children[3].children[0].text = s.nextJackpot,
                    this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !0)
                }
                n ? this.lightingX || this.createLightX() : this.deleteLightX(),
                a.Config.timerEvent = setTimeout(function() {
                    r.contents.GetEvent(e)
                }, window.Config.TIME_COUNT_GET_EVENT_X ? window.Config.TIME_COUNT_GET_EVENT_X : 5e3)
            } catch (t) {
                clearTimeout(a.Config.timerEvent)
            }
        }
        ,
        p.prototype.InitEvent = function() {
            this.iconEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]),
            this.iconEvent.anchor.set(.5),
            this.iconEvent.position.set(this.size[0] / 2 - 100, -this.size[1] / 2 + 100),
            this.iconEvent.interactive = !0,
            this.iconEvent.buttonMode = !0,
            this.iconEvent.on("pointerdown", this.onDragStart).on("pointerup", this.onDragEnd).on("pointerupoutside", this.onDragEnd).on("pointermove", this.onDragMove),
            this.boxEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-bg"]),
            this.boxEvent.anchor.set(.5, 0),
            this.boxEvent.position.set(.5, 5),
            this.room1Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room1Event.anchor.set(.5),
            this.room1Event.position.set(0, 71);
            var t = new PIXI.Text(s.Util.ParseMoney(a.Config.arrRoom[0]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            t.anchor.set(.5),
            t.position.set(0, -15),
            this.room1X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room1X.anchor.set(.5),
            this.room1X.position.set(0, 10);
            var e = Message.GetMessage("ev26") + ("km" == a.Config.lang ? "     " : "        ") + Message.GetMessage("ev49");
            this.txtRoom1 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom1.anchor.set(.5),
            this.txtRoom1.position.set(0, 10),
            this.boxJackRoom1 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom1.anchor.set(.5),
            "km" == a.Config.lang && this.boxJackRoom1.scale.set(.8),
            this.boxJackRoom1.position.set("km" == a.Config.lang ? 28 : "zh" == a.Config.lang ? 9 : "en" == a.Config.lang ? 16 : 13, 10),
            this.boxJackRoom1.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom1.children[0].anchor.set(.5),
            this.room1Event.addChild(t, this.room1X, this.txtRoom1, this.boxJackRoom1),
            this.room1X.visible = this.boxJackRoom1.visible = this.txtRoom1.visible = !1,
            this.room2Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room2Event.anchor.set(.5),
            this.room2Event.position.set(0, 133);
            var n = new PIXI.Text(s.Util.ParseMoney(a.Config.arrRoom[1]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            n.anchor.set(.5),
            n.position.set(0, -15),
            this.room2X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room2X.anchor.set(.5),
            this.room2X.position.set(0, 10),
            this.txtRoom2 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom2.anchor.set(.5),
            this.txtRoom2.position.set(0, 10),
            this.boxJackRoom2 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom2.anchor.set(.5),
            "km" == a.Config.lang && this.boxJackRoom2.scale.set(.8),
            this.boxJackRoom2.position.set("km" == a.Config.lang ? 28 : "zh" == a.Config.lang ? 9 : "en" == a.Config.lang ? 16 : 13, 10),
            this.boxJackRoom2.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom2.children[0].anchor.set(.5),
            this.room2Event.addChild(n, this.room2X, this.txtRoom2, this.boxJackRoom2),
            this.room2X.visible = this.boxJackRoom2.visible = this.txtRoom2.visible = !1,
            this.room3Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room3Event.anchor.set(.5),
            this.room3Event.position.set(0, 195);
            var o = new PIXI.Text(s.Util.ParseMoney(a.Config.arrRoom[2]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            o.anchor.set(.5),
            o.position.set(0, -15),
            this.room3X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room3X.anchor.set(.5),
            this.room3X.position.set(0, 10),
            this.txtRoom3 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom3.anchor.set(.5),
            this.txtRoom3.position.set(0, 10),
            this.boxJackRoom3 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom3.anchor.set(.5),
            "km" == a.Config.lang && this.boxJackRoom3.scale.set(.8),
            this.boxJackRoom3.position.set("km" == a.Config.lang ? 28 : "zh" == a.Config.lang ? 9 : "en" == a.Config.lang ? 16 : 13, 10),
            this.boxJackRoom3.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom3.children[0].anchor.set(.5),
            this.room3Event.addChild(o, this.room3X, this.txtRoom3, this.boxJackRoom3),
            this.room3X.visible = this.boxJackRoom3.visible = this.txtRoom3.visible = !1,
            this.boxEvent.addChild(this.room1Event, this.room2Event, this.room3Event),
            this.arrBox = [this.room1Event, this.room2Event, this.room3Event],
            this.arrowEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-arrow"]),
            this.arrowEvent.anchor.set(.5),
            this.arrowEvent.position.set(0, 250),
            this.arrowEvent.scale.y = -1,
            this.arrowEvent.interactive = !0,
            this.arrowEvent.buttonMode = !0,
            this.arrowEvent.on("pointerdown", this.toogleEvent.bind(this.arrowEvent, this)).on("pointerup", this.toogleEventUp.bind(this.arrowEvent, this));
            var i = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]);
            i.anchor.set(.5),
            this.iconEvent.addChild(this.boxEvent, this.arrowEvent, i),
            this.eventContainer.addChild(this.iconEvent)
        }
        ,
        p.prototype.toogleEventUp = function(t) {
            t.iconEvent.interactive = !0
        }
        ,
        p.prototype.toogleEvent = function(t) {
            t.iconEvent.interactive = !1,
            -1 == t.arrowEvent.scale.y ? (t.arrowEvent.scale.y = 1,
            TweenMax.to(t.boxEvent, .5, {
                alpha: 0,
                data: "vqz"
            }),
            TweenMax.to(t.arrowEvent, .5, {
                y: 50,
                data: "vqz"
            })) : (TweenMax.to(t.boxEvent, .5, {
                alpha: 1,
                data: "vqz"
            }),
            TweenMax.to(t.arrowEvent, .5, {
                y: 250,
                data: "vqz"
            }),
            t.arrowEvent.scale.y = -1),
            setTimeout(function() {
                t.iconEvent.interactive = !0
            }, 500)
        }
        ,
        p.prototype.onDragStart = function(t) {
            this.data = t.data,
            this.alpha = .9,
            this.dragging = !0
        }
        ,
        p.prototype.onDragEnd = function() {
            this.data = null,
            this.alpha = 1,
            this.dragging = !1
        }
        ,
        p.prototype.onDragMove = function() {
            var t, e = this;
            e.dragging && (t = e.data.getLocalPosition(e.parent),
            e.x = t.x,
            e.y = t.y)
        }
        ,
        p.prototype.enableLoby = function() {
            for (var t = 1; t < 4; t++)
                this.lobbyContainer.children[t].interactive = !0,
                this.lobbyContainer.children[t].buttonMode = !0
        }
        ,
        p.prototype.InitLobby = function() {
            a.Config.isLobby = !0,
            this.lobbyContainer = new Container,
            this.machine.addChild(this.lobbyContainer),
            this.bgLobby = new Sprite(TextureCache["room-active.png"]),
            this.bgLobby.anchor.set(.5),
            this.bgLobby.position.set(0, 0),
            this.bgLobby.visible = !1,
            this.lobbyContainer.addChild(this.bgLobby),
            this.arrJackpot = [],
            this.xLobby = [];
            for (var t = 0; t < 3; t++) {
                var e = new Sprite(TextureCache["icon-room-" + (t + 1) + ".png"]);
                e.anchor.set(.5),
                e.value = t + 1,
                e.inx = t,
                e.position.set(this.bgLobbyPos[t], 0),
                this.lobbyContainer.addChild(e),
                e.on("pointerover", this.LobbyOver.bind(e, this)).on("pointerout", this.LobbyOut.bind(e, this)).on("pointerdown", this.LobbyDown.bind(e, this));
                var n = new BitmapText(s.Util.ParseMoney(a.Config.arrRoom[t], void 0),{
                    font: "15px RockerSmall",
                    align: "center"
                });
                n.anchor.set(.5),
                n.tint = 15856113,
                e.addChild(n),
                n.position.set(0, 80);
                var o = new Sprite(this.loader.resources.event.textures["ej-lb-x2"]);
                o.anchor.set(.5),
                o.position.set(0, -50),
                o.visible = !1,
                this.xLobby.push(o);
                var i = new BitmapText("0",{
                    font: "25px Rocker",
                    align: "center"
                });
                i.anchor = .5,
                e.addChild(o, i),
                i.position.set(0, 110),
                this.arrJackpot.push(i)
            }
        }
        ,
        p.prototype.InitLinesImage = function() {
            this.linesImage = [[], [], []];
            for (var t = 0; t < 3; t++)
                for (var e = 0; e < 20; e++)
                    this.linesImage[t].push(new Sprite(TextureCache["room-" + (t + 1) + "-line-" + (e + 1) + ".png"])),
                    this.linesImage[t][e].anchor.set(.5),
                    this.linesImage[t][e].visible = !1,
                    this.linesImage[t][e].name = t,
                    this.linesImage[t][e].position.set(this.linesImagePosition[t][e][0], this.linesImagePosition[t][e][1]),
                    this.linesContainer.addChild(this.linesImage[t][e])
        }
        ,
        p.prototype.InitBgRoom = function() {
            this.bgRoom = [];
            for (var t = 0; t < 3; t++) {
                var e = new Container;
                this.bgRoom.push(e),
                this.machine.addChild(e)
            }
            this.bgRoom[0].addChild(new Sprite(TextureCache["room-1-object-1.png"])),
            this.bgRoom[0].getChildAt(0).anchor.set(.5),
            this.bgRoom[0].getChildAt(0).position.set(-430, 0),
            this.bgRoom[0].addChild(new Sprite(TextureCache["room-1-object-2.png"])),
            this.bgRoom[0].getChildAt(1).anchor.set(.5),
            this.bgRoom[0].getChildAt(1).position.set(410, -32),
            this.bgRoom[0].addChild(new Sprite(TextureCache["room-1-object-3.png"])),
            this.bgRoom[0].getChildAt(2).anchor.set(.5),
            this.bgRoom[0].getChildAt(2).position.set(382, 267),
            this.bgRoom[0].visible = !1,
            this.bgRoom[1].addChild(new Sprite(TextureCache["room-2-object-3.png"])),
            this.bgRoom[1].getChildAt(0).anchor.set(.5),
            this.bgRoom[1].getChildAt(0).position.set(-467, 250),
            this.bgRoom[1].addChild(new Sprite(TextureCache["room-2-object-2.png"])),
            this.bgRoom[1].getChildAt(1).anchor.set(.5),
            this.bgRoom[1].getChildAt(1).position.set(-365, 70),
            this.bgRoom[1].addChild(new Sprite(TextureCache["room-2-object-1.png"])),
            this.bgRoom[1].getChildAt(2).anchor.set(.5),
            this.bgRoom[1].getChildAt(2).position.set(-465, 0),
            this.bgRoom[1].addChild(new Sprite(TextureCache["room-2-object-4.png"])),
            this.bgRoom[1].getChildAt(3).anchor.set(.5),
            this.bgRoom[1].getChildAt(3).position.set(-275, -191),
            this.bgRoom[1].addChild(new Sprite(TextureCache["room-2-object-5.png"])),
            this.bgRoom[1].getChildAt(4).anchor.set(.5),
            this.bgRoom[1].getChildAt(4).position.set(120, -226),
            this.bgRoom[1].addChild(new Sprite(TextureCache["room-2-object-6.png"])),
            this.bgRoom[1].getChildAt(5).anchor.set(.5),
            this.bgRoom[1].getChildAt(5).position.set(405, 187),
            this.bgRoom[1].visible = !1,
            this.bgRoom[2].addChild(new Sprite(TextureCache["room-3-object-1.png"])),
            this.bgRoom[2].getChildAt(0).anchor.set(.5),
            this.bgRoom[2].getChildAt(0).scale.set(.85),
            this.bgRoom[2].getChildAt(0).position.set(-438, -2),
            this.bgRoom[2].visible = !1
        }
        ,
        p.prototype.LobbyOver = function(t) {
            t.bgLobby.visible = !0,
            t.bgLobby.x = this.x
        }
        ,
        p.prototype.LobbyOut = function(t) {
            t.bgLobby.visible = !1
        }
        ,
        p.prototype.LobbyDown = function(t) {
            t.JoinGame(this.value)
        }
        ,
        p.prototype.InitSlots = function() {
            var t;
            this.machine.addChild(this.columnContainer),
            this.columnContainer.visible = !1,
            this.startPosition = 124;
            for (var e = 0, n = this.totalItems - 1; 0 <= n; n--)
                t = Math.floor(7 * Math.random()) + 1,
                this.column1[n] = new Sprite(TextureCache["room-1-item-" + t + ".png"]),
                this.column1[n].inx = t,
                this.column1[n].x = -242,
                this.column1[n].anchor.set(.5),
                this.column1[n].y = this.startPosition - 121 * e,
                this.containerColumn1.addChild(this.column1[n]),
                t = Math.floor(7 * Math.random()) + 1,
                this.column2[n] = new Sprite(TextureCache["room-1-item-" + t + ".png"]),
                this.column2[n].inx = t,
                this.column2[n].x = -117,
                this.column2[n].anchor.set(.5),
                this.column2[n].y = this.startPosition - 121 * e,
                this.containerColumn2.addChild(this.column2[n]),
                t = Math.floor(7 * Math.random()) + 1,
                this.column3[n] = new Sprite(TextureCache["room-1-item-" + t + ".png"]),
                this.column3[n].inx = t,
                this.column3[n].x = 8,
                this.column3[n].anchor.set(.5),
                this.column3[n].y = this.startPosition - 121 * e,
                this.containerColumn3.addChild(this.column3[n]),
                t = Math.floor(7 * Math.random()) + 1,
                this.column4[n] = new Sprite(TextureCache["room-1-item-" + t + ".png"]),
                this.column4[n].inx = t,
                this.column4[n].x = 134,
                this.column4[n].anchor.set(.5),
                this.column4[n].y = this.startPosition - 121 * e,
                this.containerColumn4.addChild(this.column4[n]),
                t = Math.floor(7 * Math.random()) + 1,
                this.column5[n] = new Sprite(TextureCache["room-1-item-" + t + ".png"]),
                this.column5[n].inx = t,
                this.column5[n].x = 257,
                this.column5[n].anchor.set(.5),
                this.column5[n].y = this.startPosition - 121 * e,
                this.containerColumn5.addChild(this.column5[n]),
                e++;
            this.startHeight = this.column1[0].y
        }
        ,
        p.prototype.InitMask = function() {
            this.mask = new Graphics,
            this.mask.beginFill(16724736),
            this.mask.drawRect(-300, -179, 618, 364),
            this.columnContainer.addChild(this.mask),
            this.columnContainer.mask = this.mask
        }
        ,
        p.prototype.InitButton = function() {
            var t = this;
            this.topButton = new Container,
            this.bottomButton = new Container,
            this.machine.addChild(this.topButton, this.bottomButton),
            this.btnPlayMode = new Sprite(TextureCache["button-trial-normal.png"]),
            this.btnPlayMode.name = "button-trial-normal.png",
            this.btnPlayMode.anchor.set(.5),
            this.btnPlayMode.position.set(-390, -222),
            this.txtMode = new PIXI.Text(Message.GetMessage("sl9").toUpperCase(),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff"]
            }),
            this.txtMode.anchor.set(.5),
            this.btnPlayMode.addChild(this.txtMode),
            this.btnPlayMode.interactive = !0,
            this.btnPlayMode.buttonMode = !0,
            this.btnPlayMode.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnPlayModeDown.bind(this.btnPlayMode, this)),
            this.btnHide = new Sprite(TextureCache["button-trial-normal.png"]),
            this.btnHide.name = "button-trial-normal.png",
            this.btnHide.anchor.set(.5),
            this.btnHide.position.set(-390, -170),
            this.btnHide.addChild(new Sprite(TextureCache["icon-hide.png"])),
            this.btnHide.addChild(new PIXI.Text(Message.GetMessage("sl99").toUpperCase(),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff"]
            })),
            this.btnHide.children[0].anchor.set(.5),
            this.btnHide.children[0].x = -25,
            this.btnHide.children[1].anchor.set(0, .5),
            this.btnHide.children[1].x = -5,
            this.btnHide.interactive = !0,
            this.btnHide.buttonMode = !0,
            this.btnHide.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnHideDown.bind(this.btnHide, this)),
            this.btnBack = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnBack.name = "button-common-normal.png",
            this.btnBack.anchor.set(.5),
            this.btnBack.position.set(-470, -219),
            this.btnBack.addChild(new PIXI.Text("<",{
                fontFamily: "Roboto",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#fff"]
            })),
            this.btnBack.getChildAt(0).anchor.set(.5),
            this.btnBack.getChildAt(0).position.set(0, -2),
            this.btnBack.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnBackDown.bind(this.btnBack, this)),
            this.btnBack.interactive = !0,
            this.btnBack.buttonMode = !0,
            this.txtSession = new PIXI.Text("",{
                fontFamily: "SVN-Rocker",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["#fff"]
            }),
            this.txtSession.anchor.set(0, .5),
            this.txtSession.position.set(190, -220),
            this.txtBalance = new BitmapText("undefined" != typeof App && App.account ? s.Util.ParseMoney(App.account.goldBalance) : "",{
                font: "18px Rocker"
            }),
            this.txtBalance.anchor.set(0, .5),
            this.txtBalance.position.set(-262, -221),
            this.txtUserName = new PIXI.Text("undefined" != typeof App && App.account ? 13 < App.account.nickname.length ? App.account.nickname.substring(0, 10) + "..." : App.account.nickname : "",{
                fontFamily: "SVN-Rocker",
                fontSize: 13,
                fontWeight: "bold",
                fill: ["#fff"]
            }),
            this.txtUserName.anchor.set(1, .5),
            this.txtUserName.position.set(-274, -220),
            this.txtJackpot = new BitmapText("0",{
                font: "32px Rocker",
                align: "center"
            }),
            this.txtJackpot.anchor.set(.5),
            this.txtJackpot.position.set(14, -210),
            this.xEvent = new Sprite(this.loader.resources.event.textures["ej-lb-x2"]),
            this.xEvent.anchor.set(.5),
            this.xEvent.position.set(150, -210),
            this.xEvent.visible = !1,
            this.btnSound = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnSound.name = "button-common-normal.png",
            this.btnSound.anchor.set(.5),
            this.btnSound.position.set(330, -219),
            this.btnSound.addChild(new Sprite(TextureCache["icon-sound-on.png"])),
            this.btnSound.getChildAt(0).anchor.set(.5),
            this.btnSound.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnSoundDown.bind(this.btnSound, this)),
            this.btnSound.interactive = !0,
            this.btnSound.buttonMode = !0,
            this.btnMusic = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnMusic.name = "button-common-normal.png",
            this.btnMusic.anchor.set(.5),
            this.btnMusic.position.set(330, -219),
            this.btnMusic.addChild(new Sprite(TextureCache["icon-music-on.png"])),
            this.btnMusic.getChildAt(0).anchor.set(.5),
            this.btnMusic.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnMusicDown.bind(this.btnMusic, this)),
            this.btnMusic.interactive = !0,
            this.btnMusic.buttonMode = !0,
            this.btnMusic.visible = !1,
            this.btnRank = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnRank.name = "button-common-normal.png",
            this.btnRank.anchor.set(.5),
            this.btnRank.position.set(375, -219),
            this.btnRank.addChild(new Sprite(TextureCache["icon-rank.png"])),
            this.btnRank.getChildAt(0).anchor.set(.5),
            this.btnRank.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnRankDown.bind(this.btnRank, this)),
            this.btnRank.interactive = !0,
            this.btnRank.buttonMode = !0,
            this.btnHistory = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnHistory.name = "button-common-normal.png",
            this.btnHistory.anchor.set(.5),
            this.btnHistory.position.set(419, -219),
            this.btnHistory.addChild(new Sprite(TextureCache["icon-history.png"])),
            this.btnHistory.getChildAt(0).anchor.set(.5),
            this.btnHistory.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnHistoryDown.bind(this.btnHistory, this)),
            this.btnHistory.interactive = !0,
            this.btnHistory.buttonMode = !0,
            this.btnGuide = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnGuide.name = "button-common-normal.png",
            this.btnGuide.anchor.set(.5),
            this.btnGuide.position.set(464, -219),
            this.btnGuide.addChild(new Sprite(TextureCache["icon-guide.png"])),
            this.btnGuide.getChildAt(0).anchor.set(.5),
            this.btnGuide.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnGuideDown.bind(this.btnGuide, this)),
            this.btnGuide.interactive = !0,
            this.btnGuide.buttonMode = !0,
            this.topButton.addChild(this.btnPlayMode, this.btnHide, this.btnBack, this.txtSession, this.txtBalance, this.txtUserName, this.txtJackpot, this.xEvent, this.btnSound, this.btnMusic, this.btnRank, this.btnHistory, this.btnGuide),
            this.btnLine = new Sprite(TextureCache["button-line-normal.png"]),
            this.btnLine.name = "button-line-normal.png",
            this.btnLine.anchor.set(.5),
            this.btnLine.position.set(-433, 248),
            this.btnLine.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnLineDown.bind(this.btnLine, this)),
            this.btnLine.interactive = !1,
            this.btnLine.buttonMode = !1,
            this.lblLines = new PIXI.Text(Message.GetMessage("sl7"),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff", "#99b7db"]
            }),
            this.lblLines.anchor.set(.5),
            this.lblLines.position.set(0, -12),
            this.txtLines = new PIXI.Text("-",{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#fff", "#99b7db"]
            }),
            this.txtLines.anchor.set(.5),
            this.txtLines.position.set(0, 12),
            this.btnLine.addChild(this.lblLines, this.txtLines),
            this.lblBetValue = new PIXI.Text(Message.GetMessage("sl6"),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fee4a9"]
            }),
            this.lblBetValue.anchor.set(.5),
            this.lblBetValue.position.set(-305, 228),
            this.txtBetValue = new PIXI.Text("-",{
                fontFamily: "SVN-Rocker",
                fontSize: 22,
                fontWeight: "bold",
                fill: ["#ffb345"]
            }),
            this.txtBetValue.anchor.set(.5),
            this.txtBetValue.position.set(-305, 264),
            this.btnMinusBet = new Sprite(TextureCache["button-control-normal.png"]),
            this.btnMinusBet.name = "button-control-normal.png",
            this.btnMinusBet.anchor.set(.5),
            this.btnMinusBet.position.set(-240, 264),
            this.btnMinusBet.addChild(new Sprite(TextureCache["icon-minus.png"])),
            this.btnMinusBet.getChildAt(0).anchor.set(.5),
            this.btnMinusBet.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnMinusBetDown.bind(this.btnMinusBet, this)),
            this.btnMinusBet.interactive = !1,
            this.btnMinusBet.buttonMode = !1,
            this.btnPlusBet = new Sprite(TextureCache["button-control-normal.png"]),
            this.btnPlusBet.name = "button-control-normal.png",
            this.btnPlusBet.anchor.set(.5),
            this.btnPlusBet.position.set(-240, 228),
            this.btnPlusBet.addChild(new Sprite(TextureCache["icon-plus.png"])),
            this.btnPlusBet.getChildAt(0).anchor.set(.5),
            this.btnPlusBet.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.btnPlusBetDown.bind(this.btnPlusBet, this)),
            this.btnPlusBet.interactive = !1,
            this.btnPlusBet.buttonMode = !1,
            this.lblTotalBet = new PIXI.Text(Message.GetMessage("sl4"),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fee4a9"]
            }),
            this.lblTotalBet.anchor.set(.5),
            this.lblTotalBet.position.set(-115, 228),
            this.txtTotalBet = new PIXI.Text("-",{
                fontFamily: "SVN-Rocker",
                fontSize: 22,
                fontWeight: "bold",
                fill: ["#ffb345"]
            }),
            this.txtTotalBet.anchor.set(.5),
            this.txtTotalBet.position.set(-115, 264),
            this.lblJustWon = new PIXI.Text(Message.GetMessage("sl5"),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fee4a9"]
            }),
            this.lblJustWon.anchor.set(.5),
            this.lblJustWon.position.set(95, 228),
            this.txtJustWon = new PIXI.Text("-",{
                fontFamily: "SVN-Rocker",
                fontSize: 22,
                fontWeight: "bold",
                fill: ["#ffb345"]
            }),
            this.txtJustWon.anchor.set(.5),
            this.txtJustWon.position.set(95, 264),
            this.btnQuick = new Sprite(this.loader.resources.quick.textures["btn-auto.png"]),
            this.btnQuick.name = "btn-auto.png",
            this.btnQuick.anchor.set(.5),
            this.btnQuick.position.set(272, 226),
            this.btnQuick.addChild(new PIXI.Text(Message.GetMessage("mnpk1"),{
                fontFamily: "SVN-Rocker",
                fontSize: 13,
                fontWeight: "bold",
                fill: ["#f0f4f3", "#a4bcbc"]
            })),
            this.btnQuick.getChildAt(0).anchor.set(0, .5),
            this.btnQuick.getChildAt(0).position.set(-20, 0),
            this.btnQuick.addChild(new Sprite(this.loader.resources.quick.textures["quickspin.png"])),
            this.btnQuick.getChildAt(1).anchor.set(.5),
            this.btnQuick.getChildAt(1).position.set(-35, 0),
            this.btnQuick.on("pointerover", function() {
                t.btnQuick.texture = t.loader.resources.quick.textures["btn-auto-3.png"]
            }).on("pointerout", function() {
                t.btnQuick.texture = t.loader.resources.quick.textures["btn-auto.png"]
            }).on("pointerdown", this.btnQuickDown.bind(this.btnQuick, this)),
            this.btnAuto = new Sprite(this.loader.resources.quick.textures["btn-auto.png"]),
            this.btnAuto.name = "btn-auto.png",
            this.btnAuto.anchor.set(.5),
            this.btnAuto.position.set(272, 264),
            this.btnAuto.addChild(new PIXI.Text(Message.GetMessage("sl2"),{
                fontFamily: "SVN-Rocker",
                fontSize: 13,
                fontWeight: "bold",
                fill: ["#f0f4f3", "#a4bcbc"]
            })),
            this.btnAuto.getChildAt(0).anchor.set(.5),
            this.btnAuto.getChildAt(0).position.set(0, 0),
            this.btnAuto.on("pointerover", function() {
                t.btnAuto.texture = t.loader.resources.quick.textures["btn-auto-3.png"]
            }).on("pointerout", function() {
                t.btnAuto.texture = t.loader.resources.quick.textures["btn-auto.png"]
            }).on("pointerdown", this.btnAutoDown.bind(this.btnAuto, this)),
            this.btnAuto.interactive = !1,
            this.btnAuto.buttonMode = !1,
            this.boxAuto = new Container,
            this.btnAuto.addChild(this.boxAuto);
            for (var e = -60, n = 0; n < this.autoClientArr.length; n++)
                this.boxAuto.addChild(new BitmapText(s.Util.ParseMoney(this.autoClientArr[n], void 0),{
                    font: "15px RockerSmall",
                    align: "center"
                })),
                this.boxAuto.getChildAt(n).value = this.autoClientArr[n],
                this.boxAuto.getChildAt(n).anchor.set(.5),
                this.boxAuto.getChildAt(n).buttonMode = !0,
                this.boxAuto.getChildAt(n).interactive = !0,
                this.boxAuto.getChildAt(n).position.set(0, e),
                this.boxAuto.getChildAt(n).on("pointerover", this.txtOver).on("pointerout", this.txtOut).on("pointerdown", this.txtAutoDown.bind(this.boxAuto.getChildAt(n), this)),
                e += -30;
            this.boxAuto.visible = !1,
            this.btnSpin = new Sprite(TextureCache["button-spin-normal.png"]),
            this.btnSpin.name = "button-spin-normal.png",
            this.btnSpin.anchor.set(.5),
            this.btnSpin.position.set(418, 242),
            this.btnSpin.addChild(new Sprite(null != TextureCache["text-spin-" + a.Config.lang + ".png"] ? TextureCache["text-spin-" + a.Config.lang + ".png"] : TextureCache["text-spin-en.png"])),
            this.btnSpin.getChildAt(0).anchor.set(.5),
            this.btnSpin.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("mousedown", this.btnSpinDown.bind(this.btnSpin, this)).on("pointerupoutside", this.btnUp).on("pointerup", this.btnUp).on("touchend", this.btnSpinDown.bind(this.btnSpin, this)),
            this.btnSpin.interactive = !1,
            this.btnSpin.buttonMode = !1,
            this.btnStopAuto = new Sprite(TextureCache["button-spin-normal.png"]),
            this.btnStopAuto.name = "button-spin-normal.png",
            this.btnStopAuto.anchor.set(.5),
            this.btnStopAuto.position.set(418, 242),
            this.btnStopAuto.addChild(new Sprite(null != TextureCache["text-stop-" + a.Config.lang + ".png"] ? TextureCache["text-stop-" + a.Config.lang + ".png"] : TextureCache["text-stop-en.png"])),
            this.btnStopAuto.getChildAt(0).anchor.set(.5),
            this.btnStopAuto.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("mousedown", this.btnStopAutoDown.bind(this.btnStopAuto, this)).on("pointerupoutside", this.btnUp).on("pointerup", this.btnUp).on("touchend", this.btnStopAutoDown.bind(this.btnStopAuto, this)),
            this.btnStopAuto.interactive = !0,
            this.btnStopAuto.buttonMode = !0,
            this.btnStopAuto.visible = !1,
            this.boxFreeTicket = new Sprite(TextureCache["ticket.png"]),
            this.boxFreeTicket.anchor.set(.5),
            this.boxFreeTicket.position.set(418, 182),
            this.txtFreeTicket = new PIXI.Text("+0 Free",{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff", "yellow"]
            }),
            this.txtFreeTicket.anchor.set(.5),
            this.txtFreeTicket.position.set(0, -7),
            this.boxFreeTicket.addChild(this.txtFreeTicket),
            this.boxFreeTicket.visible = !1,
            this.boxFree = new Sprite(TextureCache["demo-bar.png"]),
            this.boxFree.anchor.set(.5),
            this.boxFree.position.set(0, 170),
            this.txtFreeTurn = new PIXI.Text(Message.GetMessage("sl20") + ": 0",{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff", "yellow"]
            }),
            this.txtFreeTurn.anchor.set(.5),
            this.boxFree.addChild(this.txtFreeTurn),
            this.boxFree.visible = !1,
            this.txtMoney = new BitmapText("0",{
                font: "40px Rocker",
                align: "center"
            }),
            this.txtMoney.anchor.set(.5),
            this.txtMoney.position.set(14, 130),
            this.txtMoney.visible = !1,
            this.bottomButton.addChild(this.btnLine, this.lblBetValue, this.txtBetValue, this.btnMinusBet, this.btnPlusBet, this.lblTotalBet, this.txtTotalBet, this.lblJustWon, this.txtJustWon, this.btnQuick, this.btnAuto, this.btnSpin, this.btnStopAuto, this.boxFree, this.txtMoney, this.boxFreeTicket)
        }
        ,
        p.prototype.InitTrial = function() {
            this.boxTrial = new Sprite(TextureCache["demo-bar.png"]),
            this.boxTrial.anchor.set(.5),
            this.boxTrial.position.set(0, -160),
            this.lblBalanceTrial = new PIXI.Text(Message.GetMessage("sl37"),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff", "yellow"]
            }),
            this.lblBalanceTrial.anchor.set(1, .5),
            this.lblBalanceTrial.position.set(15, 0),
            this.txtBalanceTrial = new BitmapText("0",{
                font: "26px Rocker",
                align: "center"
            }),
            this.txtBalanceTrial.anchor.set(0, .5),
            this.txtBalanceTrial.position.set(20, -2),
            this.boxTrial.addChild(this.lblBalanceTrial, this.txtBalanceTrial),
            this.boxTrial.visible = !1,
            this.topButton.addChild(this.boxTrial)
        }
        ,
        p.prototype.InitLines = function() {
            this.boxLines = new Sprite(TextureCache["popup.png"]),
            this.boxLines.anchor.set(.5),
            this.boxLines.position.set(0, -45),
            this.machine.addChild(this.boxLines),
            this.boxLines.visible = !1,
            this.txtLinesChoose = new PIXI.Text(Message.GetMessage("sl10"),{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#ffffff"]
            }),
            this.txtLinesChoose.anchor.set(.5),
            this.txtLinesChoose.position.set(0, -180),
            this.boxLines.addChild(this.txtLinesChoose);
            var t = new Sprite(TextureCache["button-close-normal.png"]);
            t.name = "button-close-normal.png",
            t.anchor.set(.5),
            t.position.set(340, -165),
            this.boxLines.addChild(t),
            t.interactive = !0,
            t.buttonMode = !0;
            var e, n = this;
            for (t.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", function() {
                n.boxLines.visible = !1
            }),
            this.buttonLines = [],
            e = 0; e < 4; e++) {
                var o = new Sprite(TextureCache["button-table-line-normal.png"]);
                o.name = "button-table-line-normal.png",
                o.anchor.set(.5),
                o.inx = e,
                o.position.set(-280, 70 * e - 80),
                o.addChild(new PIXI.Text(Message.GetMessage("sl" + (11 + e)),{
                    fontFamily: "SVN-Rocker",
                    fontSize: 15,
                    fontWeight: "bold",
                    fill: ["#fff"]
                })),
                o.getChildAt(0).anchor.set(.5),
                o.interactive = !0,
                o.buttonMode = !0,
                o.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", this.linesChooseDown.bind(o, this)),
                this.buttonLines.push(o),
                this.boxLines.addChild(o)
            }
            var i = -80
              , s = 0;
            for (this.linesButton = [],
            e = 0; e < 4; e++) {
                for (var a = 0; a < 5; a++) {
                    var r = new Sprite(TextureCache["Line_" + (s + 1) + "_normal.png"]);
                    r.name = "Line_" + (s + 1) + "_normal.png",
                    r.anchor.set(.5),
                    r.act = !1,
                    r.line = s + 1,
                    r.position.set(105 * a - 150, i),
                    r.interactive = !0,
                    r.buttonMode = !0,
                    r.on("pointerover", this.btnLineOver).on("pointerout", this.btnLineOut).on("pointerdown", this.linesDown.bind(r, this)),
                    s++,
                    this.linesButton.push(r),
                    this.boxLines.addChild(r)
                }
                i += 70
            }
        }
        ,
        p.prototype.InitPaytable = function() {
            this.payTable = new Sprite(TextureCache["popup.png"]),
            this.payTable.anchor.set(.5),
            this.payTable.position.set(0, -45);
            var t = new PIXI.Text(Message.GetMessage("sl18"),{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#ffffff"]
            });
            t.anchor.set(.5),
            t.position.set(0, -180),
            this.payTable.addChild(t),
            this.payTableContent = new Sprite(TextureCache["paytable-1.png"]),
            this.payTableContent.anchor.set(.5),
            this.payTableContent.position.set(0, 25),
            this.payTable.addChild(this.payTableContent);
            var e = new Sprite(TextureCache["button-close-normal.png"]);
            e.name = "button-close-normal.png",
            e.anchor.set(.5),
            e.position.set(340, -165),
            this.payTable.addChild(e),
            e.interactive = !0,
            e.buttonMode = !0;
            var n = this;
            e.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", function() {
                n.payTable.visible = !1
            }),
            this.payTable.visible = !1,
            this.machine.addChild(this.payTable)
        }
        ,
        p.prototype.InitPopup = function() {
            this.boxPopup = new Sprite(TextureCache["popup.png"]),
            this.boxPopup.anchor.set(.5),
            this.boxPopup.position.set(0, -45),
            this.txtNotify = new PIXI.Text(Message.GetMessage("sl27"),{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#ffffff"]
            }),
            this.txtNotify.anchor.set(.5),
            this.txtNotify.position.set(0, -180),
            this.boxPopup.addChild(this.txtNotify);
            var t = new Sprite(TextureCache["button-close-normal.png"]);
            t.name = "button-close-normal.png",
            t.anchor.set(.5),
            t.position.set(340, -165),
            this.boxPopup.addChild(t),
            t.interactive = !0,
            t.buttonMode = !0;
            var e = this;
            t.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", function() {
                e.boxPopup.visible = !1
            });
            var n = new PIXI.Text("",{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "700",
                fill: ["#fff"],
                dropShadow: !0,
                dropShadowColor: "#000",
                dropShadowDistance: 2,
                dropShadowAngle: Math.PI / 2,
                wordWrap: !0,
                wordWrapWidth: 500,
                align: "center"
            });
            n.anchor.set(.5),
            this.boxPopup.addChild(n),
            this.boxPopup.visible = !1,
            this.machine.addChild(this.boxPopup)
        }
        ,
        p.prototype.InitPopupWin = function() {
            this.boxPopupWin = new Sprite(TextureCache["popup.png"]),
            this.boxPopupWin.anchor.set(.5),
            this.boxPopupWin.position.set(0, -45),
            this.txtCongrats = new PIXI.Text(Message.GetMessage("sl21"),{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#ffffff"]
            }),
            this.txtCongrats.anchor.set(.5),
            this.txtCongrats.position.set(0, -180),
            this.boxPopupWin.addChild(this.txtCongrats);
            var t = new Sprite(TextureCache["button-close-normal.png"]);
            t.name = "button-close-normal.png",
            t.anchor.set(.5),
            t.position.set(340, -165),
            this.boxPopupWin.addChild(t),
            t.interactive = !0,
            t.buttonMode = !0;
            var e = this;
            t.on("pointerover", this.btnOver).on("pointerout", this.btnOut).on("pointerdown", function() {
                e.boxPopupWin.visible = !1
            });
            var n = new BitmapText("0",{
                font: "80px Rocker"
            });
            n.anchor.set(.5);
            var o = new PIXI.Text(Message.GetMessage("sl52"),{
                fontFamily: "SVN-Rocker",
                fontSize: 30,
                fontWeight: "700",
                fill: ["#fff"],
                dropShadow: !0,
                dropShadowColor: "#000",
                dropShadowDistance: 2,
                dropShadowAngle: Math.PI / 2
            });
            o.anchor.set(.5),
            o.position.set(0, -100);
            var i = new PIXI.Text("trong",{
                fontFamily: "SVN-Rocker",
                fontSize: 30,
                fontWeight: "700",
                fill: ["#fff"],
                dropShadow: !0,
                dropShadowColor: "#000",
                dropShadowDistance: 2,
                dropShadowAngle: Math.PI / 2
            });
            i.anchor.set(.5),
            i.position.set(0, 120),
            this.boxPopupWin.addChild(o, n, i),
            this.machine.addChild(this.boxPopupWin),
            this.boxPopupWin.visible = !1
        }
        ,
        p.prototype.JoinGame = function(t) {
            a.Config.isLogin ? this.hubs.connection.invoke("PlayNow", {
                RoomID: t,
                CurrencyID: a.Config.currencyId
            }) : this.showMessage(Language.GetMessage("app003"))
        }
        ,
        p.prototype.JoinRoom = function(t) {
            console.log(t),
            this.accountId = t.AccountID,
            this.currentPlayer = t,
            a.Config.isTry || (this.txtUserName.text = t.Account.Nickname,
            this.balance = t.Account.GoldBalance),
            this.xEvent.visible = !1,
            a.Config.roomId = t.RoomID,
            a.Config.totalLines = this.line ? this.line.length : t.TotalLine,
            a.Config.betValue = t.BetValue,
            a.Config.inRoom = !0,
            a.Config.moneyType = t.moneyType,
            this.btnPlayMode.visible = !1,
            this.btnBack.visible = !0,
            s.Util.ClearTimeOut(a.Config.timeJackpot),
            this.cb && this.cb(),
            this.cb = null,
            this.changeSlotsRoom(),
            this.checkGame(),
            window.Config.EnableXEvent && r.contents.GetEvent(this)
        }
        ,
        p.prototype.btnTintOver = function(t) {
            this.filters = [t.filter]
        }
        ,
        p.prototype.btnTintOut = function() {
            this.filters = null
        }
        ,
        p.prototype.btnOver = function() {
            this.texture = TextureCache[this.name.replace("normal", "hover")]
        }
        ,
        p.prototype.btnOut = function() {
            this.texture = TextureCache[this.name]
        }
        ,
        p.prototype.txtOver = function() {
            this.style.fill = ["#ffffff", "#fff0a8"]
        }
        ,
        p.prototype.txtOut = function() {
            this.style.fill = ["#ffe468", "#fbb861"]
        }
        ,
        p.prototype.btnUp = function() {
            this.texture = TextureCache[this.name]
        }
        ,
        p.prototype.btnLineOver = function() {
            this.texture = TextureCache[this.name.replace("normal", "hover")]
        }
        ,
        p.prototype.btnLineOut = function() {
            this.active || (this.texture = TextureCache[this.name])
        }
        ,
        p.prototype.btnPlayModeDown = function(t) {
            a.Config.isTry || (a.Config.isTry = !0,
            t.xEvent.visible = !1,
            t.trial = new u.trial(t))
        }
        ,
        p.prototype.btnHideDown = function(t) {
            a.Config.isAutoSpin ? (window.App.isAuto = !0,
            window.App.isAuto && (sessionStorage.setItem("Auto-" + t.storage, a.Config.roomId + ";" + a.Config.autoSpinCount + ";" + a.Config.isAutoSpin + ";" + i.lines.CurrentLine),
            window.location.hash = "#",
            window.location.reload())) : t.showMessage(Message.GetMessage("sl98"))
        }
        ,
        p.prototype.btnBackDown = function(t) {
            if (a.Config.isLobby || a.Config.isAutoSpin && window.App.isAuto)
                return window.location.hash = "#",
                void window.location.reload();
            if (!(a.Config.isSpin || a.Config.isFreeSpin || a.Config.isBonus)) {
                a.Config.inRoom = !1,
                t.btnPlayMode.visible = !0,
                t.txtSession.text = "",
                t.txtMoney.visible = !1,
                t.payTable.visible = !1,
                t.boxFreeTicket.visible = !1,
                t.disableLines(),
                t.destroyEffect(),
                t.destroyMoney();
                try {
                    t.bigWinSound.stop()
                } catch (t) {}
                try {
                    t.jackpotSound.stop()
                } catch (t) {}
                try {
                    t.countSound.stop()
                } catch (t) {}
                try {
                    a.Config.countMoney.reset(),
                    a.Config.countMoneyJw.reset()
                } catch (t) {}
                t.showLobby(),
                a.Config.isTry && (a.Config.isTry = !1,
                delete t.trial,
                t.boxTrial.visible = !1),
                a.Config.roomId = 1,
                r.contents.DisableButtons(t),
                r.contents.GetJackpot(t),
                r.contents.DeleteTimer(),
                r.contents.EnableButton(t.btnPlayMode),
                r.contents.EnableButton(t.btnBack)
            }
        }
        ,
        p.prototype.btnSoundDown = function(t) {
            var e = t;
            if (a.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            if (a.Config.sound) {
                a.Config.sound = !1,
                e.btnSound.getChildAt(0).texture = TextureCache["icon-sound-off.png"];
                try {
                    PIXI.sound.stopAll()
                } catch (t) {}
                e.bgSound.stop()
            } else
                a.Config.sound = !0,
                e.btnSound.getChildAt(0).texture = TextureCache["icon-sound-on.png"],
                e.bgSound.play()
        }
        ,
        p.prototype.btnMusicDown = function(t) {
            var e = t;
            if (a.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            if (a.Config.music) {
                a.Config.music = !1;
                try {
                    e.bgSound.stop()
                } catch (t) {}
                e.btnMusic.getChildAt(0).texture = TextureCache["icon-music-off.png"]
            } else {
                a.Config.music = !0;
                try {
                    e.bgSound.play()
                } catch (t) {}
                e.btnMusic.getChildAt(0).texture = TextureCache["icon-music-on.png"]
            }
        }
        ,
        p.prototype.btnRankDown = function(t) {
            t.trans()
        }
        ,
        p.prototype.btnHistoryDown = function(t) {
            t.his()
        }
        ,
        p.prototype.btnGuideDown = function(t) {
            var e = t;
            if (a.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            a.Config.inRoom ? (e.payTable.visible = !0,
            e.payTableContent.texture = TextureCache["paytable-" + a.Config.roomId + ".png"]) : e.showMessage(Language.GetMessage("sl79"))
        }
        ,
        p.prototype.btnLineDown = function(t) {
            if (a.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            a.Config.isTry ? t.showMessage(Message.GetMessage("sl79")) : a.Config.isTicket ? t.showMessage(Message.GetMessage("sl80").replace("{0}", 20)) : t.boxLines.visible = !t.boxLines.visible
        }
        ,
        p.prototype.btnMinusBetDown = function(t) {
            if (a.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            var e;
            a.Config.isTry ? t.showMessage(Message.GetMessage("sl79")) : (t.beforeSpin(),
            r.contents.CheckLoginOrInRoom(t) && ((e = a.Config.roomId - 1) <= 0 && (e = 3),
            t.JoinGame(e)),
            r.contents.EnableButtons(t))
        }
        ,
        p.prototype.btnPlusBetDown = function(t) {
            if (a.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            var e;
            a.Config.isTry ? t.showMessage(Message.GetMessage("sl79")) : (t.beforeSpin(),
            r.contents.CheckLoginOrInRoom(t) && (3 < (e = a.Config.roomId + 1) && (e = 1),
            t.JoinGame(e)),
            r.contents.EnableButtons(t))
        }
        ,
        p.prototype.btnAutoDown = function(t) {
            var e = t;
            if (a.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            a.Config.isAutoSpin = window.App.isAutoKingdom = !0,
            $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
            window.App.isAuto && (window.App.showPopupMessage({
                content: Message.GetMessage("sl94").replace("{0}", Message.GetMessage("na8")),
                textDone: "OK"
            }),
            sessionStorage.setItem("Auto-" + t.storage, a.Config.roomId + ";" + a.Config.autoSpinCount + ";" + a.Config.isAutoSpin + ";" + i.lines.CurrentLine),
            $(".multislot-expand").addClass("active")),
            e.initSpin(e)
        }
        ,
        p.prototype.btnQuickDown = function(t) {
            a.Config.isQuick = !a.Config.isQuick,
            a.Config.isQuick ? t.btnQuick.getChildAt(1).texture = t.loader.resources.quick.textures["quickspin-active.png"] : t.btnQuick.getChildAt(1).texture = t.loader.resources.quick.textures["quickspin.png"]
        }
        ,
        p.prototype.txtAutoDown = function(t) {
            if (!a.Config.isLogin)
                return t.showMessage(Message.GetMessage("sl79")),
                void (t.boxAuto.visible = !1);
            a.Config.autoSpinCount = parseInt(this.value),
            a.Config.isAutoSpin = window.App.isAutoKingdom = !0,
            $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
            window.App.isAuto && (sessionStorage.setItem("Auto-" + t.storage, a.Config.roomId + ";" + a.Config.autoSpinCount + ";" + a.Config.isAutoSpin + ";" + i.lines.CurrentLine),
            $(".multislot-expand").addClass("active")),
            t.boxAuto.visible = !1,
            t.initSpin(t)
        }
        ,
        p.prototype.btnSpinDown = function(t) {
            t.initSpin(t)
        }
        ,
        p.prototype.btnStopAutoDown = function(t) {
            if (a.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            r.contents.StopAutoSpin(t)
        }
        ,
        p.prototype.linesChooseDown = function(t) {
            var e = t;
            switch (this.inx) {
            case 0:
                r.contents.UpdateLines(e, "2,4,6,8,10,12,14,16,18,20");
                break;
            case 1:
                r.contents.UpdateLines(e, "1,3,5,7,9,11,13,15,17,19");
                break;
            case 2:
                r.contents.UpdateLines(e, "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20");
                break;
            case 3:
                i.lines.CurrentLine = "",
                i.lines.CurrentLineArray = [],
                i.lines.TotalLines = 0,
                i.lines.DisableAllLineSelect(e),
                i.lines.DisableAllLine(e),
                e.txtLines.text = "0",
                r.contents.UpdateTotalBet(e, 0)
            }
        }
        ,
        p.prototype.linesDown = function(t) {
            if (r.contents.CheckLoginOrInRoom(t)) {
                if (this.active ? (this.texture = TextureCache["Line_" + this.line + "_normal.png"],
                i.lines.ArrayPop(this.line)) : (this.texture = TextureCache["Line_" + this.line + "_active.png"],
                i.lines.ArrayPush(this.line)),
                a.Config.sound)
                    try {
                        PIXI.sound.play("lineSound")
                    } catch (t) {}
                i.lines.ChooseEachLine(t),
                r.contents.UpdateTotalBet(t, t.currentPlayer.BetValue * i.lines.TotalLines)
            }
        }
        ,
        p.prototype.showMessage = function(t) {
            var e = this.boxPopup;
            e.getChildAt(2).text = t,
            e.visible = !0,
            a.Config.timePop = setTimeout(function() {
                e.visible = !1
            }, 2e3)
        }
        ,
        p.prototype.showLobby = function() {
            this.lobbyContainer.visible = !0;
            for (var t = 0; t < this.bgRoom.length; t++)
                this.bgRoom[t].visible = !1;
            this.columnContainer.visible = !1,
            a.Config.isLobby = !0
        }
        ,
        p.prototype.disableLines = function() {
            for (var t = 0; t < 3; t++)
                for (var e = 0; e < 20; e++)
                    this.linesImage[t][e].visible = !1
        }
        ,
        p.prototype.hideButtonEffect = function() {
            a.Config.isFreeSpin || (this.btnSpin.visible = !0)
        }
        ,
        p.prototype.destroyEffect = function() {
            r.contents.DeleteTwEffect();
            try {
                this.effect.destroy({
                    children: !0
                })
            } catch (t) {}
            this.effect = null,
            this.iconsContainer.destroy({
                children: !0
            }),
            this.iconsContainer = new Container,
            this.columnContainer.addChild(this.iconsContainer)
        }
        ,
        p.prototype.changeSlots = function() {
            for (var t, e = 0; e < this.totalItems - 3; e++)
                t = Math.floor(7 * Math.random()) + 1,
                this.column1[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column2[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column3[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column4[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column5[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"]
        }
        ,
        p.prototype.changeSlotsRoom = function() {
            for (var t, e = 0; e < this.totalItems; e++)
                t = Math.floor(7 * Math.random()) + 1,
                this.column1[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column2[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column3[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column4[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column5[e].texture = TextureCache["room-" + a.Config.roomId + "-item-" + t + ".png"]
        }
        ,
        p.prototype.checkGame = function() {
            if (this.hideLobby(),
            r.contents.UpdateControl(this),
            r.contents.GetTicket(this),
            0 < this.currentPlayer.SlotInfo.FreeSpins)
                return a.Config.isFreeSpin = !0,
                r.contents.DisableButtons(this),
                a.Config.totalFreeSpin = 0,
                a.Config.freeSpinCount = 0,
                void this.setupFreeSpin();
            this.checkAutoSpin() || r.contents.EnableButtons(this)
        }
        ,
        p.prototype.hideLobby = function() {
            this.lobbyContainer.visible = !1;
            for (var t = 0; t < this.bgRoom.length; t++)
                this.bgRoom[t].visible = !1;
            this.bgRoom[a.Config.roomId - 1].visible = !0,
            this.columnContainer.visible = !0,
            a.Config.isLobby = !1
        }
        ,
        p.prototype.beforeSpin = function() {
            r.contents.ClearTimer(),
            this.destroyEffect(),
            this.disableLines(),
            a.Config.numbShowEachLine = 0,
            a.Config.numberDown = 0,
            r.contents.DisableButtons(this),
            this.boxLines.visible = !1,
            a.Config.isBonus = a.Config.isBigWin = a.Config.isJackpot = a.Config.isWinFree = a.Config.isX2 = a.Config.isSuperWin = a.Config.isMegaWin = !1,
            this.txtMoney.visible = !1,
            this.txtMoney.text = "0",
            this.destroyMoney();
            try {
                a.Config.countMoney.reset(),
                a.Config.countMoneyJw.reset()
            } catch (t) {}
            try {
                this.bigWinSound.stop()
            } catch (t) {}
            try {
                this.jackpotSound.stop()
            } catch (t) {}
            try {
                this.countSound.stop()
            } catch (t) {}
            if (this.isCount)
                try {
                    this.txtJustWon.text = s.Util.ParseMoney(this.currentPlayer.SpinData.PayLinePrizeValue)
                } catch (t) {}
            if (this.isCount = !1,
            a.Config.sound)
                try {
                    this.bgSound.resume()
                } catch (t) {}
            this.boxPopup.visible = !1,
            this.boxPopupWin.visible = !1,
            a.Config.payLines = [],
            a.Config.lineItemsArr = []
        }
        ,
        p.prototype.initSpin = function(t) {
            var e = t;
            if (!a.Config.isSpin)
                if (0 !== i.lines.TotalLines) {
                    e.beforeSpin(),
                    1 !== this.hubs.connection.connection.connectionState && t.InitHubs(),
                    a.Config.countMoney = null,
                    a.Config.timeSpin = setTimeout(function() {
                        a.Config.isSpin && (a.Config.isSpin = !1,
                        r.contents.StopAutoSpin(e),
                        r.contents.EnableButtons(e))
                    }, 12e3);
                    try {
                        a.Config.isTry ? a.Config.isFreeSpin ? (-1 === e.trial.index && (e.trial.index = s.Util.RandomFrom(0, e.trial.dataFree.length - 1, void 0)),
                        e.trial.turn++,
                        e.startSpin(e.trial.dataFree[e.trial.index][e.trial.turn - 1])) : e.startSpin(e.trial.data[s.Util.RandomFrom(0, e.trial.data.length - 1, void 0)]) : a.Config.isTicket && !a.Config.isFreeSpin ? e.hubs.connection.invoke("SpinForTicket", {
                            MerchantID: 0,
                            RoomID: a.Config.roomId,
                            CurrencyID: a.Config.currencyId
                        }).catch(function() {
                            e.showMessage(Message.GetMessage("sl71")),
                            a.Config.isSpin = !1,
                            r.contents.StopAutoSpin(e),
                            r.contents.EnableButtons(e)
                        }) : e.hubs.connection.invoke("Spin", {
                            MerchantID: 0,
                            RoomID: a.Config.roomId,
                            CurrencyID: a.Config.currencyId,
                            Lines: i.lines.CurrentLine
                        }).then(function(t) {
                            t.c < 0 && (e.showError(t.c),
                            a.Config.isSpin = !1,
                            r.contents.StopAutoSpin(e),
                            r.contents.EnableButtons(e))
                        }).catch(function() {
                            e.showMessage(Message.GetMessage("sl71")),
                            a.Config.isSpin = !1,
                            r.contents.StopAutoSpin(e),
                            r.contents.EnableButtons(e)
                        })
                    } catch (t) {
                        e.showMessage(Message.GetMessage("sl71")),
                        a.Config.isSpin = !1,
                        r.contents.StopAutoSpin(e),
                        r.contents.EnableButtons(e)
                    }
                } else
                    e.showMessage(Message.GetMessage("sl81"))
        }
        ,
        p.prototype.startSpin = function(t) {
            var o, e = this;
            console.log("result", t),
            r.contents.ClearTimer(),
            a.Config.isSpin || (e.currentPlayer = t,
            a.Config.isSpin = !0,
            e.txtSession.text = "#" + this.currentPlayer.SpinData.SpinID,
            a.Config.slotData = [],
            a.Config.slotData = t.SpinData.SlotsData.split(","),
            e.disableLines(),
            e.changeSlots(),
            e.column1[1].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[0] + ".png"],
            e.column1[1].inx = a.Config.slotData[0],
            e.column1[2].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[5] + ".png"],
            e.column1[2].inx = a.Config.slotData[5],
            e.column1[3].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[10] + ".png"],
            e.column1[3].inx = a.Config.slotData[10],
            e.column2[1].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[1] + ".png"],
            e.column2[1].inx = a.Config.slotData[1],
            e.column2[2].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[6] + ".png"],
            e.column2[2].inx = a.Config.slotData[6],
            e.column2[3].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[11] + ".png"],
            e.column2[3].inx = a.Config.slotData[11],
            e.column3[1].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[2] + ".png"],
            e.column3[1].inx = a.Config.slotData[2],
            e.column3[2].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[7] + ".png"],
            e.column3[2].inx = a.Config.slotData[7],
            e.column3[3].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[12] + ".png"],
            e.column3[3].inx = a.Config.slotData[12],
            e.column4[1].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[3] + ".png"],
            e.column4[1].inx = a.Config.slotData[3],
            e.column4[2].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[8] + ".png"],
            e.column4[2].inx = a.Config.slotData[8],
            e.column4[3].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[13] + ".png"],
            e.column4[3].inx = a.Config.slotData[13],
            e.column5[1].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[4] + ".png"],
            e.column5[1].inx = a.Config.slotData[4],
            e.column5[2].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[9] + ".png"],
            e.column5[2].inx = a.Config.slotData[9],
            e.column5[3].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[14] + ".png"],
            e.column5[3].inx = a.Config.slotData[14],
            a.Config.isQuick && (e.column1[11].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[0] + ".png"],
            e.column1[11].inx = a.Config.slotData[0],
            e.column1[12].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[5] + ".png"],
            e.column1[12].inx = a.Config.slotData[5],
            e.column1[13].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[10] + ".png"],
            e.column1[13].inx = a.Config.slotData[10],
            e.column2[11].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[1] + ".png"],
            e.column2[11].inx = a.Config.slotData[1],
            e.column2[12].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[6] + ".png"],
            e.column2[12].inx = a.Config.slotData[6],
            e.column2[13].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[11] + ".png"],
            e.column2[13].inx = a.Config.slotData[11],
            e.column3[11].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[2] + ".png"],
            e.column3[11].inx = a.Config.slotData[2],
            e.column3[12].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[7] + ".png"],
            e.column3[12].inx = a.Config.slotData[7],
            e.column3[13].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[12] + ".png"],
            e.column3[13].inx = a.Config.slotData[12],
            e.column4[11].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[3] + ".png"],
            e.column4[11].inx = a.Config.slotData[3],
            e.column4[12].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[8] + ".png"],
            e.column4[12].inx = a.Config.slotData[8],
            e.column4[13].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[13] + ".png"],
            e.column4[13].inx = a.Config.slotData[13],
            e.column5[11].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[4] + ".png"],
            e.column5[11].inx = a.Config.slotData[4],
            e.column5[12].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[9] + ".png"],
            e.column5[12].inx = a.Config.slotData[9],
            e.column5[13].texture = TextureCache["room-" + a.Config.roomId + "-item-" + a.Config.slotData[14] + ".png"],
            e.column5[13].inx = a.Config.slotData[14]),
            a.Config.linesWin = [],
            a.Config.itemsWinAr = [],
            a.Config.itemsWin = [],
            0 < (null != e.currentPlayer.SpinData.PrizesData ? Object.keys(e.currentPlayer.SpinData.PrizesData).length : 0) && (o = e.currentPlayer.SpinData.PrizesData.split(";"),
            $.each(e.currentPlayer.SpinData.PositionData.split(";"), function(t, e) {
                var n = $.map(e.split(","), function(t) {
                    return parseInt(t)
                });
                a.Config.itemsWinAr.push(n),
                a.Config.linesWin.push(o[t].split(",")[0]),
                $.each(n, function(t, e) {
                    $.inArray(e, a.Config.itemsWin) < 0 && a.Config.itemsWin.push(e)
                })
            })),
            (a.Config.isFreeSpin || a.Config.isTicket) && (e.currentPlayer.SpinData.TotalBetValue = i.lines.TotalLines * e.currentPlayer.BetValue),
            e.currentPlayer.SpinData.IsJackpot && (a.Config.isJackpot = !0),
            e.currentPlayer.SpinData.PayLinePrizeValue >= a.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue && (a.Config.isBigWin = !0),
            e.currentPlayer.SpinData.PayLinePrizeValue >= a.Config.totalBetConfig.SuperWin * e.currentPlayer.BetValue && (a.Config.isSuperWin = !0),
            e.currentPlayer.SpinData.PayLinePrizeValue >= a.Config.totalBetConfig.MegaWin * e.currentPlayer.BetValue && (a.Config.isMegaWin = !0),
            t.SpinData.IsFreeSpin && (a.Config.isWinFree = !0),
            null !== t.SpinData.BonusGameData && 0 < t.SpinData.BonusGameData.length && (a.Config.isBonus = !0),
            s.Util.ClearTimeOut(a.Config.timeSpin),
            a.Config.isFreeSpin || r.contents.UpdateAutoSpin(e),
            e.spin())
        }
        ,
        p.prototype.UpdateJackpot = function(t) {
            0 < t && a.Config.inRoom && !a.Config.isTry && r.contents.CountJackPot(this.txtJackpot, !0, !1, t, 3.5)
        }
        ,
        p.prototype.spin = function() {
            var t = this;
            if (a.Config.isQuick ? (t.timeTween = .7,
            t.timeBack = .1,
            t.delayFirst = .15,
            t.spinTo = -t.startHeight - 1210) : (t.timeTween = 1.4,
            t.timeBack = .3,
            t.spinTo = -t.startHeight,
            t.delayFirst = .3),
            r.contents.ClearTimer(),
            a.Config.sound)
                try {
                    t.reelSpin.play()
                } catch (t) {}
            TweenMax.to(t.containerColumn1, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 0,
                data: "vqr",
                ease: Power0.easeNone,
                onComplete: function() {
                    try {
                        t.reelSpin.stop()
                    } catch (t) {}
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn1, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "vqr",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.containerColumn1.y = 0,
                            t.column1[t.totalItems - 3].texture = t.column1[1].texture,
                            t.column1[t.totalItems - 3].inx = t.column1[1].inx,
                            t.column1[t.totalItems - 2].texture = t.column1[2].texture,
                            t.column1[t.totalItems - 2].inx = t.column1[2].inx,
                            t.column1[t.totalItems - 1].texture = t.column1[3].texture,
                            t.column1[t.totalItems - 1].inx = t.column1[3].inx
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn2, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: t.delayFirst,
                data: "vqr",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn2, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "vqr",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column2[t.totalItems - 3].texture = t.column2[1].texture,
                            t.column2[t.totalItems - 3].inx = t.column2[1].inx,
                            t.column2[t.totalItems - 2].texture = t.column2[2].texture,
                            t.column2[t.totalItems - 2].inx = t.column2[2].inx,
                            t.column2[t.totalItems - 1].texture = t.column2[3].texture,
                            t.column2[t.totalItems - 1].inx = t.column2[3].inx,
                            t.containerColumn2.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn3, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 2 * t.delayFirst,
                data: "vqr",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn3, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "vqr",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column3[t.totalItems - 3].texture = t.column3[1].texture,
                            t.column3[t.totalItems - 3].inx = t.column3[1].inx,
                            t.column3[t.totalItems - 2].texture = t.column3[2].texture,
                            t.column3[t.totalItems - 2].inx = t.column3[2].inx,
                            t.column3[t.totalItems - 1].texture = t.column3[3].texture,
                            t.column3[t.totalItems - 1].inx = t.column3[3].inx,
                            t.containerColumn3.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn4, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 3 * t.delayFirst,
                data: "vqr",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn4, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "vqr",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column4[t.totalItems - 3].texture = t.column4[1].texture,
                            t.column4[t.totalItems - 3].inx = t.column4[1].inx,
                            t.column4[t.totalItems - 2].texture = t.column4[2].texture,
                            t.column4[t.totalItems - 2].inx = t.column4[2].inx,
                            t.column4[t.totalItems - 1].texture = t.column4[3].texture,
                            t.column4[t.totalItems - 1].inx = t.column4[3].inx,
                            t.containerColumn4.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn5, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 4 * t.delayFirst,
                data: "vqr",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn5, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "vqr",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column5[t.totalItems - 3].texture = t.column5[1].texture,
                            t.column5[t.totalItems - 3].inx = t.column5[1].inx,
                            t.column5[t.totalItems - 2].texture = t.column5[2].texture,
                            t.column5[t.totalItems - 2].inx = t.column5[2].inx,
                            t.column5[t.totalItems - 1].texture = t.column5[3].texture,
                            t.column5[t.totalItems - 1].inx = t.column5[3].inx,
                            t.containerColumn5.y = 0,
                            t.completeSpin()
                        }
                    })
                }
            })
        }
        ,
        p.prototype.completeSpin = function() {
            if (a.Config.isSpin = !1,
            a.Config.sound)
                try {
                    this.reelSpin.stop()
                } catch (t) {}
            this.showWin()
        }
        ,
        p.prototype.showWin = function() {
            var t = this;
            a.Config.isAutoSpin && r.contents.EnableButton(t.btnQuick),
            a.Config.isTry || 1 !== a.Config.roomId || r.contents.GetTicket(t),
            0 === a.Config.numberDown && 15 === a.Config.slotData.length && (a.Config.isTry ? (this.trial.balance += (a.Config.isFreeSpin ? 0 : -2e5) + this.currentPlayer.SpinData.PayLinePrizeValue,
            t.txtBalanceTrial.text = s.Util.ParseMoney(this.trial.balance, void 0),
            r.contents.CountJackPot(t.txtJackpot, !0, !1, this.trial.jackPot + 2500, 1),
            this.trial.jackPot += 2500) : (r.contents.UpdateBalance(t, t.currentPlayer.Account.GoldBalance),
            this.balance = t.currentPlayer.Account.GoldBalance),
            t.txtJustWon.text = s.Util.ParseMoney(t.currentPlayer.SpinData.PayLinePrizeValue, void 0)),
            t.normalWinOrJackPotOrBigWin()
        }
        ,
        p.prototype.destroyMoney = function() {
            try {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "money-fall-kd" === t[e].data && t[e].kill();
                for (var n = 0; n < this.moneyArr.length; n++)
                    this.moneyArr[n].destroy({
                        children: !0
                    })
            } catch (t) {}
            this.moneyArr = []
        }
        ,
        p.prototype.random = function(t, e) {
            var n;
            return null == e && (e = t,
            t = 0),
            e < t && (n = t,
            t = e,
            e = n),
            t + (e - t) * Math.random()
        }
        ,
        p.prototype.effectMoney = function() {
            this.moneyArr = [];
            for (var t = 0; t < this.total; t++)
                this.moneyArr.push(new AnimatedSprite(this.framesCoins)),
                this.moneyArr[t].anchor.set(.5),
                this.moneyArr[t].animationSpeed = .3,
                this.moneyArr[t].scale.set(this.random(.5, 1.4)),
                this.moneyContainer.addChild(this.moneyArr[t]),
                this.moneyArr[t].play(),
                this.moneyArr[t].position.set(this.random(0, this.size[0]), this.random(-200, -150)),
                TweenMax.to(this.moneyArr[t], this.random(1, 8), {
                    data: "money-fall-kd",
                    y: this.size[1] + 200,
                    ease: Linear.easeNone,
                    repeat: -1,
                    delay: -15
                })
        }
        ,
        p.prototype.effectWin = function(t) {
            var e, n, o = this;
            if (o.destroyEffect(),
            1 === t || 2 === t) {
                switch (t) {
                case 1:
                    e = null != TextureCache["txt-jackpot-" + a.Config.lang + ".png"] ? TextureCache["txt-jackpot-" + a.Config.lang + ".png"] : TextureCache["txt-jackpot-en.png"];
                    break;
                case 2:
                    e = null != TextureCache["txt-bigwin-" + a.Config.lang + ".png"] ? TextureCache["txt-bigwin-" + a.Config.lang + ".png"] : TextureCache["txt-bigwin-en.png"]
                }
                o.effect = new Sprite(TextureCache["shadow.png"]),
                o.effect.anchor.set(.5),
                o.effect.position.set(0, 0),
                o.effect.addChild(new Sprite(e)),
                o.effect.getChildAt(0).anchor.set(.5),
                o.effect.getChildAt(0).position.set(0, 0),
                o.machine.addChild(o.effect),
                1 === t && 1 < o.currentPlayer.SpinData.JackpotNum && ((n = new BitmapText(o.currentPlayer.SpinData.JackpotNum.toString(),{
                    font: "100px Rocker",
                    align: "center"
                })).anchor.set(.5),
                o.effect.children[0].addChild(n)),
                o.effectMoney(),
                TweenLite.to(o.effect, 1, {
                    alpha: 1,
                    data: "vq-eff"
                }),
                TweenMax.to(o.effect.scale, .5, {
                    x: 1.24,
                    y: 1.24,
                    repeat: 9,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    data: "vq-eff"
                })
            }
        }
        ,
        p.prototype.createAllIconEffect = function() {
            if (0 < a.Config.itemsWin.length)
                for (var t = 0; t < a.Config.itemsWin.length; t++) {
                    var e = new AnimatedSprite(this.framesWin);
                    e.anchor.set(.5),
                    e.position.set(this.itemsMainGame[a.Config.itemsWin[t] - 1].x, this.itemsMainGame[a.Config.itemsWin[t] - 1].y),
                    e.animationSpeed = .5,
                    e.loop = !0,
                    e.play(),
                    this.iconsContainer.addChild(e)
                }
        }
        ,
        p.prototype.normalWinOrJackPotOrBigWin = function() {
            var t, e = this;
            for (e.destroyEffect(),
            e.visibleIcons(),
            a.Config.countMoney = null,
            a.Config.countMoneyJw = null,
            t = 0; t < a.Config.linesWin.length; t++)
                a.Config.linesWin[t] < 21 && (e.linesImage[a.Config.roomId - 1][a.Config.linesWin[t] - 1].visible = !0);
            if (0 < e.currentPlayer.SpinData.PayLinePrizeValue) {
                for (t = 0; t < a.Config.linesWin.length; t++)
                    ;
                if (e.txtMoney.visible = !0,
                0 === a.Config.numberDown && e.showInLobby(e.currentPlayer.SpinData.PayLinePrizeValue),
                a.Config.isJackpot) {
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                    if (e.effectWin(1),
                    a.Config.sound)
                        try {
                            e.jackpotSound.play()
                        } catch (t) {}
                    r.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {
                        0 !== a.Config.numberDown || a.Config.isBonus || a.Config.isFreeSpin || a.Config.isWinFree || a.Config.isAutoSpin || r.contents.EnableButtons(e)
                    }),
                    0 === a.Config.numberDown && (e.isCount = !0,
                    r.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {})),
                    a.Config.isAutoSpin && r.contents.StopAutoSpin(e),
                    a.Config.timeBonusOrFree = setTimeout(function() {
                        return e.freeOrBonus(e)
                    }, 25e3)
                } else if (a.Config.isSuperWin || a.Config.isBigWin || a.Config.isMegaWin) {
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                    var n = 4 * e.currentPlayer.SpinData.PayLinePrizeValue / (a.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue);
                    if (a.Config.sound)
                        try {
                            e.countSound.play()
                        } catch (t) {}
                    r.contents.CountMoney(e.txtMoney, !0, !1, 0, a.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue, 0, 4, function() {
                        if (a.Config.sound)
                            try {
                                PIXI.sound.play("countEndSound")
                            } catch (t) {}
                        0 !== a.Config.numberDown || a.Config.isBonus || a.Config.isFreeSpin || a.Config.isWinFree || a.Config.isAutoSpin || r.contents.EnableButtons(e),
                        e.effectWin(2),
                        r.contents.CountMoney(e.txtMoney, !0, !1, a.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue, e.currentPlayer.SpinData.PayLinePrizeValue, 0, n - 4, function() {
                            if (a.Config.sound)
                                try {
                                    e.bigWinSound.play()
                                } catch (t) {}
                            try {
                                e.countSound.stop()
                            } catch (t) {}
                        })
                    }),
                    0 === a.Config.numberDown && (e.isCount = !0,
                    r.contents.CountMoney(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, n, function() {}, !0)),
                    a.Config.timeBonusOrFree = setTimeout(function() {
                        return e.freeOrBonus(e)
                    }, 1e3 * (16 + n))
                } else {
                    if (r.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1),
                    a.Config.sound)
                        try {
                            PIXI.sound.play("win")
                        } catch (t) {}
                    a.Config.timeSpin = setTimeout(function() {}, 900),
                    0 === a.Config.numberDown && r.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1, function() {}),
                    a.Config.timeBonusOrFree = setTimeout(function() {
                        return e.freeOrBonus(e)
                    }, 1500)
                }
            } else
                a.Config.timeBonusOrFree = setTimeout(function() {
                    return e.freeOrBonus(e)
                }, 0),
                e.txtJustWon.text = s.Util.ParseMoney(e.currentPlayer.SpinData.PayLinePrizeValue, void 0)
        }
        ,
        p.prototype.freeOrBonus = function(t) {
            var e = t;
            e.isCount = !1;
            try {
                e.destroyMoney(),
                a.Config.countMoney.reset(),
                a.Config.countMoneyJw.reset()
            } catch (t) {}
            a.Config.numberDown++,
            e.destroyEffect(),
            e.disableLines();
            try {
                e.bigWinSound.stop()
            } catch (t) {}
            try {
                e.jackpotSound.stop()
            } catch (t) {}
            try {
                e.countSound.stop()
            } catch (t) {}
            if (a.Config.sound)
                try {
                    e.bgSound.resume()
                } catch (t) {}
            if (e.txtMoney.visible = !1,
            e.hideButtonEffect(),
            s.Util.ClearTimeOut(a.Config.timeBonusOrFree),
            a.Config.isFreeSpin && (r.contents.UpdateFreeSpin(e),
            r.contents.UpdateTotalPrizeFreeSpin(e)),
            a.Config.isBonus)
                e.setupBonus();
            else if (a.Config.isWinFree)
                e.setupFreeSpin();
            else {
                if (a.Config.isFreeSpin)
                    return void (0 === a.Config.freeSpinCount ? a.Config.timeSpin = setTimeout(function() {
                        return e.finishFreeSpin(e)
                    }, 1 === a.Config.autoSpinMode ? 500 : 1500) : 1 !== a.Config.autoSpinMode && (a.Config.timeSpin = setTimeout(function() {
                        return e.initSpin(e)
                    }, 500)));
                e.checkAutoSpin() || (r.contents.EnableButtons(e),
                0 < e.currentPlayer.SpinData.PayLinePrizeValue && e.showEachLine())
            }
        }
        ,
        p.prototype.setupFreeSpin = function() {
            if (this.destroyEffect(),
            a.Config.sound)
                try {
                    PIXI.sound.play("winBonusFreespin")
                } catch (t) {}
            var t = this.currentPlayer.SlotInfo.FreeSpins;
            a.Config.isFreeSpin || (a.Config.freeSpinCount = a.Config.totalFreeSpin = a.Config.totalFreePrize = 0),
            a.Config.isFreeSpin = !0,
            a.Config.totalFreeSpin += t,
            a.Config.freeSpinCount += t,
            this.effect = new Sprite(TextureCache["shadow.png"]),
            this.effect.anchor.set(.5),
            this.effect.position.set(0, 0),
            this.effect.addChild(new Sprite(null != TextureCache["txt-freespin-" + a.Config.lang + ".png"] ? TextureCache["txt-freespin-" + a.Config.lang + ".png"] : TextureCache["txt-freespin-en.png"])),
            this.effect.getChildAt(0).anchor.set(.5),
            this.effect.getChildAt(0).position.set(0, 0),
            this.machine.addChild(this.effect),
            TweenLite.to(this.effect.getChildAt(0), 1, {
                alpha: 1,
                data: "vq-eff"
            }),
            TweenMax.to(this.effect.getChildAt(0).scale, .5, {
                x: 1.04,
                y: 1.04,
                repeat: 5,
                yoyo: !0,
                yoyoEase: Power1.easeInOut,
                data: "vq-eff"
            }),
            this.boxFree.visible = !0,
            this.txtFreeTurn.text = Message.GetMessage("sl20") + ": " + a.Config.freeSpinCount;
            var e = this;
            a.Config.timeSpin = setTimeout(function() {
                e.initSpin(e)
            }, 3e3)
        }
        ,
        p.prototype.finishFreeSpin = function(t) {
            var e = t;
            e.boxPopupWin.getChildAt(4).text = Message.GetMessage("sl82").replace("{0}", a.Config.totalFreeSpin),
            e.boxPopupWin.visible = !0,
            r.contents.CountNumber(e.boxPopupWin.getChildAt(3), !0, !1, 0, a.Config.totalFreePrize, 0, 1, function() {}),
            e.txtJustWon.text = s.Util.ParseMoney(a.Config.totalFreePrize, void 0),
            a.Config.totalFreeSpin = a.Config.totalFreePrize = a.Config.freeSpinCount = 0,
            a.Config.isFreeSpin = !1,
            e.boxFree.visible = !1,
            a.Config.isTry && (t.trial.index = -1,
            t.trial.turn = 0),
            a.Config.timeSpin = setTimeout(function() {
                e.boxPopupWin.visible = !1,
                e.checkAutoSpin() || r.contents.EnableButtons(e)
            }, 3500)
        }
        ,
        p.prototype.setupBonus = function() {
            if ((o = this).destroyEffect(),
            o.effect = new Sprite(TextureCache["spark.png"]),
            o.effect.anchor.set(.5),
            o.effect.position.set(0, 0),
            o.machine.addChild(o.effect),
            a.Config.sound)
                try {
                    PIXI.sound.play("pingSound")
                } catch (t) {}
            setTimeout(function() {
                if (a.Config.sound)
                    try {
                        PIXI.sound.play("bonusSound")
                    } catch (t) {}
            }, 2e3);
            var t = new AnimatedSprite(o.framesLight);
            t.animationSpeed = .5,
            t.loop = !1,
            t.anchor.set(.5, 1),
            t.position.set(0, 240),
            t.play();
            try {
                o.bgSound.pause()
            } catch (t) {}
            var e = new Sprite(TextureCache["tree.png"]);
            e.anchor.set(.5, 1),
            e.position.set(0, 240),
            e.scale.y = 0,
            TweenMax.to(e.scale, .8, {
                y: 1,
                data: "vqz-effect-win",
                delay: 0
            });
            var n = new Sprite(null != TextureCache["txt-bonus-" + a.Config.lang + ".png"] ? TextureCache["txt-bonus-" + a.Config.lang + ".png"] : TextureCache["txt-bonus-en.png"]);
            n.anchor.set(.5),
            n.alpha = 0,
            n.position.set(0, 0),
            o.effect.addChild(t, e, n),
            TweenLite.to(n, 0, {
                alpha: 1,
                data: "vqz-effect-win",
                delay: .8
            }),
            TweenMax.to(n.scale, .5, {
                x: 1.04,
                y: 1.04,
                repeat: 7,
                yoyo: !0,
                yoyoEase: Power1.easeInOut,
                data: "vqz-effect-win",
                delay: .8
            }),
            this.bonus = new l.bonus(this);
            var o = this;
            a.Config.timeSpin = setTimeout(function() {
                o.bonus.init()
            }, 5e3)
        }
        ,
        p.prototype.checkAutoSpin = function() {
            if (a.Config.isAutoSpin) {
                var t = this;
                return a.Config.timeSpin = setTimeout(function() {
                    t.initSpin(t)
                }, 1500),
                !0
            }
            return a.Config.isAutoSpin = !1,
            a.Config.autoSpinMode = 0,
            !1
        }
        ,
        p.prototype.visibleIcons = function() {
            for (var t = 0; t < this.itemsMainGame.length; t++)
                this.itemsMainGame[t].visible = !0
        }
        ,
        p.prototype.showEachLine = function() {
            var t = this;
            s.Util.ClearTimeOut(a.Config.timeOutEachLine);
            var e = a.Config.linesWin.length
              , n = 0;
            0 !== e ? (a.Config.numbShowEachLine++,
            a.Config.timeIntEachLine = setInterval(function() {
                if (a.Config.isSpin)
                    s.Util.ClearTimeInterval(a.Config.timeIntEachLine);
                else if (t.destroyEffect(),
                t.visibleIcons(),
                t.disableLines(),
                a.Config.linesWin[n] < 20)
                    a.Config.timeSpin = setTimeout(function() {
                        if (t.linesImage[a.Config.roomId - 1][a.Config.linesWin[n] - 1].visible = !0,
                        t.createIconEffect(a.Config.itemsWinAr[n]),
                        ++n === e) {
                            if (s.Util.ClearTimeInterval(a.Config.timeIntEachLine),
                            a.Config.isAutoSpin && 0 < a.Config.autoSpinCount)
                                return void t.initSpin(t);
                            a.Config.numbShowEachLine < 3 ? a.Config.timeShowWin = setTimeout(function() {
                                t.normalWinOrJackPotOrBigWin()
                            }, 2600) : setTimeout(function() {
                                t.destroyEffect(),
                                t.visibleIcons(),
                                t.disableLines()
                            }, 1200)
                        }
                    }, 50);
                else if (++n === e) {
                    if (s.Util.ClearTimeInterval(a.Config.timeIntEachLine),
                    a.Config.isAutoSpin && 0 < a.Config.autoSpinCount)
                        return void t.initSpin(t);
                    a.Config.numbShowEachLine < 2 ? a.Config.timeShowWin = setTimeout(function() {
                        t.normalWinOrJackPotOrBigWin()
                    }, 2600) : setTimeout(function() {
                        t.destroyEffect(),
                        t.disableLines()
                    }, 1200)
                }
            }, 1700)) : s.Util.ClearTimeInterval(a.Config.timeIntEachLine)
        }
        ,
        p.prototype.createIconEffect = function(t) {
            if (!(null == t || t.length <= 0))
                for (var e = 0; e < t.length; e++) {
                    var n = new AnimatedSprite(this.framesWin);
                    n.anchor.set(.5),
                    n.position.set(this.itemsMainGame[t[e] - 1].x, this.itemsMainGame[t[e] - 1].y),
                    n.animationSpeed = .5,
                    n.play(),
                    this.iconsContainer.addChild(n)
                }
        }
        ,
        p.prototype.finishBonus = function(t) {
            console.log("finish bonus", t),
            this.currentPlayer = t,
            r.contents.UpdateBalance(this, t.Account.Balance)
        }
        ,
        p.prototype.showError = function(t) {
            var e;
            switch (console.log("error", t),
            t) {
            case -51:
                e = Message.GetMessage("sl40");
                break;
            case -99:
                e = Message.GetMessage("sl71");
                break;
            case -600:
                e = Message.GetMessage("sl70");
                break;
            case -40004:
                e = Message.GetMessage("sl69");
                break;
            case -40005:
                e = Message.GetMessage("sl66"),
                setTimeout(App.handleBack, 2e3);
                break;
            default:
                e = t
            }
            this.showMessage(e)
        }
        ,
        p.prototype.delete = function() {
            r.contents.DeleteTimer(),
            r.contents.DeleteTweens();
            try {
                PIXI.sound.stopAll(),
                PIXI.sound.removeAll()
            } catch (t) {}
            try {
                this.loader.destroy()
            } catch (t) {}
            if (this.bonus)
                try {
                    delete this.bonus
                } catch (t) {}
            a.Config.isAutoSpin = a.Config.isSpin = a.Config.inRoom = a.Config.isBonus = a.Config.isWinFree = a.Config.isFreeSpin = !1,
            a.Config.isLogin = !1,
            r.contents.DeleteTimer(),
            r.contents.timer = 0,
            a.Config.countJp = null,
            window.removeEventListener("resize", this.resizeFunc);
            try {
                this.loader && delete this.loader
            } catch (t) {}
            try {
                document.URL.indexOf("slot") < 0 ? this.application.destroy(!0) : this.application.destroy(!1)
            } catch (t) {}
            try {
                this.hubs.connection.stop()
            } catch (t) {}
        }
        ,
        p.prototype.StopAuto = function() {
            this.isAuto = !1,
            $("#rolling-" + this.storage).removeClass("active"),
            $("#list-jp-icon-" + a.Config.gameId + "-play").length && $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
            $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).length && $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-playing").addClass("button-play"),
            $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().removeClass("playing");
            try {
                this.silent.setSession()
            } catch (t) {}
            try {
                this.silent && window.App.gameSlots && "kingdom" === window.App.gameSlots.game.storage && window.App.gameSlots.game.StopAuto(),
                r.contents.StopAutoSpin(this)
            } catch (t) {}
        }
        ,
        p.prototype.StartAuto = function() {
            var t = this;
            if (0 < this.silent.autoSpin || -1 === this.silent.autoSpin) {
                this.isAuto = !0,
                $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
                $("#list-jp-icon-" + a.Config.gameId + "-play").length && $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).length && $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().addClass("playing");
                try {
                    if (this.silent && window.App.gameSlots && "kingdom" === window.App.gameSlots.game.storage)
                        return void window.App.gameSlots.game.btnAutoDown()
                } catch (t) {}
                return this.silent.setSession(),
                1 === this.hubs.connection.connection.connectionState ? setTimeout(function() {
                    return t.silent.initSpin(t.silent)
                }, 200) : this.InitHubs(),
                !0
            }
            return this.silent.removeSession(),
            !1
        }
        ,
        p.prototype.CheckAuto = function() {
            return this.isAuto
        }
        ,
        p.prototype.SetSilent = function() {
            a.Config.isAutoSpin && (0 < a.Config.autoSpinCount || -1 === a.Config.autoSpinCount) && sessionStorage.setItem("Auto-" + this.storage, a.Config.roomId + ";" + a.Config.autoSpinCount + ";true;" + i.lines.CurrentLine)
        }
        ,
        p.prototype.RestartAuto = function(t, e) {
            var n = this;
            this.isAuto = !0,
            $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
            $("#list-jp-icon-" + a.Config.gameId + "-play").length && $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            t != a.Config.roomId ? (this.line = e,
            a.Config.roomId = t,
            this.silent.setSession(),
            1 === this.hubs.connection.connection.connectionState ? this.JoinGame(a.Config.roomId) : this.InitHubs()) : (i.lines.CurrentLine = e,
            1 === this.hubs.connection.connection.connectionState ? setTimeout(function() {
                return n.silent.initSpin(n.silent)
            }, 200) : this.InitHubs()),
            $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).length && $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().addClass("playing")
        }
        ,
        p.prototype.getRoomId = function() {
            return console.log("Config.roomId", a.Config.roomId),
            a.Config.roomId
        }
        ,
        p.prototype.showInLobby = function(t) {
            var e;
            a.Config.isAutoSpin && ($("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + a.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#rolling-" + this.storage).hasClass("active") || $("#rolling-" + this.storage).addClass("active"),
            $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().hasClass("playing") || $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().addClass("playing"),
            $("#mn-lobby-rolling-kingdom").length && ($("#mn-lobby-rolling-kingdom").append('<span class="rolling-win">+' + s.Util.ParseMoney(t) + "</span>"),
            TweenMax.to($("#mn-lobby-rolling-kingdom .rolling-win"), 2, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })),
            (e = $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId)).length && (e.parent().append('<span class="win active">+' + s.Util.ParseMoney(t) + "</span>"),
            TweenMax.to(e.parent().find("span.win"), 1, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })))
        }
        ,
        p.prototype.InitNotSilent = function(t) {
            this.isSilent = !1,
            t.cb && (this.cb = t.cb),
            this.size = t.size,
            this.target = t.target,
            this.loader = new PIXI.loaders.Loader,
            this.his = t.getHistory,
            this.trans = t.getStatistic,
            a.Config.ready = !1,
            this.GetAutoSpin(),
            this.CreateCanvas()
        }
        ,
        p.prototype.CreateCanvas = function() {
            PIXI.utils.skipHello(),
            this.application = new PIXI.Application(this.size[0],this.size[1],{
                transparent: !0,
                antialias: !0,
                view: this.target
            });
            var t = this;
            this.application.ticker.add(function() {
                t.Update(t)
            }),
            this.InitContainer();
            for (var e = 0; e < this.assets.length; e++)
                "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
            this.loader.onProgress.add(function() {
                return t.Loading(t)
            }),
            this.loader.load(function() {
                t.InitGame(),
                t.checkGame(),
                $("#divLoading").hide()
            })
        }
        ,
        p);
        function p(t) {
            this.hubs = null,
            this.line = null,
            this.bgLobbyPos = [-192, 10, 212],
            this.isCount = !1,
            this.linesImagePosition = [[[-17, -3], [-17, -106], [-17, 128], [-17, -50], [-17, 48], [-17, -60], [-17, 50], [-24, 12], [-22, 16], [-24, 14], [44, 4], [44, 22], [44, 20], [44, 14], [40, 66], [38, -64], [40, 64], [44, -28], [49, 34], [46, 34]], [[-17, -3], [-17, -102], [-17, 132], [-17, -44], [-17, 40], [-17, -60], [-17, 50], [-24, 18], [-22, 16], [-24, 0], [44, 4], [44, 22], [44, 20], [44, 14], [40, 66], [38, -58], [40, 64], [44, -28], [49, 34], [46, 34]], [[-17, -3], [-17, -106], [-17, 128], [-17, -50], [-17, 48], [-17, -60], [-17, 50], [-30, 18], [-22, 16], [-24, 14], [44, 4], [44, 22], [44, 20], [44, 14], [40, 66], [42, -60], [40, 64], [44, -28], [49, 34], [42, 30]]],
            this.totalItems = 30,
            this.total = 100,
            this.column1 = {},
            this.column2 = {},
            this.column3 = {},
            this.column4 = {},
            this.column5 = {},
            this.autoClientArr = [10, 50, 200, 1e3, 5e3],
            this.timeTween = 1.4,
            this.timeBack = .3,
            this.timeDelay = .1,
            this.timeSlow = .3,
            this.pointBack = -238,
            this.pointNext = -218,
            this.timerCount = 1,
            this.balance = 0,
            this.isSilent = !1,
            this.isAuto = !1,
            this.assets = [{
                id: "assets",
                src: "/slots/kingdom/json/assets.json"
            }, {
                id: "rooms",
                src: "/slots/kingdom/json/rooms.json"
            }, {
                id: "gamesEn",
                src: "/slots/kingdom/json/games-en.json"
            }, {
                id: "roomLine1",
                src: "/slots/kingdom/json/room-1-line.json"
            }, {
                id: "roomLine2",
                src: "/slots/kingdom/json/room-2-line.json"
            }, {
                id: "roomLine3",
                src: "/slots/kingdom/json/room-3-line.json"
            }, {
                id: "quick",
                src: "/slots/kingdom/json/quick.json"
            }, {
                id: "fxJackpot",
                src: "/slots/kingdom/json/fxJackpot.json"
            }, {
                id: "smokeParticle",
                src: "/slots/kingdom/json/smoke.json"
            }, {
                id: "firefly1Particle",
                src: "/slots/kingdom/json/firefly1.json"
            }, {
                id: "firefly2Particle",
                src: "/slots/kingdom/json/firefly2.json"
            }, {
                id: "event",
                src: "/slots/kingdom/json/event.json"
            }, {
                id: "hide",
                src: "/slots/kingdom/json/hide.json"
            }, {
                id: "",
                src: "/slots/kingdom/fonts/Rocker.xml"
            }, {
                id: "",
                src: "/slots/kingdom/fonts/RockerSmall.xml"
            }, {
                id: "bgVqz",
                src: "/slots/kingdom/assets/images/bg.jpg"
            }, {
                id: "machineVqz",
                src: "/slots/kingdom/assets/images/machine.png"
            }, {
                id: "dotVqz",
                src: "/slots/kingdom/assets/images/vq-dot.png"
            }, {
                id: "dotVqz2",
                src: "/slots/kingdom/assets/images/vq-dot-2.png"
            }, {
                id: "smokeVqz",
                src: "/slots/kingdom/assets/images/vq-smoke-1.png"
            }, {
                id: "smokeVqz2",
                src: "/slots/kingdom/assets/images/vq-smoke-2.png"
            }, {
                id: "bigWinSound",
                src: "/slots/kingdom/assets/sounds/bigwin.mp3"
            }, {
                id: "bgSound",
                src: "/slots/kingdom/assets/sounds/music_bg.mp3"
            }, {
                id: "lineSound",
                src: "/slots/kingdom/assets/sounds/select_line.mp3"
            }, {
                id: "btnClick",
                src: "/slots/kingdom/assets/sounds/btn_click.mp3"
            }, {
                id: "endReelSpin",
                src: "/slots/kingdom/assets/sounds/spin_done.mp3"
            }, {
                id: "reelSpin",
                src: "/slots/kingdom/assets/sounds/spin_action.mp3"
            }, {
                id: "win",
                src: "/slots/kingdom/assets/sounds/spin_win.mp3"
            }, {
                id: "winBonusFreespin",
                src: "/slots/kingdom/assets/sounds/start_bonus.mp3"
            }, {
                id: "bonusSound",
                src: "/slots/kingdom/assets/sounds/bonus.mp3"
            }, {
                id: "loseSound",
                src: "/slots/kingdom/assets/sounds/bonus_lose.mp3"
            }, {
                id: "pingSound",
                src: "/slots/kingdom/assets/sounds/ping.mp3"
            }, {
                id: "countSound",
                src: "/slots/kingdom/assets/sounds/count.mp3"
            }, {
                id: "countEndSound",
                src: "/slots/kingdom/assets/sounds/count_end.mp3"
            }, {
                id: "jackpotSound",
                src: "/slots/kingdom/assets/sounds/jackpot.mp3"
            }, {
                id: "popupSound",
                src: "/slots/kingdom/assets/sounds/popup.mp3"
            }, {
                id: "coinVqz",
                src: "/slots/kingdom/assets/images/coin.png"
            }],
            this.arrBox = [],
            this.spinTo = 0,
            this.delayFirst = 0,
            t.isSilent && (this.isSilent = t.isSilent),
            t.storage && (this.storage = t.storage),
            this.token = t.token,
            a.Config.hubUrl = t.hubUrl,
            a.Config.apiUrl = t.apiUrl,
            a.Config.api = t.api,
            a.Config.lang = Language.GetLanguageCode(),
            t.cb && (this.cb = t.cb),
            t.currencyID ? a.Config.currencyId = t.currencyID : a.Config.currencyId = "undefined" != typeof App ? App.account.currencyID : 1,
            this.isSilent ? (a.Config.ready = !0,
            this.isAuto = !0,
            this.ResetTweenTab(),
            this.silent = new c.silent(this)) : (this.size = t.size,
            this.target = t.target,
            this.loader = new PIXI.loaders.Loader,
            this.his = t.getHistory,
            this.trans = t.getStatistic,
            a.Config.ready = !1,
            this.GetAutoSpin(),
            this.Init())
        }
        e.games = h
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = n(2)
          , i = n(6)
          , s = (a.prototype.Init = function() {
            var e = this;
            this.connection = (new o.HubConnectionBuilder).withUrl(this.url, {
                accessTokenFactory: function() {
                    return e.token
                },
                skipNegotiation: !0,
                transport: o.HttpTransportType.WebSockets
            }).build(),
            this.connection.serverTimeoutInMilliseconds = 1e5,
            this.connection.start().then(function() {
                i.Config.isLogin = !0,
                e.game.isSilent || i.Config.isAutoSpin ? e.game.hubs.connection.invoke("PlayNow", {
                    RoomID: i.Config.roomId,
                    CurrencyID: i.Config.currencyId
                }) : e.game.enableLoby(),
                console.log("connected")
            }).catch(function(t) {
                return console.error(t)
            }),
            this.connection.on("JoinGame", function(t) {
                e.game.isSilent ? e.game.silent.joinRoom(t) : e.game.JoinRoom(t)
            }),
            this.connection.on("ResultSpin", function(t) {
                e.game.isSilent ? e.game.silent.startSpin(t) : e.game.startSpin(t)
            }),
            this.connection.on("MessageError", function(t) {
                e.game.isSilent || e.game.showError(t)
            }),
            this.connection.on("ResultBonusGame", function(t) {
                e.game.isSilent ? e.game.silent.finishBonus(t) : e.game.finishBonus(t)
            }),
            this.connection.on("UpdateJackpot", function(t) {
                e.game.isSilent || e.game.UpdateJackpot(t)
            })
        }
        ,
        a);
        function a(t, e, n) {
            this.url = t,
            this.token = e,
            this.game = n,
            this.Init()
        }
        e.default = s
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.bonus = void 0;
        var p = n(0)
          , u = n(6)
          , c = n(15);
        n(1);
        var o = (i.prototype.init = function() {
            var t = this.game;
            t.boxPopup.visible = !1,
            t.destroyEffect(),
            t.disableLines(),
            t.txtMoney.visible = !1,
            c.contents.ClearTimer(),
            c.contents.DisableButtons(t),
            this.disableContainer(),
            this.bonusContainer = new Sprite(TextureCache["bg-tree.png"]),
            this.bonusContainer.anchor.set(.5),
            this.bonusContainer.position.set(t.size[0] / 2, t.size[1] / 2),
            t.application.stage.addChild(this.bonusContainer);
            var e = new Sprite(TextureCache["rect.png"]);
            e.anchor.set(.5),
            e.position.set(-300, 250),
            this.lblTurn = new PIXI.Text(Message.GetMessage("oc6"),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff", "yellow"]
            }),
            this.lblTurn.anchor.set(.5),
            this.lblTurn.position.set(0, -16),
            this.txtTurn = new BitmapText(this.startPick.toString(),{
                font: "32px Rocker"
            }),
            this.txtTurn.anchor.set(.5),
            this.txtTurn.position.set(0, 13),
            e.addChild(this.lblTurn, this.txtTurn);
            var n = new Sprite(TextureCache["rect.png"]);
            if (n.anchor.set(.5),
            n.position.set(350, 250),
            this.lblMulti = new PIXI.Text(Message.GetMessage("oc5"),{
                fontFamily: "SVN-Rocker",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff", "yellow"]
            }),
            this.lblMulti.anchor.set(.5),
            this.lblMulti.position.set(0, -16),
            this.txtMulti = new BitmapText(this.startBonus.toString(),{
                font: "32px Rocker"
            }),
            this.txtMulti.anchor.set(.5),
            this.txtMulti.position.set(0, 13),
            n.addChild(this.lblMulti, this.txtMulti),
            this.bonusContainer.addChild(e, n),
            u.Config.sound)
                try {
                    t.bgSound.resume()
                } catch (t) {}
            this.boxArr = [];
            for (var o = 0; o < this.boxPos.length; o++) {
                var i = new AnimatedSprite(t.framesFire);
                i.anchor.set(.5),
                i.inx = o,
                i.position.set(this.boxPos[o][0], this.boxPos[o][1]),
                i.animationSpeed = .25,
                i.play(),
                i.interactive = !0,
                i.buttonMode = !0,
                i.on("pointerover", t.btnTintOver.bind(i, t)).on("pointerout", t.btnTintOut).on("pointerdown", this.boxDown.bind(i, this)),
                this.boxArr.push(i),
                this.bonusContainer.addChild(i)
            }
            this.txtTimer = new PIXI.Text(Message.GetMessage("sl78").replace("{0}", this.timer),{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "500",
                fill: ["#ffffff", "yellow"]
            }),
            this.txtTimer.anchor.set(.5),
            this.txtTimer.position.set(20, 330),
            this.bonusContainer.addChild(this.txtTimer),
            this.timer = 15,
            this.game.Resize(this.game),
            this.countDown(this)
        }
        ,
        i.prototype.disableContainer = function() {
            this.game.machine.visible = !1
        }
        ,
        i.prototype.enableContainer = function() {
            this.game.machine.visible = !0
        }
        ,
        i.prototype.countDown = function(t) {
            var e = t;
            if (p.Util.ClearTimeOut(u.Config.timeBonus),
            console.log("dđ", e.timer),
            e.timer--,
            e.txtTimer.text = Message.GetMessage("sl78").replace("{0}", e.timer),
            e.timer <= 0)
                return e.txtTimer.visible = !1,
                e.disableBox(),
                void e.finishBonus(e);
            u.Config.timeBonus = setTimeout(function() {
                return e.countDown(e)
            }, 1e3)
        }
        ,
        i.prototype.disableBox = function() {
            for (var t = 0; t < this.boxArr.length; t++)
                this.boxArr[t].interactive = !1,
                this.boxArr[t].buttonMode = !1
        }
        ,
        i.prototype.enableBox = function() {
            if (!(this.step >= this.numberPick))
                for (var t = 0; t < this.boxArr.length; t++)
                    $.inArray(t, this.selectArr) < 0 && (this.boxArr[t].interactive = !0,
                    this.boxArr[t].buttonMode = !0)
        }
        ,
        i.prototype.boxDown = function(t) {
            var n = t;
            if (p.Util.ClearTimeOut(u.Config.timeBonus),
            u.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            if (n.txtTimer.visible = !1,
            n.disableBox(),
            n.currentBox = this,
            !(n.step >= n.numberPick || n.isSub || n.isPlay)) {
                var e = n.goldData[n.step].split(",")
                  , o = e[1]
                  , i = e[3]
                  , s = n.getItem(o);
                if (n.isSub = "bonus" === s,
                this.visible = !1,
                n.step++,
                "gold" === s) {
                    n.isPlay = !0;
                    var a = new Sprite(TextureCache["item-1.png"]);
                    a.anchor.set(.5),
                    a.scale.set(.2),
                    a.position.set(n.currentBox.x, n.currentBox.y),
                    n.bonusContainer.addChild(a),
                    TweenMax.to(a.scale, .3, {
                        data: "vq-eff",
                        x: 1,
                        y: 1,
                        onComplete: function() {
                            var t = new BitmapText(p.Util.ParseMoney(i / n.startBonus, void 0),{
                                font: "22px Rocker"
                            });
                            t.anchor.set(.5),
                            a.addChild(t),
                            TweenMax.to(t, .2, {
                                y: -20,
                                delay: 0,
                                ease: Power0.easeNone,
                                onComplete: function() {}
                            }),
                            TweenMax.to(t, .2, {
                                y: 0,
                                delay: .2,
                                ease: Power0.easeNone,
                                onComplete: function() {}
                            }),
                            setTimeout(function() {
                                t.visible = !1
                            }, 700);
                            var e = new BitmapText(p.Util.ParseMoney(i, void 0),{
                                font: "22px Rocker"
                            });
                            e.anchor.set(.5),
                            a.addChild(e),
                            e.alpha = 0,
                            TweenMax.to(e, 0, {
                                alpha: 1,
                                delay: .7,
                                ease: Power0.easeNone,
                                onComplete: function() {}
                            }),
                            TweenMax.to(e, .2, {
                                y: -20,
                                delay: .7,
                                ease: Power0.easeNone,
                                onComplete: function() {}
                            }),
                            TweenMax.to(e, .2, {
                                y: 0,
                                delay: .9,
                                ease: Power0.easeNone,
                                onComplete: function() {}
                            }),
                            n.isPlay = !1,
                            setTimeout(function() {
                                return n.enableBox()
                            }, 300)
                        }
                    }),
                    n.updatePick(),
                    n.step >= n.numberPick && !n.isSub && setTimeout(function() {
                        return n.finishBonus(n)
                    }, 2e3)
                } else if ("lucky" === s) {
                    if (u.Config.sound)
                        try {
                            PIXI.sound.play("loseSound")
                        } catch (t) {}
                    var r = new Sprite(TextureCache["item-3.png"]);
                    r.position.set(n.currentBox.x, n.currentBox.y),
                    r.anchor.set(.5),
                    r.scale.set(.1),
                    n.bonusContainer.addChild(r),
                    TweenMax.to(r.scale, .2, {
                        x: 1,
                        y: 1,
                        delay: 0,
                        ease: Power0.easeNone,
                        onComplete: function() {
                            n.startPick++,
                            n.updateMulti(),
                            TweenMax.to(n.txtTurn, .2, {
                                alpha: .6,
                                delay: 0,
                                yoyo: !0,
                                repeat: 3,
                                ease: Power0.easeNone,
                                onComplete: function() {
                                    n.enableBox()
                                }
                            })
                        }
                    })
                } else {
                    if (u.Config.sound)
                        try {
                            PIXI.sound.play("bonusSound")
                        } catch (t) {}
                    var l = new Sprite(TextureCache["item-2.png"]);
                    l.position.set(n.currentBox.x, n.currentBox.y),
                    l.anchor.set(.5),
                    l.scale.set(.1),
                    n.isSub = !0,
                    n.bonusContainer.addChild(l),
                    TweenMax.to(l.scale, .2, {
                        x: 1,
                        y: 1,
                        delay: 0,
                        ease: Power0.easeNone,
                        onComplete: function() {
                            setTimeout(function() {
                                return n.createMulti(n)
                            }, 500)
                        }
                    })
                }
            }
        }
        ,
        i.prototype.updateMulti = function() {
            this.startBonus++,
            this.txtMulti.text = this.startBonus
        }
        ,
        i.prototype.updatePick = function() {
            var t = this.startPick - this.step;
            0 <= t ? this.txtTurn.text = t : (this.txtTurn.text = "0",
            this.disableBox())
        }
        ,
        i.prototype.getItem = function(t) {
            var e = "";
            switch (parseInt(t)) {
            case 200:
            case 201:
            case 202:
            case 203:
                e = "bonus";
                break;
            case 210:
                e = "lucky";
                break;
            case 220:
                e = "gold"
            }
            return e
        }
        ,
        i.prototype.createMulti = function(t) {
            var e = t.game;
            t.bonusMulti = new Sprite(TextureCache["multiple-bg.png"]),
            t.bonusMulti.anchor.set(.5),
            t.bonusArr = [];
            for (var n = [[-142, -50], [0, -50], [142, -50], [-80, 70], [80, 70]], o = 0; o < 5; o++)
                t.bonusArr.push(new Sprite(TextureCache["item-2.png"])),
                t.bonusArr[o].inx = o,
                t.bonusArr[o].anchor.set(.5),
                t.bonusArr[o].position.set(n[o][0], n[o][1]),
                t.bonusArr[o].interactive = !0,
                t.bonusArr[o].buttonMode = !0,
                t.bonusArr[o].on("pointerover", e.btnTintOver.bind(t.bonusArr[o], t.game)).on("pointerout", e.btnTintOut).on("pointerdown", t.bonusDown.bind(t.bonusArr[o], this)),
                t.bonusMulti.addChild(t.bonusArr[o]);
            t.bonusContainer.addChild(t.bonusMulti)
        }
        ,
        i.prototype.bonusDown = function(t) {
            for (var n = t, e = t.game, o = [10, 10, 15, 15, 20], i = n.goldData[n.step - 1].split(","), s = i[3], a = 0; a < 5; a++)
                n.bonusArr[a].interactive = !1,
                n.bonusArr[a].buttonMode = !1;
            var r = e.currentPlayer.BetValue
              , l = i[3] / (n.startBonus * r)
              , u = o.indexOf(l);
            o.splice(u, 1);
            var c = new BitmapText(p.Util.ParseMoney(l * r, void 0),{
                font: "25px Rocker"
            });
            c.anchor.set(.5),
            c.position.set(this.x, this.y + 20),
            n.bonusMulti.addChild(c);
            var h = this.inx;
            TweenMax.to(c, .2, {
                data: "vq-eff",
                y: c.y - 20,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    TweenMax.to(c, .2, {
                        data: "vq-eff",
                        y: c.y + 20,
                        delay: 0,
                        ease: Power0.easeNone,
                        onComplete: function() {
                            var t, e = 0;
                            for (a = 0; a < 5; a++)
                                n.bonusArr[a].inx !== h && (n.bonusArr[a].alpha = .4,
                                (t = new BitmapText(p.Util.ParseMoney(o[e] * r, void 0),{
                                    font: "25px Rocker"
                                })).anchor.set(.5),
                                t.alpha = .4,
                                t.position.set(n.bonusArr[a].x, n.bonusArr[a].y + 20),
                                n.bonusMulti.addChild(t),
                                TweenMax.to(t, .2, {
                                    data: "vq-eff",
                                    y: t.y - 20,
                                    delay: 0,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                TweenMax.to(t, .2, {
                                    data: "vq-eff",
                                    y: t.y,
                                    delay: .2,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                e++);
                            n.updatePick(),
                            n.isSub = !1,
                            setTimeout(function() {
                                n.bonusMulti.destroy({
                                    children: !0
                                });
                                var t = new BitmapText(p.Util.ParseMoney(l * r, void 0),{
                                    font: "22px Rocker"
                                });
                                t.anchor.set(.5),
                                t.alpha = .4,
                                t.position.set(n.currentBox.x, n.currentBox.y),
                                n.bonusContainer.addChild(t),
                                TweenMax.to(t, .2, {
                                    y: t.y - 20,
                                    delay: 0,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                TweenMax.to(t, .2, {
                                    y: t.y + 20,
                                    delay: .2,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                setTimeout(function() {
                                    t.visible = !1
                                }, 700);
                                var e = new BitmapText(p.Util.ParseMoney(s, void 0),{
                                    font: "22px Rocker"
                                });
                                e.anchor.set(.5),
                                e.alpha = 0,
                                e.position.set(n.currentBox.x, n.currentBox.y),
                                n.bonusContainer.addChild(e),
                                TweenMax.to(e, 0, {
                                    alpha: 1,
                                    delay: .7,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                TweenMax.to(e, .2, {
                                    y: e.y - 20,
                                    delay: .7,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                TweenMax.to(e, .2, {
                                    y: e.y + 20,
                                    delay: .9,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                setTimeout(function() {
                                    n.step >= n.numberPick ? setTimeout(function() {
                                        return n.finishBonus(n)
                                    }, 1200) : n.enableBox()
                                }, 300)
                            }, 1200)
                        }
                    })
                }
            })
        }
        ,
        i.prototype.getRandom = function(t, e) {
            var n = new Array
              , o = [1, 2, 3, 4, 5];
            switch (e) {
            case 25:
                o = [3, 4, 5];
                break;
            case 26:
                o = [2, 3, 4];
                break;
            case 27:
                o = [1, 2, 3]
            }
            for (var i = 0; i < o.length; i++)
                if (o[i] === t) {
                    o.splice(i, 1);
                    break
                }
            var s = Math.round(Math.random())
              , a = o[1 - s]
              , r = o[s];
            return n.push(a),
            n.push(r),
            n
        }
        ,
        i.prototype.finishBonus = function(t) {
            var e = this.game
              , n = t;
            n.txtTimer.visible = !1,
            p.Util.ClearTimeOut(u.Config.timeBonus),
            u.Config.isTry ? n.showPop() : e.hubs.connection.invoke("PlayBonusGame", {
                RoomID: u.Config.roomId,
                CurrencyID: u.Config.currencyId
            }).then(function() {
                n.showPop()
            }).catch(function() {
                n.enableBox()
            })
        }
        ,
        i.prototype.showPop = function() {
            var t = this
              , e = this.game
              , n = new Sprite(TextureCache["popup.png"]);
            n.anchor.set(.5),
            n.position.set(0, 0);
            var o = new PIXI.Text(Message.GetMessage("sl21"),{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#ffffff"]
            });
            o.anchor.set(.5),
            o.position.set(0, -180),
            n.addChild(o);
            var i = new BitmapText("0",{
                font: "80px Rocker"
            });
            i.anchor.set(.5);
            var s = new PIXI.Text(Message.GetMessage("sl52"),{
                fontFamily: "SVN-Rocker",
                fontSize: 30,
                fontWeight: "700",
                fill: ["#fff"],
                dropShadow: !0,
                dropShadowColor: "#000",
                dropShadowDistance: 2,
                dropShadowAngle: Math.PI / 2
            });
            s.anchor.set(.5),
            s.position.set(0, -100);
            var a = new PIXI.Text(Message.GetMessage("sl83"),{
                fontFamily: "SVN-Rocker",
                fontSize: 30,
                fontWeight: "700",
                fill: ["#fff"],
                dropShadow: !0,
                dropShadowColor: "#000",
                dropShadowDistance: 2,
                dropShadowAngle: Math.PI / 2
            });
            a.anchor.set(.5),
            a.position.set(0, 120),
            n.addChild(s, i, a),
            this.bonusContainer.addChild(n);
            for (var r = 0, l = 0; l < this.goldData.length; l++)
                r += parseInt(this.goldData[l].split(",")[3]);
            if (u.Config.sound)
                try {
                    e.bgSound.pause()
                } catch (t) {}
            if (u.Config.sound)
                try {
                    PIXI.sound.play("popupSound")
                } catch (t) {}
            c.contents.CountNumber(i, !0, !1, 0, r, 0, 1),
            u.Config.isBonus = !1,
            u.Config.isFreeSpin && (u.Config.totalFreePrize += r),
            e.txtJustWon.text = p.Util.ParseMoney(r, void 0),
            u.Config.isTry ? (e.trial.balance += r,
            e.txtBalanceTrial.text = p.Util.ParseMoney(e.trial.balance, void 0)) : (e.balance += r,
            c.contents.UpdateBalance(e, e.balance)),
            u.Config.timeBonusOrFree = setTimeout(function() {
                return t.deleteBonus(t)
            }, 3e3)
        }
        ,
        i.prototype.deleteBonus = function(t) {
            var e = t.game;
            e.boxPopup.visible = !1,
            e.destroyEffect(),
            e.disableLines(),
            e.txtMoney.visible = !1,
            c.contents.ClearTimer(),
            c.contents.DisableButtons(e);
            try {
                t.bonusContainer.destroy({
                    children: !0
                })
            } catch (t) {}
            if (u.Config.sound)
                try {
                    PIXI.sound.stop("popupSound")
                } catch (t) {}
            if (u.Config.sound)
                try {
                    e.bgSound.resume()
                } catch (t) {}
            t.enableContainer(),
            u.Config.isWinFree ? e.setupFreeSpin() : u.Config.isFreeSpin ? 0 === u.Config.freeSpinCount ? e.finishFreeSpin(e) : setTimeout(function() {
                return e.initSpin(e)
            }, 500) : (e.checkAutoSpin() || (c.contents.EnableButtons(e),
            0 < e.currentPlayer.SpinData.TotalPrizeValue && e.showEachLine()),
            delete e.bonus)
        }
        ,
        i);
        function i(t) {
            this.selectArr = [],
            this.goldData = [],
            this.step = 0,
            this.pos = -1,
            this.timer = 0,
            this.startPick = 10,
            this.numberPick = 0,
            this.startBonus = 0,
            this.boxPos = [[-450, 0], [-350, -150], [-265, -260], [20, -310], [255, -315], [305, -165], [330, 55], [-210, -40], [-50, -120], [140, -120], [-45, 100], [170, 90], [-310, 80], [-140, -220], [70, 30], [40, 220]],
            this.prizeId = -1,
            this.inx = -1,
            this.isSub = !1,
            this.isPlay = !1,
            this.money = 0,
            this.game = t,
            this.startPick = 10,
            this.startBonus = t.currentPlayer.SpinData.StartBonus,
            this.goldData = t.currentPlayer.SpinData.BonusGameData.split(";"),
            this.step = 0,
            this.isSub = !1,
            this.isPlay = !1,
            this.numberPick = this.goldData.length
        }
        e.bonus = o
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.trial = void 0;
        function o(t) {
            this.player = {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50146200,
                    LastLineData: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                    LastPrizeValue: 36e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1074,
                    SlotsData: "7,6,6,6,6,5,4,7,6,5,4,6,6,7,6",
                    PrizesData: "2,14,100000;3,15,20000;6,15,20000;8,15,20000;9,14,100000;10,15,20000;11,15,20000;12,15,20000;18,15,20000;19,15,20000",
                    PositionData: "2,3,4,5;12,13,15;2,4,5;3,5,12;2,4,13,15;2,4,13;3,9,15;5,9,13;2,3,4;4,5,12",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50146200,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 36e4,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 513300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            },
            this.balance = 5e7,
            this.jackPot = 5e7,
            this.data = [{
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 5015e4,
                    LastLineData: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                    LastPrizeValue: 2e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1093,
                    SlotsData: "7,7,7,7,7,7,7,7,7,7,7,7,7,7,7",
                    PrizesData: "1,16,300000;2,16,300000;3,16,300000;4,16,300000;5,16,300000;6,16,300000;7,16,300000;8,16,300000;9,16,300000;10,16,300000;11,16,300000;12,16,300000;13,16,300000;14,16,300000;15,16,300000;16,16,300000;17,16,300000;18,16,300000;19,16,300000;20,16,300000",
                    PositionData: "6,7,8,9,10;1,2,3,4,5;11,12,13,14,15;3,6,7,9,10;6,7,9,10,13;1,2,4,5,8;8,11,12,14,15;1,3,5,12,14;2,4,11,13,15;2,4,6,10,13;3,7,9,11,15;1,5,7,9,13;4,6,8,10,12;2,6,8,10,14;7,8,9,11,15;1,5,7,8,9;6,10,12,13,14;2,3,4,6,10;4,5,8,11,12;1,2,8,14,15",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 5015e4,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 6e6,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 7180400,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50126100,
                    LastLineData: "",
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1063,
                    SlotsData: "4,4,4,4,6,6,1,5,5,6,3,6,4,7,6",
                    PrizesData: "2,8,200000;6,9,40000;9,9,40000;10,9,40000;13,15,20000;17,15,20000;18,9,40000",
                    PositionData: "1,2,3,4;1,2,4;2,4,13;2,4,13;6,10,12;6,10,12;2,3,4",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50128800,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 4e5,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 1173300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50126100,
                    LastLineData: "",
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1065,
                    SlotsData: "5,5,5,3,7,4,3,3,4,5,7,5,5,7,6",
                    PrizesData: "2,12,30000;8,12,30000;10,12,30000;17,12,30000;18,12,30000",
                    PositionData: "1,2,3;1,3,12;2,10,13;10,12,13;2,3,10",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50132300,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 15e4,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 923300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50126100,
                    LastLineData: "",
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1066,
                    SlotsData: "7,5,7,4,7,6,4,6,2,6,5,7,5,6,2",
                    PrizesData: "1,15,20000;8,17,60000;9,12,30000;13,15,20000;14,14,100000;17,15,20000",
                    PositionData: "6,8,10;1,3,5,12;2,11,13;6,8,10;6,8,10,14;6,10,14",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50133700,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 25e4,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 973300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50126100,
                    LastLineData: "",
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1074,
                    SlotsData: "7,6,6,6,6,5,4,7,6,5,4,6,6,7,6",
                    PrizesData: "2,14,100000;3,15,20000;6,15,20000;8,15,20000;9,14,100000;10,15,20000;11,15,20000;12,15,20000;18,15,20000;19,15,20000",
                    PositionData: "2,3,4,5;12,13,15;2,4,5;3,5,12;2,4,13,15;2,4,13;3,9,15;5,9,13;2,3,4;4,5,12",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50146200,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 36e4,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 513300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }],
            this.index = -1,
            this.dataFree = [[], []],
            this.turn = 0;
            var e = t;
            if (e.currentPlayer && (e.currentPlayerMain = e.currentPlayer),
            e.currentPlayer = this.player,
            i.Config.isTry = !0,
            i.Config.inRoom = !0,
            i.Config.roomId = 3,
            i.Config.countJp)
                try {
                    i.Config.countJp.reset()
                } catch (t) {}
            s.Util.ClearTimeOut(i.Config.timeJackpot),
            this.balance = 5e7,
            this.jackPot = 5e7,
            this.index = -1,
            e.JoinRoom(e.currentPlayer),
            e.boxTrial.visible = !0,
            e.lblBalanceTrial.text = Message.GetMessage("sl37"),
            e.txtBalanceTrial.text = s.Util.ParseMoney(this.balance, void 0),
            e.txtJackpot.text = s.Util.ParseMoney(this.jackPot, void 0)
        }
        var i = n(6)
          , s = n(0);
        e.trial = o
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.silent = void 0;
        var i = n(0)
          , s = n(6)
          , o = n(14)
          , a = (r.prototype.getAutoSpin = function() {
            var t = sessionStorage.getItem("Auto-" + this.game.storage);
            if (t) {
                var e = t.split(";");
                if (this.autoSpin = parseInt(e[1]),
                -1 === this.autoSpin || 0 < this.autoSpin)
                    return s.Config.roomId = parseInt(e[0]),
                    e[3] && (this.game.line = e[3]),
                    !0
            }
            return !1
        }
        ,
        r.prototype.setAutoSpin = function() {
            0 < this.autoSpin ? (this.autoSpin--,
            this.setSession(),
            0 === this.autoSpin && (this.game.isAuto = !1,
            this.removeSession())) : 0 === this.autoSpin && (this.game.isAuto = !1,
            this.removeSession(),
            $("#rolling-" + this.game.storage).removeClass("active"))
        }
        ,
        r.prototype.setSession = function() {
            sessionStorage.setItem("Auto-" + this.game.storage, s.Config.roomId + ";" + this.autoSpin + ";" + this.game.isAuto + ";" + o.lines.CurrentLine)
        }
        ,
        r.prototype.removeSession = function() {
            sessionStorage.removeItem("Auto-" + this.game.storage)
        }
        ,
        r.prototype.joinRoom = function(t) {
            this.game.accountId = t.AccountID,
            this.game.currentPlayer = t,
            this.game.balance = t.Account.GoldBalance,
            s.Config.roomId = t.RoomID,
            s.Config.betValue = t.BetValue,
            s.Config.inRoom = !0,
            s.Config.moneyType = t.moneyType,
            o.lines.CurrentLine = this.game.line ? this.game.line : t.SlotInfo.LastLineData,
            this.game.line = null,
            s.Config.totalLines = o.lines.CurrentLine.length,
            $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#rolling-" + this.game.storage).addClass("active"),
            $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().addClass("playing"),
            this.game.cb && this.game.cb(),
            this.game.cb = null,
            this.checkGame()
        }
        ,
        r.prototype.checkGame = function() {
            var t = this
              , e = this.game.currentPlayer.SlotInfo.FreeSpins;
            0 < e && (s.Config.isFreeSpin = !0,
            s.Config.freeSpinCount = e),
            setTimeout(function() {
                return t.initSpin(t)
            }, 1500)
        }
        ,
        r.prototype.initSpin = function(t) {
            var e = t;
            s.Config.isSpin || e.game.isAuto && e.game.isSilent && (s.Config.isSpin = !0,
            $("#mn-lobby-rolling-kingdom .rolling-win").remove(),
            s.Config.isBonus = s.Config.isWinFree = !1,
            e.game.hubs.connection.invoke("Spin", {
                MerchantID: 0,
                RoomID: s.Config.roomId,
                CurrencyID: s.Config.currencyId,
                Lines: o.lines.CurrentLine
            }).then(function(t) {
                t.c < 0 && (s.Config.isSpin = !1,
                setTimeout(function() {
                    return e.initSpin(e)
                }, 4e3))
            }).catch(function() {
                s.Config.isSpin = !1,
                setTimeout(function() {
                    return e.initSpin(e)
                }, 4e3)
            }))
        }
        ,
        r.prototype.startSpin = function(t) {
            this.game.currentPlayer = t,
            s.Config.slotData = [],
            s.Config.slotData = t.SpinData.SlotsData.split(","),
            i.Util.ClearTimeOut(s.Config.timeSpin),
            t.SpinData.IsJackpot && (this.autoSpin = 0),
            t.SpinData.IsFreeSpin && (s.Config.isWinFree = !0),
            null !== t.SpinData.BonusGameData && 0 < t.SpinData.BonusGameData.length && (s.Config.isBonus = !0),
            s.Config.isFreeSpin || this.setAutoSpin(),
            this.showWin()
        }
        ,
        r.prototype.showMoney = function(t, e) {
            var n, o = this;
            try {
                $("#mn-lobby-rolling-kingdom").length && ($("#mn-lobby-rolling-kingdom").append('<span class="rolling-win">+' + i.Util.ParseMoney(t) + "</span>"),
                TweenMax.to($("#mn-lobby-rolling-kingdom .rolling-win"), 2, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                })),
                $("#rolling-" + this.game.storage).hasClass("active") || $("#rolling-" + this.game.storage).addClass("active"),
                $("#popupJackpot").hasClass("show") && ($("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + s.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().hasClass("playing") || $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().addClass("playing"),
                (n = $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId)).length && (n.parent().append('<span class="win active">+' + i.Util.ParseMoney(t) + "</span>"),
                TweenMax.to(n.parent().find("span.win"), 1, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                }))),
                setTimeout(function() {
                    e(o)
                }, 2100)
            } catch (t) {
                e(o)
            }
        }
        ,
        r.prototype.updateBalance = function(t) {
            0 < $(".tien1 .spanMoney").length && $(".tien1 .spanMoney").text(i.Util.ParseMoney(t)),
            0 < $("#divHeader .money-1 .text").length && $("#divHeader .money-1 .text").text(i.Util.ParseMoney(t))
        }
        ,
        r.prototype.increaseBalance = function(t) {
            var e;
            0 != t && (0 < $("#divHeader .money-1 .text").length ? (e = i.Util.unParseMoney($("#divHeader .money-1 .text").text()),
            e += t,
            $("#divHeader .money-1 .text").text(i.Util.ParseMoney(e))) : 0 < $(".tien1 .spanMoney").length && (e = i.Util.unParseMoney($(".tien1 .spanMoney").text()),
            e += t,
            $(".tien1 .spanMoney").text(i.Util.ParseMoney(e))))
        }
        ,
        r.prototype.updateFreeSpin = function() {
            s.Config.freeSpinCount--
        }
        ,
        r.prototype.showWin = function() {
            this.updateBalance(this.game.currentPlayer.Account.GoldBalance),
            0 < this.game.currentPlayer.SpinData.PayLinePrizeValue ? this.showMoney(this.game.currentPlayer.SpinData.PayLinePrizeValue, this.bonusOrFree) : this.bonusOrFree(this)
        }
        ,
        r.prototype.bonusOrFree = function(t) {
            var e;
            s.Config.isBonus ? t.callBonus() : (s.Config.isFreeSpin && t.updateFreeSpin(),
            s.Config.isWinFree = !0,
            e = t.game.currentPlayer.SlotInfo.FreeSpins,
            s.Config.isFreeSpin || (s.Config.freeSpinCount = 0),
            s.Config.isFreeSpin = !0,
            s.Config.freeSpinCount += e,
            s.Config.isWinFree = !1,
            s.Config.isFreeSpin && 0 === s.Config.freeSpinCount && (s.Config.isFreeSpin = !1),
            t.checkAutoSpin(t))
        }
        ,
        r.prototype.callBonus = function() {
            var e = this;
            this.game.hubs.connection.invoke("PlayBonusGame", {
                RoomID: s.Config.roomId,
                CurrencyID: s.Config.currencyId
            }).then(function(t) {
                0 <= t.c && e.finishBonus()
            }).catch(function() {
                e.callBonus()
            })
        }
        ,
        r.prototype.finishBonus = function() {
            s.Config.isBonus = !1;
            for (var t = 0, e = this.game.currentPlayer.SpinData.BonusGameData.split(";"), n = 0; n < e.length; n++)
                t += parseInt(e[n].split(",")[3]);
            this.increaseBalance(t),
            this.showMoney(t, this.bonusOrFree)
        }
        ,
        r.prototype.checkAutoSpin = function(t) {
            s.Config.isSpin = !1,
            -1 === t.autoSpin || 0 < t.autoSpin ? setTimeout(function() {
                return t.initSpin(t)
            }, 4500) : (this.game.isAuto = !1,
            this.removeSession(),
            $("#rolling-" + t.game.storage).removeClass("active"),
            $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-playing").addClass("button-play"),
            $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
            $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().removeClass("playing"))
        }
        ,
        r);
        function r(t) {
            this.autoSpin = -1,
            this.game = t,
            this.getAutoSpin() && this.game.InitHubs()
        }
        e.silent = a
    }
    ],
    a.c = l,
    a.d = function(t, e, n) {
        a.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }
    ,
    a.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    a.t = function(e, t) {
        if (1 & t && (e = a(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var n = Object.create(null);
        if (a.r(n),
        Object.defineProperty(n, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var o in e)
                a.d(n, o, function(t) {
                    return e[t]
                }
                .bind(null, o));
        return n
    }
    ,
    a.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return a.d(e, "a", e),
        e
    }
    ,
    a.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    a.p = "/",
    a(a.s = 24);
    function a(t) {
        if (l[t])
            return l[t].exports;
        var e = l[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return r[t].call(e.exports, e, e.exports, a),
        e.l = !0,
        e.exports
    }
    var r, l
});

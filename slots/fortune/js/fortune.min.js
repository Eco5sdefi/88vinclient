!function(t, i) {
    "object" == typeof exports && "object" == typeof module ? module.exports = i(require("libs"), require("pixi-sound"), require("signalR"), require("pixi-spine")) : "function" == typeof define && define.amd ? define("fortune", ["libs", "pixi-sound", "signalR", "pixi-spine"], i) : "object" == typeof exports ? exports.fortune = i(require("libs"), require("pixi-sound"), require("signalR"), require("pixi-spine")) : t.fortune = i(t.libs, t["pixi-sound"], t.signalR, t["pixi-spine"])
}(window, function(e, n, s, o) {
    return l = {},
    a.m = r = {
        0: function(t, i) {
            t.exports = e
        },
        1: function(t, i) {
            t.exports = n
        },
        2: function(t, i) {
            t.exports = s
        },
        20: function(t, n, i) {
            "use strict";
            Object.defineProperty(n, "__esModule", {
                value: !0
            }),
            n.contents = void 0;
            var c = i(8)
              , u = i(0);
            n.contents = {
                page: 0,
                pageSize: 10,
                detectFontSystem: function() {
                    return navigator.userAgent.match(/Android|webOS|Linux/i) ? "Roboto" : navigator.userAgent.match(/iPhone|iPad|iPod|Mac/i) ? "Helvetica Neue" : navigator.userAgent.match(/Windows/i) ? "Segoe UI" : "Arial"
                },
                updateBalance: function(t, i) {
                    0 <= i && (t.txtBalance.text = u.Util.ParseMoney(i, void 0))
                },
                getEvent: function(i) {
                    u.Util.ClearTimeOut(i.timerEvent),
                    $.ajax({
                        type: "GET",
                        url: c.Config.api + "api/game/GetSlotEvent?CurrencyID=" + c.Config.currencyId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        cache: !1,
                        crossDomain: !0,
                        xhrFields: {
                            withCredentials: !0
                        },
                        success: function(t) {
                            t && t.d && i && i.updateEvent(t.d)
                        },
                        error: function() {}
                    })
                },
                getJackpot: function(e) {
                    u.Util.ClearTimeOut(c.Config.timeJackpot),
                    $.ajax({
                        type: "GET",
                        url: c.Config.api + "api/game/JackpotGetAll?CurrencyID=" + c.Config.currencyId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        cache: !1,
                        crossDomain: !0,
                        xhrFields: {
                            withCredentials: !0
                        },
                        success: function(t) {
                            if (t && t.d && e)
                                for (var i = 0; i < t.d.length; i++)
                                    t.d[i].roomID === c.Config.roomId && (n.contents.countJackPot(e.txtMoneyLevel, !0, !1, t.d[i].jackpotFund, 8),
                                    e.jackpot && n.contents.countJackPotInJackpot(e.jackpot.txtJackpot, !0, !1, t.d[i].jackpotFund, 8)),
                                    0 === t.d[i].roomID && (n.contents.countJackPotTotal(e.txtJackpot, !0, !1, t.d[i].jackpotFund, 8),
                                    e.jackpot && n.contents.countJackPotTotalInJackpot(e.jackpot.txtJackpotTotal, !0, !1, t.d[i].jackpotFund, 8));
                            c.Config.isJackpot || c.Config.inRoom || (c.Config.timeJackpot = setTimeout(function() {
                                n.contents.getJackpot(e)
                            }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                        },
                        error: function() {
                            c.Config.timeJackpot = setTimeout(function() {
                                n.contents.getJackpot(e)
                            }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3)
                        }
                    })
                },
                getTicket: function(i) {
                    $.ajax({
                        type: "GET",
                        url: c.Config.apiUrl + "GetAccountTicket/?currencyID=" + c.Config.currencyId + "&GameID=" + c.Config.gameId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        cache: !1,
                        headers: {
                            Authorization: "Bearer " + i.token
                        },
                        crossDomain: !0,
                        xhrFields: {
                            withCredentials: !0
                        },
                        success: function(t) {
                            0 < t.d.length ? n.contents.updateTicket(i, t.d) : (c.Config.isTicket = !1,
                            i.txtFreeTicket.visible = !1)
                        }
                    })
                },
                countJackPot: function(t, i, e, n, s) {
                    null === c.Config.countJp ? (c.Config.countJp = new u.Util.CountUp(t,i,e,0,n,0,s,void 0),
                    c.Config.countJp.start()) : c.Config.countJp.update(n)
                },
                countJackPotTotal: function(t, i, e, n, s) {
                    null === c.Config.countJpTotal ? (c.Config.countJpTotal = new u.Util.CountUp(t,i,e,0,n,0,s,void 0),
                    c.Config.countJpTotal.start()) : c.Config.countJpTotal.update(n)
                },
                countJackPotInJackpot: function(t, i, e, n, s) {
                    (c.Config.countJpInJackpot = null) === c.Config.countJpInJackpot ? (c.Config.countJpInJackpot = new u.Util.CountUp(t,i,e,0,n,0,s,void 0),
                    c.Config.countJpInJackpot.start()) : c.Config.countJpInJackpot.update(n)
                },
                countJackPotTotalInJackpot: function(t, i, e, n, s) {
                    (c.Config.countJpTotalInJackpot = null) === c.Config.countJpTotalInJackpot ? (c.Config.countJpTotalInJackpot = new u.Util.CountUp(t,i,e,0,n,0,s,void 0),
                    c.Config.countJpTotalInJackpot.start()) : c.Config.countJpTotalInJackpot.update(n)
                },
                changeResources: function(t) {
                    var i;
                    c.Config.ready && ((i = t).lblLines.text = Message.GetMessage("sl7"),
                    i.lblBetValue.text = Message.GetMessage("sl6"),
                    i.lblTotalBet.text = Message.GetMessage("sl4"),
                    i.lblJustWon.text = Message.GetMessage("sl5"),
                    i.txtCongrats.text = Message.GetMessage("sl21"),
                    i.txtNotify.text = Message.GetMessage("sl27"),
                    i.btnAuto.getChildAt(0).text = Message.GetMessage("sl2"),
                    i.txtMode.text = c.Config.isTry ? Message.GetMessage("sl8") : Message.GetMessage("sl9"),
                    i.payTable.getChildAt(0).text = Message.GetMessage("sl18"),
                    i.boxPopupWin.getChildAt(2).text = Message.GetMessage("sl52"),
                    i.btnSpin.getChildAt(0).texture = null != TextureCache["text-spin-" + c.Config.lang + ".png"] ? TextureCache["text-spin-" + c.Config.lang + ".png"] : TextureCache["text-spin-en.png"],
                    i.btnStopAuto.getChildAt(0).texture = null != TextureCache["text-stop-" + c.Config.lang + ".png"] ? TextureCache["text-stop-" + c.Config.lang + ".png"] : TextureCache["text-stop-en.png"],
                    i.txtLinesChoose.text = Message.GetMessage("sl10"))
                },
                countNumber: function(t, i, e, n, s, o, a, r) {
                    var l = new u.Util.CountUp(t,i,e,n,s,0,a,void 0);
                    r ? l.start(r) : l.start()
                },
                countMoney: function(t, i, e, n, s, o, a, r, l) {
                    l ? c.Config.countMoneyJw = new u.Util.CountUp(t,i,e,n,s,0,a,void 0) : c.Config.countMoney = new u.Util.CountUp(t,i,e,n,s,0,a,void 0),
                    r ? l ? c.Config.countMoneyJw.start(r) : c.Config.countMoney.start(r) : l ? c.Config.countMoneyJw.start() : c.Config.countMoney.start()
                },
                updateLastWon: function(t, i) {
                    t.txtJustWon.text = u.Util.ParseMoney(i, void 0)
                },
                updatePrizeValue: function(t, i) {
                    t.txtBetValue.text = u.Util.ParseMoney(i, void 0)
                },
                updateTicket: function(t, i) {
                    var e = t;
                    i[c.Config.roomId - 1] && 0 < i[c.Config.roomId - 1].balance ? (e.txtFreeTicket.text = Message.GetMessage("sl61") + ": " + i[c.Config.roomId - 1].balance,
                    e.boxFreeTicket.visible = !0,
                    c.Config.isTicket = !0) : (c.Config.isTicket = !1,
                    e.boxFreeTicket.visible = !1)
                },
                updateControl: function(t) {
                    n.contents.updatePrizeValue(t, t.currentPlayer.BetValue),
                    n.contents.updateLastWon(t, t.currentPlayer.SlotInfo.LastPrizeValue),
                    t.setActiveCoin()
                },
                disableButton: function(t, i, e) {
                    t.buttonMode = !1,
                    t.interactive = !1,
                    i ? t.texture = i : e && (t.tint = e)
                },
                enableButton: function(t, i) {
                    t.buttonMode = !0,
                    t.interactive = !0,
                    i ? t.texture = i : t.tint = 16777215
                },
                disableButtons: function(t) {
                    var i = t;
                    !window.App.isAuto || !c.Config.isAutoSpin && window.App.isAuto ? n.contents.disableButton(i.btnBack) : n.contents.enableButton(i.btnBack),
                    n.contents.disableButton(i.btnMinusBet, i.btnTextures.textureBtnMinusDisable),
                    n.contents.disableButton(i.btnPlusBet, i.btnTextures.textureBtnPlusDisable),
                    n.contents.disableButton(i.btnAuto, i.btnTextures.textureBtnAutoDisable),
                    n.contents.disableButton(i.btnQuick),
                    n.contents.disableButton(i.btnGuide),
                    n.contents.disableButton(i.btnSpin, i.btnTextures.textureBtnSpinDisable),
                    c.Config.isAutoSpin ? (i.btnStopAuto.visible = !0,
                    i.btnSpin.visible = !1) : (i.btnStopAuto.visible = !1,
                    i.btnSpin.visible = !0),
                    i.btnQuick.texture = i.resources.ui.textures[c.Config.isQuick ? "ButtonQuickSpin-2.png" : "ButtonQuickSpin-1.png"]
                },
                enableButtons: function(t) {
                    var i = t;
                    n.contents.enableButton(i.btnBack),
                    n.contents.enableButton(i.btnMinusBet, i.btnTextures.textureBtnMinus),
                    n.contents.enableButton(i.btnPlusBet, i.btnTextures.textureBtnPlus),
                    n.contents.enableButton(i.btnAuto, i.btnTextures.textureBtnAuto),
                    n.contents.enableButton(i.btnQuick),
                    n.contents.enableButton(i.btnGuide),
                    n.contents.enableButton(i.btnSpin, i.btnTextures.textureBtnSpin),
                    c.Config.isAutoSpin ? (i.btnStopAuto.visible = !0,
                    i.btnSpin.visible = !1) : (i.btnStopAuto.visible = !1,
                    i.btnSpin.visible = !0)
                },
                updateAutoSpin: function(t) {
                    c.Config.isAutoSpin && (c.Config.autoSpinCount--,
                    0 <= c.Config.autoSpinCount && (t.txtAutoSpin.text = u.Util.ParseMoney(c.Config.autoSpinCount, void 0),
                    t.txtAutoSpin.visible = !0,
                    window.App.isAuto && sessionStorage.setItem("Auto-" + t.storage, c.Config.roomId + ";" + c.Config.autoSpinCount + ";" + c.Config.isAutoSpin)),
                    c.Config.autoSpinCount <= 0 && n.contents.stopAutoSpin(t));
                    for (var i = 2 === c.Config.roomId ? 1 : 8 === c.Config.roomId ? 3 : 5 === c.Config.roomId ? 2 : -1, e = 0; e < 3; e++)
                        $("#list-jp-icon-" + c.Config.gameId + "-room-" + e).removeClass("button-playing");
                    $("#list-jp-icon-" + c.Config.gameId + "-room-" + i).hasClass("button-playing") || $("#list-jp-icon-" + c.Config.gameId + "-room-" + i).removeClass("button-play").addClass("button-playing"),
                    $("#list-jp-icon-" + c.Config.gameId + "-room-" + i + "-playing").length && $("#list-jp-icon-" + c.Config.gameId + "-room-" + i + "-playing").html(0 < c.Config.autoSpinCount ? u.Util.ParseMoney(c.Config.autoSpinCount) : ""),
                    $("#list-jp-icon-" + c.Config.gameId + "-playing").length && $("#list-jp-icon-" + c.Config.gameId + "-playing").html(0 < c.Config.autoSpinCount ? u.Util.ParseMoney(c.Config.autoSpinCount) : "")
                },
                stopAutoSpin: function(t) {
                    var i = t;
                    if (c.Config.isAutoSpin) {
                        c.Config.isAutoSpin = !1,
                        i.txtAutoSpin.visible = i.btnStopAuto.visible = !1;
                        var e = 2 === c.Config.roomId ? 1 : 8 === c.Config.roomId ? 3 : 5 === c.Config.roomId ? 2 : -1;
                        if ($("#rolling-" + t.storage).removeClass("active"),
                        $("#list-jp-icon-" + c.Config.gameId + "-room-" + e).removeClass("button-playing").addClass("button-play"),
                        $("#list-jp-icon-" + c.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                        $("#ljp-" + c.Config.gameId + "-room-" + e).parent().removeClass("playing"),
                        $("#list-jp-icon-" + c.Config.gameId + "-room-" + e + "-playing").html(""),
                        $("#list-jp-icon-" + c.Config.gameId + "-playing").html(""),
                        sessionStorage.removeItem("Auto-" + t.storage),
                        window.App.isAutoFortune = !1,
                        i.btnSpin.visible || (i.btnSpin.visible = !0),
                        c.Config.isSpin || c.Config.isBonus)
                            return;
                        c.Config.timeSpin = setTimeout(function() {
                            return n.contents.enableButtons(t)
                        }, 2e3)
                    }
                },
                checkLoginOrInRoom: function(t) {
                    var i = t;
                    return !c.Config.isSpin && !c.Config.isBonus && (c.Config.isLogin ? !!c.Config.inRoom || (i.showMessage(Message.GetMessage("sl79")),
                    !1) : (i.showMessage(Message.GetMessage("app003")),
                    !1))
                },
                deleteTimer: function() {
                    u.Util.ClearTimeOut(c.Config.timerEvent),
                    u.Util.ClearTimeOut(c.Config.timeSpin),
                    u.Util.ClearTimeOut(c.Config.timeBonus),
                    u.Util.ClearTimeOut(c.Config.timeBonusOrFree),
                    u.Util.ClearTimeOut(c.Config.timeOutEachLine),
                    u.Util.ClearTimeOut(c.Config.timeShowWin),
                    u.Util.ClearTimeInterval(c.Config.timeIntEachLine),
                    u.Util.ClearTimeOut(c.Config.timeJackpot),
                    u.Util.ClearTimeOut(c.Config.timePop)
                },
                clearTimer: function() {
                    u.Util.ClearTimeOut(c.Config.timeSpin),
                    u.Util.ClearTimeOut(c.Config.timeBonus),
                    u.Util.ClearTimeOut(c.Config.timeBonusOrFree),
                    u.Util.ClearTimeOut(c.Config.timeOutEachLine),
                    u.Util.ClearTimeOut(c.Config.timeShowWin),
                    u.Util.ClearTimeInterval(c.Config.timeIntEachLine),
                    u.Util.ClearTimeOut(c.Config.timePop)
                },
                deleteTwEffect: function() {
                    for (var t = TweenMax.getAllTweens(), i = 0; i < t.length; i++)
                        "fortune-eff" === t[i].data && t[i].kill()
                },
                deleteTweens: function() {
                    for (var t = TweenMax.getAllTweens(), i = 0; i < t.length; i++)
                        "fortune-eff" !== t[i].data && "fortune" !== t[i].data && "money-fall-fortune" !== t[i].data && "fortune-jackpot" !== t[i].data && "fortune-bonus" !== t[i].data || t[i].kill()
                }
            }
        },
        60: function(t, i, e) {
            "use strict";
            Object.defineProperty(i, "__esModule", {
                value: !0
            }),
            i.game = void 0;
            var n = e(61)
              , s = (o.prototype.delete = function() {
                this.game.delete()
            }
            ,
            o.prototype.startAuto = function() {
                return this.game.StartAuto()
            }
            ,
            o.prototype.stopAuto = function() {
                this.game.StopAuto()
            }
            ,
            o.prototype.checkAuto = function() {
                return this.game.CheckAuto()
            }
            ,
            o.prototype.getRoomId = function() {
                return this.game.getRoomId()
            }
            ,
            o.prototype.setSilent = function() {
                this.game.SetSilent()
            }
            ,
            o.prototype.restartAuto = function(t, i, e) {
                this.game.RestartAuto(t, i, e)
            }
            ,
            o);
            function o(t) {
                this.game = new n.games(t)
            }
            i.game = s
        },
        61: function(t, i, e) {
            "use strict";
            Object.defineProperty(i, "__esModule", {
                value: !0
            }),
            i.games = void 0;
            var c = e(0)
              , n = e(62)
              , u = e(8)
              , o = e(20)
              , s = e(63)
              , a = e(64);
            e(1),
            e(65);
            var r = e(66)
              , l = (h.prototype.getAutoSpin = function() {
                var t = sessionStorage.getItem("Auto-" + this.storage);
                if (this.isSilent = !1,
                t) {
                    var i = t.split(";");
                    if ("true" === i[2] && (-1 === parseInt(i[1]) || 0 < parseInt(i[1])))
                        return u.Config.autoSpinCount = parseInt(i[1]),
                        u.Config.isAutoSpin = window.App.isAutoFortune = !0,
                        window.App.isAuto = !0,
                        $(".multislot-expand").addClass("active"),
                        void (u.Config.roomId = parseInt(i[0]))
                }
                sessionStorage.removeItem("Auto-" + this.storage)
            }
            ,
            h.prototype.init = function() {
                var t = this
                  , i = this;
                PIXI.utils.skipHello(),
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    view: this.target
                }),
                this.application.renderer.backgroundColor = 1379850,
                this.application.ticker.add(function() {
                    i.update(i)
                }),
                this.initContainer();
                for (var e = 0; e < this.assets.length; e++)
                    "" !== this.assets[e].id ? 1 == this.assets[e].txt ? this.loader.add(this.assets[e].id, this.assets[e].src, {
                        metadata: {
                            spineAtlasSuffix: ".txt"
                        }
                    }) : this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
                this.loader.onProgress.add(function() {
                    return i.loading(i)
                }),
                this.loader.load(function() {
                    i.isLoad = !0,
                    i.resources = t.loader.resources,
                    i.initGame(),
                    i.initHubs(),
                    $("#divLoading").hide()
                })
            }
            ,
            h.prototype.loading = function(t) {
                $("#divLoading").show(),
                $("#popupJackpot").removeClass("show"),
                0 < $("#divLoading .loading-percent").length ? ($("#divLoading .loading-percent").css("width", parseInt(t.loader.progress) + "%"),
                $("#divLoading .loading-text").html(parseInt(t.loader.progress) + "%")) : ($("#loading-progress span").css("width", parseInt(t.loader.progress) + "%"),
                $("#loading-progress-txt").html(parseInt(t.loader.progress) + "%"))
            }
            ,
            h.prototype.update = function(t) {
                EE3Timer.Timer.timerManager.update();
                var i = Date.now();
                if (t.emitterSpakle)
                    try {
                        t.emitterSpakle.update(.001 * (i - t.elapsed))
                    } catch (t) {}
                if (t.emiterBig)
                    try {
                        t.emiterBig.update(.001 * (i - t.elapsed))
                    } catch (t) {}
                if (t.jackpot && t.jackpot.jackpotPaticles && 1 == t.jackpot.jackpotPaticles.emit)
                    try {
                        t.jackpot.jackpotPaticles.update(.001 * (i - t.elapsed))
                    } catch (t) {}
                if (t.treeLeft)
                    try {
                        t.treeLeft.update(.001 * (i - t.elapsed))
                    } catch (t) {}
                if (t.treeRight)
                    try {
                        t.treeRight.update(.001 * (i - t.elapsed))
                    } catch (t) {}
                for (var e = 0; e < t.emitIcons.length; e++)
                    if (null !== t.emitIcons[e])
                        try {
                            t.emitIcons[e].update(.001 * (i - t.elapsed))
                        } catch (t) {}
                t.elapsed = i
            }
            ,
            h.prototype.initHubs = function() {
                this.hubs = new n.default(u.Config.hubUrl + "gameHub",this.token,this)
            }
            ,
            h.prototype.initContainer = function() {
                this.bgContainer = new Container,
                this.machineContainer = new Container,
                this.columnContainer = new Container,
                this.containerColumn1 = new Container,
                this.containerColumn2 = new Container,
                this.containerColumn3 = new Container,
                this.containerColumn4 = new Container,
                this.containerColumn5 = new Container,
                this.iconsContainer = new Container,
                this.eventContainer = new Container,
                this.moneyContainer = new Container,
                this.columnContainer.addChild(this.containerColumn1, this.containerColumn2, this.containerColumn3, this.containerColumn4, this.containerColumn5, this.iconsContainer),
                this.application.stage.addChild(this.bgContainer, this.machineContainer, this.eventContainer, this.moneyContainer)
            }
            ,
            h.prototype.initGame = function() {
                var t = this;
                this.resetTweenTab(),
                this.initFrames(),
                this.initBg(),
                this.initMaChine(),
                this.initSlots(),
                this.initMask(),
                this.initPayTable(),
                this.initTextures(),
                this.initButtons(),
                this.initJackpot(),
                this.initAccu(),
                this.initPopup(),
                this.setMainItems(),
                this.initSound(),
                this.initEvent(),
                this.initGuide(),
                u.Config.ready = !0,
                o.contents.disableButtons(this),
                o.contents.enableButton(this.btnBack),
                this.iconEvent.visible = !1,
                this.resize(this),
                o.contents.getJackpot(this),
                window.addEventListener("resize", function() {
                    return t.resize(t)
                })
            }
            ,
            h.prototype.setMainItems = function() {
                this.itemsMainGame = [this.column1[this.totalItems - 3], this.column2[this.totalItems - 3], this.column3[this.totalItems - 3], this.column4[this.totalItems - 3], this.column5[this.totalItems - 3], this.column1[this.totalItems - 2], this.column2[this.totalItems - 2], this.column3[this.totalItems - 2], this.column4[this.totalItems - 2], this.column5[this.totalItems - 2], this.column1[this.totalItems - 1], this.column2[this.totalItems - 1], this.column3[this.totalItems - 1], this.column4[this.totalItems - 1], this.column5[this.totalItems - 1]]
            }
            ,
            h.prototype.initSound = function() {
                try {
                    this.bgSound = this.loader.resources.bgSound.sound,
                    this.bgSound.volume = .5,
                    this.bgSound.loop = !0,
                    this.bgBonusSound = this.loader.resources.bgBonusSound.sound,
                    this.bgBonusSound.volume = .5,
                    this.bgBonusSound.loop = !0,
                    this.reelSound = this.loader.resources.reelSound.sound,
                    this.countSound = this.loader.resources.countSound.sound,
                    this.countSound.loop = !0,
                    this.countSound.volume = 2,
                    this.bigWinSound = this.loader.resources.bigWinSound.sound,
                    this.bigWinSound.loop = !0,
                    this.jackpotSound = this.loader.resources.jackpotSound.sound,
                    this.jackpotSound.loop = !0
                } catch (t) {}
            }
            ,
            h.prototype.createLightX = function() {
                this.lightingX || (this.lightingX = new AnimatedSprite(this.framesLightingX),
                this.lightingX.animationSpeed = .4,
                this.lightingX.loop = !0,
                this.lightingX.position.set(-65, 25),
                this.lightingX.anchor.set(.5),
                this.lightingX.play())
            }
            ,
            h.prototype.deleteLightX = function() {
                this.lightingX && this.lightingX.destroy({
                    children: !0
                }),
                this.lightingX = null
            }
            ,
            h.prototype.updateEvent = function(t) {
                var i = this;
                try {
                    this.xEvent.visible = !1;
                    for (var e = 0; e < t.length; e++) {
                        var n, s = t[e];
                        s.nextJackpot < 0 ? this.arrBox[s.roomID - 1].children[1].visible = this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1 : 0 == s.nextJackpot ? (this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1,
                        this.arrBox[s.roomID - 1].children[1].texture = this.loader.resources.event.textures["ej-tg-x" + s.multiplier],
                        s.roomID != u.Config.roomId || u.Config.isTry || (this.xEvent.visible = !0,
                        this.xEvent.texture = this.loader.resources.event.textures["ej-lb-x" + s.multiplier])) : (this.arrBox[s.roomID - 1].children[1].visible = !1,
                        n = "X" + s.multiplier + " " + Message.GetMessage("ev50") + ("km" == u.Config.lang ? "     " : "        ") + Message.GetMessage("ev49"),
                        this.arrBox[s.roomID - 1].children[2].text = n,
                        this.arrBox[s.roomID - 1].children[3].children[0].text = s.nextJackpot,
                        this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !0)
                    }
                    u.Config.timerEvent = setTimeout(function() {
                        o.contents.getEvent(i)
                    }, window.Config.TIME_COUNT_GET_EVENT_X ? window.Config.TIME_COUNT_GET_EVENT_X : 5e3)
                } catch (t) {
                    clearTimeout(u.Config.timerEvent)
                }
            }
            ,
            h.prototype.initEvent = function() {
                this.iconEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]),
                this.iconEvent.anchor.set(.5),
                this.iconEvent.position.set(this.size[0] / 2 - 100, this.size[1] / 2 + 100),
                this.iconEvent.interactive = !0,
                this.iconEvent.buttonMode = !0,
                this.iconEvent.on("pointerdown", this.onDragStart).on("pointerup", this.onDragEnd).on("pointerupoutside", this.onDragEnd).on("pointermove", this.onDragMove),
                this.boxEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-bg"]),
                this.boxEvent.anchor.set(.5, 0),
                this.boxEvent.position.set(.5, 5),
                this.room1Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
                this.room1Event.anchor.set(.5),
                this.room1Event.position.set(0, 71);
                var t = new PIXI.Text(c.Util.ParseMoney(u.Config.arrRoom[0]),{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fill: ["#aaf573"]
                });
                t.anchor.set(.5),
                t.position.set(0, -15),
                this.room1X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
                this.room1X.anchor.set(.5),
                this.room1X.position.set(0, 10);
                var i = Message.GetMessage("ev26") + ("km" == u.Config.lang ? "     " : "        ") + Message.GetMessage("ev49");
                this.txtRoom1 = new PIXI.Text(i,{
                    fontFamily: "Roboto",
                    fontSize: 13,
                    fontStyle: "italic",
                    fill: ["white"],
                    wordWrap: !0,
                    wordWrapWidth: 200
                }),
                this.txtRoom1.anchor.set(.5),
                this.txtRoom1.position.set(0, 10),
                this.boxJackRoom1 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
                this.boxJackRoom1.anchor.set(.5),
                "km" == u.Config.lang && this.boxJackRoom1.scale.set(.8),
                this.boxJackRoom1.position.set("km" == u.Config.lang ? 28 : "zh" == u.Config.lang ? 9 : "en" == u.Config.lang ? 16 : 13, 10),
                this.boxJackRoom1.addChild(new PIXI.Text("2",{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fontWeight: "bold",
                    fill: ["yellow"]
                })),
                this.boxJackRoom1.children[0].anchor.set(.5),
                this.room1Event.addChild(t, this.room1X, this.txtRoom1, this.boxJackRoom1),
                this.room1X.visible = this.boxJackRoom1.visible = this.txtRoom1.visible = !1,
                this.room2Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
                this.room2Event.anchor.set(.5),
                this.room2Event.position.set(0, 133);
                var e = new PIXI.Text(c.Util.ParseMoney(u.Config.arrRoom[1]),{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fill: ["#aaf573"]
                });
                e.anchor.set(.5),
                e.position.set(0, -15),
                this.room2X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
                this.room2X.anchor.set(.5),
                this.room2X.position.set(0, 10),
                this.txtRoom2 = new PIXI.Text(i,{
                    fontFamily: "Roboto",
                    fontSize: 13,
                    fontStyle: "italic",
                    fill: ["white"],
                    wordWrap: !0,
                    wordWrapWidth: 200
                }),
                this.txtRoom2.anchor.set(.5),
                this.txtRoom2.position.set(0, 10),
                this.boxJackRoom2 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
                this.boxJackRoom2.anchor.set(.5),
                "km" == u.Config.lang && this.boxJackRoom2.scale.set(.8),
                this.boxJackRoom2.position.set("km" == u.Config.lang ? 28 : "zh" == u.Config.lang ? 9 : "en" == u.Config.lang ? 16 : 13, 10),
                this.boxJackRoom2.addChild(new PIXI.Text("2",{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fontWeight: "bold",
                    fill: ["yellow"]
                })),
                this.boxJackRoom2.children[0].anchor.set(.5),
                this.room2Event.addChild(e, this.room2X, this.txtRoom2, this.boxJackRoom2),
                this.room2X.visible = this.boxJackRoom2.visible = this.txtRoom2.visible = !1,
                this.room3Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
                this.room3Event.anchor.set(.5),
                this.room3Event.position.set(0, 195);
                var n = new PIXI.Text(c.Util.ParseMoney(u.Config.arrRoom[2]),{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fill: ["#aaf573"]
                });
                n.anchor.set(.5),
                n.position.set(0, -15),
                this.room3X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
                this.room3X.anchor.set(.5),
                this.room3X.position.set(0, 10),
                this.txtRoom3 = new PIXI.Text(i,{
                    fontFamily: "Roboto",
                    fontSize: 13,
                    fontStyle: "italic",
                    fill: ["white"],
                    wordWrap: !0,
                    wordWrapWidth: 200
                }),
                this.txtRoom3.anchor.set(.5),
                this.txtRoom3.position.set(0, 10),
                this.boxJackRoom3 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
                this.boxJackRoom3.anchor.set(.5),
                "km" == u.Config.lang && this.boxJackRoom3.scale.set(.8),
                this.boxJackRoom3.position.set("km" == u.Config.lang ? 28 : "zh" == u.Config.lang ? 9 : "en" == u.Config.lang ? 16 : 13, 10),
                this.boxJackRoom3.addChild(new PIXI.Text("2",{
                    fontFamily: "Roboto",
                    fontSize: 15,
                    fontWeight: "bold",
                    fill: ["yellow"]
                })),
                this.boxJackRoom3.children[0].anchor.set(.5),
                this.room3Event.addChild(n, this.room3X, this.txtRoom3, this.boxJackRoom3),
                this.room3X.visible = this.boxJackRoom3.visible = this.txtRoom3.visible = !1,
                this.boxEvent.addChild(this.room1Event, this.room2Event, this.room3Event),
                this.arrBox = [this.room1Event, this.room2Event, this.room3Event],
                this.arrowEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-arrow"]),
                this.arrowEvent.anchor.set(.5),
                this.arrowEvent.position.set(0, 250),
                this.arrowEvent.scale.y = -1,
                this.arrowEvent.interactive = !0,
                this.arrowEvent.buttonMode = !0,
                this.arrowEvent.on("pointerdown", this.toogleEvent.bind(this.arrowEvent, this)).on("pointerup", this.toogleEventUp.bind(this.arrowEvent, this));
                var s = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]);
                s.anchor.set(.5),
                this.iconEvent.addChild(this.boxEvent, this.arrowEvent, s),
                this.eventContainer.addChild(this.iconEvent)
            }
            ,
            h.prototype.toogleEventUp = function(t) {
                t.iconEvent.interactive = !0
            }
            ,
            h.prototype.toogleEvent = function(t) {
                t.iconEvent.interactive = !1,
                -1 == t.arrowEvent.scale.y ? (t.arrowEvent.scale.y = 1,
                TweenMax.to(t.boxEvent, .5, {
                    alpha: 0,
                    data: "fortune"
                }),
                TweenMax.to(t.arrowEvent, .5, {
                    y: 50,
                    data: "fortune"
                })) : (TweenMax.to(t.boxEvent, .5, {
                    alpha: 1,
                    data: "fortune"
                }),
                TweenMax.to(t.arrowEvent, .5, {
                    y: 250,
                    data: "fortune"
                }),
                t.arrowEvent.scale.y = -1),
                setTimeout(function() {
                    t.iconEvent.interactive = !0
                }, 500)
            }
            ,
            h.prototype.onDragStart = function(t) {
                this.data = t.data,
                this.alpha = .9,
                this.dragging = !0
            }
            ,
            h.prototype.onDragEnd = function() {
                this.data = null,
                this.alpha = 1,
                this.dragging = !1
            }
            ,
            h.prototype.onDragMove = function() {
                var t, i = this;
                i.dragging && (t = i.data.getLocalPosition(i.parent),
                i.x = t.x,
                i.y = t.y)
            }
            ,
            h.prototype.initFrames = function() {
                var t, i;
                for (this.framesItems = [],
                this.framesCoinJackpot = [],
                i = 1; i < 12; i++) {
                    var e = [];
                    if (2 !== i)
                        for (t = 0; t < 24; t++)
                            e.push(this.resources.itemsAni.textures["item-" + i + "-" + t + ".png"]);
                    this.framesItems.push(e)
                }
                for (t = 0; t < 20; t++)
                    this.framesCoinJackpot.push(this.resources.bonus.textures["Coin_" + (t < 10 ? "0000" + t : "000" + t) + ".png"]);
                this.framesCoins = framesFromTilesetImage("coinFortune", 30, 31)
            }
            ,
            h.prototype.initBg = function() {
                this.background = new PIXI.Sprite(this.loader.resources.bgFortune.texture),
                this.bgContainer.addChild(this.background),
                this.treeLeft = new PIXI.particles.Emitter(this.background,[this.resources.particles.textures["particle-5.png"], this.resources.particles.textures["particle-6.png"], this.resources.particles.textures["particle-2.png"]],this.resources.particleTree.data),
                this.treeLeft.emit = !0,
                this.treeLeft.spawnPos.x = 390,
                this.treeLeft.spawnPos.y = 350,
                this.treeRight = new PIXI.particles.Emitter(this.background,[this.resources.particles.textures["particle-5.png"], this.resources.particles.textures["particle-6.png"], this.resources.particles.textures["particle-2.png"]],this.resources.particleTree.data),
                this.treeRight.emit = !0,
                this.treeRight.spawnPos.x = 2250,
                this.treeRight.spawnPos.y = 370,
                this.treeRight.spawnCircle.radius = 250,
                this.treeRight._frequency = .04
            }
            ,
            h.prototype.initMaChine = function() {
                this.machine = new PIXI.mesh.NineSlicePlane(this.loader.resources.ui.textures["Machine.png"],765,520,739,208),
                this.machine.width = 1504,
                this.machine.height = 918,
                this.machine.pivot.set(765, 520),
                this.machineContainer.addChild(this.machine)
            }
            ,
            h.prototype.initGuide = function() {
                $("#guide-fortune").length <= 0 && $("body").append(this.guide[Message.GetLanguageCode()]),
                $("#guide-fortune-nav i").unbind("click").click(function() {
                    var t = $(this).index();
                    $("#guide-fortune-nav i").removeClass("active"),
                    $(this).addClass("active"),
                    $("#guide-fortune .guide-fortune").removeClass("active"),
                    $("#guide-fortune .guide-" + (t + 1)).addClass("active")
                })
            }
            ,
            h.prototype.initSlots = function() {
                var t;
                this.machine.addChild(this.columnContainer),
                this.startPosition = 736;
                for (var i = 0, e = this.totalItems - 1; 0 <= e; e--)
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column1[e] = new Sprite(this.loader.resources.items.textures["item-" + t + (3 < e && e < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column1[e].inx = t,
                    this.column1[e].x = 228.5,
                    this.column1[e].anchor.set(.5),
                    this.column1[e].y = this.startPosition - 215 * i,
                    this.column1[e].coord = {
                        x: this.column1[e].x / 205,
                        y: this.column1[e].y / 205
                    },
                    this.containerColumn1.addChild(this.column1[e]),
                    i < 3 && (this.column1[e].buttonMode = !0,
                    this.column1[e].interactive = !0,
                    this.column1[e].on("pointerup", this.payTableItemOn.bind(this.column1[e], this))),
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column2[e] = new Sprite(this.loader.resources.items.textures["item-" + t + (3 < e && e < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column2[e].inx = t,
                    this.column2[e].x = 488.5,
                    this.column2[e].anchor.set(.5),
                    this.column2[e].y = this.startPosition - 215 * i,
                    this.column2[e].coord = {
                        x: this.column2[e].x / 205,
                        y: this.column2[e].y / 205
                    },
                    this.containerColumn2.addChild(this.column2[e]),
                    i < 3 && (this.column2[e].buttonMode = !0,
                    this.column2[e].interactive = !0,
                    this.column2[e].on("pointerup", this.payTableItemOn.bind(this.column2[e], this))),
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column3[e] = new Sprite(this.loader.resources.items.textures["item-" + t + (3 < e && e < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column3[e].inx = t,
                    this.column3[e].x = 748.5,
                    this.column3[e].anchor.set(.5),
                    this.column3[e].y = this.startPosition - 215 * i,
                    this.column3[e].coord = {
                        x: this.column3[e].x / 205,
                        y: this.column3[e].y / 205
                    },
                    this.containerColumn3.addChild(this.column3[e]),
                    i < 3 && (this.column3[e].buttonMode = !0,
                    this.column3[e].interactive = !0,
                    this.column3[e].on("pointerup", this.payTableItemOn.bind(this.column3[e], this))),
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column4[e] = new Sprite(this.loader.resources.items.textures["item-" + t + (3 < e && e < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column4[e].inx = t,
                    this.column4[e].x = 1008.5,
                    this.column4[e].anchor.set(.5),
                    this.column4[e].y = this.startPosition - 215 * i,
                    this.column4[e].coord = {
                        x: this.column4[e].x / 205,
                        y: this.column4[e].y / 205
                    },
                    this.containerColumn4.addChild(this.column4[e]),
                    i < 3 && (this.column4[e].buttonMode = !0,
                    this.column4[e].interactive = !0,
                    this.column4[e].on("pointerup", this.payTableItemOn.bind(this.column4[e], this))),
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column5[e] = new Sprite(this.loader.resources.items.textures["item-" + t + (3 < e && e < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"]),
                    this.column5[e].inx = t,
                    this.column5[e].x = 1268.5,
                    this.column5[e].anchor.set(.5),
                    this.column5[e].y = this.startPosition - 215 * i,
                    this.column5[e].coord = {
                        x: this.column5[e].x / 205,
                        y: this.column5[e].y / 205
                    },
                    this.containerColumn5.addChild(this.column5[e]),
                    i < 3 && (this.column5[e].buttonMode = !0,
                    this.column5[e].interactive = !0,
                    this.column5[e].on("pointerup", this.payTableItemOn.bind(this.column5[e], this))),
                    i++;
                this.startHeight = this.column1[0].y
            }
            ,
            h.prototype.initMask = function() {
                this.mask = (new PIXI.Graphics).beginFill(0, .7).drawRect(90, 200, 1300, 650),
                this.columnContainer.addChild(this.mask),
                this.columnContainer.mask = this.mask
            }
            ,
            h.prototype.initPayTable = function() {
                this.overlay = (new PIXI.Graphics).beginFill(0, .6).drawRect(80, 200, 1330, 660),
                this.overlay.interactive = !0,
                this.overlay.visible = !1,
                this.overlay.alpha = 0,
                this.overlay.on("pointerup", this.payTableItemOff.bind(this.overlay, this)),
                this.machine.addChild(this.overlay),
                this.paytableContainer = new PIXI.mesh.NineSlicePlane(this.loader.resources.ui.textures["paytable.png"],72,65,72,65),
                this.paytableContainer.x = 70,
                this.paytableContainer.y = 200,
                this.paytableContainer.width = 460,
                this.paytableContainer.height = 220,
                this.paytableContainer.visible = !1,
                this.paytableContainer.alpha = 0,
                this.machine.addChild(this.paytableContainer);
                var t = new PIXI.Sprite(this.resources.items.textures["item-1.png"]);
                t.x = 110,
                t.y = 110,
                t.anchor.set(.5),
                t.name = "img";
                var i = {
                    font: "38px " + this.fontEmbedSilver
                }
                  , e = {
                    fontFamily: this.fontSystem,
                    fontSize: 22,
                    fontWeight: 700,
                    fill: ["#ffd200", "#ffea5c"],
                    stroke: "#3a2828",
                    strokeThickness: 3,
                    dropShadow: !0,
                    dropShadowColor: "#3a2828",
                    dropShadowDistance: 2,
                    dropShadowBlur: 3,
                    dropShadowAngle: Math.PI / 2,
                    dropShadowAlpha: .3,
                    wordWrap: !0,
                    wordWrapWidth: 200
                }
                  , n = {
                    font: "38px " + this.fontEmbedGold
                }
                  , s = new Container;
                s.x = 220,
                s.y = 130,
                s.name = "multiplier";
                var o = new Container;
                o.name = "number",
                o.y = 16;
                var a = new PIXI.Text("",e);
                a.visible = !1,
                a.name = "string",
                a.x = -25,
                a.y = -50,
                a.anchor.set(0, .5),
                s.addChild(o, a);
                for (var r = 0; r < 3; r++) {
                    var l = new BitmapText((5 - r).toString(),i);
                    l.x = 0,
                    l.y = 50 * r - 90,
                    o.addChild(l);
                    var c = new BitmapText("5.000",n);
                    c.x = 40,
                    c.y = 50 * r - 90,
                    c.name = "number-" + r,
                    o.addChild(c);
                    var u = new PIXI.Text("5.000",e);
                    u.x = 40,
                    u.y = 50 * r - 90,
                    u.name = "string-" + r,
                    o.addChild(u)
                }
                this.paytableContainer.addChild(t, s)
            }
            ,
            h.prototype.payTableItemOn = function(t) {
                var i = this.coord
                  , e = this.inx;
                if (!(e < 0 && 11 < e)) {
                    t.overlay.visible = !0,
                    TweenLite.to(t.overlay, .5, {
                        alpha: 1
                    }),
                    t.paytableContainer.visible = !0,
                    TweenLite.to(t.paytableContainer, .5, {
                        alpha: 1
                    });
                    var n = t.paytableContainer.getChildByName("img")
                      , s = t.paytableContainer.getChildByName("multiplier")
                      , o = s.getChildByName("number")
                      , a = s.getChildByName("string");
                    if (i.x < 3 ? (n.position.set(110, 108),
                    s.position.set(240, 110),
                    t.paytableContainer.position.set(this.x - 110, this.y - 108)) : (n.position.set(340, 108),
                    s.position.set(50, 110),
                    t.paytableContainer.position.set(this.x - 340, this.y - 108)),
                    n.texture = t.resources.items.textures["item-" + e + ".png"],
                    1 === e)
                        o.visible = !1,
                        a.visible = !0,
                        a.text = t.payValue[e - 1][u.Config.lang];
                    else {
                        o.visible = !0,
                        a.visible = !1;
                        for (var r = 0; r < 3; r++) {
                            var l = o.getChildByName("number-" + r)
                              , c = o.getChildByName("string-" + r);
                            c.text = "",
                            l.text = "",
                            "number" == typeof t.payValue[e - 1][r] ? l.text = t.payValue[e - 1][r] : c.text = t.payValue[e - 1][r]
                        }
                    }
                    a.y = 0
                }
            }
            ,
            h.prototype.payTableItemOff = function(t) {
                TweenLite.to(t.overlay, .2, {
                    alpha: 0,
                    onComplete: function() {
                        t.overlay.visible = !1
                    }
                }),
                TweenLite.to(t.paytableContainer, .2, {
                    alpha: 0,
                    onComplete: function() {
                        t.paytableContainer.visible = !1
                    }
                })
            }
            ,
            h.prototype.initJackpot = function() {
                this.jackpotContainer = new Container,
                this.machine.addChild(this.jackpotContainer);
                var t = new Sprite(this.resources.ui.textures["JackpotBreakLine.png"]);
                t.x = 530,
                t.y = 97,
                this.txtJackpot = new BitmapText("0",{
                    font: "60px " + this.fontEmbedGold
                }),
                this.txtJackpot.anchor.x = .5,
                this.txtJackpot.position.set(740, 37),
                this.txtMoneyLevel = new BitmapText("0",{
                    font: "50px " + this.fontEmbedSilver
                }),
                this.txtMoneyLevel.anchor.x = .5,
                this.txtMoneyLevel.position.set(740, 108),
                this.xEvent = new Sprite(this.loader.resources.event.textures["ej-lb-x2"]),
                this.xEvent.anchor.set(.5),
                this.xEvent.scale.set(2),
                this.xEvent.position.set(1040, 105),
                this.xEvent.visible = !1,
                this.boxSession = new PIXI.mesh.NineSlicePlane(this.resources.ui.textures["rounded.png"],60,23,60,22),
                this.boxSession.position.set(1070, 100),
                this.boxSession.width = 207,
                this.boxSession.height = 65,
                this.txtSession = new PIXI.Text("0",this.uiTxtStyle),
                this.txtSession.anchor.set(0, .5),
                this.txtSession.position.set(15, 32.5),
                this.boxSession.addChild(this.txtSession),
                this.jackpotContainer.addChild(t, this.txtJackpot, this.txtMoneyLevel, this.xEvent, this.boxSession)
            }
            ,
            h.prototype.initTextures = function() {
                this.btnTextures.textureBtnSpin = this.resources.ui.textures["Spin-1.png"],
                this.btnTextures.textureBtnSpinOver = this.resources.ui.textures["Spin-2.png"],
                this.btnTextures.textureBtnSpinDown = this.resources.ui.textures["Spin-3.png"],
                this.btnTextures.textureBtnSpinDisable = this.resources.ui.textures["Spin-4.png"],
                this.btnTextures.textureBtnPlus = this.resources.ui.textures["BetPlus-1.png"],
                this.btnTextures.textureBtnPlusOver = this.resources.ui.textures["BetPlus-2.png"],
                this.btnTextures.textureBtnPlusDown = this.resources.ui.textures["BetPlus-3.png"],
                this.btnTextures.textureBtnPlusDisable = this.resources.ui.textures["BetPlus-4.png"],
                this.btnTextures.textureBtnMinus = this.resources.ui.textures["BetMinus-1.png"],
                this.btnTextures.textureBtnMinusOver = this.resources.ui.textures["BetMinus-2.png"],
                this.btnTextures.textureBtnMinusDown = this.resources.ui.textures["BetMinus-3.png"],
                this.btnTextures.textureBtnMinusDisable = this.resources.ui.textures["BetMinus-4.png"],
                this.btnTextures.textureBtnAuto = this.resources.ui.textures["Auto-1.png"],
                this.btnTextures.textureBtnAutoOver = this.resources.ui.textures["Auto-2.png"],
                this.btnTextures.textureBtnAutoDown = this.resources.ui.textures["Auto-3.png"],
                this.btnTextures.textureBtnAutoDisable = this.resources.ui.textures["Auto-4.png"],
                this.btnTextures.textureBtnExpand = this.resources.ui.textures["ButtonExpand-1.png"],
                this.btnTextures.textureBtnExpandOver = this.resources.ui.textures["ButtonExpand-2.png"],
                this.btnTextures.textureBtnExpandDown = this.resources.ui.textures["ButtonExpand-3.png"],
                this.btnTextures.textureBtnControl = this.resources.ui.textures["button-control-1.png"],
                this.btnTextures.textureBtnControlOver = this.resources.ui.textures["button-control-2.png"],
                this.btnTextures.textureBtnControlDown = this.resources.ui.textures["button-control-3.png"],
                this.btnTextures.textureBtnControlDisable = this.resources.ui.textures["button-control-4.png"],
                this.btnTextures.textureBtnCommon = this.resources.ui.textures["ButtonCommon-1.png"],
                this.btnTextures.textureBtnCommonOver = this.resources.ui.textures["ButtonCommon-2.png"],
                this.btnTextures.textureBtnCommonDown = this.resources.ui.textures["ButtonCommon-3.png"],
                this.btnTextures.textureBtnBonus = this.resources.bonus.textures["ButtonConfirm-1.png"],
                this.btnTextures.textureBtnBonusOver = this.resources.bonus.textures["ButtonConfirm-2.png"],
                this.btnTextures.textureBtnBonusDown = this.resources.bonus.textures["ButtonConfirm-3.png"]
            }
            ,
            h.prototype.initButtons = function() {
                var t = this;
                this.ui = new PIXI.Sprite(this.resources.ui.textures["Dock.png"]),
                this.ui.x = -35,
                this.ui.y = 908,
                this.machine.addChild(this.ui),
                this.uiContainer = new Container,
                this.guidContainer = new Container,
                this.btnGuideContainer = new Container,
                this.btnGuideContainer.visible = this.guidContainer.visible = !1,
                this.btnBackGuide = new Sprite(this.btnTextures.textureBtnSpin),
                this.btnBackGuide.t = "spin",
                this.btnBackGuide.position.set(766, 42),
                this.btnBackGuide.anchor.set(.5),
                this.btnBackGuide.addChild(new Sprite(this.resources.ui.textures["IconGuideBack.png"])),
                this.btnBackGuide.getChildAt(0).anchor.set(.5),
                this.btnBackGuide.on("pointerover", function() {
                    t.btnBackGuide.texture = t.btnTextures.textureBtnSpinOver
                }).on("pointerout", function() {
                    t.btnBackGuide.texture = t.btnTextures.textureBtnSpin
                }).on("pointerdown", function() {
                    t.btnBackGuide.texture = t.btnTextures.textureBtnSpinDown
                }).on("pointerup", this.btnBackGuideDown.bind(this.btnBackGuide, this)),
                this.btnBackGuide.interactive = !0,
                this.btnBackGuide.buttonMode = !0;
                var i = new Sprite(this.resources.ui.textures["ButtonGuide.png"]);
                i.anchor.set(.5),
                i.x = 1450,
                i.y = 560,
                i.interactive = !0,
                i.buttonMode = !0,
                i.on("pointerover", function() {
                    var t = new PIXI.filters.ColorMatrixFilter;
                    this.filters = [t],
                    t.brightness(2)
                }).on("pointerout", function() {
                    this.filters = null
                }).on("pointerup", this.btnNextUp.bind(i, this)),
                i.addChild(new Sprite(this.resources.ui.textures["IconGuideArrow.png"])),
                i.children[0].anchor.set(.5);
                var e = new Sprite(this.resources.ui.textures["ButtonGuide.png"]);
                e.anchor.set(.5),
                e.x = 44,
                e.y = 560,
                e.scale.x = -1,
                e.interactive = !0,
                e.buttonMode = !0,
                e.on("pointerover", function() {
                    var t = new PIXI.filters.ColorMatrixFilter;
                    this.filters = [t],
                    t.brightness(2)
                }),
                e.on("pointerout", function() {
                    this.filters = []
                }),
                e.on("pointerup", this.btnPrevUp.bind(e, this)),
                e.addChild(new Sprite(this.resources.ui.textures["IconGuideArrow.png"])),
                e.children[0].anchor.set(.5),
                this.guidContainer.addChild(this.btnBackGuide),
                this.btnGuideContainer.addChild(i, e),
                this.machine.addChild(this.btnGuideContainer),
                this.ui.addChild(this.guidContainer, this.uiContainer),
                this.uiTxtStyle = new PIXI.TextStyle({
                    fontFamily: this.fontSystem,
                    fontSize: 27,
                    fontWeight: "700",
                    letterSpacing: -.4,
                    fill: ["#ffda82", "#b66440"]
                }),
                this.uiLabelStyle = new PIXI.TextStyle({
                    fontFamily: this.fontSystem,
                    fontSize: 18,
                    fontWeight: "700",
                    fill: ["#ffffff", "#f9bd5e"]
                }),
                this.boxBalance = new PIXI.mesh.NineSlicePlane(this.resources.ui.textures["rounded.png"],60,23,60,22),
                this.boxBalance.position.set(1260, 33),
                this.boxBalance.width = 207,
                this.boxBalance.height = 65,
                this.lblBalance = new PIXI.Text(Message.GetMessage("hi05").toUpperCase(),this.uiLabelStyle),
                this.lblBalance.anchor.set(.5, 0),
                this.lblBalance.position.set(this.boxBalance.width / 2, -23),
                this.txtBalance = new PIXI.Text("0",this.uiTxtStyle),
                this.txtBalance.anchor.set(.5),
                this.txtBalance.position.set(this.boxBalance.width / 2, 33),
                this.boxBalance.addChild(this.lblBalance, this.txtBalance),
                this.boxJustWon = new PIXI.mesh.NineSlicePlane(this.resources.ui.textures["rounded.png"],50,38,50,38),
                this.boxJustWon.position.set(1020, 33),
                this.boxJustWon.width = 205,
                this.boxJustWon.height = 65,
                this.lblJustWon = new PIXI.Text(Message.GetMessage("sl5").toUpperCase(),this.uiLabelStyle),
                this.lblJustWon.anchor.set(.5, 0),
                this.lblJustWon.position.set(this.boxJustWon.width / 2, -23),
                this.txtJustWon = new PIXI.Text("0",this.uiTxtStyle),
                this.txtJustWon.anchor.set(.5),
                this.txtJustWon.position.set(this.boxJustWon.width / 2, 33),
                this.boxJustWon.addChild(this.lblJustWon, this.txtJustWon),
                this.boxLines = new PIXI.mesh.NineSlicePlane(this.resources.ui.textures["rounded.png"],30,22,30,23),
                this.boxLines.position.set(100, 33),
                this.boxLines.width = 160,
                this.boxLines.height = 65,
                this.lblLines = new PIXI.Text(Message.GetMessage("sl7").toUpperCase(),this.uiLabelStyle),
                this.lblLines.anchor.set(.5, 0),
                this.lblLines.position.set(this.boxLines.width / 2, -23),
                this.txtLines = new PIXI.Text("243",this.uiTxtStyle),
                this.txtLines.anchor.set(.5),
                this.txtLines.position.set(this.boxLines.width / 2, 33),
                this.boxLines.addChild(this.lblLines, this.txtLines),
                this.ui.addChild(this.boxLines),
                this.boxBet = new PIXI.mesh.NineSlicePlane(this.resources.ui.textures["rounded.png"],60,23,60,22),
                this.boxBet.position.set(310, 33),
                this.boxBet.width = 207,
                this.boxBet.height = 65,
                this.lblBetValue = new PIXI.Text(Message.GetMessage("sl4").toUpperCase(),this.uiLabelStyle),
                this.lblBetValue.anchor.set(.5, 0),
                this.lblBetValue.position.set(this.boxBet.width / 2, -23),
                this.txtBetValue = new PIXI.Text("0",this.uiTxtStyle),
                this.txtBetValue.anchor.set(.5),
                this.txtBetValue.position.set(this.boxBet.width / 2, 33),
                this.boxBet.addChild(this.lblBetValue, this.txtBetValue),
                this.expandContainer = new Container,
                this.expandContainer.position.set(1580, -405),
                this.expandContainer.visible = !1,
                this.btnSound = new Sprite(this.btnTextures.textureBtnCommon),
                this.btnSound.t = "common",
                this.btnSound.anchor.set(.5),
                this.btnSound.position.set(10, 10),
                this.btnSound.interactive = !0,
                this.btnSound.buttonMode = !0,
                this.btnSound.on("pointerover", this.btnOver.bind(this.btnSound, this)).on("pointerout", this.btnOut.bind(this.btnSound, this)).on("pointerdown", this.btnDown.bind(this.btnSound, this)).on("pointerup", this.btnSoundUp.bind(this.btnSound, this)),
                this.btnSound.addChild(new Sprite(this.resources.ui.textures["icon-sound-on.png"])),
                this.btnSound.children[0].anchor.set(.5),
                this.btnMusic = new Sprite(this.btnTextures.textureBtnCommon),
                this.btnMusic.t = "common",
                this.btnMusic.anchor.set(.5),
                this.btnMusic.position.set(10, 95),
                this.btnMusic.interactive = !0,
                this.btnMusic.buttonMode = !0,
                this.btnMusic.on("pointerover", this.btnOver.bind(this.btnMusic, this)).on("pointerout", this.btnOut.bind(this.btnMusic, this)).on("pointerdown", this.btnDown.bind(this.btnMusic, this)).on("pointerup", this.btnMusicUp.bind(this.btnMusic, this)),
                this.btnMusic.addChild(new Sprite(this.resources.ui.textures["icon-music-on.png"])),
                this.btnMusic.children[0].anchor.set(.5),
                this.btnHistory = new Sprite(this.btnTextures.textureBtnCommon),
                this.btnHistory.t = "common",
                this.btnHistory.anchor.set(.5),
                this.btnHistory.position.set(10, 180),
                this.btnHistory.interactive = !0,
                this.btnHistory.buttonMode = !0,
                this.btnHistory.on("pointerover", this.btnOver.bind(this.btnHistory, this)).on("pointerout", this.btnOut.bind(this.btnHistory, this)).on("pointerdown", this.btnDown.bind(this.btnHistory, this)).on("pointerup", this.btnHistoryUp.bind(this.btnHistory, this)),
                this.btnHistory.addChild(new Sprite(this.resources.ui.textures["icon-history.png"])),
                this.btnHistory.children[0].anchor.set(.5),
                this.btnRank = new Sprite(this.btnTextures.textureBtnCommon),
                this.btnRank.t = "common",
                this.btnRank.anchor.set(.5),
                this.btnRank.position.set(10, 265),
                this.btnRank.interactive = !0,
                this.btnRank.buttonMode = !0,
                this.btnRank.on("pointerover", this.btnOver.bind(this.btnRank, this)).on("pointerout", this.btnOut.bind(this.btnRank, this)).on("pointerdown", this.btnDown.bind(this.btnRank, this)).on("pointerup", this.btnRankUp.bind(this.btnRank, this)),
                this.btnRank.addChild(new Sprite(this.resources.ui.textures["icon-rank.png"])),
                this.btnRank.children[0].anchor.set(.5),
                this.btnGuide = new Sprite(this.btnTextures.textureBtnCommon),
                this.btnGuide.t = "common",
                this.btnGuide.anchor.set(.5),
                this.btnGuide.position.set(10, 352),
                this.btnGuide.interactive = !0,
                this.btnGuide.buttonMode = !0,
                this.btnGuide.on("pointerover", this.btnOver.bind(this.btnGuide, this)).on("pointerout", this.btnOut.bind(this.btnGuide, this)).on("pointerdown", this.btnDown.bind(this.btnGuide, this)).on("pointerup", this.btnGuideUp.bind(this.btnGuide, this)),
                this.btnGuide.addChild(new Sprite(this.resources.ui.textures["icon-guide.png"])),
                this.btnGuide.children[0].anchor.set(.5),
                this.btnExpand = new Sprite(this.btnTextures.textureBtnExpand),
                this.btnExpand.t = "expand",
                this.btnExpand.anchor.set(.5),
                this.btnExpand.position.set(1590, 50),
                this.btnExpand.interactive = !0,
                this.btnExpand.buttonMode = !0,
                this.btnExpand.on("pointerover", this.btnOver.bind(this.btnExpand, this)).on("pointerout", this.btnOut.bind(this.btnExpand, this)).on("pointerdown", this.btnDown.bind(this.btnExpand, this)).on("pointerup", this.btnExpandUp.bind(this.btnExpand, this)),
                this.btnExpand.addChild(new Sprite(this.resources.ui.textures["IconMore.png"])),
                this.btnExpand.children[0].anchor.set(.5),
                this.expandContainer.addChild(this.btnSound, this.btnMusic, this.btnHistory, this.btnRank, this.btnGuide),
                this.btnPlusBet = new PIXI.Sprite(this.btnTextures.textureBtnPlus),
                this.btnPlusBet.anchor.set(.5),
                this.btnPlusBet.position.set(620, 17),
                this.btnPlusBet.t = "betPlus",
                this.btnPlusBet.interactive = !0,
                this.btnPlusBet.buttonMode = !0,
                this.btnPlusBet.on("pointerover", this.btnOver.bind(this.btnPlusBet, this)).on("pointerout", this.btnOut.bind(this.btnPlusBet, this)).on("pointerdown", this.btnDown.bind(this.btnPlusBet, this)).on("pointerup", this.btnPlusBetUp.bind(this.btnPlusBet, this)),
                this.btnPlusBet.addChild(new Sprite(this.resources.ui.textures["Plus.png"])),
                this.btnPlusBet.children[0].anchor.set(.5),
                this.btnPlusBet.children[0].position.set(4, 10),
                this.btnMinusBet = new PIXI.Sprite(this.btnTextures.textureBtnMinus),
                this.btnMinusBet.anchor.set(.5),
                this.btnMinusBet.position.set(620, 85),
                this.btnMinusBet.t = "betMinus",
                this.btnMinusBet.interactive = !0,
                this.btnMinusBet.buttonMode = !0,
                this.btnMinusBet.on("pointerover", this.btnOver.bind(this.btnMinusBet, this)).on("pointerout", this.btnOut.bind(this.btnMinusBet, this)).on("pointerdown", this.btnDown.bind(this.btnMinusBet, this)).on("pointerup", this.btnMinusBetUp.bind(this.btnMinusBet, this)),
                this.btnMinusBet.addChild(new Sprite(this.resources.ui.textures["Minus.png"])),
                this.btnMinusBet.children[0].anchor.set(.5),
                this.btnMinusBet.children[0].position.set(4, -10),
                this.boxAuto = new Sprite(this.resources.ui.textures["Autoplay.png"]),
                this.boxAuto.position.set(919, -300),
                this.boxAuto.anchor.set(.5, 0),
                this.boxAuto.visible = !1;
                for (var n = 16, s = this.autoClientArr.length - 1; 0 <= s; s--) {
                    var o = new PIXI.Graphics;
                    o.beginFill(16777215, 0),
                    o.drawRect(0, 0, 100, 50),
                    o.endFill(),
                    o.x = -50,
                    o.y = n,
                    o.interactive = !0,
                    o.buttonMode = !0,
                    o.value = this.autoClientArr[s],
                    o.on("pointerover", function() {
                        this.getChildByName("spin").alpha = .6
                    }).on("pointerout", function() {
                        this.getChildByName("spin").alpha = 1
                    }).on("pointerup", this.txtAutoDown.bind(o, this)),
                    this.boxAuto.addChild(o);
                    var a = new PIXI.Text(c.Util.ParseMoney(this.autoClientArr[s]),{
                        fontFamily: this.fontSystem,
                        fontSize: 30,
                        fontWeight: "700",
                        fill: ["#ffffff", "#ffc261"]
                    });
                    a.name = "spin",
                    a.anchor.set(.5),
                    a.x = 50,
                    a.y = 25,
                    o.addChild(a);
                    var r = new Sprite(this.resources.ui.textures["red-space.png"]);
                    r.anchor.set(.5),
                    r.x = 50,
                    r.y = 52,
                    o.addChild(r),
                    n += 52
                }
                this.btnAuto = new Sprite(this.btnTextures.textureBtnAuto),
                this.btnAuto.anchor.set(.5),
                this.btnAuto.position.set(911, 47),
                this.btnAuto.on("pointerover", function() {
                    t.btnAuto.texture = t.btnTextures.textureBtnAutoOver,
                    t.isOver = !0
                }).on("pointerout", function() {
                    t.btnAuto.texture = t.btnTextures.textureBtnAuto,
                    t.isOver = !1
                }).on("pointerdown", function() {
                    t.btnAuto.texture = t.btnTextures.textureBtnAutoDown
                }).on("pointerup", this.btnAutoDown.bind(this.btnAuto, this)),
                this.btnAuto.interactive = !0,
                this.btnAuto.buttonMode = !0;
                var l = new Sprite(this.resources.ui.textures["IconAuto.png"]);
                l.anchor.set(.5),
                l.x = 0,
                l.y = 1,
                this.btnAuto.addChild(l),
                this.txtAutoSpin = new PIXI.Text("0",this.uiTxtStyle),
                this.txtAutoSpin.anchor.set(.5),
                this.txtAutoSpin.position.set(911, 130),
                this.txtAutoSpin.visible = !1,
                this.btnSpin = new Sprite(this.btnTextures.textureBtnSpin),
                this.btnSpin.t = "spin",
                this.btnSpin.position.set(766, 42),
                this.btnSpin.anchor.set(.5),
                this.btnSpin.addChild(new Sprite(this.resources.ui.textures["IconSpin.png"])),
                this.btnSpin.getChildAt(0).anchor.set(.5),
                this.btnSpin.getChildAt(0).position.set(-6, 2),
                this.btnSpin.on("pointerover", function() {
                    t.btnSpin.texture = t.btnTextures.textureBtnSpinOver
                }).on("pointerout", function() {
                    t.btnSpin.texture = t.btnTextures.textureBtnSpin
                }).on("pointerdown", function() {
                    t.btnSpin.texture = t.btnTextures.textureBtnSpinDown
                }).on("pointerup", this.btnSpinDown.bind(this.btnSpin, this)),
                this.btnSpin.interactive = !0,
                this.btnSpin.buttonMode = !0,
                this.btnStopAuto = new Sprite(this.btnTextures.textureBtnSpin),
                this.btnStopAuto.t = "spin",
                this.btnStopAuto.position.set(766, 42),
                this.btnStopAuto.anchor.set(.5),
                this.btnStopAuto.addChild(new Sprite(this.resources.ui.textures["IconStop.png"])),
                this.btnStopAuto.getChildAt(0).anchor.set(.5),
                this.btnStopAuto.getChildAt(0).position.set(0, 0),
                this.btnStopAuto.on("pointerover", function() {
                    t.btnStopAuto.texture = t.btnTextures.textureBtnSpinOver
                }).on("pointerout", function() {
                    t.btnStopAuto.texture = t.btnTextures.textureBtnSpin
                }).on("pointerdown", function() {
                    t.btnStopAuto.texture = t.btnTextures.textureBtnSpinDown
                }).on("pointerup", this.btnStopAutoDown.bind(this.btnSpin, this)),
                this.btnStopAuto.interactive = !0,
                this.btnStopAuto.buttonMode = !0,
                this.btnStopAuto.visible = !1,
                this.btnQuick = new Sprite(this.resources.ui.textures["ButtonQuickSpin-1.png"]),
                this.btnQuick.anchor.set(0, .5),
                this.btnQuick.position.set(701, 153.5),
                this.btnQuick.addChild(new PIXI.Text(Message.GetMessage("mnpk1"),this.uiLabelStyle)),
                this.btnQuick.children[0].anchor.set(0, .5),
                this.btnQuick.children[0].position.set(38, 0),
                this.btnQuick.on("pointerover", this.btnTintOver.bind(this.btnQuick, this)).on("pointerout", this.btnTintOut).on("pointerup", this.btnQuickDown.bind(this.btnQuick, this)),
                this.btnQuick.interactive = !0,
                this.btnQuick.buttonMode = !0,
                this.boxFreeTicket = new PIXI.mesh.NineSlicePlane(this.resources.ui.textures["freeticket.png"],38,20,39,28),
                this.boxFreeTicket.width = 200,
                this.boxFreeTicket.height = 48,
                this.boxFreeTicket.position.set(670, -80),
                this.txtFreeTicket = new PIXI.Text("+0 Free",this.uiLabelStyle),
                this.txtFreeTicket.anchor.set(.5),
                this.txtFreeTicket.position.set(this.boxFreeTicket.width / 2, this.boxFreeTicket.height / 2 - 5),
                this.boxFreeTicket.addChild(this.txtFreeTicket),
                this.boxFreeTicket.visible = !1,
                this.txtMoney = new BitmapText("",{
                    font: "90px " + this.fontEmbedGold
                }),
                this.txtMoney.anchor.set(.5),
                this.txtMoney.position.set(740, 780),
                this.txtMoney.visible = !1,
                this.btnBack = new Sprite(this.btnTextures.textureBtnExpand),
                this.btnBack.t = "expand",
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(1590, 50),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.btnOver.bind(this.btnBack, this)).on("pointerout", this.btnOut.bind(this.btnBack, this)).on("pointerdown", this.btnDown.bind(this.btnBack, this)).on("pointerup", this.btnBackUp.bind(this.btnBack, this)),
                this.btnBack.addChild(new Sprite(this.resources.ui.textures["IconHome.png"])),
                this.btnBack.children[0].anchor.set(.5),
                this.btnHide = new Sprite(this.resources.hide.textures["rect-1.png"]),
                this.btnHide.t = "expand",
                this.btnHide.anchor.set(.5),
                this.btnHide.position.set(1590, 50),
                this.btnHide.interactive = !0,
                this.btnHide.buttonMode = !0,
                this.btnHide.on("pointerup", this.btnHideUp.bind(this.btnHide, this)),
                this.btnHide.addChild(new Sprite(this.btnTextures.textureBtnExpand)),
                this.btnHide.children[0].anchor.set(.5),
                this.btnHide.children[0].x = -55,
                this.btnHide.children[0].addChild(new Sprite(this.resources.hide.textures["icon-hide.png"])),
                this.btnHide.children[0].children[0].anchor.set(.5),
                this.btnHide.addChild(new Sprite(this.resources.hide.textures["hide-" + ("vi" === u.Config.lang ? "vi" : "en") + ".png"])),
                this.btnHide.children[1].anchor.set(.5),
                this.btnHide.children[1].position.set(10, "vi" === u.Config.lang ? -2 : 0),
                this.application.stage.addChild(this.btnBack, this.btnHide),
                this.machine.addChild(this.txtMoney),
                this.uiContainer.addChild(this.boxBalance, this.boxJustWon, this.boxLines, this.boxBet, this.expandContainer, this.btnExpand, this.btnPlusBet, this.btnMinusBet, this.boxAuto, this.btnAuto, this.txtAutoSpin, this.btnSpin, this.btnStopAuto, this.btnQuick, this.boxFreeTicket)
            }
            ,
            h.prototype.initAccu = function() {
                this.coins = [],
                this.tableCoins = new Sprite(this.resources.ui.textures["TableCoin.png"]),
                this.tableCoins.position.set(-270, 590),
                this.machine.addChild(this.tableCoins);
                var t = new Sprite(this.resources.ui.textures["TableCoin2.png"]);
                t.position.set(172, 252);
                var i = new PIXI.spine.Spine(this.resources.pig.spineData);
                i.position.set(135, 306),
                i.state.timeScale = 1,
                i.state.setAnimation(0, "animation", !0);
                var e = new PIXI.Text(Message.GetMessage("sl91").toUpperCase(),{
                    fontFamily: this.fontSystem,
                    fontSize: 22,
                    fontWeight: "700",
                    fill: ["#ffe361", "#ff9000"]
                });
                e.anchor.x = .5,
                e.position.set(180, 20);
                for (var n = new Container, s = 0; s < 20; s++) {
                    var o = new Sprite(this.resources.ui.textures["Coin.png"]);
                    o.position.set(this.coinArr[s].x, this.coinArr[s].y),
                    o.anchor.set(.5),
                    n.addChild(o),
                    this.coins.push(o),
                    o.visible = !1
                }
                this.coinActive = new Sprite(this.resources.ui.textures["Coin.png"]),
                this.coinActive.x = 17,
                this.coinActive.y = 17,
                this.coinActive.alpha = 0,
                this.coinActive.visible = !1,
                this.coinActive.anchor.set(.5);
                var a = new PIXI.filters.ColorMatrixFilter;
                a.brightness(2),
                this.coinActive.filters = [a],
                this.tableCoins.addChild(t, i, e, n, this.coinActive)
            }
            ,
            h.prototype.initPopup = function() {
                this.popup = new Sprite(this.resources.ui.textures["Popup.png"]),
                this.popup.anchor.set(.5),
                this.popup.position.set(740, 480),
                this.popup.visible = !1,
                this.popup.alpha = 0,
                this.machine.addChild(this.popup);
                var t = new PIXI.Text("",{
                    fontFamily: this.fontSystem,
                    fontSize: 30,
                    fontWeight: "500",
                    fill: "#ffffff",
                    wordWrap: !0,
                    wordWrapWidth: 600
                });
                t.anchor.set(.5),
                t.y = 20;
                var i = new Sprite(this.btnTextures.textureBtnExpand);
                i.anchor.set(.5),
                i.y = 183,
                i.t = "expand",
                i.on("pointerover", this.btnOver.bind(i, this)).on("pointerout", this.btnOut.bind(i, this)).on("pointerdown", this.btnDown.bind(i, this)).on("pointerup", this.btnCloseUp.bind(this.btnExpand, this)),
                i.addChild(new Sprite(this.resources.ui.textures["IconGuideArrow.png"])),
                i.children[0].anchor.set(.5),
                i.children[0].rotation = 1.5,
                i.interactive = !0,
                i.buttonMode = !0,
                this.popup.addChild(t, i)
            }
            ,
            h.prototype.btnNextUp = function(t) {
                var i = $("#guide-fortune .guide-fortune.active").index();
                4 < ++i && (i = 0),
                $("#guide-fortune .guide-fortune").removeClass("active"),
                $("#guide-fortune .guide-" + (i + 1)).addClass("active"),
                $("#guide-fortune-nav i").removeClass("active"),
                $("#guide-fortune-nav i:eq(" + i + ")").addClass("active")
            }
            ,
            h.prototype.btnPrevUp = function(t) {
                var i = $("#guide-fortune .guide-fortune.active").index();
                i - 1 < 0 && (i = $("#guide-fortune .guide-fortune").length),
                $("#guide-fortune .guide-fortune").removeClass("active"),
                $("#guide-fortune .guide-" + i).addClass("active"),
                $("#guide-fortune-nav i").removeClass("active"),
                $("#guide-fortune-nav i:eq(" + (i - 1) + ")").addClass("active")
            }
            ,
            h.prototype.btnCloseUp = function(t) {
                t.hidePopup()
            }
            ,
            h.prototype.setActiveCoin = function() {
                if (this.currentPlayer && this.currentPlayer.SpinData) {
                    var t = Math.floor(this.currentPlayer.SpinData.Points / this.coinPoint);
                    this.coinHas = t <= 20 ? t : 20;
                    for (var i = 0; i < this.coins.length; i++)
                        this.coins[i].visible = i < this.coinHas;
                    0 < this.coinHas ? (null == this.twActiveCoin && (this.twActiveCoin = new TimelineMax({
                        repeat: -1
                    }),
                    this.twActiveCoin.to(this.coinActive, .6, {
                        alpha: 0,
                        pixi: {
                            scaleX: 1,
                            scaleY: 1
                        },
                        ease: Power0.easeNone
                    }),
                    this.twActiveCoin.to(this.coinActive, .6, {
                        alpha: 1,
                        pixi: {
                            scaleX: 1.25,
                            scaleY: 1.25
                        },
                        ease: Power0.easeNone
                    }),
                    this.twActiveCoin.to(this.coinActive, .6, {
                        alpha: 0,
                        pixi: {
                            scaleX: 1.5,
                            scaleY: 1.5
                        },
                        ease: Power0.easeNone
                    })),
                    this.coinActive.position.set(this.coinArr[this.coinHas - 1].x, this.coinArr[this.coinHas - 1].y),
                    this.coinActive.visible = !0) : this.resetCoin()
                } else
                    this.resetCoin()
            }
            ,
            h.prototype.removeActiveCoin = function() {
                this.coinHas = 0;
                try {
                    this.twActiveCoin.kill()
                } catch (t) {}
                this.twActiveCoin = null,
                this.coinActive.visible = !1
            }
            ,
            h.prototype.resetCoin = function() {
                try {
                    this.twActiveCoin.kill()
                } catch (t) {}
                this.twActiveCoin = null,
                this.coinActive.visible = !1;
                for (var t = 0; t < this.coins.length; t++)
                    this.coins[t].visible = !1
            }
            ,
            h.prototype.btnTintOver = function(t) {
                this.filters = [t.filter]
            }
            ,
            h.prototype.btnTintOut = function() {
                this.filters = null
            }
            ,
            h.prototype.btnOver = function(t) {
                try {
                    var i = this;
                    switch (i.t) {
                    case "common":
                        i.texture = t.btnTextures.textureBtnCommonOver;
                        break;
                    case "expand":
                        i.texture = t.btnTextures.textureBtnExpandOver;
                        break;
                    case "betPlus":
                        i.texture = t.btnTextures.textureBtnPlusOver;
                        break;
                    case "betMinus":
                        i.texture = t.btnTextures.textureBtnMinusOver;
                        break;
                    case "confirm":
                        i.texture = t.btnTextures.textureBtnBonusOver
                    }
                    t.isOver = !0
                } catch (t) {}
            }
            ,
            h.prototype.btnOut = function(t) {
                try {
                    var i = this;
                    switch (i.t) {
                    case "common":
                        i.texture = t.btnTextures.textureBtnCommon;
                        break;
                    case "expand":
                        i.texture = t.btnTextures.textureBtnExpand;
                        break;
                    case "betPlus":
                        i.texture = t.btnTextures.textureBtnPlus;
                        break;
                    case "betMinus":
                        i.texture = t.btnTextures.textureBtnMinus;
                        break;
                    case "confirm":
                        i.texture = t.btnTextures.textureBtnBonus
                    }
                    t.isOver = !1
                } catch (t) {}
            }
            ,
            h.prototype.btnDown = function(t) {
                try {
                    var i = this;
                    switch (i.t) {
                    case "common":
                        i.texture = t.btnTextures.textureBtnCommonDown;
                        break;
                    case "expand":
                        i.texture = t.btnTextures.textureBtnExpandDown;
                        break;
                    case "betPlus":
                        i.texture = t.btnTextures.textureBtnPlusDown;
                        break;
                    case "betMinus":
                        i.texture = t.btnTextures.textureBtnMinusDown;
                        break;
                    case "confirm":
                        i.texture = t.btnTextures.textureBtnBonusDown
                    }
                } catch (t) {}
            }
            ,
            h.prototype.txtAutoDown = function(t) {
                u.Config.autoSpinCount = parseInt(this.value),
                u.Config.isAutoSpin = window.App.isAutoFortune = !0,
                t.txtAutoSpin.text = c.Util.ParseMoney(u.Config.autoSpinCount),
                t.txtAutoSpin.visible = !0,
                t.boxAuto.visible = !1,
                t.btnStopAuto.visible = !0,
                $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
                window.App.isAuto && (window.App.showPopupMessage({
                    content: Message.GetMessage("sl94").replace("{0}", Message.GetMessage("na213")),
                    textDone: "OK"
                }),
                sessionStorage.setItem("Auto-" + t.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";" + u.Config.isAutoSpin),
                $(".multislot-expand").addClass("active")),
                t.initSpin(t)
            }
            ,
            h.prototype.btnHideUp = function(t) {
                u.Config.isAutoSpin ? (window.App.isAuto = !0,
                window.App.isAuto && (sessionStorage.setItem("Auto-" + t.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";" + u.Config.isAutoSpin),
                window.location.hash = "#",
                window.location.reload())) : t.showMessage(Message.GetMessage("sl98"))
            }
            ,
            h.prototype.btnAutoDown = function(t) {
                if (this.texture = t.isOver ? t.btnTextures.textureBtnAutoOver : t.btnTextures.textureBtnAuto,
                u.Config.sound)
                    try {
                        PIXI.sound.play("btnSound")
                    } catch (t) {}
                t.boxAuto.visible = !t.boxAuto.visible,
                t.boxAuto.visible ? t.disableMainItems() : t.enableMainItems()
            }
            ,
            h.prototype.btnSoundUp = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("btnSound")
                    } catch (t) {}
                if (this.texture = t.isOver ? t.btnTextures.textureBtnCommonOver : t.btnTextures.textureBtnCommon,
                u.Config.sound) {
                    u.Config.sound = !1,
                    t.btnSound.getChildAt(0).texture = t.loader.resources.ui.textures["icon-sound-off.png"];
                    try {
                        t.jackpotSound.stop(),
                        t.bigWinSound.stop(),
                        t.countSound.stop()
                    } catch (t) {}
                } else
                    u.Config.sound = !0,
                    t.btnSound.getChildAt(0).texture = t.loader.resources.ui.textures["icon-sound-on.png"]
            }
            ,
            h.prototype.btnMusicUp = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("btnSound")
                    } catch (t) {}
                if (this.texture = t.isOver ? t.btnTextures.textureBtnCommonOver : t.btnTextures.textureBtnCommon,
                u.Config.music) {
                    u.Config.music = !1;
                    try {
                        t.bgSound.stop()
                    } catch (t) {}
                    t.btnMusic.getChildAt(0).texture = t.loader.resources.ui.textures["icon-music-off.png"]
                } else {
                    u.Config.music = !0;
                    try {
                        t.bgSound.play()
                    } catch (t) {}
                    t.btnMusic.getChildAt(0).texture = t.loader.resources.ui.textures["icon-music-on.png"]
                }
            }
            ,
            h.prototype.btnHistoryUp = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("btnSound")
                    } catch (t) {}
                this.texture = t.isOver ? t.btnTextures.textureBtnCommonOver : t.btnTextures.textureBtnCommon,
                t.his()
            }
            ,
            h.prototype.btnRankUp = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("btnSound")
                    } catch (t) {}
                this.texture = t.isOver ? t.btnTextures.textureBtnCommonOver : t.btnTextures.textureBtnCommon,
                t.trans()
            }
            ,
            h.prototype.btnGuideUp = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("btnSound")
                    } catch (t) {}
                o.contents.clearTimer(),
                t.beforeSpin(),
                this.texture = t.isOver ? t.btnTextures.textureBtnCommonOver : t.btnTextures.textureBtnCommon,
                1 == t.guidContainer.visible ? t.hideGuide() : t.showGuide()
            }
            ,
            h.prototype.btnBackGuideDown = function(t) {
                t.hideGuide()
            }
            ,
            h.prototype.showGuide = function() {
                this.columnContainer.visible = !1,
                this.tableCoins.visible = !1,
                this.guidContainer.visible = !0,
                this.uiContainer.visible = !1,
                this.btnGuideContainer.visible = !0,
                $("#guide-fortune").addClass("active")
            }
            ,
            h.prototype.hideGuide = function() {
                o.contents.enableButtons(this),
                this.columnContainer.visible = !0,
                this.tableCoins.visible = !0,
                this.guidContainer.visible = !1,
                this.uiContainer.visible = !0,
                this.btnGuideContainer.visible = !1,
                $("#guide-fortune").removeClass("active")
            }
            ,
            h.prototype.btnExpandUp = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("btnSound")
                    } catch (t) {}
                this.texture = t.isOver ? t.btnTextures.textureBtnExpandOver : t.btnTextures.textureBtnExpand,
                t.expandContainer.visible = !t.expandContainer.visible,
                this.children[0].scale.y = t.expandContainer.visible ? -1 : 1
            }
            ,
            h.prototype.btnBackUp = function(t) {
                window.location.hash = "#",
                window.location.reload()
            }
            ,
            h.prototype.btnPlusBetUp = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("betSound")
                    } catch (t) {}
                var i;
                this.texture = t.isOver ? t.btnTextures.textureBtnPlusOver : t.btnTextures.textureBtnPlus,
                t.beforeSpin(),
                o.contents.checkLoginOrInRoom(t) && (8 < (i = u.Config.roomId + 1) && (i = 1),
                t.joinGame(i))
            }
            ,
            h.prototype.btnMinusBetUp = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("betSound")
                    } catch (t) {}
                var i;
                this.texture = t.isOver ? t.btnTextures.textureBtnMinusOver : t.btnTextures.textureBtnMinus,
                t.beforeSpin(),
                o.contents.checkLoginOrInRoom(t) && ((i = u.Config.roomId - 1) <= 0 && (i = 8),
                t.joinGame(i))
            }
            ,
            h.prototype.btnSpinDown = function(t) {
                if (u.Config.sound)
                    try {
                        PIXI.sound.play("spinSound")
                    } catch (t) {}
                t.initSpin(t)
            }
            ,
            h.prototype.btnStopAutoDown = function(t) {
                o.contents.stopAutoSpin(t)
            }
            ,
            h.prototype.btnQuickDown = function(t) {
                u.Config.isQuick = !u.Config.isQuick,
                t.btnQuick.texture = t.resources.ui.textures[u.Config.isQuick ? "ButtonQuickSpin-2.png" : "ButtonQuickSpin-1.png"]
            }
            ,
            h.prototype.joinGame = function(t) {
                u.Config.isLogin ? this.hubs.connection.invoke("PlayNow", {
                    RoomID: t,
                    CurrencyID: u.Config.currencyId
                }) : this.showMessage(Language.GetMessage("app003"))
            }
            ,
            h.prototype.joinRoom = function(t) {
                console.log("join", t),
                this.accountId = t.AccountID,
                this.currentPlayer = t,
                u.Config.isTry || (this.txtBalance.text = c.Util.ParseMoney(t.Account.GoldBalance, void 0),
                this.balance = t.Account.GoldBalance),
                this.destroyEffect(),
                o.contents.clearTimer(),
                o.contents.getJackpot(this),
                u.Config.roomId = t.RoomID,
                u.Config.betValue = t.BetValue,
                u.Config.inRoom = !0,
                u.Config.moneyType = t.moneyType,
                null == this.currentPlayer.SpinData && (this.currentPlayer.SpinData = {}),
                this.currentPlayer.SpinData.Points = this.currentPlayer.PointInfo.Points,
                this.currentPlayer.SpinData.PointAdd = 0,
                this.checkGame()
            }
            ,
            h.prototype.checkGame = function() {
                o.contents.updateControl(this),
                o.contents.getTicket(this),
                this.checkAutoSpin() || o.contents.enableButtons(this)
            }
            ,
            h.prototype.changeSlots = function() {
                for (var t, i = 1; i < this.totalItems - 3; i++)
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column1[i].texture = this.loader.resources.items.textures["item-" + t + (3 < i && i < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"],
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column2[i].texture = this.loader.resources.items.textures["item-" + t + (3 < i && i < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"],
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column3[i].texture = this.loader.resources.items.textures["item-" + t + (3 < i && i < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"],
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column4[i].texture = this.loader.resources.items.textures["item-" + t + (3 < i && i < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"],
                    t = Math.floor(11 * Math.random()) + 1,
                    this.column5[i].texture = this.loader.resources.items.textures["item-" + t + (3 < i && i < this.totalItems - 3 && !u.Config.useBlur ? "-blur" : "") + ".png"]
            }
            ,
            h.prototype.destroyEffect = function() {
                this.overlay.visible = !1,
                this.overlay.alpha = 0,
                o.contents.deleteTwEffect();
                try {
                    this.emiterBig.destroy({
                        children: !0
                    })
                } catch (t) {}
                try {
                    this.coinContainer.destroy({
                        children: !0
                    })
                } catch (t) {}
                try {
                    this.effectContainer.destroy({
                        children: !0
                    })
                } catch (t) {}
                this.emiterBig = null;
                for (var t = 0; t < this.emitIcons.length; t++)
                    if (null !== this.emitIcons[t])
                        try {
                            this.emitIcons[t].destroy({
                                children: !0
                            }),
                            this.emitIcons[t] = null
                        } catch (t) {}
                this.iconsContainer.destroy({
                    children: !0
                }),
                this.iconsContainer = new Container,
                this.machine.addChildAt(this.iconsContainer, 3)
            }
            ,
            h.prototype.visibleIcons = function() {
                for (var t = 0; t < this.itemsMainGame.length; t++)
                    this.itemsMainGame[t].visible = !0
            }
            ,
            h.prototype.disableMainItems = function() {
                for (var t = 0; t < this.itemsMainGame.length; t++)
                    this.itemsMainGame[t].interactive = !1,
                    this.itemsMainGame[t].buttonMode = !1
            }
            ,
            h.prototype.enableMainItems = function() {
                for (var t = 0; t < this.itemsMainGame.length; t++)
                    this.itemsMainGame[t].interactive = !0,
                    this.itemsMainGame[t].buttonMode = !0
            }
            ,
            h.prototype.destroyMoney = function() {
                try {
                    for (var t = TweenMax.getAllTweens(), i = 0; i < t.length; i++)
                        "money-fall-fortune" === t[i].data && t[i].kill();
                    for (var e = 0; e < this.moneyArr.length; e++)
                        this.moneyArr[e].destroy({
                            children: !0
                        })
                } catch (t) {}
                this.moneyArr = []
            }
            ,
            h.prototype.random = function(t, i) {
                var e;
                return null == i && (i = t,
                t = 0),
                i < t && (e = t,
                t = i,
                i = e),
                t + (i - t) * Math.random()
            }
            ,
            h.prototype.effectMoney = function() {
                this.moneyArr = [];
                for (var t = 0; t < this.total; t++)
                    this.moneyArr.push(new AnimatedSprite(this.framesCoins)),
                    this.moneyArr[t].anchor.set(.5),
                    this.moneyArr[t].animationSpeed = .3,
                    this.moneyArr[t].scale.set(this.random(.5, 1.4)),
                    this.moneyContainer.addChild(this.moneyArr[t]),
                    this.moneyArr[t].play(),
                    this.moneyArr[t].position.set(this.random(0, this.size[0]), this.random(-200, -150)),
                    TweenMax.to(this.moneyArr[t], this.random(1, 8), {
                        data: "money-fall-fortune",
                        y: this.size[1] + 200,
                        ease: Linear.easeNone,
                        repeat: -1,
                        delay: -15
                    })
            }
            ,
            h.prototype.beforeSpin = function() {
                o.contents.clearTimer(),
                this.destroyEffect(),
                this.disableMainItems(),
                this.visibleIcons(),
                u.Config.numbShowEachLine = 0,
                u.Config.numberDown = 0,
                this.numbW = 0,
                o.contents.disableButtons(this),
                u.Config.isBonus = u.Config.isBigWin = u.Config.isJackpot = !1,
                this.txtMoney.visible = !1,
                this.txtMoney.text = "0",
                this.boxAuto.visible = !1,
                this.paytableContainer.visible = !1,
                this.overlay.visible = !1,
                this.destroyMoney();
                try {
                    u.Config.countMoney.reset(),
                    u.Config.countMoneyJw.reset()
                } catch (t) {}
                try {
                    this.bigWinSound.stop()
                } catch (t) {}
                try {
                    this.jackpotSound.stop()
                } catch (t) {}
                try {
                    this.countSound.stop()
                } catch (t) {}
                if (this.isCount)
                    try {
                        this.txtJustWon.text = c.Util.ParseMoney(this.currentPlayer.SpinData.PayLinePrizeValue)
                    } catch (t) {}
                if (this.isCount = !1,
                u.Config.sound)
                    try {
                        this.bgSound.resume()
                    } catch (t) {}
                u.Config.payLines = [],
                u.Config.lineItemsArr = []
            }
            ,
            h.prototype.initSpin = function(t) {
                var i = t;
                if (!u.Config.isSpin) {
                    i.beforeSpin(),
                    u.Config.countMoney = null,
                    u.Config.timeSpin = setTimeout(function() {
                        u.Config.isSpin && (u.Config.isSpin = !1,
                        o.contents.stopAutoSpin(i),
                        o.contents.enableButtons(i))
                    }, 12e3);
                    try {
                        u.Config.isTry ? i.startSpin(i.trial.data[c.Util.RandomFrom(0, i.trial.data.length - 1, void 0)]) : u.Config.isTicket ? i.hubs.connection.invoke("SpinForTicket", {
                            MerchantID: 0,
                            RoomID: u.Config.roomId,
                            CurrencyID: u.Config.currencyId
                        }).catch(function() {
                            i.showMessage(Message.GetMessage("sl71")),
                            u.Config.isSpin = !1,
                            o.contents.stopAutoSpin(i),
                            o.contents.enableButtons(i)
                        }) : i.hubs.connection.invoke("Spin", {
                            MerchantID: 0,
                            RoomID: u.Config.roomId,
                            CurrencyID: u.Config.currencyId
                        }).then(function(t) {
                            t.c < 0 && (i.showError(t.c),
                            u.Config.isSpin = !1,
                            o.contents.stopAutoSpin(i),
                            o.contents.enableButtons(i))
                        }).catch(function() {
                            i.showMessage(Message.GetMessage("sl71")),
                            u.Config.isSpin = !1,
                            o.contents.stopAutoSpin(i),
                            o.contents.enableButtons(i)
                        })
                    } catch (t) {
                        i.showMessage(Message.GetMessage("sl71")),
                        u.Config.isSpin = !1,
                        o.contents.stopAutoSpin(i),
                        o.contents.enableButtons(i)
                    }
                }
            }
            ,
            h.prototype.startSpin = function(t) {
                var n, i = this;
                console.log("result", t),
                o.contents.clearTimer(),
                u.Config.isSpin || (i.currentPlayer = t,
                u.Config.isSpin = !0,
                i.txtSession.text = "#" + this.currentPlayer.SpinData.SpinID,
                u.Config.slotData = [],
                u.Config.slotData = t.SpinData.SlotsData.split(","),
                i.changeSlots(),
                this.column1[1].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[0] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[0]) + ".png"],
                this.column1[1].inx = u.Config.slotData[0],
                this.column1[2].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[5] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[5]) + ".png"],
                this.column1[2].inx = u.Config.slotData[5],
                this.column1[3].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[10] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[10]) + ".png"],
                this.column1[3].inx = u.Config.slotData[10],
                this.column2[1].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[1] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[1]) + ".png"],
                this.column2[1].inx = u.Config.slotData[1],
                this.column2[2].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[6] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[6]) + ".png"],
                this.column2[2].inx = u.Config.slotData[6],
                this.column2[3].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[11] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[11]) + ".png"],
                this.column2[3].inx = u.Config.slotData[11],
                this.column3[1].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[2] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[2]) + ".png"],
                this.column3[1].inx = u.Config.slotData[2],
                this.column3[2].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[7] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[7]) + ".png"],
                this.column3[2].inx = u.Config.slotData[7],
                this.column3[3].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[12] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[12]) + ".png"],
                this.column3[3].inx = u.Config.slotData[12],
                this.column4[1].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[3] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[3]) + ".png"],
                this.column4[1].inx = u.Config.slotData[3],
                this.column4[2].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[8] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[8]) + ".png"],
                this.column4[2].inx = u.Config.slotData[8],
                this.column4[3].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[13] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[13]) + ".png"],
                this.column4[3].inx = u.Config.slotData[13],
                this.column5[1].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[4] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[4]) + ".png"],
                this.column5[1].inx = u.Config.slotData[4],
                this.column5[2].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[9] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[9]) + ".png"],
                this.column5[2].inx = u.Config.slotData[9],
                this.column5[3].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[14] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[14]) + ".png"],
                this.column5[3].inx = u.Config.slotData[14],
                u.Config.isQuick && (this.column1[16].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[0] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[0]) + ".png"],
                this.column1[16].inx = u.Config.slotData[0],
                this.column1[17].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[5] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[5]) + ".png"],
                this.column1[17].inx = u.Config.slotData[5],
                this.column1[18].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[10] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[10]) + ".png"],
                this.column1[18].inx = u.Config.slotData[10],
                this.column2[16].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[1] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[1]) + ".png"],
                this.column2[16].inx = u.Config.slotData[1],
                this.column2[17].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[6] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[6]) + ".png"],
                this.column2[17].inx = u.Config.slotData[6],
                this.column2[18].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[11] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[11]) + ".png"],
                this.column2[18].inx = u.Config.slotData[11],
                this.column3[16].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[2] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[2]) + ".png"],
                this.column3[16].inx = u.Config.slotData[2],
                this.column3[17].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[7] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[7]) + ".png"],
                this.column3[17].inx = u.Config.slotData[7],
                this.column3[18].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[12] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[12]) + ".png"],
                this.column3[18].inx = u.Config.slotData[12],
                this.column4[16].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[3] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[3]) + ".png"],
                this.column4[16].inx = u.Config.slotData[3],
                this.column4[17].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[8] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[8]) + ".png"],
                this.column4[17].inx = u.Config.slotData[8],
                this.column4[18].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[13] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[13]) + ".png"],
                this.column4[18].inx = u.Config.slotData[13],
                this.column5[16].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[4] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[4]) + ".png"],
                this.column5[16].inx = u.Config.slotData[4],
                this.column5[17].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[9] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[9]) + ".png"],
                this.column5[17].inx = u.Config.slotData[9],
                this.column5[18].texture = this.resources.items.textures["item-" + ("1" === u.Config.slotData[14] ? c.Util.RandomFrom(4, 11) : u.Config.slotData[14]) + ".png"],
                this.column5[18].inx = u.Config.slotData[14]),
                u.Config.linesWin = [],
                u.Config.itemsWinAr = [],
                u.Config.itemsWin = [],
                0 < (null != i.currentPlayer.SpinData.PrizesData ? Object.keys(i.currentPlayer.SpinData.PrizesData).length : 0) && (n = i.currentPlayer.SpinData.PrizesData.split(";"),
                $.each(i.currentPlayer.SpinData.PositionData.split(";"), function(t, i) {
                    var e = $.map(i.split(","), function(t) {
                        return parseInt(t)
                    });
                    u.Config.itemsWinAr.push(e),
                    u.Config.linesWin.push(n[t].split(",")[0]),
                    $.each(e, function(t, i) {
                        $.inArray(i, u.Config.itemsWin) < 0 && u.Config.itemsWin.push(i)
                    })
                })),
                i.currentPlayer.SpinData.Points >= u.Config.totalPoint && (u.Config.isJackpot = !0),
                console.log(i.currentPlayer.SpinData.PayLinePrizeValue, u.Config.totalBetConfig.BigWin, i.currentPlayer.BetValue),
                i.currentPlayer.SpinData.PayLinePrizeValue >= u.Config.totalBetConfig.BigWin * i.currentPlayer.BetValue && (u.Config.isBigWin = !0),
                null !== t.SpinData.BonusGameData && 0 < t.SpinData.BonusGameData.length && (u.Config.isBonus = !0),
                c.Util.ClearTimeOut(u.Config.timeSpin),
                o.contents.updateAutoSpin(i),
                i.spin())
            }
            ,
            h.prototype.spin = function() {
                var t = this;
                if (u.Config.isQuick ? (t.timeTween = .6,
                t.timeBack = .1,
                t.delayFirst = .15,
                t.spinTo = -t.startHeight - 3225) : (t.timeTween = 1.3,
                t.timeBack = .3,
                t.spinTo = -t.startHeight,
                t.delayFirst = .3),
                o.contents.clearTimer(),
                u.Config.sound)
                    try {
                        t.reelSound.play()
                    } catch (t) {}
                TweenMax.to(t.containerColumn1, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: 0,
                    data: "fortune",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        try {
                            t.reelSound.stop()
                        } catch (t) {}
                        if (u.Config.sound)
                            try {
                                PIXI.sound.play("stopSound")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn1, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "fortune",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.containerColumn1.y = 0,
                                t.column1[t.totalItems - 3].texture = t.column1[1].texture,
                                t.column1[t.totalItems - 3].inx = t.column1[1].inx,
                                t.column1[t.totalItems - 2].texture = t.column1[2].texture,
                                t.column1[t.totalItems - 2].inx = t.column1[2].inx,
                                t.column1[t.totalItems - 1].texture = t.column1[3].texture,
                                t.column1[t.totalItems - 1].inx = t.column1[3].inx
                            }
                        })
                    }
                }),
                TweenMax.to(t.containerColumn2, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: t.delayFirst,
                    data: "fortune",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        if (u.Config.sound)
                            try {
                                PIXI.sound.play("stopSound")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn2, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "fortune",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.column2[t.totalItems - 3].texture = t.column2[1].texture,
                                t.column2[t.totalItems - 3].inx = t.column2[1].inx,
                                t.column2[t.totalItems - 2].texture = t.column2[2].texture,
                                t.column2[t.totalItems - 2].inx = t.column2[2].inx,
                                t.column2[t.totalItems - 1].texture = t.column2[3].texture,
                                t.column2[t.totalItems - 1].inx = t.column2[3].inx,
                                t.containerColumn2.y = 0
                            }
                        })
                    }
                }),
                TweenMax.to(t.containerColumn3, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: 2 * t.delayFirst,
                    data: "fortune",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        if (u.Config.sound)
                            try {
                                PIXI.sound.play("stopSound")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn3, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "fortune",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.column3[t.totalItems - 3].texture = t.column3[1].texture,
                                t.column3[t.totalItems - 3].inx = t.column3[1].inx,
                                t.column3[t.totalItems - 2].texture = t.column3[2].texture,
                                t.column3[t.totalItems - 2].inx = t.column3[2].inx,
                                t.column3[t.totalItems - 1].texture = t.column3[3].texture,
                                t.column3[t.totalItems - 1].inx = t.column3[3].inx,
                                t.containerColumn3.y = 0
                            }
                        })
                    }
                }),
                TweenMax.to(t.containerColumn4, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: 3 * t.delayFirst,
                    data: "fortune",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        if (u.Config.sound)
                            try {
                                PIXI.sound.play("stopSound")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn4, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "fortune",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.column4[t.totalItems - 3].texture = t.column4[1].texture,
                                t.column4[t.totalItems - 3].inx = t.column4[1].inx,
                                t.column4[t.totalItems - 2].texture = t.column4[2].texture,
                                t.column4[t.totalItems - 2].inx = t.column4[2].inx,
                                t.column4[t.totalItems - 1].texture = t.column4[3].texture,
                                t.column4[t.totalItems - 1].inx = t.column4[3].inx,
                                t.containerColumn4.y = 0
                            }
                        })
                    }
                }),
                TweenMax.to(t.containerColumn5, t.timeTween, {
                    y: t.spinTo + t.pointNext,
                    delay: 4 * t.delayFirst,
                    data: "fortune",
                    ease: Power0.easeNone,
                    onComplete: function() {
                        if (u.Config.sound)
                            try {
                                PIXI.sound.play("stopSound")
                            } catch (t) {}
                        TweenMax.to(t.containerColumn5, t.timeBack, {
                            y: t.spinTo + t.pointBack,
                            delay: t.timeDelay,
                            data: "fortune",
                            ease: Back.easeOut,
                            onComplete: function() {
                                t.column5[t.totalItems - 3].texture = t.column5[1].texture,
                                t.column5[t.totalItems - 3].inx = t.column5[1].inx,
                                t.column5[t.totalItems - 2].texture = t.column5[2].texture,
                                t.column5[t.totalItems - 2].inx = t.column5[2].inx,
                                t.column5[t.totalItems - 1].texture = t.column5[3].texture,
                                t.column5[t.totalItems - 1].inx = t.column5[3].inx,
                                t.containerColumn5.y = 0,
                                t.completeSpin()
                            }
                        })
                    }
                })
            }
            ,
            h.prototype.completeSpin = function() {
                if (u.Config.isSpin = !1,
                u.Config.sound)
                    try {
                        this.reelSound.stop()
                    } catch (t) {}
                this.changeIcons()
            }
            ,
            h.prototype.changeIcons = function() {
                var t = this
                  , i = 0;
                this.emitIcons = [];
                for (var e = 0; e < this.itemsMainGame.length; e++)
                    1 === parseInt(this.itemsMainGame[e].inx) && (this.createIcons(this.itemsMainGame[e]),
                    i++);
                0 < i ? setTimeout(function() {
                    return t.checkAcc()
                }, 2500) : this.checkAcc()
            }
            ,
            h.prototype.createIcons = function(t) {
                var i = new Sprite(this.resources.effect.textures["gold.png"]);
                i.scale.set(0),
                i.x = 200 * Math.random() - 260,
                i.y = 350 * Math.random() - 50,
                i.anchor.set(.5),
                this.iconsContainer.addChild(i);
                var e = new PIXI.particles.Emitter(t,[this.resources.particles.textures["particle-5.png"], this.resources.particles.textures["particle-6.png"], this.resources.particles.textures["particle-2.png"]],this.resources.particleWild.data);
                e.emit = !1,
                this.emitIcons.push(e);
                var n = new TimelineLite
                  , s = this;
                n.add(TweenLite.to(i.scale, .5, {
                    data: "fortune",
                    x: 1,
                    y: 1,
                    ease: Back.easeOut.config(1.7)
                })),
                n.add(TweenLite.to(i, .8, {
                    data: "fortune",
                    bezier: {
                        curviness: 1.25,
                        values: [{
                            x: .5 * t.x,
                            y: .5 * t.y
                        }, {
                            x: t.x,
                            y: t.y
                        }]
                    },
                    ease: Power1.easeIn,
                    onComplete: function() {
                        this.target.destroy(),
                        e.emit = !0,
                        setTimeout(function() {
                            e.emit = !1,
                            t.texture = s.resources.items.textures["item-1.png"],
                            e.destroy(),
                            e = null
                        }, 1500)
                    }
                }))
            }
            ,
            h.prototype.countCoinActive = function() {
                for (var t = 0, i = 0; i < this.coins.length; i++)
                    this.coins[i].visible && t++;
                return t
            }
            ,
            h.prototype.checkAcc = function() {
                var t = this;
                this.destroyEffect();
                var i = Math.floor(this.currentPlayer.SpinData.Points / this.coinPoint);
                if (this.coinHas = i <= 20 ? i : 20,
                this.currentPlayer && this.currentPlayer.SpinData && 0 < this.currentPlayer.SpinData.PointAdd) {
                    var e = this.countCoinActive();
                    if (0 < this.coinHas - e) {
                        this.coinContainer = new Container,
                        this.machine.addChild(this.coinContainer);
                        for (var n = 0; n < this.coinHas - e; n++) {
                            var s = new Sprite(this.resources.ui.textures["Coin.png"]);
                            s.anchor.set(.5),
                            s.position.set(this.column3[29].x, this.column3[29].y),
                            this.coinContainer.addChild(s),
                            TweenMax.to(s, 1, {
                                x: -270 + this.coins[e + n].x,
                                y: 590 + this.coins[e + n].y
                            })
                        }
                        setTimeout(function() {
                            return t.showWin()
                        }, 1200)
                    } else
                        this.showWin()
                } else
                    this.showWin()
            }
            ,
            h.prototype.showWin = function() {
                var t = this;
                this.destroyEffect(),
                this.setActiveCoin(),
                u.Config.isAutoSpin && o.contents.enableButton(t.btnQuick),
                u.Config.isTry || 1 !== u.Config.roomId || o.contents.getTicket(t),
                0 === u.Config.numberDown && 15 === u.Config.slotData.length && (u.Config.isTry || (o.contents.updateBalance(t, t.currentPlayer.Account.GoldBalance),
                this.balance = t.currentPlayer.Account.GoldBalance)),
                t.normalWinOrBigWin()
            }
            ,
            h.prototype.normalWinOrBigWin = function() {
                var t = this;
                if (t.destroyEffect(),
                t.visibleIcons(),
                u.Config.countMoney = null,
                u.Config.countMoneyJw = null,
                t.createAllIcon(),
                0 < t.currentPlayer.SpinData.PayLinePrizeValue)
                    if (t.txtMoney.visible = !0,
                    u.Config.isBigWin) {
                        try {
                            t.bgSound.pause()
                        } catch (t) {}
                        var i = 4 * t.currentPlayer.SpinData.PayLinePrizeValue / (u.Config.totalBetConfig.BigWin * t.currentPlayer.BetValue);
                        if (u.Config.sound)
                            try {
                                t.countSound.play()
                            } catch (t) {}
                        o.contents.countMoney(t.txtMoney, !0, !1, 0, u.Config.totalBetConfig.BigWin * t.currentPlayer.BetValue, 0, 4, function() {
                            if (0 !== u.Config.numberDown || u.Config.isBonus || u.Config.isAutoSpin || u.Config.isJackpot || o.contents.enableButtons(t),
                            t.effectBig(),
                            t.visibleIcons(),
                            u.Config.sound)
                                try {
                                    t.bigWinSound.play()
                                } catch (t) {}
                            o.contents.countMoney(t.txtMoney, !0, !1, u.Config.totalBetConfig.BigWin * t.currentPlayer.BetValue, t.currentPlayer.SpinData.PayLinePrizeValue, 0, i - 4, function() {
                                try {
                                    t.countSound.stop()
                                } catch (t) {}
                            })
                        }),
                        0 === u.Config.numberDown && (t.isCount = !0,
                        o.contents.countMoney(t.txtJustWon, !0, !1, 0, t.currentPlayer.SpinData.PayLinePrizeValue, 0, i, function() {}, !0)),
                        u.Config.timeBonusOrFree = setTimeout(function() {
                            return t.jackpotOrBonus(t)
                        }, 1e3 * (16 + i))
                    } else {
                        if (o.contents.countNumber(t.txtMoney, !0, !1, 0, t.currentPlayer.SpinData.PayLinePrizeValue, 0, 1),
                        u.Config.sound)
                            try {
                                PIXI.sound.play("winSound")
                            } catch (t) {}
                        u.Config.timeSpin = setTimeout(function() {}, 900),
                        0 === u.Config.numberDown && o.contents.countNumber(t.txtJustWon, !0, !1, 0, t.currentPlayer.SpinData.PayLinePrizeValue, 0, 1, function() {}),
                        u.Config.timeBonusOrFree = setTimeout(function() {
                            return t.jackpotOrBonus(t)
                        }, 1500)
                    }
                else
                    u.Config.timeBonusOrFree = setTimeout(function() {
                        return t.jackpotOrBonus(t)
                    }, 0),
                    t.txtJustWon.text = c.Util.ParseMoney(t.currentPlayer.SpinData.PayLinePrizeValue, void 0)
            }
            ,
            h.prototype.effectWin = function(t) {
                this.effectContainer = new Container,
                this.effectContainer.position.set(742, 480),
                this.effectContainer.pivot.set(425, 300),
                this.machine.addChild(this.effectContainer);
                var i = new Sprite(this.resources.bonus.textures["LightOuter.png"]);
                i.position.set(0, 0),
                this.effectContainer.addChild(i),
                this.emitterSpakle = new PIXI.particles.Emitter(i,[this.resources.particles.textures["particle-1.png"], this.resources.particles.textures["particle-2.png"]],this.resources.particleSpakle.data),
                this.emitterSpakle.emit = !0;
                var e = new Sprite(this.resources.bonus.textures["BonusWelcome.png"]);
                e.position.set(30, 100),
                this.effectContainer.addChild(e);
                var n = Message.GetLanguageCode()
                  , s = 1 === t ? new Sprite(this.resources.effect.textures["hj-" + ("vi" == n ? "vi" : "en") + ".png"]) : new Sprite(this.resources.bonus.textures["BonusText.png"]);
                s.position.set(385, 297),
                s.anchor.set(.5),
                e.addChild(s),
                TweenLite.to(this.effectContainer, .5, {
                    alpha: 1
                }),
                TweenLite.from(this.effectContainer.scale, 1.5, {
                    x: .8,
                    y: .8,
                    ease: Power1.easeInOut
                })
            }
            ,
            h.prototype.effectBig = function() {
                this.effectContainer = new Container,
                this.machine.addChild(this.effectContainer),
                this.emiterBig = new PIXI.particles.Emitter(this.effectContainer,[this.resources.particles.textures["particle-5.png"], this.resources.particles.textures["particle-6.png"]],this.resources.particleSpakle.data),
                this.emiterBig.emit = !0,
                this.emiterBig.spawnPos.x = 0,
                this.emiterBig.spawnPos.y = 250,
                TweenMax.to(this.emiterBig.spawnPos, 1, {
                    data: "fortune-eff",
                    x: 650,
                    y: 300,
                    ease: Power1.easeInOut,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    repeat: -1
                });
                var t = Message.GetLanguageCode()
                  , i = new Sprite(this.resources.effect.textures["bw-" + ("vi" == t ? "vi" : "en") + ".png"]);
                i.anchor.set(.5),
                i.position.set(740, 480),
                this.effectContainer.addChild(i),
                TweenMax.to(i, 1, {
                    data: "fortune-eff",
                    y: 550,
                    ease: Power1.easeInOut,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    repeat: -1
                }),
                TweenMax.to(i.scale, 1, {
                    data: "fortune-eff",
                    x: .8,
                    y: .8,
                    delay: .2,
                    ease: Power1.easeInOut,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    repeat: -1
                }),
                this.effectMoney()
            }
            ,
            h.prototype.jackpotOrBonus = function(t) {
                var i = t;
                i.isCount = !1,
                0 === u.Config.numberDown && (i.txtJustWon.text = c.Util.ParseMoney(i.currentPlayer.SpinData.PayLinePrizeValue, void 0));
                try {
                    i.destroyMoney(),
                    u.Config.countMoney.reset(),
                    u.Config.countMoneyJw.reset()
                } catch (t) {}
                u.Config.numberDown++,
                i.destroyEffect(),
                i.overlay.visible = !1,
                this.visibleIcons();
                try {
                    i.bigWinSound.stop()
                } catch (t) {}
                try {
                    i.jackpotSound.stop()
                } catch (t) {}
                try {
                    i.countSound.stop()
                } catch (t) {}
                if (u.Config.sound)
                    try {
                        i.bgSound.resume()
                    } catch (t) {}
                i.txtMoney.visible = !1,
                c.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                u.Config.isJackpot && this.currentPlayer.SpinData.Points >= u.Config.totalPoint ? i.setupJackpot() : u.Config.isBonus ? i.setupBonus() : i.checkAutoSpin() || (o.contents.enableButtons(i),
                0 < i.currentPlayer.SpinData.PayLinePrizeValue && i.showEachLine())
            }
            ,
            h.prototype.setupJackpot = function() {
                var t = this;
                this.effectWin(1),
                setTimeout(function() {
                    t.hideMain(),
                    setTimeout(function() {
                        t.jackpot = new s.jackpot(t)
                    }, 600)
                }, 3e3)
            }
            ,
            h.prototype.countBonus = function() {
                for (var t = this.multiBonus = 0; t < u.Config.slotData.length; t++)
                    "3" === u.Config.slotData[t] && this.multiBonus++
            }
            ,
            h.prototype.setupBonus = function() {
                var t = this;
                if (this.effectWin(2),
                this.countBonus(),
                u.Config.sound)
                    try {
                        PIXI.sound.play("bonusSound")
                    } catch (t) {}
                setTimeout(function() {
                    t.hideMain(),
                    setTimeout(function() {
                        t.bonus = new a.bonus(t)
                    }, 600)
                }, 3e3)
            }
            ,
            h.prototype.showEachLine = function() {
                var t = this;
                c.Util.ClearTimeOut(u.Config.timeOutEachLine);
                var i = u.Config.linesWin.length
                  , e = 0;
                0 !== i ? (u.Config.numbShowEachLine++,
                u.Config.timeIntEachLine = setInterval(function() {
                    if (u.Config.isSpin)
                        c.Util.ClearTimeInterval(u.Config.timeIntEachLine);
                    else if (t.destroyEffect(),
                    t.visibleIcons(),
                    u.Config.linesWin[e] < 21)
                        u.Config.timeSpin = setTimeout(function() {
                            if (t.createIconEffect(u.Config.itemsWinAr[e]),
                            ++e === i) {
                                if (c.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                                u.Config.isAutoSpin && 0 < u.Config.autoSpinCount)
                                    return void t.initSpin(t);
                                u.Config.numbShowEachLine < 3 ? u.Config.timeShowWin = setTimeout(function() {
                                    t.normalWinOrBigWin()
                                }, 2600) : setTimeout(function() {
                                    t.destroyEffect(),
                                    t.visibleIcons(),
                                    t.enableMainItems()
                                }, 1200)
                            }
                        }, 50);
                    else if (++e === i) {
                        if (c.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                        u.Config.isAutoSpin && 0 < u.Config.autoSpinCount)
                            return void t.initSpin(t);
                        u.Config.numbShowEachLine < 2 ? u.Config.timeShowWin = setTimeout(function() {
                            t.normalWinOrBigWin()
                        }, 2600) : setTimeout(function() {
                            t.destroyEffect(),
                            t.visibleIcons(),
                            t.enableMainItems()
                        }, 1200)
                    }
                }, 1700)) : c.Util.ClearTimeInterval(u.Config.timeIntEachLine)
            }
            ,
            h.prototype.checkAutoSpin = function() {
                if (u.Config.isAutoSpin) {
                    var t = this;
                    return u.Config.timeSpin = setTimeout(function() {
                        t.initSpin(t)
                    }, 1500),
                    !0
                }
                return u.Config.isAutoSpin = !1,
                u.Config.autoSpinMode = 0,
                !1
            }
            ,
            h.prototype.createAllIcon = function() {
                if (this.overlay.visible = !0,
                this.overlay.alpha = 1,
                0 < u.Config.itemsWin.length)
                    for (var t = 0; t < u.Config.itemsWin.length; t++) {
                        this.itemsMainGame[u.Config.itemsWin[t] - 1].visible = !1;
                        var i = new AnimatedSprite(this.framesItems[this.itemsMainGame[u.Config.itemsWin[t] - 1].inx - 1]);
                        i.anchor.set(.5),
                        i.position.set(this.itemsMainGame[u.Config.itemsWin[t] - 1].x, this.itemsMainGame[u.Config.itemsWin[t] - 1].y),
                        i.inx = this.itemsMainGame[u.Config.itemsWin[t] - 1].inx,
                        i.coord = this.itemsMainGame[u.Config.itemsWin[t] - 1].coord,
                        i.animationSpeed = .5,
                        i.loop = !1,
                        i.play(),
                        this.iconsContainer.addChild(i)
                    }
            }
            ,
            h.prototype.createIconEffect = function(t) {
                if (this.overlay.visible = !0,
                this.overlay.alpha = 1,
                !(null == t || t.length <= 0))
                    for (var i = 0; i < t.length; i++) {
                        this.itemsMainGame[t[i] - 1].visible = !1;
                        var e = new AnimatedSprite(this.framesItems[this.itemsMainGame[t[i] - 1].inx - 1]);
                        e.anchor.set(.5),
                        e.position.set(this.itemsMainGame[t[i] - 1].x, this.itemsMainGame[t[i] - 1].y),
                        e.animationSpeed = .5,
                        e.inx = this.itemsMainGame[t[i] - 1].inx,
                        e.coord = this.itemsMainGame[t[i] - 1].coord,
                        e.buttonMode = !0,
                        e.interactive = !0,
                        e.on("pointerup", this.payTableItemOn),
                        e.loop = !1,
                        e.play(),
                        this.iconsContainer.addChild(e)
                    }
            }
            ,
            h.prototype.hideMain = function() {
                this.columnContainer.visible = !1,
                this.tableCoins.visible = !1,
                this.jackpotContainer.visible = !1,
                TweenLite.to(this.machine, .5, {
                    height: 1120,
                    y: this.machine.expandY,
                    ease: Power1.easeInOut
                }),
                TweenLite.to(this.ui, .5, {
                    alpha: 0,
                    y: 1100,
                    ease: Power1.easeInOut
                })
            }
            ,
            h.prototype.showMain = function() {
                this.columnContainer.visible = !0,
                this.tableCoins.visible = !0,
                this.jackpotContainer.visible = !0,
                TweenLite.to(this.machine, .5, {
                    height: 918,
                    y: this.machine.collapseY,
                    ease: Power1.easeInOut
                }),
                TweenLite.to(this.ui, .5, {
                    alpha: 1,
                    y: 908,
                    ease: Power1.easeInOut
                })
            }
            ,
            h.prototype.showError = function(t) {
                var i;
                switch (console.log("error", t),
                t) {
                case -51:
                    i = Message.GetMessage("sl40");
                    break;
                case -99:
                    i = Message.GetMessage("sl71");
                    break;
                case -600:
                    i = Message.GetMessage("sl70");
                    break;
                case -40004:
                    i = Message.GetMessage("sl69");
                    break;
                case -40005:
                    i = Message.GetMessage("sl66"),
                    setTimeout(App.handleBack, 2e3);
                    break;
                default:
                    i = t
                }
                this.showMessage(i)
            }
            ,
            h.prototype.hidePopup = function() {
                var t = this;
                TweenLite.to(this.popup, .5, {
                    data: "fortune",
                    y: 650,
                    alpha: 0,
                    ease: Back.easeIn.config(1.8),
                    onComplete: function() {
                        t.popup.visible = !1
                    }
                })
            }
            ,
            h.prototype.showMessage = function(t) {
                this.popup.visible = !0,
                this.popup.alpha = 1,
                this.popup.y = 480,
                TweenLite.from(this.popup, .5, {
                    y: 650,
                    alpha: 0,
                    ease: Back.easeOut.config(1.8)
                }),
                this.popup.getChildAt(0).text = t,
                this.overlay.visible = !0;
                var i = this;
                u.Config.timePop = setTimeout(function() {
                    i.hidePopup(),
                    i.overlay.visible = !1
                }, 4e3)
            }
            ,
            h.prototype.updateJackpot = function(t) {
                1e8 < t && !u.Config.isTry && (o.contents.countJackPotTotal(this.txtJackpot, !0, !1, t, 8),
                o.contents.countJackPot(this.txtMoneyLevel, !0, !1, Math.floor(t * this.percentJackpot[this.currentPlayer.RoomID - 1] / 100), 8))
            }
            ,
            h.prototype.resetTweenTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            h.prototype.resize = function(t) {
                t.size = [$(window).width(), $(window).height()];
                var i = Math.min(t.size[0] / 1920, t.size[1] / 1200);
                t.background.scale.set(i),
                t.background.position.set(t.size[0] / 2 - t.background.width / 2, t.size[1] / 2 - t.background.height / 2),
                t.machine.scale.set(i),
                t.machine.x = Math.floor(t.size[0] / 2),
                t.machine.y = Math.floor(t.size[1] / 2),
                t.machine.collapseY = Math.floor(t.size[1] / 2),
                t.machine.expandY = Math.floor(t.size[1] / 2) - 70 * i,
                t.btnBack.scale.set(i),
                t.btnBack.x = 80 * i,
                t.btnBack.y = t.size[1] / 2 - t.btnBack.height / 2 - 450 * i,
                t.btnHide.scale.set(i),
                t.btnHide.x = t.btnBack.x + t.btnBack.width + 55 * i,
                t.btnHide.y = t.btnBack.y,
                t.iconEvent.scale.set(Math.max(t.size[0] / 1920, 1)),
                t.iconEvent.position.set(t.size[0] - 150 * i, 150 * i),
                $("#guide-fortune").css("transform", "scale(" + 1.1 * i + ")")
            }
            ,
            h.prototype.delete = function() {
                o.contents.deleteTimer(),
                o.contents.deleteTweens();
                try {
                    PIXI.sound.stopAll(),
                    PIXI.sound.removeAll()
                } catch (t) {}
                window.removeEventListener("resize", this.resize);
                try {
                    this.loader.destroy()
                } catch (t) {}
                this.bonus && delete this.bonus,
                u.Config.isAutoSpin = u.Config.isSpin = u.Config.inRoom = u.Config.isBonus = !1,
                u.Config.isLogin = !1,
                o.contents.deleteTimer(),
                u.Config.countJp = null;
                try {
                    this.loader && delete this.loader
                } catch (t) {}
                try {
                    this.emitterSpakle && (this.emitterSpakle.emit = !1),
                    this.emiterBig && (this.emiterBig.emit = !1),
                    this.jackpot && this.jackpot.jackpotPaticles && (this.jackpot.jackpotPaticles.emit = !1),
                    this.treeLeft && (this.treeLeft.emit = !1),
                    this.treeRight && (this.treeRight.emit = !1)
                } catch (t) {}
                try {
                    document.URL.indexOf("slot") < 0 ? this.application.destroy(!0) : this.application.destroy(!1)
                } catch (t) {}
                try {
                    this.hubs.connection.stop()
                } catch (t) {}
            }
            ,
            h.prototype.StopAuto = function() {
                this.isAuto = !1,
                $("#rolling-" + this.storage).removeClass("active");
                for (var t = 0; t < 3; t++)
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + t).removeClass("button-playing").addClass("button-play");
                var i = 2 === u.Config.roomId ? 1 : 8 === u.Config.roomId ? 3 : 5 === u.Config.roomId ? 2 : -1;
                $("#ljp-" + u.Config.gameId + "-room-" + i).parent().removeClass("playing"),
                $("#list-jp-icon-" + u.Config.gameId + "-room-" + i + "-playing").html(""),
                $("#list-jp-icon-" + u.Config.gameId + "-playing").html(""),
                $("#list-jp-icon-" + u.Config.gameId + "-play").length && $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                $("#list-jp-icon-" + u.Config.gameId + "-room-" + i).length && $("#list-jp-icon-" + u.Config.gameId + "-room-" + i).removeClass("button-playing").addClass("button-play");
                try {
                    this.silent.setSession()
                } catch (t) {}
                try {
                    this.silent && window.App.gameSlots && "fortune" === window.App.gameSlots.game.storage && window.App.gameSlots.game.StopAuto(),
                    o.contents.stopAutoSpin(this)
                } catch (t) {}
            }
            ,
            h.prototype.StartAuto = function() {
                var t = this;
                if (0 < this.silent.autoSpin) {
                    this.isAuto = !0,
                    $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
                    $("#list-jp-icon-" + u.Config.gameId + "-play").length && $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-play").addClass("button-playing");
                    var i = 2 === u.Config.roomId ? 1 : 8 === u.Config.roomId ? 3 : 5 === u.Config.roomId ? 2 : -1;
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + i).length && $("#list-jp-icon-" + u.Config.gameId + "-room-" + i).removeClass("button-play").addClass("button-playing"),
                    $("#ljp-" + u.Config.gameId + "-room-" + i).parent().addClass("playing");
                    try {
                        if (this.silent && window.App.gameSlots && "fortune" === window.App.gameSlots.game.storage)
                            return void window.App.gameSlots.game.StartAutoMain()
                    } catch (t) {}
                    return this.silent.setSession(),
                    setTimeout(function() {
                        return t.silent.initSpin(t.silent)
                    }, 500),
                    !0
                }
                return this.silent.removeSession(),
                !1
            }
            ,
            h.prototype.StartAutoMain = function() {
                var t = this;
                u.Config.isAutoSpin = window.App.isAutoFortune = !0,
                t.txtAutoSpin.text = c.Util.ParseMoney(u.Config.autoSpinCount),
                t.txtAutoSpin.visible = !0,
                t.boxAuto.visible = !1,
                t.btnStopAuto.visible = !0,
                $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
                window.App.isAuto && (window.App.showPopupMessage({
                    content: Message.GetMessage("sl94").replace("{0}", Message.GetMessage("na213")),
                    textDone: "OK"
                }),
                sessionStorage.setItem("Auto-" + t.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";" + u.Config.isAutoSpin),
                $(".multislot-expand").addClass("active")),
                t.initSpin(t)
            }
            ,
            h.prototype.CheckAuto = function() {
                return this.isAuto
            }
            ,
            h.prototype.SetSilent = function() {
                u.Config.isAutoSpin && 0 < u.Config.autoSpinCount && sessionStorage.setItem("Auto-" + this.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";true")
            }
            ,
            h.prototype.RestartAuto = function(t, i, e) {
                var n = this;
                this.isAuto = !0,
                $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
                $("#list-jp-icon-" + u.Config.gameId + "-play").length && $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                console.log("luot", e),
                e && (this.silent.autoSpin = e),
                t != u.Config.roomId ? (u.Config.roomId = t,
                this.silent.setSession(),
                1 === this.hubs.connection.connection.connectionState ? this.joinGame(u.Config.roomId) : this.initHubs()) : 1 === this.hubs.connection.connection.connectionState ? setTimeout(function() {
                    return n.silent.initSpin(n.silent)
                }, 200) : this.initHubs();
                var s = 2 === u.Config.roomId ? 1 : 8 === u.Config.roomId ? 3 : 5 === u.Config.roomId ? 2 : -1;
                $("#list-jp-icon-" + u.Config.gameId + "-room-" + s).length && ($("#list-jp-icon-" + u.Config.gameId + "-room-" + s).removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + u.Config.gameId + "-room-" + s).parent().addClass("playing"))
            }
            ,
            h.prototype.getRoomId = function() {
                return u.Config.roomId
            }
            ,
            h.prototype.showInLobby = function(t) {
                var i, e, n;
                u.Config.isAutoSpin && (i = 2 === u.Config.roomId ? 1 : 8 === u.Config.roomId ? 3 : 5 === u.Config.roomId ? 2 : -1,
                $("#list-jp-icon-" + u.Config.gameId + "-room-" + i).hasClass("button-playing") || $("#list-jp-icon-" + u.Config.gameId + "-room-" + i).removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + u.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#rolling-" + this.storage).hasClass("active") || $("#rolling-" + this.storage).addClass("active"),
                $("#ljp-" + u.Config.gameId + "-room-" + i).parent().hasClass("playing") || $("#ljp-" + u.Config.gameId + "-room-" + i).parent().addClass("playing"),
                $("#mn-lobby-rolling-fortune").length && ($("#mn-lobby-rolling-fortune").append('<span class="rolling-win">+' + c.Util.ParseMoney(t) + "</span>"),
                TweenMax.to($("#mn-lobby-rolling-fortune .rolling-win"), 2, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                })),
                (e = $("#list-jp-icon-" + u.Config.gameId + "-room-" + i)).length ? (e.parent().append('<span class="win active">+' + c.Util.ParseMoney(t) + "</span>"),
                TweenMax.to(e.parent().find("span.win"), 1, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                })) : ((n = $("#list-jp-icon-" + u.Config.gameId + "-play")).append('<span class="win active">+' + c.Util.ParseMoney(t) + "</span>"),
                TweenMax.to(n.find("span.win"), 1, {
                    css: {
                        opacity: "0",
                        top: "0px",
                        onComplete: function() {}
                    }
                })))
            }
            ,
            h.prototype.InitNotSilent = function(t) {
                this.isSilent = !1,
                this.size = t.size,
                this.target = t.target,
                this.loader = new PIXI.loaders.Loader,
                this.his = t.getHistory,
                this.trans = t.getStatistic,
                u.Config.ready = !1,
                this.getAutoSpin(),
                this.CreateCanvas()
            }
            ,
            h.prototype.CreateCanvas = function() {
                PIXI.utils.skipHello(),
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    transparent: !0,
                    antialias: !0,
                    view: this.target
                });
                var t = this;
                this.application.ticker.add(function() {
                    t.update(t)
                }),
                this.initContainer();
                for (var i = 0; i < this.assets.length; i++)
                    "" !== this.assets[i].id ? this.loader.add(this.assets[i].id, this.assets[i].src) : this.loader.add(this.assets[i].src);
                this.loader.onProgress.add(function() {
                    return t.loading(t)
                }),
                this.loader.load(function() {
                    t.initGame(),
                    t.checkGame(),
                    $("#divLoading").hide()
                })
            }
            ,
            h);
            function h(t) {
                this.assets = [{
                    id: "bgFortune",
                    src: "/slots/fortune/assets/images/background.jpg"
                }, {
                    id: "bonus",
                    src: "/slots/fortune/json/Bonus.json"
                }, {
                    id: "items",
                    src: "/slots/fortune/json/Items.json"
                }, {
                    id: "itemsAni",
                    src: "/slots/fortune/json/items-animation.json"
                }, {
                    id: "particles",
                    src: "/slots/fortune/json/Particles.json"
                }, {
                    id: "ui",
                    src: "/slots/fortune/json/UI.json"
                }, {
                    id: "effect",
                    src: "/slots/fortune/json/Effects.json"
                }, {
                    id: "pig",
                    src: "/slots/fortune/spine/Pig.json",
                    txt: !0
                }, {
                    id: "",
                    src: "/slots/fortune/fonts/GOT-Gold.xml"
                }, {
                    id: "",
                    src: "/slots/fortune/fonts/GOT-Silver.xml"
                }, {
                    id: "particleSpakle",
                    src: "/slots/fortune/particles/spakle-bonus.json"
                }, {
                    id: "particleJackpot",
                    src: "/slots/fortune/particles/jackpot.json"
                }, {
                    id: "particleTree",
                    src: "/slots/fortune/particles/tree.json"
                }, {
                    id: "particleWild",
                    src: "/slots/fortune/particles/wild-gold.json"
                }, {
                    id: "coinFortune",
                    src: "/slots/fortune/assets/images/coin.png"
                }, {
                    id: "event",
                    src: "/slots/fortune/json/event.json"
                }, {
                    id: "fxJackpot",
                    src: "/slots/fortune/json/fxJackpot.json"
                }, {
                    id: "hide",
                    src: "/slots/fortune/json/hide.json"
                }, {
                    id: "bgSound",
                    src: "/slots/fortune/assets/sounds/bg-sound.mp3"
                }, {
                    id: "bgBonusSound",
                    src: "/slots/fortune/assets/sounds/bg-bonus-sound.mp3"
                }, {
                    id: "betSound",
                    src: "/slots/fortune/assets/sounds/bet-sound.mp3"
                }, {
                    id: "bonusSound",
                    src: "/slots/fortune/assets/sounds/bonus-sound.mp3"
                }, {
                    id: "bigWinSound",
                    src: "/slots/fortune/assets/sounds/big-win-sound.mp3"
                }, {
                    id: "btnSound",
                    src: "/slots/fortune/assets/sounds/btn-sound.mp3"
                }, {
                    id: "coinSound",
                    src: "/slots/fortune/assets/sounds/coin-sound.mp3"
                }, {
                    id: "hoverPigSound",
                    src: "/slots/fortune/assets/sounds/hover-pig-sound.mp3"
                }, {
                    id: "jackpotSound",
                    src: "/slots/fortune/assets/sounds/jackpot-sound.mp3"
                }, {
                    id: "lineSound",
                    src: "/slots/fortune/assets/sounds/line-sound.mp3"
                }, {
                    id: "nextRoundSound",
                    src: "/slots/fortune/assets/sounds/next-round-sound.mp3"
                }, {
                    id: "pickPigSound",
                    src: "/slots/fortune/assets/sounds/pick-pig-sound.mp3"
                }, {
                    id: "reelSound",
                    src: "/slots/fortune/assets/sounds/reel-sound.mp3"
                }, {
                    id: "rewardSound",
                    src: "/slots/fortune/assets/sounds/reward-sound.mp3"
                }, {
                    id: "spinJackpotSound",
                    src: "/slots/fortune/assets/sounds/spin-jackpot-sound.mp3"
                }, {
                    id: "spinSound",
                    src: "/slots/fortune/assets/sounds/spin-sound.mp3"
                }, {
                    id: "stopJackpotSound",
                    src: "/slots/fortune/assets/sounds/stop-jackpot-sound.mp3"
                }, {
                    id: "stopSound",
                    src: "/slots/fortune/assets/sounds/stop-sound.mp3"
                }, {
                    id: "winSound",
                    src: "/slots/fortune/assets/sounds/win-sound.mp3"
                }, {
                    id: "countSound",
                    src: "/slots/fortune/assets/sounds/countup.mp3"
                }],
                this.isLoad = !1,
                this.ready = !1,
                this.fontEmbedGold = "GOT-Gold",
                this.fontEmbedSilver = "GOT-Silver",
                this.percentJackpot = [.5, 1, 2.5, 5, 10, 25, 50, 100],
                this.isSilent = !1,
                this.isAuto = !1,
                this.guide = {
                    vi: '<div class="Guide-fortune" id="guide-fortune"><div class="guide-fortune guide-1 active"><div class="gt-1">243 cách chiến thắng</div><div class="box-th"><div class="th"><p>Tổ hợp 3</p> <i class="th-1"></i></div><div class="th"><p>Tổ hợp 4</p> <i class="th-2"></i></div><div class="th"><p>Tổ hợp 5</p> <i class="th-3"></i></div><div class="th"><p>Không chiến thắng</p> <i class="th-4"></i></div></div><div class="gt-2">Các chiến thắng sẽ được cộng dồn tính theo số lượng biểu tượng trên mỗi cột.<br />Chỉ trả thưởng dựa vào chiến thắng cao nhất.</div></div><div class="guide-fortune guide-2 "><div class="gt-1">Tổ hợp trả thưởng<br /> Giá trị trả thưởng = Mức cược / 200 * hệ số trả thưởng</div><div class="box-ptbl"><div class="box-ptblc-1"><div class="ptbl-1"><p><span class="pl">5</span><span class="pv">x 2000</span></p><p><span class="pl">4</span><span class="pv">x 500</span></p><p><span class="pl">3</span><span class="pv">x 100</span></p></div><div class="ptbl-2"><p><span class="pl">5</span><span class="pv">x 500</span></p><p><span class="pl">4</span><span class="pv">x 100</span></p><p><span class="pl">3</span><span class="pv">x 50</span></p></div><div class="ptbl-3"><div class="wild">Có thể thay thế cho tất cả các biểu tượng khác, ngoại trừ biểu tượng Bonus</div></div></div><div class="box-ptblc-2"><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 200</span></p><p><span class="pl">4</span><span class="pv">x 75</span></p><p><span class="pl">3</span><span class="pv">x 30</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 150</span></p><p><span class="pl">4</span><span class="pv">x 50</span></p><p><span class="pl">3</span><span class="pv">x 25</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 100</span></p><p><span class="pl">4</span><span class="pv">x 50</span></p><p><span class="pl">3</span><span class="pv">x 20</span></p></div></div><div class="box-ptblc-3"><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 50</span></p><p><span class="pl">4</span><span class="pv">x 25</span></p><p><span class="pl">3</span><span class="pv">x 10</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 30</span></p><p><span class="pl">4</span><span class="pv">x 15</span></p><p><span class="pl">3</span><span class="pv">x 10</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 20</span></p><p><span class="pl">4</span><span class="pv">x 10</span></p><p><span class="pl">3</span><span class="pv">x 5</span></p></div></div></div><div class="gt-2">Các biểu tượng có thể xếp chồng lên nhau và cũng xuất hiện trong một lần quay</div></div><div class="guide-fortune guide-3"><div class="gt-1">Bonus</div><div class="box-bn"><div class="bn-ic"> <i class="ic-bn"></i><div class="bn-ptbl"><p><span class="pl">5 Bonus</span><span class="pv">x5</span></p><p><span class="pl">4 Bonus</span><span class="pv">x3</span></p><p><span class="pl">3 Bonus</span><span class="pv">x1</span></p></div></div><div class="bn-if">Khi có ít nhất 3 biểu tượng Bonus ở vị trí bất kỳ, bạn sẽ được tham gia Minigame Đập heo vàng với những phần thưởng vô cùng đặc biệt.</div></div><div class="box-bn-stp"> <i class="bn-st-1"></i> <i class="bn-st-2"></i> <i class="bn-st-3"></i></div></div><div class="guide-fortune guide-4"><div class="gt-1">Săn Jackpot</div><div class="gt-2">Sau một số lượt quay ngẫu nhiên, người chơi sẽ nhận được 1 đồng tiền vàng. Tích lũy đủ 20 đồng tiền vàng, người chơi sẽ được tham gia vào màn săn Jackpot.</div> <i class="jp-scr"></i><div class="gt-2">Người chơi có cơ hội trúng Jackpot và nhiều phần thưởng có giá trị</div></div><div class="guide-fortune guide-5"><div class="gt-1">Săn Jackpot</div><div class="gt-2">Tỉ lệ giá trị Jackpot phụ thuộc vào mức cược</div><ul class="gjp-h"><li class="c1">Mức cược</li><li class="c2">Trúng % Jackpot</li><li class="c3">Giá trị Jackpot khởi tạo</li></ul><ul class="gjp-m"><li><div class="c1">1.000</div><div class="c2">0.5%</div><div class="c3">500.000</div></li><li><div class="c1">2.000</div><div class="c2">1%</div><div class="c3">1.000.000</div></li><li><div class="c1">5.000</div><div class="c2">2.5%</div><div class="c3">2.500.000</div></li><li><div class="c1">10.000</div><div class="c2">5%</div><div class="c3">5.000.000</div></li><li><div class="c1">20.000</div><div class="c2">10%</div><div class="c3">10.000.000</div></li><li><div class="c1">50.000</div><div class="c2">25%</div><div class="c3">25.000.000</div></li><li><div class="c1">100.000</div><div class="c2">50%</div><div class="c3">50.000.000</div></li><li><div class="c1">200.000</div><div class="c2">100%</div><div class="c3">100.000.000</div></li></ul></div><div class="Guide-fortune-nav" id="guide-fortune-nav"> <i class="active"></i> <i></i> <i></i> <i></i> <i></i></div></div>',
                    en: '<div class="Guide-fortune" id="guide-fortune"><div class="guide-fortune guide-1 active"><div class="gt-1">243 ways to win</div><div class="box-th"><div class="th"><p>Combined 3</p> <i class="th-1"></i></div><div class="th"><p>Combined 4</p> <i class="th-2"></i></div><div class="th"><p>Combined 5</p> <i class="th-3"></i></div><div class="th"><p>Lose</p> <i class="th-4"></i></div></div><div class="gt-2">The victories will be accumulated according to the number of symbols in each column. Only highest win pay.</div></div><div class="guide-fortune guide-2 "><div class="gt-1">Paytable<br /> Payline = Bet value/ 200 * Multipler</div><div class="box-ptbl"><div class="box-ptblc-1"><div class="ptbl-1"><p><span class="pl">5</span><span class="pv">x 2000</span></p><p><span class="pl">4</span><span class="pv">x 500</span></p><p><span class="pl">3</span><span class="pv">x 100</span></p></div><div class="ptbl-2"><p><span class="pl">5</span><span class="pv">x 500</span></p><p><span class="pl">4</span><span class="pv">x 100</span></p><p><span class="pl">3</span><span class="pv">x 50</span></p></div><div class="ptbl-3"><div class="wild">Wild can be substituted for all other symbols, except for the Bonus symbol.</div></div></div><div class="box-ptblc-2"><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 200</span></p><p><span class="pl">4</span><span class="pv">x 75</span></p><p><span class="pl">3</span><span class="pv">x 30</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 150</span></p><p><span class="pl">4</span><span class="pv">x 50</span></p><p><span class="pl">3</span><span class="pv">x 25</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 100</span></p><p><span class="pl">4</span><span class="pv">x 50</span></p><p><span class="pl">3</span><span class="pv">x 20</span></p></div></div><div class="box-ptblc-3"><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 50</span></p><p><span class="pl">4</span><span class="pv">x 25</span></p><p><span class="pl">3</span><span class="pv">x 10</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 30</span></p><p><span class="pl">4</span><span class="pv">x 15</span></p><p><span class="pl">3</span><span class="pv">x 10</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 20</span></p><p><span class="pl">4</span><span class="pv">x 10</span></p><p><span class="pl">3</span><span class="pv">x 5</span></p></div></div></div><div class="gt-2">Symbols can pile up and appear on the same turn</div></div><div class="guide-fortune guide-3"><div class="gt-1">Bonus</div><div class="box-bn"><div class="bn-ic"> <i class="ic-bn"></i><div class="bn-ptbl"><p><span class="pl">5 Bonus</span><span class="pv">x5</span></p><p><span class="pl">4 Bonus</span><span class="pv">x3</span></p><p><span class="pl">3 Bonus</span><span class="pv">x1</span></p></div></div><div class="bn-if">When there are at least 3 bonus symbols in any position, you will be participating in the Golden Pig minigame with extremely special rewards.</div></div><div class="box-bn-stp"> <i class="bn-st-1"></i> <i class="bn-st-2"></i> <i class="bn-st-3"></i></div></div><div class="guide-fortune guide-4"><div class="gt-1">Hunter Jackpot</div><div class="gt-2">After a random number of turns, players will receive 1 gold coin. Accumulating 20 gold coins, players will participate in Jackpot hunting screen.</div> <i class="jp-scr"></i><div class="gt-2">Players have a chance to win the Jackpot and many valuable rewards.</div></div><div class="guide-fortune guide-5"><div class="gt-1">Hunter Jackpot</div><div class="gt-2">The winning Jackpot value is proportional to the bet amount.</div><ul class="gjp-h"><li class="c1">Bet value</li><li class="c2">Winning% jackpot</li><li class="c3">Initialized jackpot value</li></ul><ul class="gjp-m"><li><div class="c1">1.000</div><div class="c2">0.5%</div><div class="c3">500.000</div></li><li><div class="c1">2.000</div><div class="c2">1%</div><div class="c3">1.000.000</div></li><li><div class="c1">5.000</div><div class="c2">2.5%</div><div class="c3">2.500.000</div></li><li><div class="c1">10.000</div><div class="c2">5%</div><div class="c3">5.000.000</div></li><li><div class="c1">20.000</div><div class="c2">10%</div><div class="c3">10.000.000</div></li><li><div class="c1">50.000</div><div class="c2">25%</div><div class="c3">25.000.000</div></li><li><div class="c1">100.000</div><div class="c2">50%</div><div class="c3">50.000.000</div></li><li><div class="c1">200.000</div><div class="c2">100%</div><div class="c3">100.000.000</div></li></ul></div><div class="Guide-fortune-nav" id="guide-fortune-nav"> <i class="active"></i> <i></i> <i></i> <i></i> <i></i></div></div>',
                    km: '<div class="Guide-fortune" id="guide-fortune"><div class="guide-fortune guide-1 active"><div class="gt-1">២៤៣ វិធីដើម្បីឈ្នះ។</div><div class="box-th"><div class="th"><p>រួមបញ្ចូលគ្នា ៣</p> <i class="th-1"></i></div><div class="th"><p>រួមបញ្ចូលគ្នា ៤</p> <i class="th-2"></i></div><div class="th"><p>រួមបញ្ចូលគ្នា ៥</p> <i class="th-3"></i></div><div class="th"><p>ចាញ់។</p> <i class="th-4"></i></div></div><div class="gt-2">ជ័យជំនះនឹងត្រូវបានបង្គរយោងទៅតាមចំនួននិមិត្តសញ្ញានៅក្នុងជួរឈរនីមួយៗ។ មានតែប្រាក់ខែឈ្នះខ្ពស់បំផុត។</div></div><div class="guide-fortune guide-2 "><div class="gt-1">ពិធីជប់លៀង។<br /> បណ្តាញទូទាត់ = តម្លៃល្អបំផុត / ២០០ * គុណ។</div><div class="box-ptbl"><div class="box-ptblc-1"><div class="ptbl-1"><p><span class="pl">5</span><span class="pv">x 2000</span></p><p><span class="pl">4</span><span class="pv">x 500</span></p><p><span class="pl">3</span><span class="pv">x 100</span></p></div><div class="ptbl-2"><p><span class="pl">5</span><span class="pv">x 500</span></p><p><span class="pl">4</span><span class="pv">x 100</span></p><p><span class="pl">3</span><span class="pv">x 50</span></p></div><div class="ptbl-3"><div class="wild">ព្រៃអាចត្រូវបានជំនួសសម្រាប់និមិត្តសញ្ញាផ្សេងទៀតទាំងអស់លើកលែងតែនិមិត្តសញ្ញាប្រាក់រង្វាន់។</div></div></div><div class="box-ptblc-2"><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 200</span></p><p><span class="pl">4</span><span class="pv">x 75</span></p><p><span class="pl">3</span><span class="pv">x 30</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 150</span></p><p><span class="pl">4</span><span class="pv">x 50</span></p><p><span class="pl">3</span><span class="pv">x 25</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 100</span></p><p><span class="pl">4</span><span class="pv">x 50</span></p><p><span class="pl">3</span><span class="pv">x 20</span></p></div></div><div class="box-ptblc-3"><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 50</span></p><p><span class="pl">4</span><span class="pv">x 25</span></p><p><span class="pl">3</span><span class="pv">x 10</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 30</span></p><p><span class="pl">4</span><span class="pv">x 15</span></p><p><span class="pl">3</span><span class="pv">x 10</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 20</span></p><p><span class="pl">4</span><span class="pv">x 10</span></p><p><span class="pl">3</span><span class="pv">x 5</span></p></div></div></div><div class="gt-2">និមិត្តសញ្ញាអាចតំឡើងនិងលេចឡើងនៅវេនតែមួយ។</div></div><div class="guide-fortune guide-3"><div class="gt-1">Bonus</div><div class="box-bn"><div class="bn-ic"> <i class="ic-bn"></i><div class="bn-ptbl"><p><span class="pl">5 Bonus</span><span class="pv">x5</span></p><p><span class="pl">4 Bonus</span><span class="pv">x3</span></p><p><span class="pl">3 Bonus</span><span class="pv">x1</span></p></div></div><div class="bn-if">នៅពេលមាននិមិត្តសញ្ញាប្រាក់រង្វាន់យ៉ាងតិចចំនួន ៣ នៅក្នុងទីតាំងណាមួយអ្នកនឹងត្រូវបានចូលរួមក្នុងកម្មវិធីមីហ្គោលហ្គោលជាមួយនឹងរង្វាន់ពិសេសបំផុត។</div></div><div class="box-bn-stp"> <i class="bn-st-1"></i> <i class="bn-st-2"></i> <i class="bn-st-3"></i></div></div><div class="guide-fortune guide-4"><div class="gt-1">ហាន់ជេកផត។</div><div class="gt-2">បន្ទាប់ពីចំនួនវេនចៃដន្យអ្នកលេងនឹងទទួលបាន ១ កាក់មាស។ ដោយប្រមូលប្រាក់បាន ២០ កាក់មាសអ្នកលេងនឹងចូលរួមនៅក្នុងអេក្រង់ម៉ាញ់ជេកផត។.</div> <i class="jp-scr"></i><div class="gt-2">អ្នកលេងមានឱកាសឈ្នះរង្វាន់ជេកផតនិងរង្វាន់ដ៏មានតម្លៃជាច្រើន។</div></div><div class="guide-fortune guide-5"><div class="gt-1">ហាន់ជេកផត។</div><div class="gt-2">រង្វាន់ Jackpot ដែលឈ្នះគឺសមាមាត្រទៅនឹងចំនួនទឹកប្រាក់ភ្នាល់។</div><ul class="gjp-h"><li class="c1">តម្លៃការភ្នាល់។</li><li class="c2">ឈ្នះ% Jackpot ។</li><li class="c3">តម្លៃ Jackpot បានចាប់ផ្តើម។</li></ul><ul class="gjp-m"><li><div class="c1">1.000</div><div class="c2">0.5%</div><div class="c3">500.000</div></li><li><div class="c1">2.000</div><div class="c2">1%</div><div class="c3">1.000.000</div></li><li><div class="c1">5.000</div><div class="c2">2.5%</div><div class="c3">2.500.000</div></li><li><div class="c1">10.000</div><div class="c2">5%</div><div class="c3">5.000.000</div></li><li><div class="c1">20.000</div><div class="c2">10%</div><div class="c3">10.000.000</div></li><li><div class="c1">50.000</div><div class="c2">25%</div><div class="c3">25.000.000</div></li><li><div class="c1">100.000</div><div class="c2">50%</div><div class="c3">50.000.000</div></li><li><div class="c1">200.000</div><div class="c2">100%</div><div class="c3">100.000.000</div></li></ul></div><div class="Guide-fortune-nav" id="guide-fortune-nav"> <i class="active"></i> <i></i> <i></i> <i></i> <i></i></div></div>',
                    zh: '<div class="Guide-fortune" id="guide-fortune"><div class="guide-fortune guide-1 active"><div class="gt-1">243种获胜方式</div><div class="box-th"><div class="th"><p>合并3</p> <i class="th-1"></i></div><div class="th"><p>合并4</p> <i class="th-2"></i></div><div class="th"><p>合并5</p> <i class="th-3"></i></div><div class="th"><p>失去</p> <i class="th-4"></i></div></div><div class="gt-2">胜利将根据每列中的符号数累计。 只有最高的赢钱。</div></div><div class="guide-fortune guide-2 "><div class="gt-1">赔率表<br /> 支付线=最佳价值/ 200 *乘数</div><div class="box-ptbl"><div class="box-ptblc-1"><div class="ptbl-1"><p><span class="pl">5</span><span class="pv">x 2000</span></p><p><span class="pl">4</span><span class="pv">x 500</span></p><p><span class="pl">3</span><span class="pv">x 100</span></p></div><div class="ptbl-2"><p><span class="pl">5</span><span class="pv">x 500</span></p><p><span class="pl">4</span><span class="pv">x 100</span></p><p><span class="pl">3</span><span class="pv">x 50</span></p></div><div class="ptbl-3"><div class="wild">除了奖励符号外，Wild可以替换所有其他符号。</div></div></div><div class="box-ptblc-2"><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 200</span></p><p><span class="pl">4</span><span class="pv">x 75</span></p><p><span class="pl">3</span><span class="pv">x 30</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 150</span></p><p><span class="pl">4</span><span class="pv">x 50</span></p><p><span class="pl">3</span><span class="pv">x 25</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 100</span></p><p><span class="pl">4</span><span class="pv">x 50</span></p><p><span class="pl">3</span><span class="pv">x 20</span></p></div></div><div class="box-ptblc-3"><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 50</span></p><p><span class="pl">4</span><span class="pv">x 25</span></p><p><span class="pl">3</span><span class="pv">x 10</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 30</span></p><p><span class="pl">4</span><span class="pv">x 15</span></p><p><span class="pl">3</span><span class="pv">x 10</span></p></div><div class="ptbl-x"><p><span class="pl">5</span><span class="pv">x 20</span></p><p><span class="pl">4</span><span class="pv">x 10</span></p><p><span class="pl">3</span><span class="pv">x 5</span></p></div></div></div><div class="gt-2">符号可以堆积并出现在同一转弯处</div></div><div class="guide-fortune guide-3"><div class="gt-1">Bonus</div><div class="box-bn"><div class="bn-ic"> <i class="ic-bn"></i><div class="bn-ptbl"><p><span class="pl">5 Bonus</span><span class="pv">x5</span></p><p><span class="pl">4 Bonus</span><span class="pv">x3</span></p><p><span class="pl">3 Bonus</span><span class="pv">x1</span></p></div></div><div class="bn-if">当任何位置至少有3个奖励符号时，您将参加Golden Pig迷你游戏并获得极其特殊的奖励.</div></div><div class="box-bn-stp"> <i class="bn-st-1"></i> <i class="bn-st-2"></i> <i class="bn-st-3"></i></div></div><div class="guide-fortune guide-4"><div class="gt-1">猎人大奖</div><div class="gt-2">在随机数转弯后，玩家将获得1枚金币。 累计20金币，玩家将参加累积奖金狩猎屏幕。</div> <i class="jp-scr"></i><div class="gt-2">玩家有机会赢得累积奖金和许多有价值的奖励。</div></div><div class="guide-fortune guide-5"><div class="gt-1">猎人大奖</div><div class="gt-2">获胜的累积奖金值与下注金额成比例。</div><ul class="gjp-h"><li class="c1">投注价值</li><li class="c2">赢得％头奖</li><li class="c3">初始化累积奖金值</li></ul><ul class="gjp-m"><li><div class="c1">1.000</div><div class="c2">0.5%</div><div class="c3">500.000</div></li><li><div class="c1">2.000</div><div class="c2">1%</div><div class="c3">1.000.000</div></li><li><div class="c1">5.000</div><div class="c2">2.5%</div><div class="c3">2.500.000</div></li><li><div class="c1">10.000</div><div class="c2">5%</div><div class="c3">5.000.000</div></li><li><div class="c1">20.000</div><div class="c2">10%</div><div class="c3">10.000.000</div></li><li><div class="c1">50.000</div><div class="c2">25%</div><div class="c3">25.000.000</div></li><li><div class="c1">100.000</div><div class="c2">50%</div><div class="c3">50.000.000</div></li><li><div class="c1">200.000</div><div class="c2">100%</div><div class="c3">100.000.000</div></li></ul></div><div class="Guide-fortune-nav" id="guide-fortune-nav"> <i class="active"></i> <i></i> <i></i> <i></i> <i></i></div></div>'
                },
                this.payValue = [{
                    vi: "Biểu tượng Wild có thể thay thế cho tất cả các biểu tượng khác, trừ biểu tượng Bonus.",
                    en: "Wild can be substituted for all other symbols, except for the Bonus symbol.",
                    km: "ព្រៃអាចត្រូវបានជំនួសសម្រាប់និមិត្តសញ្ញាផ្សេងទៀតទាំងអស់លើកលែងតែនិមិត្តសញ្ញាប្រាក់រង្វាន់។.",
                    zh: "除了奖励符号外，Wild可以替换所有其他符号."
                }, [2e3, 500, 100], ["x5 bonus", "x3 bonus", "x1 bonus"], [2e3, 500, 100], [500, 100, 50], [200, 75, 30], [150, 50, 25], [100, 50, 20], [50, 25, 10], [30, 15, 10], [20, 10, 5]],
                this.arrBox = [],
                this.startPosition = 0,
                this.startHeight = 0,
                this.totalItems = 31,
                this.column1 = {},
                this.column2 = {},
                this.column3 = {},
                this.column4 = {},
                this.column5 = {},
                this.btnTextures = {},
                this.isOver = !1,
                this.autoClientArr = [10, 50, 200, 1e3, 5e3],
                this.coinArr = [{
                    x: 61.5,
                    y: 96.5
                }, {
                    x: 124.5,
                    y: 96.5
                }, {
                    x: 187.5,
                    y: 96.5
                }, {
                    x: 250.5,
                    y: 96.5
                }, {
                    x: 313.5,
                    y: 96.5
                }, {
                    x: 61.5,
                    y: 137.5
                }, {
                    x: 124.5,
                    y: 137.5
                }, {
                    x: 187.5,
                    y: 137.5
                }, {
                    x: 250.5,
                    y: 137.5
                }, {
                    x: 313.5,
                    y: 137.5
                }, {
                    x: 61.5,
                    y: 178.5
                }, {
                    x: 124.5,
                    y: 178.5
                }, {
                    x: 187.5,
                    y: 178.5
                }, {
                    x: 250.5,
                    y: 178.5
                }, {
                    x: 313.5,
                    y: 178.5
                }, {
                    x: 61.5,
                    y: 219.5
                }, {
                    x: 124.5,
                    y: 219.5
                }, {
                    x: 187.5,
                    y: 219.5
                }, {
                    x: 250.5,
                    y: 219.5
                }, {
                    x: 313.5,
                    y: 219.5
                }],
                this.twActiveCoin = null,
                this.coinPoint = 500,
                this.coinHas = 0,
                this.total = 100,
                this.timeTween = .6,
                this.timeBack = .1,
                this.delayFirst = .15,
                this.spinTo = 0,
                this.pointNext = 111.5,
                this.pointBack = 91.5,
                this.timeDelay = .1,
                this.numbW = 0,
                this.emitIcons = [],
                this.multiBonus = 0,
                t.storage && (this.storage = t.storage),
                t.isSilent && (this.isSilent = t.isSilent),
                this.token = t.token,
                u.Config.hubUrl = t.hubUrl,
                u.Config.apiUrl = t.apiUrl,
                u.Config.api = t.api,
                t.currencyID ? u.Config.currencyId = t.currencyID : u.Config.currencyId = "undefined" != typeof App ? App.account.currencyID : 1,
                this.isSilent ? (this.ready = !0,
                u.Config.ready = !0,
                this.isAuto = !0,
                this.resetTweenTab(),
                this.silent = new r.silent(this)) : (this.size = t.size,
                this.target = t.target,
                this.loader = new PIXI.loaders.Loader,
                this.his = t.getHistory,
                this.trans = t.getStatistic,
                this.ready = !1,
                u.Config.ready = !1,
                this.filter = new PIXI.filters.ColorMatrixFilter,
                this.filter.matrix = [1, 0, 0, .1, 0, 0, 1, 0, .1, 0, 0, 0, 1, .1, 0, 0, 0, 0, 1, 0],
                this.filterGray = new PIXI.filters.ColorMatrixFilter,
                this.filterGray.matrix = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0],
                this.fontSystem = o.contents.detectFontSystem(),
                u.Config.lang = Language.GetLanguageCode(),
                this.getAutoSpin(),
                this.init())
            }
            i.games = l
        },
        62: function(t, i, e) {
            "use strict";
            Object.defineProperty(i, "__esModule", {
                value: !0
            });
            var n = e(2)
              , s = e(8)
              , o = (a.prototype.Init = function() {
                var i = this;
                this.connection = (new n.HubConnectionBuilder).withUrl(this.url, {
                    accessTokenFactory: function() {
                        return i.token
                    },
                    skipNegotiation: !0,
                    transport: n.HttpTransportType.WebSockets
                }).build(),
                this.connection.serverTimeoutInMilliseconds = 1e5,
                this.connection.start().then(function() {
                    s.Config.isLogin = !0,
                    console.log("connected"),
                    i.connection.invoke("PlayNow", {
                        RoomID: s.Config.roomId,
                        CurrencyID: s.Config.currencyId
                    })
                }).catch(function(t) {
                    return console.error(t)
                }),
                this.connection.on("JoinGame", function(t) {
                    i.game.isSilent ? i.game.silent.joinRoom(t) : i.game.joinRoom(t)
                }),
                this.connection.on("ResultSpin", function(t) {
                    i.game.isSilent ? i.game.silent.startSpin(t) : i.game.startSpin(t)
                }),
                this.connection.on("MessageError", function(t) {
                    i.game.isSilent || i.game.showError(t)
                }),
                this.connection.on("ResultBonusGame", function(t) {
                    i.game.isSilent ? i.game.silent.finishBonus(t) : i.game.bonus.resultBonus(t)
                }),
                this.connection.on("ResultAccumulate", function(t) {
                    i.game.isSilent ? i.game.silent.finishJackpot(t) : i.game && i.game.jackpot && i.game.jackpot.resultJackpot(t)
                }),
                this.connection.on("ResultX2Game", function(t) {
                    i.game.x2.ShowResult(t)
                }),
                this.connection.on("UpdateJackpot", function(t) {
                    i.game.isSilent || i.game.updateJackpot(t)
                })
            }
            ,
            a);
            function a(t, i, e) {
                this.url = t,
                this.token = i,
                this.game = e,
                this.Init()
            }
            i.default = o
        },
        63: function(t, i, e) {
            "use strict";
            Object.defineProperty(i, "__esModule", {
                value: !0
            }),
            i.jackpot = void 0;
            var C = e(0)
              , y = e(8)
              , w = e(20)
              , n = (s.prototype.init = function() {
                if (y.Config.music)
                    try {
                        this.game.bgBonusSound.play()
                    } catch (t) {}
                this.game.destroyEffect(),
                this.jackpotContainer = new Container,
                this.game.machine.addChild(this.jackpotContainer);
                var t = new Sprite(this.game.resources.bonus.textures["Flor-1.png"]);
                t.position.set(250, 375);
                var i = new Sprite(this.game.resources.bonus.textures["Flor-2.png"]);
                i.position.set(250, 774),
                this.jackpotContainer.addChild(t, i);
                var e = [{
                    framerate: 30,
                    loop: !0,
                    textures: this.game.framesCoinJackpot
                }, {
                    framerate: 30,
                    loop: !0,
                    textures: [this.game.resources.particles.textures["particle-3.png"], PIXI.Texture.EMPTY, PIXI.Texture.EMPTY, PIXI.Texture.EMPTY, PIXI.Texture.EMPTY, PIXI.Texture.EMPTY, PIXI.Texture.EMPTY, this.game.resources.particles.textures["particle-4.png"], PIXI.Texture.EMPTY, PIXI.Texture.EMPTY]
                }];
                this.jackpotPaticles = new PIXI.particles.Emitter(this.jackpotContainer,e,this.game.resources.particleJackpot.data),
                this.jackpotPaticles.particleConstructor = PIXI.particles.AnimatedParticle,
                this.jackpotPaticles.emit = !1;
                var n = new Sprite(this.game.resources.bonus.textures["GodFortune.png"]);
                n.position.set(552, 720),
                n.anchor.set(.5),
                TweenMax.to(n, 3, {
                    data: "fortune-jackpot",
                    x: 585,
                    ease: Power1.easeInOut,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    repeat: -1
                }),
                TweenMax.to(n, 2.5, {
                    data: "fortune-jackpot",
                    y: 690,
                    ease: Power1.easeInOut,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    repeat: -1
                }),
                this.txtMoney = new BitmapText("",{
                    font: "70px " + this.game.fontEmbedGold
                }),
                this.txtMoney.anchor.x = .5,
                this.txtMoney.position.set(570, 820),
                this.txtMoney.visible = !1,
                this.lblJackpot = new Sprite(this.game.resources.bonus.textures["Jackpot" + ("vi" == Message.GetLanguageCode() ? "" : "-en") + ".png"]),
                this.lblJackpot.position.set(580, 490),
                this.lblJackpot.anchor.set(.5),
                this.lblJackpot.visible = !1;
                var s = new Sprite(this.game.resources.bonus.textures["VertSpace.png"]);
                s.position.set(995, 180),
                s.scale.y = 6,
                this.txtJackpotTotal = new BitmapText("0",{
                    font: "45px " + this.game.fontEmbedGold
                }),
                this.txtJackpotTotal.anchor.x = 1,
                this.txtJackpotTotal.position.set(1390, 280);
                var o = new Sprite(this.game.resources.bonus.textures["GodFortune.png"]);
                o.position.set(1100, 440),
                o.anchor.set(.5),
                o.scale.set(.3),
                this.txtJackpot = new BitmapText("0",{
                    font: "40px " + this.game.fontEmbedGold
                }),
                this.txtJackpot.anchor.x = 1,
                this.txtJackpot.position.set(1390, 430),
                this.jackpotContainer.addChild(n, this.txtMoney, this.lblJackpot, s, this.txtJackpotTotal, o, this.txtJackpot);
                for (var a = 0; a < this.money.length; a++) {
                    var r = new BitmapText(C.Util.ParseMoney(this.money[a] * this.game.currentPlayer.BetValue),{
                        font: "45px " + this.game.fontEmbedGold
                    });
                    r.anchor.set(1, 0),
                    r.position.set(1390, 0 === a ? 550 : 1 === a ? 680 : 817);
                    var l = new Sprite(this.game.resources.bonus.textures["Item-" + (a + 1) + ".png"]);
                    l.anchor.set(.5),
                    l.scale.set(.6),
                    l.position.set(1100, 0 === a ? 570 : 1 === a ? 700 : 835),
                    this.jackpotContainer.addChild(r, l)
                }
                for (var c = 0; c < 4; c++) {
                    var u = new Sprite(this.game.resources.bonus.textures["LightBreak.png"]);
                    u.anchor.set(.5),
                    u.position.set(1230, 0 === c ? 370 : 1 === c ? 510 : 2 === c ? 631 : 764),
                    this.jackpotContainer.addChild(u)
                }
                var h = new Container;
                h.x = 40,
                h.y = 300,
                this.jackpotContainer.addChild(h);
                for (var p = 0, d = 0, g = ["Item-1", "Item-2", !1, "Item-4" + ("vi" == Message.GetLanguageCode() ? "" : "-en"), "Item-3", "Item-1", !1, "Item-2", "Item-3", "Item-1", "Item-3", "Item-1", "Item-2", !1, "Item-4" + ("vi" == Message.GetLanguageCode() ? "" : "-en"), "Item-3", "Item-1", !1, "Item-2", "Item-3", "Item-1", "Item-3"], m = 0; m < 22; m++) {
                    var f = this.game.resources.bonus.textures["Rect-2.png"];
                    0 == g[m] && (f = this.game.resources.bonus.textures["Rect-1.png"]),
                    "Item-4" != g[m] && "Item-4-en" != g[m] || (f = this.game.resources.bonus.textures["Rect-3.png"]),
                    m < 7 ? p += 133 : 11 < m && m < 18 && (p -= 133),
                    6 < m && m < 12 && (d += 133),
                    17 < m && (d -= 133);
                    var x = new Sprite(f);
                    x.anchor.set(.5),
                    x.position.set(p, d),
                    h.addChild(x);
                    var b = void 0;
                    (b = g[m] ? new Sprite(this.game.resources.bonus.textures[g[m] + ".png"]) : new PIXI.Text(Message.GetMessage("vqmm_rw12"),{
                        fontFamily: this.game.fontSystem,
                        fontSize: 35,
                        fontWeight: "700",
                        fill: ["#ffffff", "#a9d6ff"],
                        stroke: "#314574",
                        strokeThickness: 2
                    })).anchor.set(.5),
                    x.addChild(b),
                    this.rectArr.push(x)
                }
                this.spin = new Sprite(this.game.resources.bonus.textures["Rect-rw.png"]),
                this.spin.anchor.set(.5),
                this.spin.position.set(133, 0),
                h.addChild(this.spin);
                var v = new Sprite(this.game.resources.bonus.textures["Rect-rw.png"]);
                v.anchor.set(.5),
                v.blendMode = PIXI.BLEND_MODES.ADD,
                v.alpha = 0,
                v.scale.set(1.1),
                this.spin.addChild(v),
                TweenMax.to(v, .2, {
                    data: "fortune-jackpot",
                    alpha: .5,
                    yoyo: !0,
                    repeat: -1
                }),
                this.game.jackpotContainer.visible = !0,
                w.contents.getJackpot(this.game)
            }
            ,
            s.prototype.effectJackpot = function() {
                if (this.lblJackpot.visible = !0,
                this.jackpotPaticles.emit = !0,
                y.Config.sound)
                    try {
                        this.game.jackpotSound.play()
                    } catch (t) {}
                TweenMax.to(this.lblJackpot, .5, {
                    data: "fortune-jackpot",
                    y: 470,
                    repeat: -1,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    ease: Power1.easeInOut
                })
            }
            ,
            s.prototype.playJackpot = function() {
                this.game.hubs.connection.invoke("PlayAccumulate", {
                    RoomID: y.Config.roomId,
                    CurrencyID: y.Config.currencyId
                })
            }
            ,
            s.prototype.getPos = function(t) {
                var i = 1 === t ? 3 : 51 === t ? 0 : 52 === t ? 1 : 53 === t ? 2 : 4;
                return this.iconPosInx[i][C.Util.RandomFrom(0, this.iconPosInx[i].length - 1)]
            }
            ,
            s.prototype.resultJackpot = function(t) {
                console.log(t),
                this.data = t;
                var e = this
                  , i = this.getPos(t.PrizeID)
                  , n = C.Util.RandomFrom(3, 5);
                if (y.Config.sound)
                    try {
                        PIXI.sound.play("spinJackpotSound")
                    } catch (t) {}
                var s = new EE3Timer.Timer(C.Util.RandomFrom(100, 200));
                s.repeat = 10,
                s.on("repeat", function(t, i) {
                    e.inx++,
                    e.spin.position.set(e.rectArr[e.inx].x, e.rectArr[e.inx].y)
                }),
                s.on("end", function() {
                    var t = new EE3Timer.Timer(C.Util.RandomFrom(20, 50));
                    t.repeat = e.rectArr.length * n - 10,
                    t.on("repeat", function(t, i) {
                        e.inx++,
                        e.inx === e.rectArr.length && (e.inx = 0),
                        e.spin.position.set(e.rectArr[e.inx].x, e.rectArr[e.inx].y)
                    }),
                    t.on("end", function() {
                        var t = new EE3Timer.Timer(C.Util.RandomFrom(20, 100));
                        t.repeat = 0 === i ? 22 : i,
                        t.on("repeat", function(t, i) {
                            e.inx++,
                            e.inx === e.rectArr.length && (e.inx = 0),
                            e.spin.position.set(e.rectArr[e.inx].x, e.rectArr[e.inx].y)
                        }),
                        t.expire = !0,
                        t.start(),
                        t.on("end", function() {
                            if (y.Config.sound)
                                try {
                                    PIXI.sound.play("stopJackpotSound")
                                } catch (t) {}
                            e.displayWin()
                        })
                    }),
                    t.expire = !0,
                    t.start()
                }),
                s.expire = !0,
                s.start()
            }
            ,
            s.prototype.displayWin = function() {
                var t = this;
                if (0 === this.data.PrizeValue) {
                    var i = new PIXI.Text(Message.GetMessage("ol45"),{
                        fontFamily: this.game.fontSystem,
                        fontSize: 50,
                        fontWeight: "700",
                        fill: ["#d08f44", "#fade78"],
                        stroke: "#450f16",
                        strokeThickness: 4
                    });
                    i.position.set(570, 820),
                    i.anchor.set(.5, 0),
                    this.jackpotContainer.addChild(i)
                } else {
                    if (this.txtMoney.visible = !0,
                    w.contents.countNumber(this.txtMoney, !0, !1, 0, this.data.PrizeValue, 0, 1 !== this.data.PrizeID ? 1 : 8),
                    y.Config.sound && 1 === this.data.PrizeID)
                        try {
                            this.game.jackpotSound.play()
                        } catch (t) {}
                    1 === this.data.PrizeID && this.effectJackpot()
                }
                y.Config.timeBonusOrFree = setTimeout(function() {
                    return t.deleteJackpot()
                }, 1 !== this.data.PrizeID ? 1500 : 9e3)
            }
            ,
            s.prototype.deleteJackpot = function() {
                var t = this;
                this.jackpotPaticles.emit = !1,
                this.jackpotPaticles = null;
                for (var i = TweenMax.getAllTweens(), e = 0; e < i.length; e++)
                    "fortune-jackpot" === i[e].data && i[e].kill();
                this.jackpotContainer.destroy({
                    children: !0
                }),
                w.contents.clearTimer(),
                this.game.showMain(),
                y.Config.isJackpot = !1,
                w.contents.updateLastWon(this.game, this.data.PrizeValue),
                w.contents.updateBalance(this.game, this.data.Balance),
                this.game.currentPlayer.SpinData.Points = this.data.PointBalance;
                try {
                    this.game.bgBonusSound.stop()
                } catch (t) {}
                if (y.Config.music)
                    try {
                        this.game.bgSound.play()
                    } catch (t) {}
                y.Config.timeBonusOrFree = setTimeout(function() {
                    t.game.setActiveCoin(),
                    t.game.jackpotOrBonus(t.game)
                }, 1e3)
            }
            ,
            s);
            function s(t) {
                var i = this;
                this.money = [100, 50, 20],
                this.iconPosInx = [[0, 5, 9, 11, 16, 20], [1, 7, 12, 18], [4, 8, 10, 19, 21], [3, 14], [2, 6, 13, 17]],
                this.inx = 0,
                this.game = t,
                this.rectArr = [],
                this.init(),
                setTimeout(function() {
                    return i.playJackpot()
                }, 500)
            }
            i.jackpot = n
        },
        64: function(t, i, e) {
            "use strict";
            Object.defineProperty(i, "__esModule", {
                value: !0
            }),
            i.bonus = void 0;
            var c = e(0)
              , n = e(8)
              , r = e(20);
            e(1);
            var s = (o.prototype.init = function() {
                this.game.destroyEffect(),
                this.bonusContainer = new Container,
                this.game.machine.addChild(this.bonusContainer);
                try {
                    PIXI.sound.stop("bonusSound")
                } catch (t) {}
                this.left = new Sprite(this.game.resources.bonus.textures["MoneyColumn.png"]),
                this.left.position.set(-290, 150),
                this.right = new Sprite(this.game.resources.bonus.textures["MoneyColumn.png"]),
                this.right.position.set(1385, 150),
                this.bonusContainer.addChild(this.left, this.right);
                for (var t = this.data.BonusItemData.split(";"), i = 0; i < this.moneyPos.length; i++) {
                    var e, n = t[i].split(","), s = new BitmapText(c.Util.ParseMoney(parseInt(n[2]) / this.multi),{
                        font: "43px " + this.game.fontEmbedGold
                    });
                    s.value = n[2],
                    s.anchor.set(.5, 0),
                    s.position.set(this.moneyPos[i].x, this.moneyPos[i].y),
                    this.money.push(s),
                    this.bonusContainer.addChild(s),
                    i % 12 < 11 && ((e = new Sprite(this.game.resources.bonus.textures["LightBreak.png"])).position.set(this.moneyPos[i].x, this.moneyPos[i].y + 55),
                    e.anchor.set(.5, 0),
                    this.bonusContainer.addChild(e))
                }
                this.boxContainer = new Container,
                this.bonusContainer.addChild(this.boxContainer);
                var o = new PIXI.mesh.NineSlicePlane(this.game.resources.ui.textures["rounded.png"],30,22,30,23);
                o.position.set(420, 980),
                o.width = 270,
                o.height = 84;
                var a = new PIXI.Text(Message.GetMessage("ft1"),this.styleTextMesh);
                a.position.set(135, 20),
                a.anchor.set(.5),
                this.txtOwnPig = new BitmapText("",{
                    font: "38px " + this.game.fontEmbedGold
                }),
                this.txtOwnPig.position.set(135, 52),
                this.txtOwnPig.anchor.set(.5),
                o.addChild(a, this.txtOwnPig);
                var r = new PIXI.mesh.NineSlicePlane(this.game.resources.ui.textures["rounded.png"],30,22,30,23);
                r.position.set(800, 980),
                r.width = 270,
                r.height = 84,
                this.boxContainer.addChild(o, r);
                var l = new PIXI.Text(Message.GetMessage("ft2"),this.styleTextMesh);
                l.position.set(135, 20),
                l.anchor.set(.5),
                this.txtMulti = new BitmapText("x" + this.multi,{
                    font: "38px " + this.game.fontEmbedGold
                }),
                this.txtMulti.position.set(135, 52),
                this.txtMulti.anchor.set(.5),
                this.btnQuick = new Sprite(this.game.resources.bonus.textures["ButtonAction-1.png"]),
                this.btnQuick.anchor.set(.5),
                this.btnQuick.position.set(745, 1130),
                this.btnQuick.interactive = !0,
                this.btnQuick.buttonMode = !0,
                this.btnQuick.on("pointerover", function() {
                    var t = new PIXI.filters.ColorMatrixFilter;
                    this.filters = [t],
                    t.brightness(1.5)
                }).on("pointerout", function() {
                    this.filters = null
                }).on("pointerup", this.btnQuickDown.bind(this.btnQuick, this)),
                this.bonusContainer.addChild(this.btnQuick),
                this.btnQuick.addChild(new PIXI.Text(Message.GetMessage("sl56"),{
                    fontFamily: this.game.fontSystem,
                    fontSize: 24,
                    fontWeight: "700",
                    fill: "#ffffff"
                })),
                this.btnQuick.children[0].anchor.set(.5),
                this.btnQuick.children[0].y = -5,
                r.addChild(l, this.txtMulti)
            }
            ,
            o.prototype.initTimer = function() {
                this.timerContainer = new Container,
                this.bonusContainer.addChild(this.timerContainer),
                this.timer = 15,
                this.arcOut = new PIXI.Graphics,
                this.arcOut.lineStyle(20, 16777215, .8),
                this.arcOut.arc(750, 95, 52, 1.521 * Math.PI, 1.52 * Math.PI),
                this.arcOut.PI = 1.521 * Math.PI,
                this.timerContainer.addChild(this.arcOut);
                var t = new Sprite(this.game.resources.bonus.textures["countdownIn.png"]);
                t.position.set(750, 95),
                t.anchor.set(.5);
                var i = new Sprite(this.game.resources.bonus.textures["countdownOut.png"]);
                i.position.set(750, 95),
                i.anchor.set(.5),
                i.mask = this.arcOut,
                this.txtTimer = new PIXI.Text("15s",{
                    fontFamily: this.game.fontSystem,
                    fontSize: 50,
                    fontWeight: "700",
                    fill: ["#ffffff", "#ccff00"]
                }),
                this.txtTimer.anchor.set(.5),
                this.txtTimer.position.set(752, 95),
                this.timerContainer.addChild(t, i, this.txtTimer)
            }
            ,
            o.prototype.initChoosePig = function() {
                this.choosePigContainer = new Container,
                this.bonusContainer.addChild(this.choosePigContainer),
                this.pigChoose = [];
                for (var t = 0; t < 24; t++) {
                    var i = new Sprite(this.game.resources.bonus.textures["Pig.png"]);
                    i.anchor.set(.5),
                    i.scale.set(.6),
                    i.inx = t + 1,
                    i.position.set(this.pigChoosePos[t].x + 72.6, this.pigChoosePos[t].y + 66.6),
                    i.interactive = !0,
                    i.buttonMode = !0,
                    i.on("pointerover", function() {
                        var t = new PIXI.filters.ColorMatrixFilter;
                        if (this.filters = [t],
                        t.brightness(1.5),
                        n.Config.sound)
                            try {
                                PIXI.sound.play("hoverPigSound")
                            } catch (t) {}
                    }).on("pointerout", function() {
                        this.filters = []
                    }).on("pointerdown", this.pigChooseDown.bind(i, this)),
                    this.choosePigContainer.addChild(i);
                    var e = new Sprite(this.game.resources.bonus.textures["Rect.png"]);
                    e.scale.set(1.6),
                    e.position.set(0, 120),
                    e.anchor.set(.5),
                    e.addChild(new PIXI.Text((t + 1).toString(),this.styleTextBox)),
                    e.children[0].anchor.set(.5),
                    i.addChild(e),
                    this.pigChoose.push(i)
                }
            }
            ,
            o.prototype.btnQuickDown = function(t) {
                this.interactive = !1,
                this.buttonMode = !1,
                t.hideTimer(),
                t.game.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: n.Config.roomId,
                    CurrencyID: n.Config.currencyId,
                    itemID: 0,
                    isFinish: 1
                }).then(function() {}).catch(function() {
                    t.enableChoosePig()
                })
            }
            ,
            o.prototype.countChoosePig = function() {
                var t = this;
                this.isFinish || (this.timer = 15,
                this.timerContainer.visible = !0,
                this.downTimer(),
                this.tw = TweenLite.to(this.arcOut, this.timer, {
                    PI: 3.52 * Math.PI,
                    onUpdate: function() {
                        t.arcOut.clear(),
                        t.arcOut.lineStyle(12, 13434624, 1),
                        t.arcOut.arc(750, 95, 52, t.arcOut.PI, 1.52 * Math.PI)
                    },
                    onComplete: function() {
                        t.hideTimer(),
                        t.game.hubs.connection.invoke("PlayBonusGame", {
                            RoomID: n.Config.roomId,
                            CurrencyID: n.Config.currencyId,
                            itemID: 0,
                            isFinish: 1
                        }).then(function(t) {
                            console.log("finishBonus", t)
                        }).catch(function() {
                            console.log("er")
                        })
                    },
                    ease: Power0.easeNone
                }))
            }
            ,
            o.prototype.pigChooseDown = function(t) {
                if (t.disableChoosePig(),
                t.hideTimer(),
                n.Config.sound)
                    try {
                        PIXI.sound.play("pickPigSound")
                    } catch (t) {}
                t.game.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: n.Config.roomId,
                    CurrencyID: n.Config.currencyId,
                    itemID: this.inx,
                    isFinish: 0
                }).then(function(t) {
                    console.log("d", t)
                }).catch(function() {})
            }
            ,
            o.prototype.disableChoosePig = function() {
                for (var t = 0; t < this.pigChoose.length; t++)
                    this.pigChoose[t].interactive = !1,
                    this.pigChoose[t].buttonMode = !1
            }
            ,
            o.prototype.enableChoosePig = function() {
                for (var t = 0; t < this.pigChoose.length; t++)
                    this.pigChoose[t].interactive = !0,
                    this.pigChoose[t].buttonMode = !0
            }
            ,
            o.prototype.downTimer = function() {
                var t = this;
                this.timer--,
                this.timer <= 2 && (this.disableChoosePig(),
                this.disableShowPig()),
                this.timer <= 0 || (this.txtTimer.text = this.timer + "s",
                this.timeOut = setTimeout(function() {
                    return t.downTimer()
                }, 1e3))
            }
            ,
            o.prototype.hideTimer = function() {
                this.timer = 0;
                try {
                    this.tw.kill()
                } catch (t) {}
                this.btnQuick.visible = !1,
                clearTimeout(this.timeOut),
                this.timerContainer.visible = !1
            }
            ,
            o.prototype.initShowPig = function() {
                this.showPigContainer = new Container,
                this.bonusContainer.addChild(this.showPigContainer),
                this.showPigContainer.visible = !1,
                this.changePig = [],
                this.openedPig = [],
                this.numbO = 0,
                this.inxPig = 3,
                this.isChanged = !1,
                this.openedRandom = 0,
                this.light = new Sprite(this.game.resources.bonus.textures["currentLight.png"]),
                this.light.x = 0,
                this.light.y = 0,
                this.light.anchor.set(.5),
                this.showPigContainer.addChild(this.light),
                TweenMax.to(this.light.scale, .5, {
                    data: "fortune-bonus",
                    x: .9,
                    y: .9,
                    repeat: -1,
                    yoyo: !0,
                    yoyoEase: Power1.easeInOut,
                    ease: Power1.easeInOut
                });
                for (var a = this, t = 0; t < this.showPigPos.length; t++)
                    !function(t) {
                        var i = new Sprite(a.game.resources.bonus.textures["Pig.png"]);
                        i.position.set(a.showPigPos[t].x, a.showPigPos[t].y),
                        i.anchor.set(.5),
                        i.inx = -1,
                        a.showPigContainer.addChild(i),
                        a.changePig.push(i);
                        var e = new Sprite(a.game.resources.bonus.textures["Rect.png"]);
                        e.x = 0,
                        e.y = -80,
                        e.anchor.set(.5),
                        e.addChild(new PIXI.Text("8",a.styleTextBox)),
                        e.children[0].anchor.set(.5);
                        var n = new Sprite(a.game.resources.bonus.textures["ButtonAction-1.png"]);
                        n.y = 120,
                        n.anchor.set(.5),
                        n.addChild(new PIXI.Text("",{
                            fontFamily: a.game.fontSystem,
                            fontSize: 24,
                            fontWeight: "700",
                            fill: "#ffffff",
                            stroke: "#9e1c42",
                            strokeThickness: 2
                        })),
                        n.children[0].anchor.set(.5),
                        n.children[0].y = -5,
                        n.inx = -1,
                        n.interactive = !0,
                        n.buttonMode = !0;
                        var s = a;
                        n.on("pointerover", function() {
                            this.texture = s.game.resources.bonus.textures["ButtonAction-2.png"]
                        }).on("pointerout", function() {
                            this.texture = s.game.resources.bonus.textures["ButtonAction-1.png"]
                        }).on("pointerup", a.btnChangePigDown.bind(n, a));
                        var o = new BitmapText("0",{
                            font: "50px " + a.game.fontEmbedGold
                        });
                        o.anchor.set(.5),
                        o.y = 110,
                        o.visible = !1,
                        i.addChild(e, n, o)
                    }(t)
            }
            ,
            o.prototype.initChangePig = function() {
                this.changeContainer = new Container,
                this.bonusContainer.addChild(this.changeContainer),
                this.changeContainer.visible = !1;
                var t = new Sprite(this.game.resources.bonus.textures["LightOuter.png"]);
                t.x = 310,
                t.y = 140;
                var i = new Sprite(this.game.resources.bonus.textures["BonusWelcome.png"]);
                i.x = 330,
                i.y = 280;
                var e = new PIXI.Text(Message.GetMessage("ft13"),{
                    fontFamily: this.game.fontSystem,
                    fontSize: 30,
                    fontWeight: "700",
                    fill: ["#fcff00", "#ffba00"],
                    stroke: "#b21c63",
                    strokeThickness: 2
                });
                e.x = 380,
                e.y = 285,
                e.anchor.set(.5),
                this.txtFrom = new BitmapText("",{
                    font: "100px " + this.game.fontEmbedGold
                }),
                this.txtFrom.x = 277,
                this.txtFrom.y = 450,
                this.txtFrom.anchor.set(.5),
                this.txtTo = new BitmapText("",{
                    font: "100px " + this.game.fontEmbedGold
                }),
                this.txtTo.x = 480,
                this.txtTo.y = 450,
                this.txtTo.anchor.set(.5);
                var n = new Sprite(this.game.resources.bonus.textures["arrow.png"]);
                n.x = 347,
                n.y = 430;
                var s = new Sprite(this.game.resources.bonus.textures["ButtonConfirm-1.png"]);
                s.x = 254,
                s.y = 560,
                s.anchor.set(.5),
                s.interactive = !0,
                s.buttonMode = !0,
                s.t = "confirm",
                s.on("pointerover", this.game.btnOver.bind(s, this)).on("pointerout", this.game.btnOut.bind(s, this)).on("pointerdown", this.game.btnDown.bind(s, this)).on("pointerup", this.btnCancelUp.bind(s, this)),
                s.addChild(new PIXI.Text(Message.GetMessage("se61"),this.styleTextConfirm)),
                s.children[0].y = -5,
                s.children[0].anchor.set(.5);
                var o = new Sprite(this.game.resources.bonus.textures["ButtonConfirm-1.png"]);
                o.x = 512,
                o.y = 560,
                o.anchor.set(.5),
                o.interactive = !0,
                o.buttonMode = !0,
                o.t = "confirm",
                o.on("pointerover", this.game.btnOver.bind(o, this)).on("pointerout", this.game.btnOut.bind(o, this)).on("pointerdown", this.game.btnDown.bind(o, this)).on("pointerup", this.btnConfirmUp.bind(o, this)),
                o.addChild(new PIXI.Text(Message.GetMessage("tx41"),this.styleTextConfirm)),
                o.children[0].y = -5,
                o.children[0].anchor.set(.5),
                i.addChild(e, this.txtFrom, this.txtTo, n, s, o),
                this.changeContainer.addChild(t, i)
            }
            ,
            o.prototype.initchangeMoney = function() {
                this.changeMoneyContainer = new Container,
                this.bonusContainer.addChild(this.changeMoneyContainer),
                this.changeMoneyContainer.visible = !1;
                var t = new PIXI.Text(Message.GetMessage("ft5"),{
                    fontFamily: this.game.fontSystem,
                    fontSize: 40,
                    fontWeight: "700",
                    fill: ["#ffffff", "#ff6262"]
                });
                t.anchor.set(.5),
                t.x = 720,
                t.y = 230;
                var i = new PIXI.Text(Message.GetMessage("ft6"),{
                    fontFamily: this.game.fontSystem,
                    fontSize: 40,
                    fontWeight: "700",
                    fill: ["#fffb93", "#ffab3f"]
                });
                i.anchor.set(.5),
                i.x = 350,
                i.y = 380;
                var e = new PIXI.Text(Message.GetMessage("ft7"),{
                    fontFamily: this.game.fontSystem,
                    fontSize: 40,
                    fontWeight: "700",
                    fill: ["#fffb93", "#ffab3f"]
                });
                e.anchor.set(.5),
                e.x = 1100,
                e.y = 380;
                var n = new PIXI.Text(Message.GetMessage("ft2"),{
                    fontFamily: this.game.fontSystem,
                    fontSize: 40,
                    fontWeight: "700",
                    fill: ["#f2e9d3", "#9d8362"]
                });
                n.anchor.set(.5),
                n.x = 720,
                n.y = 380,
                this.txtMoneyLtt = new BitmapText("0",{
                    font: "80px " + this.game.fontEmbedGold
                }),
                this.txtMoneyLtt.anchor.set(.5),
                this.txtMoneyLtt.x = 350,
                this.txtMoneyLtt.y = 500,
                this.txtMoneyLnd = new BitmapText("0",{
                    font: "80px " + this.game.fontEmbedGold
                }),
                this.txtMoneyLnd.anchor.set(.5),
                this.txtMoneyLnd.x = 1100,
                this.txtMoneyLnd.y = 500,
                this.txtChangeMulti = new BitmapText("x" + this.multi,{
                    font: "80px " + this.game.fontEmbedSilver
                }),
                this.txtChangeMulti.anchor.set(.5),
                this.txtChangeMulti.x = 720,
                this.txtChangeMulti.y = 500,
                this.txtOpened = new PIXI.Text("",{
                    fontFamily: this.game.fontSystem,
                    fontSize: 40,
                    fontWeight: "700",
                    fill: ["#ffffff", "#ff6262"]
                }),
                this.txtOpened.anchor.set(.5),
                this.txtOpened.x = 720,
                this.txtOpened.y = 940;
                var s = new Sprite(this.game.resources.bonus.textures["LightBreak.png"]);
                s.anchor.set(.5),
                s.x = 720,
                s.y = 660,
                s.scale.x = 3;
                var o = new Sprite(this.game.resources.bonus.textures["ButtonConfirm-1.png"]);
                o.x = 490,
                o.y = 790,
                o.anchor.set(.5),
                o.interactive = !0,
                o.buttonMode = !0,
                o.t = "confirm",
                o.on("pointerover", this.game.btnOver.bind(o, this)).on("pointerout", this.game.btnOut.bind(o, this)).on("pointerdown", this.game.btnDown.bind(o, this)).on("pointerup", this.btnNotChangeUp.bind(o, this)),
                o.addChild(new PIXI.Text(Message.GetMessage("ft4"),this.styleTextConfirm)),
                o.children[0].y = -5,
                o.children[0].anchor.set(.5);
                var a = new Sprite(this.game.resources.bonus.textures["ButtonConfirm-1.png"]);
                a.x = 975,
                a.y = 790,
                a.anchor.set(.5),
                a.interactive = !0,
                a.buttonMode = !0,
                a.t = "confirm",
                a.on("pointerover", this.game.btnOver.bind(a, this)).on("pointerout", this.game.btnOut.bind(a, this)).on("pointerdown", this.game.btnDown.bind(a, this)).on("pointerup", this.btnChangeUp.bind(a, this)),
                a.addChild(new PIXI.Text(Message.GetMessage("ft3"),this.styleTextConfirm)),
                a.children[0].y = -5,
                a.children[0].anchor.set(.5),
                this.changeMoneyContainer.addChild(t, i, e, n, this.txtMoneyLtt, this.txtMoneyLnd, this.txtChangeMulti, this.txtOpened, s, o, a)
            }
            ,
            o.prototype.btnNotChangeUp = function(t) {
                t.hideTimer(),
                t.changeContainer.visible = !1,
                t.changeMoneyContainer.visible = !1,
                t.showPigContainer.visible = !0,
                t.displayShowPig()
            }
            ,
            o.prototype.btnChangeUp = function(t) {
                t.hideTimer(),
                t.changeMoneyContainer.children[9].interactive = !1,
                t.changeMoneyContainer.children[10].interactive = !1,
                t.game.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: n.Config.roomId,
                    CurrencyID: n.Config.currencyId,
                    itemID: 100,
                    isFinish: 1
                }).then(function(t) {
                    console.log("fishish avg", t)
                }).catch(function() {
                    console.log("er")
                })
            }
            ,
            o.prototype.getRandom = function() {
                for (var t = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], i = 0; i < t.length; i++)
                    if (t[i] === this.myPig) {
                        t.splice(i, 1);
                        break
                    }
                for (var e = 0; e < this.openedPig.length; e++)
                    for (var n = 0; n < t.length; n++)
                        if (this.openedPig[e] === t[n]) {
                            t.splice(n, 1);
                            break
                        }
                for (var s = [], o = 0; o < 5; ) {
                    var a = c.Util.RandomFrom(0, t.length - 1);
                    s.push(t[a]),
                    t.splice(a, 1),
                    o++
                }
                return s
            }
            ,
            o.prototype.btnCancelUp = function(t) {
                t.hideTimer(),
                t.changeContainer.visible = !1,
                t.showPigContainer.visible = !0,
                setTimeout(function() {
                    return t.callRandomPig()
                }, 1e3)
            }
            ,
            o.prototype.btnConfirmUp = function(t) {
                t.hideTimer(),
                t.changeContainer.visible = !1,
                t.showPigContainer.visible = !0;
                var i = t.myPig;
                t.myPig = t.cPig,
                t.txtOwnPig.text = t.myPig,
                t.isChanged = !0;
                for (var e = 0; e < t.rArr.length; e++)
                    if (t.rArr[e] === t.myPig) {
                        t.rArr.splice(e, 1);
                        break
                    }
                for (t.rArr.push(i),
                e = 0; e < t.changePig.length; e++)
                    t.changePig[e].inx === t.myPig ? (t.inxPig = e,
                    t.light.position.set(t.changePig[e].x, t.changePig[e].y),
                    t.changePig[e].children[1].children[0].text = Message.GetMessage("ft12")) : t.changePig[e].children[1].children[0].text = Message.GetMessage("ft3");
                for (t.rArr[0],
                e = 1; e < t.rArr.length; e++)
                    t.rArr[e];
                setTimeout(function() {
                    return t.callRandomPig()
                }, 1e3)
            }
            ,
            o.prototype.displayShowPig = function() {
                this.rArr = this.getRandom(),
                this.choosePigContainer.visible = !1,
                this.changeContainer.visible = !1,
                this.changeMoneyContainer.visible = !1,
                this.showPigContainer.visible = !0,
                this.boxContainer.visible = !0,
                this.showPigRandom(),
                this.showTimerPigRandom()
            }
            ,
            o.prototype.disableShowPig = function() {
                for (var t = 0; t < this.changePig.length; t++)
                    this.changePig[t].children[1].interactive = !1,
                    this.changePig[t].children[1].buttonMode = !1,
                    this.changePig[t].children[1].visible = !1
            }
            ,
            o.prototype.enableShowPig = function() {
                for (var t = 0; t < this.changePig.length; t++)
                    this.changePig[t].children[1].interactive = !0,
                    this.changePig[t].children[1].buttonMode = !0,
                    this.changePig[t].children[1].visible = !0
            }
            ,
            o.prototype.showPigRandom = function() {
                new Sprite(this.game.resources.bonus.textures["Pig.png"]);
                for (var t = 0, i = 0; i < 6; i++)
                    this.changePig[i].children[1].interactive = !0,
                    this.changePig[i].children[1].buttonMode = !0,
                    this.changePig[i].alpha = 1,
                    this.changePig[i].position.set(this.showPigPos[i].x, this.showPigPos[i].y),
                    this.changePig[i].children[1].visible = !0,
                    this.changePig[i].texture = this.game.resources.bonus.textures["Pig.png"],
                    this.changePig[i].inx = i === this.inxPig ? this.myPig : this.rArr[t],
                    this.changePig[i].children[1].inx = i === this.inxPig ? this.myPig : this.rArr[t],
                    this.changePig[i].children[0].children[0].text = i === this.inxPig ? this.myPig : this.rArr[t],
                    this.changePig[i].children[1].children[0].text = Message.GetMessage(i === this.inxPig ? "ft12" : "ft3"),
                    this.changePig[i].children[1].inx = i === this.inxPig ? this.myPig : this.rArr[t],
                    this.changePig[i].children[2].text = "0",
                    this.changePig[i].children[2].visible = !1,
                    i !== this.inxPig ? t++ : this.light.position.set(this.changePig[i].x, this.changePig[i].y)
            }
            ,
            o.prototype.showTimerPigRandom = function() {
                var t = this;
                this.timer = 10,
                this.timerContainer.visible = !0,
                this.arcOut.PI = 1.521 * Math.PI,
                this.downTimer(),
                this.tw = TweenLite.to(this.arcOut, this.timer, {
                    PI: 3.52 * Math.PI,
                    onUpdate: function() {
                        t.arcOut.clear(),
                        t.arcOut.lineStyle(12, 13434624, 1),
                        t.arcOut.arc(750, 95, 52, t.arcOut.PI, 1.52 * Math.PI)
                    },
                    onComplete: function() {
                        t.hideTimer(),
                        t.callRandomPig()
                    },
                    ease: Power0.easeNone
                })
            }
            ,
            o.prototype.callRandomPig = function() {
                this.changeContainer.visible = !1,
                this.showPigContainer.visible = !0;
                for (var t = "" + this.rArr[0], i = 1; i < this.rArr.length; i++)
                    t += "," + this.rArr[i];
                this.game.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: n.Config.roomId,
                    CurrencyID: n.Config.currencyId,
                    itemID: this.myPig,
                    itemRandom: t,
                    isFinish: this.openedRandom < 2 ? 0 : 1
                }).then(function(t) {
                    console.log("show random pig", t)
                }).catch(function() {
                    console.log("er")
                })
            }
            ,
            o.prototype.btnChangePigDown = function(t) {
                t.hideTimer(),
                t.disableShowPig(),
                this.inx !== t.myPig ? (t.changeContainer.visible = !0,
                t.showPigContainer.visible = !1,
                t.cPig = this.inx,
                t.txtFrom.text = t.myPig,
                t.txtTo.text = t.cPig,
                t.countTimerChange()) : t.game.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: n.Config.roomId,
                    CurrencyID: n.Config.currencyId,
                    itemID: t.myPig,
                    isFinish: 1
                }).then(function(t) {
                    console.log("show random pig", t)
                }).catch(function() {
                    console.log("er")
                })
            }
            ,
            o.prototype.countTimerChange = function() {
                var t = this;
                this.timer = 6,
                this.timerContainer.visible = !0,
                this.downTimer(),
                this.arcOut.PI = 1.521 * Math.PI,
                this.tw = TweenLite.to(this.arcOut, this.timer, {
                    PI: 3.52 * Math.PI,
                    onUpdate: function() {
                        t.arcOut.clear(),
                        t.arcOut.lineStyle(12, 13434624, 1),
                        t.arcOut.arc(750, 95, 52, t.arcOut.PI, 1.52 * Math.PI)
                    },
                    onComplete: function() {
                        t.hideTimer(),
                        t.callRandomPig()
                    },
                    ease: Power0.easeNone
                })
            }
            ,
            o.prototype.displayMyPig = function() {
                var t = this
                  , i = new Sprite(this.game.resources.bonus.textures["pigOpenLight.png"]);
                i.anchor.set(.5),
                i.position.set(this.changePig[this.inxPig].x, this.changePig[this.inxPig].y),
                i.blendMode = PIXI.BLEND_MODES.ADD,
                i.alpha = 1,
                this.showPigContainer.addChild(i),
                TweenLite.to(i.scale, .25, {
                    data: "fortune-bonus",
                    x: 1.7,
                    y: 1.7,
                    ease: Power1.easeOut
                });
                var e = new TimelineLite;
                e.add(TweenLite.to(i, .2, {
                    data: "fortune-bonus",
                    alpha: 1
                })),
                e.add(TweenLite.to(i, .25, {
                    data: "fortune-bonus",
                    alpha: 0
                })),
                this.changePig[this.inxPig].texture = this.game.resources.bonus.textures["Gold.png"],
                this.changePig[this.inxPig].y += 10,
                this.changePig[this.inxPig].children[1].visible = !1,
                this.changePig[this.inxPig].children[2].visible = !0,
                r.contents.countNumber(this.changePig[this.inxPig].children[2], !0, !1, 0, this.data.PrizeValue / this.multi, 0, 1),
                setTimeout(function() {
                    return t.finishBonus()
                }, 2e3)
            }
            ,
            o.prototype.displayRandomPig = function() {
                this.openedPig = this.openedPig.concat($.map(this.data.ItemRandom.split(","), function(t) {
                    return parseInt(t, 10)
                })),
                this.showEachRandomPig()
            }
            ,
            o.prototype.showEachRandomPig = function() {
                var t = this;
                if (0 < this.rArr.length) {
                    for (var i = 0; i < this.changePig.length; i++)
                        if (this.changePig[i].inx === this.rArr[0]) {
                            var e = new Sprite(this.game.resources.bonus.textures["pigOpenLight.png"]);
                            e.anchor.set(.5),
                            e.position.set(this.changePig[i].x, this.changePig[i].y),
                            e.blendMode = PIXI.BLEND_MODES.ADD,
                            e.alpha = 1,
                            this.showPigContainer.addChild(e),
                            TweenLite.to(e.scale, .25, {
                                data: "fortune-bonus",
                                x: 1.7,
                                y: 1.7,
                                ease: Power1.easeOut
                            });
                            var n = new TimelineLite;
                            n.add(TweenLite.to(e, .2, {
                                data: "fortune-bonus",
                                alpha: 1
                            })),
                            n.add(TweenLite.to(e, .25, {
                                data: "fortune-bonus",
                                alpha: 0
                            })),
                            this.changePig[i].texture = this.game.resources.bonus.textures["Gold.png"],
                            this.changePig[i].y += 10,
                            this.changePig[i].children[1].visible = !1,
                            this.changePig[i].children[2].visible = !0;
                            for (var s = 0, o = 0; o < this.data.Items.length; o++)
                                if (this.changePig[i].inx === this.data.Items[o].ItemID) {
                                    s = this.data.Items[o].PrizeValue;
                                    break
                                }
                            for (var a = 0; a < this.money.length; a++)
                                if (this.money[a].value == s && 1 === this.money[a].alpha) {
                                    this.money[a].alpha = .5,
                                    this.money[a].font.name = this.game.fontEmbedSilver;
                                    break
                                }
                            r.contents.countNumber(this.changePig[i].children[2], !0, !1, 0, s / this.multi, 0, 1);
                            break
                        }
                    this.rArr.splice(0, 1)
                }
                this.rArr.length <= 0 ? (this.openedRandom++,
                0 < this.data.PrizeValue ? setTimeout(function() {
                    return t.displayMyPig()
                }, 2e3) : 0 < this.data.AverageValue ? setTimeout(function() {
                    return t.displayAvg()
                }, 2e3) : setTimeout(function() {
                    return t.displayRandomPig()
                }, 2e3)) : setTimeout(function() {
                    return t.showEachRandomPig()
                }, 1e3)
            }
            ,
            o.prototype.displayAvg = function() {
                this.choosePigContainer.visible = !1,
                this.boxContainer.visible = !1,
                this.showPigContainer.visible = !1,
                this.changeContainer.visible = !1,
                this.changeMoneyContainer.visible = !0,
                this.txtMoneyLtt.text = c.Util.ParseMoney(Math.floor(this.data.AverageValue / this.multi)),
                this.txtMoneyLnd.text = c.Util.ParseMoney(this.data.AverageValue),
                this.txtOpened.text = Message.GetMessage("ft9").replace("{0}", this.openedPig.length),
                this.countTimerAvg()
            }
            ,
            o.prototype.countTimerAvg = function() {
                var t = this;
                this.timer = 6,
                this.timerContainer.visible = !0,
                this.arcOut.PI = 1.521 * Math.PI,
                this.downTimer(),
                this.tw = TweenLite.to(this.arcOut, this.timer, {
                    PI: 3.52 * Math.PI,
                    onUpdate: function() {
                        t.arcOut.clear(),
                        t.arcOut.lineStyle(12, 13434624, 1),
                        t.arcOut.arc(750, 95, 52, t.arcOut.PI, 1.52 * Math.PI)
                    },
                    onComplete: function() {
                        t.hideTimer(),
                        t.displayShowPig()
                    },
                    ease: Power0.easeNone
                })
            }
            ,
            o.prototype.resultBonus = function(t) {
                console.log("data", t),
                this.game.currentPlayer = t,
                this.data = t.BonusGame,
                0 === this.game.currentPlayer.BonusGame.ItemID && 0 < this.game.currentPlayer.BonusGame.PrizeValue ? this.finishBonus() : 0 === this.currentStep && 1 === this.data.Step && 0 < this.data.ItemID ? (this.myPig = this.data.ItemID,
                this.txtOwnPig.text = this.data.ItemID,
                this.displayShowPig()) : 0 < this.data.PrizeValue && "" === this.data.ItemRandom ? this.displayMyPig() : this.displayRandomPig()
            }
            ,
            o.prototype.finishBonus = function() {
                var t = this;
                this.isFinish = !0,
                this.hideTimer(),
                this.choosePigContainer.visible = !1,
                this.boxContainer.visible = !1,
                this.showPigContainer.visible = !1,
                this.changeContainer.visible = !1,
                this.changeMoneyContainer.visible = !1;
                var i = new PIXI.Text(Message.GetMessage("ft11"),{
                    fontFamily: this.game.fontSystem,
                    fontSize: 40,
                    fontWeight: "700",
                    fill: ["#ffffff", "#ff6262"]
                });
                i.anchor.set(.5),
                i.position.set(720, 260);
                var e = new BitmapText(c.Util.ParseMoney(Math.floor(this.game.currentPlayer.BonusGame.PrizeValue / this.multi)),{
                    font: "120px " + this.game.fontEmbedGold
                });
                e.anchor.set(.5),
                e.position.set(720, 400);
                var n = new BitmapText("x" + this.multi,{
                    font: "100px " + this.game.fontEmbedSilver
                });
                n.anchor.set(.5),
                n.x = 720,
                n.y = 539;
                var s = new BitmapText(c.Util.ParseMoney(this.game.currentPlayer.BonusGame.PrizeValue),{
                    font: "120px " + this.game.fontEmbedGold
                });
                s.anchor.set(.5),
                s.x = 720,
                s.y = 750;
                var o = new Sprite(this.game.resources.bonus.textures["LightBreak.png"]);
                o.anchor.set(.5),
                o.x = 720,
                o.y = 633,
                o.scale.x = 3;
                var a = new Sprite(this.game.resources.bonus.textures["ButtonConfirm-1.png"]);
                a.x = 720,
                a.y = 940,
                a.anchor.set(.5),
                a.interactive = !0,
                a.buttonMode = !0,
                a.t = "confirm",
                a.on("pointerover", this.game.btnOver.bind(a, this)).on("pointerout", this.game.btnOut.bind(a, this)).on("pointerdown", this.game.btnDown.bind(a, this)).on("pointerup", this.btnReceiveUp.bind(a, this)),
                a.addChild(new PIXI.Text(Message.GetMessage("ft10"),this.styleTextConfirm)),
                a.children[0].y = -5,
                a.children[0].anchor.set(.5),
                this.bonusContainer.addChild(i, e, n, s, o, a),
                this.timerDelete = setTimeout(function() {
                    return t.deleteBonus()
                }, 4e3)
            }
            ,
            o.prototype.btnReceiveUp = function(t) {
                t.deleteBonus()
            }
            ,
            o.prototype.deleteBonus = function() {
                for (var t = this, i = TweenMax.getAllTweens(), e = 0; e < i.length; e++)
                    "fortune-bonus" === i[e].data && i[e].kill();
                try {
                    this.tw.kill()
                } catch (t) {}
                this.bonusContainer.destroy({
                    children: !0
                }),
                clearTimeout(this.timerDelete),
                r.contents.clearTimer(),
                this.game.showMain(),
                n.Config.isBonus = !1,
                r.contents.updateLastWon(this.game, this.game.currentPlayer.BonusGame.PrizeValue),
                r.contents.updateBalance(this.game, this.game.currentPlayer.Account.GoldBalance);
                try {
                    this.game.bgBonusSound.stop()
                } catch (t) {}
                if (n.Config.music)
                    try {
                        this.game.bgSound.play()
                    } catch (t) {}
                n.Config.timeBonusOrFree = setTimeout(function() {
                    t.game.jackpotOrBonus(t.game)
                }, 1e3)
            }
            ,
            o);
            function o(t) {
                var i = this;
                this.money = [],
                this.moneyPos = [{
                    x: -90,
                    y: 240
                }, {
                    x: -90,
                    y: 310
                }, {
                    x: -90,
                    y: 380
                }, {
                    x: -90,
                    y: 450
                }, {
                    x: -90,
                    y: 520
                }, {
                    x: -90,
                    y: 590
                }, {
                    x: -90,
                    y: 660
                }, {
                    x: -90,
                    y: 730
                }, {
                    x: -90,
                    y: 800
                }, {
                    x: -90,
                    y: 870
                }, {
                    x: -90,
                    y: 940
                }, {
                    x: -90,
                    y: 1010
                }, {
                    x: 1585,
                    y: 240
                }, {
                    x: 1585,
                    y: 310
                }, {
                    x: 1585,
                    y: 380
                }, {
                    x: 1585,
                    y: 450
                }, {
                    x: 1585,
                    y: 520
                }, {
                    x: 1585,
                    y: 590
                }, {
                    x: 1585,
                    y: 660
                }, {
                    x: 1585,
                    y: 730
                }, {
                    x: 1585,
                    y: 800
                }, {
                    x: 1585,
                    y: 870
                }, {
                    x: 1585,
                    y: 940
                }, {
                    x: 1585,
                    y: 1010
                }],
                this.pigChoosePos = [{
                    x: 120,
                    y: 220
                }, {
                    x: 335,
                    y: 220
                }, {
                    x: 550,
                    y: 220
                }, {
                    x: 765,
                    y: 220
                }, {
                    x: 980,
                    y: 220
                }, {
                    x: 1195,
                    y: 220
                }, {
                    x: 120,
                    y: 410
                }, {
                    x: 335,
                    y: 410
                }, {
                    x: 550,
                    y: 410
                }, {
                    x: 765,
                    y: 410
                }, {
                    x: 980,
                    y: 410
                }, {
                    x: 1195,
                    y: 410
                }, {
                    x: 120,
                    y: 600
                }, {
                    x: 335,
                    y: 600
                }, {
                    x: 550,
                    y: 600
                }, {
                    x: 765,
                    y: 600
                }, {
                    x: 980,
                    y: 600
                }, {
                    x: 1195,
                    y: 600
                }, {
                    x: 120,
                    y: 790
                }, {
                    x: 335,
                    y: 790
                }, {
                    x: 550,
                    y: 790
                }, {
                    x: 765,
                    y: 790
                }, {
                    x: 980,
                    y: 790
                }, {
                    x: 1195,
                    y: 790
                }],
                this.pigChoose = [],
                this.multi = 0,
                this.currentStep = 0,
                this.myPig = -1,
                this.showPigPos = [{
                    x: 460,
                    y: 380
                }, {
                    x: 760,
                    y: 380
                }, {
                    x: 1060,
                    y: 380
                }, {
                    x: 460,
                    y: 710
                }, {
                    x: 760,
                    y: 710
                }, {
                    x: 1060,
                    y: 710
                }],
                this.changePig = [],
                this.openedPig = [],
                this.numbO = 0,
                this.isChanged = !1,
                this.rArr = [],
                this.cPig = 0,
                this.inxPig = 0,
                this.openedRandom = 0,
                this.isFinish = !1,
                this.game = t,
                this.currentStep = 0,
                this.data = t.currentPlayer.BonusGame,
                this.money = [],
                this.isFinish = !1,
                this.multi = 3 === t.multiBonus ? 1 : 4 === t.multiBonus ? 3 : 5,
                this.styleTextBox = new PIXI.TextStyle({
                    fontFamily: t.fontSystem,
                    fontSize: 22,
                    fontWeight: "700",
                    fill: ["#ffffff", "#ffb98a"]
                }),
                this.styleTextMesh = new PIXI.TextStyle({
                    fontFamily: t.fontSystem,
                    fontSize: 18,
                    fontWeight: "500",
                    fill: ["#ffffff", "#ffb98a"]
                }),
                this.styleTextConfirm = new PIXI.TextStyle({
                    fontFamily: t.fontSystem,
                    fontSize: 30,
                    fontWeight: "700",
                    fill: ["#ffffff", "#fff5cf"],
                    stroke: "#b21c63",
                    strokeThickness: 2
                }),
                this.init(),
                this.initTimer(),
                this.initChoosePig(),
                this.initShowPig(),
                this.initChangePig(),
                this.initchangeMoney(),
                setTimeout(function() {
                    return i.countChoosePig()
                }, 1e3)
            }
            i.bonus = s
        },
        65: function(t, i) {
            t.exports = o
        },
        66: function(t, i, e) {
            "use strict";
            Object.defineProperty(i, "__esModule", {
                value: !0
            }),
            i.silent = void 0;
            var a = e(0)
              , r = e(8)
              , n = (s.prototype.getAutoSpin = function() {
                var t = sessionStorage.getItem("Auto-" + this.game.storage);
                return !!(t && (this.autoSpin = parseInt(t.split(";")[1]),
                -1 === this.autoSpin || 0 < this.autoSpin)) && (r.Config.roomId = parseInt(t.split(";")[0]),
                !0)
            }
            ,
            s.prototype.setAutoSpin = function() {
                0 < this.autoSpin ? (this.autoSpin--,
                this.setSession(),
                0 === this.autoSpin && (this.game.isAuto = !1,
                this.removeSession())) : 0 === this.autoSpin && (this.game.isAuto = !1,
                this.removeSession(),
                $("#rolling-" + this.game.storage).removeClass("active"));
                var t = 2 === r.Config.roomId ? 1 : 5 === r.Config.roomId ? 2 : 8 === r.Config.roomId ? 3 : 0;
                $("#list-jp-icon-" + r.Config.gameId + "-room-" + t + "-playing").length && $("#list-jp-icon-" + r.Config.gameId + "-room-" + t + "-playing").html(0 < this.autoSpin ? a.Util.ParseMoney(this.autoSpin) : ""),
                $("#list-jp-icon-" + r.Config.gameId + "-playing").length && $("#list-jp-icon-" + r.Config.gameId + "-playing").html(0 < this.autoSpin ? a.Util.ParseMoney(this.autoSpin) : "");
                for (var i = 0; i < 3; i++)
                    $("#list-jp-icon-" + r.Config.gameId + "-room-" + i).removeClass("button-playing");
                $("#list-jp-icon-" + r.Config.gameId + "-room-" + t).hasClass("button-playing") || $("#list-jp-icon-" + r.Config.gameId + "-room-" + t).removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + r.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-play").addClass("button-playing")
            }
            ,
            s.prototype.setSession = function() {
                sessionStorage.setItem("Auto-" + this.game.storage, r.Config.roomId + ";" + this.autoSpin + ";" + this.game.isAuto)
            }
            ,
            s.prototype.removeSession = function() {
                sessionStorage.removeItem("Auto-" + this.game.storage)
            }
            ,
            s.prototype.joinRoom = function(t) {
                this.game.accountId = t.AccountID,
                this.game.currentPlayer = t,
                this.game.balance = t.Account.GoldBalance,
                r.Config.roomId = t.RoomID,
                r.Config.totalLines = t.TotalLine,
                r.Config.betValue = t.BetValue,
                r.Config.inRoom = !0,
                r.Config.moneyType = t.moneyType,
                this.checkGame()
            }
            ,
            s.prototype.checkGame = function() {
                var t = this;
                setTimeout(function() {
                    return t.initSpin(t)
                }, 1500)
            }
            ,
            s.prototype.initSpin = function(t) {
                var i = t;
                r.Config.isSpin || i.game.isAuto && i.game.isSilent && (r.Config.isSpin = !0,
                $("#mn-lobby-rolling-fortune .rolling-win").remove(),
                r.Config.isBonus = r.Config.isJackpot = !1,
                i.game.hubs.connection.invoke("Spin", {
                    MerchantID: 0,
                    RoomID: r.Config.roomId,
                    CurrencyID: r.Config.currencyId
                }).then(function(t) {
                    t.c < 0 && (r.Config.isSpin = !1,
                    setTimeout(function() {
                        return i.initSpin(i)
                    }, 4e3))
                }).catch(function() {
                    r.Config.isSpin = !1,
                    setTimeout(function() {
                        return i.initSpin(i)
                    }, 4e3)
                }))
            }
            ,
            s.prototype.startSpin = function(t) {
                this.game.currentPlayer = t,
                r.Config.slotData = [],
                r.Config.slotData = t.SpinData.SlotsData.split(","),
                a.Util.ClearTimeOut(r.Config.timeSpin),
                this.game.currentPlayer.SpinData.Points >= r.Config.totalPoint && (r.Config.isJackpot = !0),
                null !== t.SpinData.BonusGameData && 0 < t.SpinData.BonusGameData.length && (r.Config.isBonus = !0),
                this.setAutoSpin(),
                this.showWin()
            }
            ,
            s.prototype.showMoney = function(t, i) {
                var e, n, s, o = this;
                try {
                    $("#mn-lobby-rolling-fortune").length && ($("#mn-lobby-rolling-fortune").append('<span class="rolling-win">+' + a.Util.ParseMoney(t) + "</span>"),
                    TweenMax.to($("#mn-lobby-rolling-fortune .rolling-win"), 2, {
                        css: {
                            opacity: "0",
                            top: "0px"
                        }
                    })),
                    $("#rolling-" + this.game.storage).hasClass("active") || $("#rolling-" + this.game.storage).addClass("active"),
                    $("#popupJackpot").hasClass("show") && (e = 2 === r.Config.roomId ? 1 : 8 === r.Config.roomId ? 3 : 5 === r.Config.roomId ? 2 : -1,
                    $("#list-jp-icon-" + r.Config.gameId + "-room-" + e).hasClass("button-playing") || $("#list-jp-icon-" + r.Config.gameId + "-room-" + e).removeClass("button-play").addClass("button-playing"),
                    $("#list-jp-icon-" + r.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                    $("#ljp-" + r.Config.gameId + "-room-" + e).parent().hasClass("playing") || $("#ljp-" + r.Config.gameId + "-room-" + e).parent().addClass("playing"),
                    (n = $("#list-jp-icon-" + r.Config.gameId + "-room-" + e)).length ? (n.parent().append('<span class="win active">+' + a.Util.ParseMoney(t) + "</span>"),
                    TweenMax.to(n.parent().find("span.win"), 1, {
                        css: {
                            opacity: "0",
                            top: "0px"
                        }
                    })) : ((s = $("#list-jp-icon-" + r.Config.gameId + "-play")).append('<span class="win active">+' + a.Util.ParseMoney(t) + "</span>"),
                    TweenMax.to(s.find("span.win"), 1, {
                        css: {
                            opacity: "0",
                            top: "0px",
                            onComplete: function() {}
                        }
                    }))),
                    setTimeout(function() {
                        i(o)
                    }, 2100)
                } catch (t) {
                    i(o)
                }
            }
            ,
            s.prototype.updateBalance = function(t) {
                0 < $(".tien1 .spanMoney").length && $(".tien1 .spanMoney").text(a.Util.ParseMoney(t)),
                0 < $("#divHeader .money-1 .text").length && $("#divHeader .money-1 .text").text(a.Util.ParseMoney(t))
            }
            ,
            s.prototype.increaseBalance = function(t) {
                var i;
                0 != t && (0 < $("#divHeader .money-1 .text").length ? (i = a.Util.unParseMoney($("#divHeader .money-1 .text").text()),
                i += t,
                $("#divHeader .money-1 .text").text(a.Util.ParseMoney(i))) : 0 < $(".tien1 .spanMoney").length && (i = a.Util.unParseMoney($(".tien1 .spanMoney").text()),
                i += t,
                $(".tien1 .spanMoney").text(a.Util.ParseMoney(i))))
            }
            ,
            s.prototype.showWin = function() {
                this.updateBalance(this.game.currentPlayer.Account.GoldBalance),
                0 < this.game.currentPlayer.SpinData.PayLinePrizeValue ? this.showMoney(this.game.currentPlayer.SpinData.PayLinePrizeValue, this.bonusOrJackpot) : this.bonusOrJackpot(this)
            }
            ,
            s.prototype.bonusOrJackpot = function(t) {
                r.Config.isJackpot && t.game.currentPlayer.SpinData.Points >= r.Config.totalPoint ? t.callJackpot() : r.Config.isBonus ? t.callBonus() : t.checkAutoSpin(t)
            }
            ,
            s.prototype.callJackpot = function() {
                var t = this;
                this.game.hubs.connection.invoke("PlayAccumulate", {
                    RoomID: r.Config.roomId,
                    CurrencyID: r.Config.currencyId
                }).then(function(t) {}).catch(function() {
                    t.callJackpot()
                })
            }
            ,
            s.prototype.finishJackpot = function(t) {
                r.Config.isJackpot = !1,
                this.increaseBalance(t.PrizeValue),
                1 === t.PrizeID && (this.autoSpin = 0),
                0 < t.PrizeValue && this.showMoney(t.PrizeValue, this.bonusOrJackpot)
            }
            ,
            s.prototype.callBonus = function() {
                var t = this;
                t.game.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: r.Config.roomId,
                    CurrencyID: r.Config.currencyId,
                    itemID: 0,
                    isFinish: 1
                }).then(function() {}).catch(function() {
                    t.callBonus()
                })
            }
            ,
            s.prototype.finishBonus = function(t) {
                r.Config.isBonus = !1,
                this.game.currentPlayer = t;
                var i = this.game.currentPlayer.BonusGame.PrizeValue;
                this.increaseBalance(i),
                this.showMoney(i, this.checkAutoSpin)
            }
            ,
            s.prototype.checkAutoSpin = function(t) {
                var i;
                r.Config.isSpin = !1,
                -1 === t.autoSpin || 0 < t.autoSpin ? setTimeout(function() {
                    return t.initSpin(t)
                }, 4500) : (this.game.isAuto = !1,
                this.removeSession(),
                $("#rolling-" + t.game.storage).removeClass("active"),
                i = 2 === r.Config.roomId ? 1 : 8 === r.Config.roomId ? 3 : 5 === r.Config.roomId ? 2 : -1,
                $("#list-jp-icon-" + r.Config.gameId + "-room-" + i).removeClass("button-playing").addClass("button-play"),
                $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                $("#ljp-" + r.Config.gameId + "-room-" + i).parent().removeClass("playing"))
            }
            ,
            s);
            function s(t) {
                this.autoSpin = -1,
                this.game = t,
                this.getAutoSpin() && this.game.initHubs()
            }
            i.silent = n
        },
        8: function(t, i, e) {
            "use strict";
            Object.defineProperty(i, "__esModule", {
                value: !0
            }),
            i.Config = void 0;
            i.Config = {
                hubUrl: null,
                apiUrl: null,
                api: null,
                lang: null,
                roomId: 1,
                countJp: null,
                countJpTotal: null,
                countMoneyJw: null,
                countJpInJackpot: null,
                countJpTotalInJackpot: null,
                countMoney: null,
                arrRoom: [1e3, 2e3, 5e3, 1e4, 2e4, 5e4, 1e5, 2e5],
                messages: null,
                ready: !1,
                music: !0,
                sound: !0,
                timeJackpot: null,
                timeSpin: null,
                timePop: null,
                timeBonusOrFree: null,
                timeOutEachLine: null,
                timeIntEachLine: null,
                timeShowWin: null,
                timeBonus: null,
                timeCheck: null,
                timeAcc: null,
                timerEvent: null,
                currencyId: 1,
                isTry: !1,
                isTicket: !1,
                isAutoSpin: !1,
                isSpin: !1,
                isBonus: !1,
                isLogin: !1,
                inRoom: !1,
                gameId: 213,
                autoSpinCount: -1,
                numbShowEachLine: 0,
                numberDown: 0,
                isBigWin: !1,
                isJackpot: !1,
                payLines: [],
                lineItemsArr: [],
                totalLines: 0,
                betValue: 0,
                moneyType: 0,
                slotData: [],
                linesWin: [],
                itemsWinAr: [],
                itemsWin: [],
                autoSpinMode: 0,
                useBlur: !1,
                idx: 3,
                autoSpinNumber: [10, 50, 100, 1e3, 5e3],
                isQuick: !1,
                totalBetConfig: {
                    BigWin: 10,
                    SuperWin: 50,
                    MegaWin: 100
                },
                totalPoint: 1e4
            }
        }
    },
    a.c = l,
    a.d = function(t, i, e) {
        a.o(t, i) || Object.defineProperty(t, i, {
            enumerable: !0,
            get: e
        })
    }
    ,
    a.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    a.t = function(i, t) {
        if (1 & t && (i = a(i)),
        8 & t)
            return i;
        if (4 & t && "object" == typeof i && i && i.__esModule)
            return i;
        var e = Object.create(null);
        if (a.r(e),
        Object.defineProperty(e, "default", {
            enumerable: !0,
            value: i
        }),
        2 & t && "string" != typeof i)
            for (var n in i)
                a.d(e, n, function(t) {
                    return i[t]
                }
                .bind(null, n));
        return e
    }
    ,
    a.n = function(t) {
        var i = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return a.d(i, "a", i),
        i
    }
    ,
    a.o = function(t, i) {
        return Object.prototype.hasOwnProperty.call(t, i)
    }
    ,
    a.p = "/",
    a(a.s = 60);
    function a(t) {
        if (l[t])
            return l[t].exports;
        var i = l[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return r[t].call(i.exports, i, i.exports, a),
        i.l = !0,
        i.exports
    }
    var r, l
});

!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : "function" == typeof define && define.amd ? define("oracle", ["libs", "pixi-sound", "signalR", "WebFont"], e) : "object" == typeof exports ? exports.oracle = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : t.oracle = e(t.libs, t["pixi-sound"], t.signalR, t.WebFont)
}(window, function(n, i, o, s) {
    return l = {},
    a.m = r = [function(t, e) {
        t.exports = n
    }
    , function(t, e) {
        t.exports = i
    }
    , function(t, e) {
        t.exports = o
    }
    , function(t, e) {
        t.exports = s
    }
    , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.Config = void 0;
        e.Config = {
            hubUrl: null,
            apiUrl: null,
            api: null,
            lang: null,
            roomId: 1,
            countJp: null,
            countMoneyJw: null,
            countMoney: null,
            isMobile: !1,
            isOrientation: !1,
            isLobby: !0,
            arrRoom: [100, 1e3, 1e4],
            messages: null,
            ready: !1,
            music: !0,
            sound: !0,
            timeJackpot: null,
            timeSpin: null,
            timePop: null,
            timeBonusOrFree: null,
            timeOutEachLine: null,
            timeIntEachLine: null,
            timeShowWin: null,
            timeBonus: null,
            timeCheck: null,
            timeAcc: null,
            timerEvent: null,
            currencyId: 1,
            isTry: !1,
            freeSpinCount: 0,
            isFreeSpin: !1,
            totalFreePrize: 0,
            isTicket: !1,
            isAutoSpin: !1,
            isSpin: !1,
            isBonus: !1,
            isWinFree: !1,
            isX2: !1,
            isLogin: !1,
            inRoom: !1,
            isFinishX2: !1,
            gameId: 203,
            autoSpinCount: 100,
            numbShowEachLine: 0,
            numberDown: 0,
            isBigWin: !1,
            isJackpot: !1,
            isSuperWin: !1,
            isMegaWin: !1,
            payLines: [],
            lineItemsArr: [],
            totalLines: 0,
            betValue: 0,
            moneyType: 0,
            totalFreeSpin: 0,
            slotData: [],
            linesWin: [],
            itemsWinAr: [],
            itemsWin: [],
            totalBetConfig: {
                BigWin: 100,
                SuperWin: 500,
                MegaWin: 1e3
            },
            autoSpinMode: 0,
            useBlur: !1,
            startFreeSpin: 0,
            idx: 3,
            autoSpinNumber: [10, 25, 50, 100, 200, 500, 1e3, 2e3, 5e3],
            isQuick: !1
        }
    }
    , , , , function(t, i, e) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        }),
        i.contents = void 0;
        var u = e(5)
          , c = e(0)
          , n = e(21);
        i.contents = {
            page: 0,
            pageSize: 10,
            UpdateBalance: function(t, e) {
                0 <= e && (t.txtBalance.text = c.Util.ParseMoney(e, void 0))
            },
            GetEvent: function(e) {
                c.Util.ClearTimeOut(e.timerEvent),
                $.ajax({
                    type: "GET",
                    url: u.Config.api + "api/game/GetSlotEvent?CurrencyID=" + u.Config.currencyId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        t && t.d && e && e.updateEvent(t.d)
                    },
                    error: function() {}
                })
            },
            GetJackpot: function(n) {
                c.Util.ClearTimeOut(u.Config.timeJackpot),
                $.ajax({
                    type: "GET",
                    url: u.Config.api + "api/game/JackpotGetAll?CurrencyID=" + u.Config.currencyId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        if (t && t.d && n)
                            for (var e = 0; e < t.d.length; e++)
                                if (t.d[e].roomID === u.Config.roomId) {
                                    i.contents.CountJackPot(n.txtJackpot, !0, !1, t.d[e].jackpotFund, 1 === u.Config.roomId ? 3 : 5);
                                    break
                                }
                        u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                            i.contents.GetJackpot(n)
                        }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                    },
                    error: function() {
                        u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                            i.contents.GetJackpot(n)
                        }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                    }
                })
            },
            GetTicket: function(e) {
                $.ajax({
                    type: "GET",
                    url: u.Config.apiUrl + "GetAccountTicket/?currencyID=" + u.Config.currencyId + "&GameID=" + u.Config.gameId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    headers: {
                        Authorization: "Bearer " + e.token
                    },
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        0 < t.d.length ? i.contents.UpdateTicket(e, t.d) : (u.Config.isTicket = !1,
                        e.txtFreeTicket.visible = !1)
                    }
                })
            },
            CountJackPot: function(t, e, n, i, o) {
                null === u.Config.countJp ? (u.Config.countJp = new c.Util.CountUp(t,e,n,0,i,0,o,void 0),
                u.Config.countJp.start()) : u.Config.countJp.update(i)
            },
            ChangeResources: function(t) {
                var e;
                u.Config.ready && ((e = t).lblLines.text = Message.GetMessage("sl7"),
                e.lblBetValue.text = Message.GetMessage("sl6"),
                e.lblTotalBet.text = Message.GetMessage("sl4"),
                e.lblJustWon.text = Message.GetMessage("sl5"),
                e.txtCongrats.text = Message.GetMessage("sl21"),
                e.txtNotify.text = Message.GetMessage("sl27"),
                e.btnAuto.getChildAt(0).text = Message.GetMessage("sl2"),
                e.txtMode.text = u.Config.isTry ? Message.GetMessage("sl8") : Message.GetMessage("sl9"),
                e.payTable.getChildAt(0).text = Message.GetMessage("sl18"),
                e.boxPopupWin.getChildAt(2).text = Message.GetMessage("sl52"),
                e.btnSpin.getChildAt(0).texture = null != TextureCache["text-spin-" + u.Config.lang + ".png"] ? TextureCache["text-spin-" + u.Config.lang + ".png"] : TextureCache["text-spin-en.png"],
                e.btnStopAuto.getChildAt(0).texture = null != TextureCache["text-stop-" + u.Config.lang + ".png"] ? TextureCache["text-stop-" + u.Config.lang + ".png"] : TextureCache["text-stop-en.png"],
                e.txtLinesChoose.text = Message.GetMessage("sl10"))
            },
            CountNumber: function(t, e, n, i, o, s, a, r) {
                var l = new c.Util.CountUp(t,e,n,i,o,0,a,void 0);
                r ? l.start(r) : l.start()
            },
            CountMoney: function(t, e, n, i, o, s, a, r, l) {
                l ? u.Config.countMoneyJw = new c.Util.CountUp(t,e,n,i,o,0,a,void 0) : u.Config.countMoney = new c.Util.CountUp(t,e,n,i,o,0,a,void 0),
                r ? l ? u.Config.countMoneyJw.start(r) : u.Config.countMoney.start(r) : l ? u.Config.countMoneyJw.start() : u.Config.countMoney.start()
            },
            UpdateFreeSpin: function(t) {
                var e = t;
                u.Config.freeSpinCount--,
                0 < u.Config.freeSpinCount ? (e.txtFreeTurn.text = Message.GetMessage("sl20") + ": " + u.Config.freeSpinCount,
                e.boxFree.visible = !0,
                e.txtFreeTurn.visible = !0) : e.boxFree.visible = e.txtFreeTurn.visible = !1
            },
            UpdateTotalPrizeFreeSpin: function(t) {
                var e = t;
                u.Config.isFreeSpin ? (u.Config.totalFreePrize += t.currentPlayer.SpinData.PayLinePrizeValue,
                e.txtJustWon.text = c.Util.ParseMoney(u.Config.totalFreePrize, void 0)) : u.Config.totalFreePrize = 0
            },
            UpdateLastWon: function(t, e) {
                t.txtJustWon.text = c.Util.ParseMoney(e, void 0)
            },
            UpdatePrizeValue: function(t, e) {
                t.txtBetValue.text = c.Util.ParseMoney(e, void 0)
            },
            UpdateTotalBet: function(t, e) {
                t.txtTotalBet.text = c.Util.ParseMoney(e, void 0)
            },
            UpdateLines: function(t, e) {
                0 === e && (e = 1),
                t.txtLines.text = e,
                u.Config.totalLines = e
            },
            UpdateTicket: function(t, e) {
                var n = t;
                e[u.Config.roomId - 1] && 0 < e[u.Config.roomId - 1].balance ? (n.txtFreeTicket.text = "+" + e[u.Config.roomId - 1].balance + " Free",
                n.txtFreeTicket.visible = !0,
                u.Config.isTicket = !0,
                i.contents.UpdateLines(n, 25),
                i.contents.UpdateTotalBet(n, 2500)) : (u.Config.isTicket = !1,
                n.txtFreeTicket.visible = !1)
            },
            UpdateControl: function(t) {
                i.contents.UpdateLines(t, t.line ? t.line : t.currentPlayer.SlotInfo.LastLines),
                i.contents.UpdatePrizeValue(t, t.currentPlayer.BetValue),
                i.contents.UpdateTotalBet(t, t.currentPlayer.BetValue * u.Config.totalLines),
                i.contents.UpdateLastWon(t, t.currentPlayer.SlotInfo.LastPrizeValue),
                n.accu.UpdateAccumulation(t)
            },
            DisableButton: function(t, e, n) {
                t.buttonMode = !1,
                t.interactive = !1,
                e ? t.texture = TextureCache[e] : n && (t.tint = n)
            },
            EnableButton: function(t, e) {
                t.buttonMode = !0,
                t.interactive = !0,
                e ? t.texture = TextureCache[e] : t.tint = 16777215
            },
            DisableButtons: function(t) {
                var e = t;
                i.contents.DisableButton(e.btnTrial, "btn-trial-disable-" + u.Config.lang + ".png"),
                i.contents.DisableButton(e.btnReal, "btn-real-disable-" + u.Config.lang + ".png"),
                !window.App.isAuto || !u.Config.isAutoSpin && window.App.isAuto ? i.contents.DisableButton(e.btnBack, null, 10066329) : i.contents.EnableButton(e.btnBack),
                i.contents.DisableButton(e.btnMinusLine, "btn-line-disable.png"),
                i.contents.DisableButton(e.btnPlusLine, "btn-line-disable.png"),
                i.contents.DisableButton(e.btnMinusBet, "btn-minus-disable.png"),
                i.contents.DisableButton(e.btnPlusBet, "btn-plus-disable.png"),
                i.contents.DisableButton(e.btnX2, "btn-x2-disable.png"),
                i.contents.DisableButton(e.btnAuto, null, 10066329),
                i.contents.DisableButton(e.btnMinusAuto, "btn-minus-disable.png"),
                i.contents.DisableButton(e.btnPlusAuto, "btn-plus-disable.png"),
                i.contents.DisableButton(e.btnSpin, "btn-spin-disable-" + u.Config.lang + ".png"),
                u.Config.isAutoSpin ? u.Config.isFreeSpin || (e.btnStopAuto.visible = !0) : e.btnStopAuto.visible = !1,
                e.btnQuick.texture = e.loader.resources.quick.textures["quickspin" + (u.Config.isQuick ? "-active" : "") + ".png"]
            },
            EnableButtons: function(t) {
                var e = t;
                i.contents.EnableButton(e.btnTrial, "btn-trial-normal-" + u.Config.lang + ".png"),
                i.contents.EnableButton(e.btnReal, "btn-real-normal-" + u.Config.lang + ".png"),
                i.contents.EnableButton(e.btnBack),
                i.contents.EnableButton(e.btnMinusLine, "btn-line-normal.png"),
                i.contents.EnableButton(e.btnPlusLine, "btn-line-normal.png"),
                i.contents.EnableButton(e.btnMinusBet, "btn-minus-normal.png"),
                i.contents.EnableButton(e.btnPlusBet, "btn-plus-normal.png"),
                i.contents.EnableButton(e.btnMinusAuto, "btn-minus-normal.png"),
                i.contents.EnableButton(e.btnPlusAuto, "btn-plus-normal.png"),
                i.contents.EnableButton(e.btnAuto),
                i.contents.EnableButton(e.btnSpin, "btn-spin-normal-" + u.Config.lang + ".png"),
                u.Config.isAutoSpin ? u.Config.isFreeSpin || (e.btnStopAuto.visible = !0) : e.btnStopAuto.visible = !1,
                !u.Config.isFinishX2 && 0 < t.currentPlayer.X2Game.StartBetValue && (u.Config.isTry ? t.trial && t.trial.balance >= t.currentPlayer.X2Game.StartBetValue : t.balance > t.currentPlayer.X2Game.StartBetValue) && i.contents.EnableButton(e.btnX2, "btn-x2-normal.png"),
                e.btnSpin.visible = !0
            },
            UpdateAutoSpin: function(t) {
                u.Config.isAutoSpin && (u.Config.autoSpinCount--,
                0 <= u.Config.autoSpinCount && (t.txtAuto.text = c.Util.ParseMoney(u.Config.autoSpinCount, void 0),
                window.App.isAuto && sessionStorage.setItem("Auto-" + t.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";" + u.Config.isAutoSpin + ";" + u.Config.totalLines)),
                u.Config.autoSpinCount <= 0 && i.contents.StopAutoSpin(t)),
                $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").length && $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").html(0 < u.Config.autoSpinCount ? c.Util.ParseMoney(u.Config.autoSpinCount) : ""),
                $("#list-jp-icon-" + u.Config.gameId + "-playing").length && $("#list-jp-icon-" + u.Config.gameId + "-playing").html(0 < u.Config.autoSpinCount ? c.Util.ParseMoney(u.Config.autoSpinCount) : "")
            },
            StopAutoSpin: function(t) {
                var e = t;
                if (u.Config.isAutoSpin) {
                    if (u.Config.isAutoSpin = !1,
                    e.btnStopAuto.visible = !1,
                    e.btnSpin.visible || (e.btnSpin.visible = !0),
                    console.log(u.Config.gameId),
                    $("#rolling-" + t.storage).removeClass("active"),
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId).removeClass("button-playing").addClass("button-play"),
                    $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                    $("#ljp-" + u.Config.gameId + "-room-" + u.Config.roomId).parent().removeClass("playing"),
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").html(""),
                    $("#list-jp-icon-" + u.Config.gameId + "-playing").html(""),
                    sessionStorage.removeItem("Auto-" + t.storage),
                    window.App.isAutoOracle = !1,
                    u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree)
                        return;
                    u.Config.timeSpin = setTimeout(function() {
                        return i.contents.EnableButtons(t)
                    }, 2e3)
                }
            },
            CheckLoginOrInRoom: function(t) {
                var e = t;
                return !(u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree) && (u.Config.isLogin ? !!u.Config.inRoom || (e.showMessage(Message.GetMessage("sl79")),
                !1) : (e.showMessage(Message.GetMessage("app003")),
                !1))
            },
            DeleteTimer: function() {
                c.Util.ClearTimeOut(u.Config.timerEvent),
                c.Util.ClearTimeOut(u.Config.timeSpin),
                c.Util.ClearTimeOut(u.Config.timeBonus),
                c.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                c.Util.ClearTimeOut(u.Config.timeOutEachLine),
                c.Util.ClearTimeOut(u.Config.timeShowWin),
                c.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                c.Util.ClearTimeOut(u.Config.timeJackpot),
                c.Util.ClearTimeOut(u.Config.timePop)
            },
            ClearTimer: function() {
                c.Util.ClearTimeOut(u.Config.timeSpin),
                c.Util.ClearTimeOut(u.Config.timeBonus),
                c.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                c.Util.ClearTimeOut(u.Config.timeOutEachLine),
                c.Util.ClearTimeOut(u.Config.timeShowWin),
                c.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                c.Util.ClearTimeOut(u.Config.timePop)
            },
            DeleteTwEffect: function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "oracle-eff" === t[e].data && t[e].kill()
            },
            DeleteTweens: function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "oracle-eff" !== t[e].data && "oracle" !== t[e].data && "money-fall-oracle" !== t[e].data || t[e].kill()
            }
        }
    }
    , , , , , , , , , , , , function(t, o, e) {
        "use strict";
        Object.defineProperty(o, "__esModule", {
            value: !0
        }),
        o.accu = void 0;
        var s = e(5)
          , a = e(0)
          , n = e(9);
        o.accu = {
            timer: 0,
            UpdateAccumulation: function(t) {
                var e = t.currentPlayer.AccumulateGame;
                if (0 < e.Items) {
                    0 === o.accu.timer && (o.accu.timer = e.TimeRemain,
                    o.accu.UpdateTimerAcc(t)),
                    t.boxTimerTreasure.visible = t.txtMoneyTreasure.visible = t.txtMultiTreasure.visible = !0,
                    t.btnTreasure.visible = !1;
                    var n = 9 === e.Items ? t.currentPlayer.AccumulateGame.TotalPrizeValue : e.Revenue * e.AccumulateRate;
                    n < .01 && (n = .01),
                    t.txtMoneyTreasure.text = a.Util.ParseMoney(n, void 0),
                    t.txtMultiTreasure.text = a.Util.ParseMoney(e.Revenue, void 0) + " x " + a.Util.ParseMoney(e.AccumulateRate, void 0);
                    for (var i = 0; i < e.Items; i++)
                        t.arrLego[i].visible = !0;
                    9 === e.Items && (a.Util.ClearTimeOut(s.Config.timeAcc),
                    o.accu.timer = 0)
                } else
                    o.accu.Disable(t)
            },
            UpdateTimerAcc: function(t) {
                var e, n, i;
                a.Util.ClearTimeOut(s.Config.timeAcc),
                0 < o.accu.timer ? (e = Math.floor(o.accu.timer / 3600),
                n = Math.floor(o.accu.timer % 3600 / 60),
                i = o.accu.timer % 3600 % 60,
                t.boxTimerTreasure.getChildAt(0).text = (e < 10 ? "0" + e : e) + ":" + (n < 10 ? "0" + n : n) + ":" + (i < 10 ? "0" + i : i),
                o.accu.timer--,
                s.Config.isTry ? t.boxTimerTreasure.visible = !1 : t.boxTimerTreasure.visible = !0,
                s.Config.timeAcc = setTimeout(function() {
                    o.accu.UpdateTimerAcc(t)
                }, 1e3)) : o.accu.Disable(t)
            },
            Disable: function(t) {
                a.Util.ClearTimeOut(s.Config.timeAcc);
                for (var e = 0; e < t.arrLego.length; e++)
                    t.arrLego[e].visible = !1;
                t.boxTimerTreasure.visible = t.txtMoneyTreasure.visible = t.txtMultiTreasure.visible = !1,
                t.btnTreasure.visible = !0,
                o.accu.timer = 0
            },
            Effect: function(t) {
                t.iconTreasure.visible = !0,
                t.iconTreasure.scale.set(.5),
                t.iconTreasure.position.set(13, 24),
                9 === t.currentPlayer.SpinData.AccumulateItems && (t.currentPlayer.AccumulateGame.Items = 9);
                var e = t.currentPlayer.AccumulateGame.Items - 1;
                TweenMax.to(t.iconTreasure, .5, {
                    x: t.arrLegoPos[e][0],
                    y: t.arrLegoPos[e][1],
                    alpha: 0
                }),
                TweenMax.to(t.iconTreasure.scale, .5, {
                    x: .1,
                    y: .1
                }),
                setTimeout(function() {
                    t.iconTreasure.alpha = 1,
                    t.iconTreasure.visible = !1,
                    o.accu.UpdateAccumulation(t),
                    t.currentPlayer.SpinData.IsAccumulate && 9 === t.currentPlayer.SpinData.AccumulateItems && !s.Config.isTry ? o.accu.Win(t) : t.NormalWinOrJackPotOrBigWin(t)
                }, 550)
            },
            DisableLego: function(t) {
                t.lego.visible = !1;
                for (var e = 0; e < t.arrLego.length; e++)
                    t.arrLego[e].visible = !1
            },
            Win: function(t) {
                o.accu.DisableLego(t),
                t.effect = new AnimatedSprite(t.framesAccumulation),
                t.effectContainer.addChild(t.effect),
                t.effect.position.set(380, 0),
                t.effect.anchor.set(.5),
                t.effect.animationSpeed = .2,
                t.effect.loop = !1,
                t.effect.play(),
                s.Config.timeSpin = setTimeout(function() {
                    t.Effect(0),
                    t.txtMoney.text = 0,
                    t.txtMoney.visible = !0,
                    n.contents.CountMoney(t.txtMoney, !0, !1, 0, t.currentPlayer.AccumulateGame.TotalPrizeValue, 0, 1, function() {}),
                    setTimeout(function() {
                        t.currentPlayer.AccumulateGame.Items = 0,
                        t.currentPlayer.AccumulateGame.TotalPrizeValue = 0,
                        t.currentPlayer.SpinData.IsAccumulate = !1,
                        o.accu.UpdateAccumulation(t),
                        t.NormalWinOrJackPotOrBigWin(t)
                    }, 2e3)
                }, 2e3)
            },
            Destroy: function(t) {
                t.lego.visible = !0;
                for (var e = 0; e < t.arrLego.length; e++)
                    t.arrLego[e].visible = !1
            }
        }
    }
    , , , , , , , , , , , , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.game = void 0;
        var i = n(37)
          , o = n(3)
          , s = (a.prototype.delete = function() {
            this.game.Delete()
        }
        ,
        a.prototype.startAuto = function() {
            return this.game.StartAuto()
        }
        ,
        a.prototype.stopAuto = function() {
            this.game.StopAuto()
        }
        ,
        a.prototype.checkAuto = function() {
            return this.game.CheckAuto()
        }
        ,
        a.prototype.getRoomId = function() {
            return this.game.getRoomId()
        }
        ,
        a.prototype.setSilent = function() {
            this.game.SetSilent()
        }
        ,
        a.prototype.restartAuto = function(t, e, n) {
            this.game.RestartAuto(t, e, n)
        }
        ,
        a);
        function a(t) {
            o.load({
                custom: {
                    families: ["MetalLord-Regular", "Roboto"]
                },
                fontactive: function() {}
            }),
            this.game = new i.games(t)
        }
        e.game = s
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.games = void 0;
        var s = n(0)
          , i = n(38)
          , a = n(5)
          , r = n(9)
          , o = n(39)
          , l = n(40)
          , u = n(41);
        n(1);
        var c = n(21)
          , p = n(42)
          , h = (m.prototype.GetAutoSpin = function() {
            var t = sessionStorage.getItem("Auto-" + this.storage);
            if (t) {
                var e = t.split(";");
                if ("true" === e[2] && (-1 === parseInt(e[1]) || 0 < parseInt(e[1])))
                    return a.Config.autoSpinCount = parseInt(e[1]),
                    a.Config.isAutoSpin = window.App.isAutoOracle = !0,
                    window.App.isAuto = !0,
                    $(".multislot-expand").addClass("active"),
                    a.Config.roomId = parseInt(e[0]),
                    void (e[3] && (this.line = e[3]))
            }
            this.isSilent = !1,
            sessionStorage.removeItem("Auto-" + this.storage)
        }
        ,
        m.prototype.Init = function() {
            PIXI.utils.skipHello(),
            this.application = new PIXI.Application(this.size[0],this.size[1],{
                antialias: !0,
                view: this.target
            }),
            this.application.ticker.add(this.Update),
            this.InitContainer();
            for (var t = this, e = 0; e < this.assets.length; e++)
                "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
            this.loader.on("progress", function() {
                return t.Loading(t)
            }),
            this.loader.load(function() {
                t.InitGame(),
                t.InitHubs(),
                $("#divLoading").hide()
            })
        }
        ,
        m.prototype.Loading = function(t) {
            $("#divLoading").show(),
            $("#popupJackpot").removeClass("show"),
            0 < $("#divLoading .loading-percent").length ? ($("#divLoading .loading-percent").css("width", parseInt(t.loader.progress) + "%"),
            $("#divLoading .loading-text").html(parseInt(t.loader.progress) + "%")) : ($("#loading-progress span").css("width", parseInt(t.loader.progress) + "%"),
            $("#loading-progress-txt").html(parseInt(t.loader.progress) + "%"))
        }
        ,
        m.prototype.InitHubs = function() {
            this.hubs = new i.default(a.Config.hubUrl.replace("api", "") + "gameHub",this.token,this)
        }
        ,
        m.prototype.Update = function() {}
        ,
        m.prototype.ResetTweenTab = function() {
            window.addEventListener("blur", function() {
                TweenLite.lagSmoothing(0)
            }, !1),
            window.addEventListener("focus", function() {
                TweenLite.lagSmoothing(1e3, 16)
            }, !1)
        }
        ,
        m.prototype.InitContainer = function() {
            this.bgContainer = new Container,
            this.loaderContainer = new Container,
            this.linesContainer = new Container,
            this.machineContainer = new Container,
            this.mainContainer = new Container,
            this.buttonContainer = new Container,
            this.iconsContainer = new Container,
            this.containerColumn1 = new Container,
            this.containerColumn2 = new Container,
            this.containerColumn3 = new Container,
            this.containerColumn4 = new Container,
            this.containerColumn5 = new Container,
            this.popupContainer = new Container,
            this.guideContainer = new Container,
            this.moneyContainer = new Container,
            this.effectContainer = new Container,
            this.eventContainer = new Container,
            this.columnContainer = new Container,
            this.columnContainer.addChild(this.containerColumn1, this.containerColumn2, this.containerColumn3, this.containerColumn4, this.containerColumn5, this.iconsContainer),
            this.application.stage.addChild(this.loaderContainer, this.bgContainer, this.machineContainer, this.moneyContainer)
        }
        ,
        m.prototype.InitGame = function() {
            var t = this;
            this.filter = new PIXI.filters.ColorMatrixFilter,
            this.filter.matrix = [1, 0, 0, .1, 0, 0, 1, 0, .1, 0, 0, 0, 1, .1, 0, 0, 0, 0, 1, 0],
            this.filterGray = new PIXI.filters.ColorMatrixFilter,
            this.filterGray.matrix = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0],
            this.InitFrames(),
            this.InitBg(),
            this.InitMachine(),
            this.InitLines(),
            this.InitSlots(),
            this.InitMask(),
            this.InitAssets(),
            this.InitChar(),
            this.InitPopup(),
            this.InitPopupWin(),
            this.InitGuide(),
            this.machine.addChild(this.eventContainer),
            this.InitEvent(),
            this.itemsMainGame = [this.column1[this.totalItems - 3], this.column2[this.totalItems - 3], this.column3[this.totalItems - 3], this.column4[this.totalItems - 3], this.column5[this.totalItems - 3], this.column1[this.totalItems - 2], this.column2[this.totalItems - 2], this.column3[this.totalItems - 2], this.column4[this.totalItems - 2], this.column5[this.totalItems - 2], this.column1[this.totalItems - 1], this.column2[this.totalItems - 1], this.column3[this.totalItems - 1], this.column4[this.totalItems - 1], this.column5[this.totalItems - 1]];
            try {
                this.countSound = this.loader.resources.countSound.sound,
                this.countSound.loop = !0,
                this.countSound.volume = 1.5,
                this.bigWinSound = this.loader.resources.bigWinSound.sound,
                this.bigWinSound.loop = !1,
                this.jackpotSound = this.loader.resources.jackpotSound.sound,
                this.jackpotSound.loop = !0,
                this.bgSound = this.loader.resources.bgSound.sound,
                this.bgSound.volume = .1,
                this.bgSound.loop = !0
            } catch (t) {}
            if (a.Config.music)
                try {
                    this.bgSound.play()
                } catch (t) {}
            a.Config.ready = !0,
            this.Resize(this),
            this.ResetTweenTab(),
            this.iconEvent.visible = !1,
            window.Config.EnableXEvent && r.contents.GetEvent(this),
            this.resizeFunc = function() {
                return t.Resize(t)
            }
            ,
            window.addEventListener("resize", this.resizeFunc)
        }
        ,
        m.prototype.Resize = function(t) {
            t.size = [$(window).width(), $(window).height()],
            t.application.renderer.resize($(window).width(), $(window).height()),
            t.backGround.scale.set(t.size[0] / 1917),
            t.backGround.anchor.set(.5),
            t.backGround.position.set(t.size[0] / 2, t.size[1] / 2),
            t.size[0] < 1188 || t.size[1] < 587 ? t.machine.scale.set(Math.min(t.size[0] / 1188, t.size[1] / 587)) : t.machine.scale.set(1),
            t.machine.anchor.set(.5),
            t.machine.position.set(t.size[0] / 2, t.size[1] / 2)
        }
        ,
        m.prototype.InitFrames = function() {
            for (this.framesDevilFire = [],
            this.framesIconsEffect = [],
            this.framesAccumulation = [],
            this.framesFree = [],
            this.framesBonus = [],
            this.framesBonusBack = [],
            this.framesFreeBack = [],
            this.framesLine = [],
            this.framesCoins = [],
            this.framesLightingX = [],
            e = 1; e < 46; e++)
                this.framesDevilFire.push(TextureCache["devil-" + e + ".png"]);
            for (this.framesIconsEffect = framesFromTilesetImage("iconsAnimation", 111, 104),
            e = 1; e < 46; e++)
                this.framesAccumulation.push(TextureCache["accumulation-" + e + ".png"]);
            for (e = 1; e < 41; e++)
                this.framesFree.push(TextureCache["free-" + e + ".png"]);
            for (e = 1; e < 47; e++)
                this.framesBonus.push(TextureCache["bonus-" + e + ".png"]);
            for (e = 40; 0 < e; e--)
                this.framesFreeBack.push(TextureCache["free-" + e + ".png"]);
            for (e = 42; 0 < e; e--)
                this.framesBonusBack.push(TextureCache["bonus-" + e + ".png"]);
            for (e = 0; e < 20; e++)
                this.framesLightingX.push(this.loader.resources.fxJackpot.textures["fxJackpotSheets_000" + (e < 10 ? "0" : "") + e + ".png"]);
            for (var t = [[561, 1437, 563, 4], [561, 1441, 563, 4], [561, 1445, 563, 4], [542, 373, 553, 218], [1096, 0, 559, 231], [1112, 1316, 542, 121], [1112, 1194, 547, 122], [1095, 381, 559, 214], [0, 1243, 561, 213], [537, 720, 551, 234], [1088, 720, 544, 232], [1087, 595, 551, 125], [1112, 1077, 557, 117], [547, 247, 548, 126], [530, 591, 557, 129], [1093, 952, 550, 125], [1096, 231, 565, 150], [0, 255, 542, 247], [561, 1190, 551, 234], [0, 1007, 545, 236], [0, 0, 547, 255], [0, 502, 530, 258], [0, 760, 537, 247], [547, 0, 549, 247], [545, 954, 548, 236]], e = 0; e < t.length; e++)
                this.framesLine.push(frame(TextureCache.lines, t[e][0], t[e][1], t[e][2], t[e][3]));
            this.framesCoins = framesFromTilesetImage("coinOracle", 30, 31)
        }
        ,
        m.prototype.InitBg = function() {
            this.backGround = new Sprite(TextureCache.bgOracle),
            this.backGround.anchor.set(.5),
            this.backGround.position.set(this.size[0] / 2, this.size[1] / 2),
            this.bgContainer.addChild(this.backGround)
        }
        ,
        m.prototype.InitMachine = function() {
            this.machine = new Sprite(TextureCache.machineOracle),
            this.machine.anchor.set(.5),
            this.machine.position.set(this.size[0] / 2, this.size[1] / 2),
            this.machineContainer.addChild(this.machine),
            this.machine.addChild(this.linesContainer),
            this.logo = new Sprite(TextureCache["logo-" + a.Config.lang + ".png"]),
            this.logo.anchor.set(.5),
            this.logo.position.set(13, -225),
            this.lblJackpot = new PIXI.Text(Message.GetMessage("sl44"),{
                fontFamily: "Times New Roman",
                fontSize: 13,
                fontWeight: "bold",
                fill: ["yellow"]
            }),
            this.lblJackpot.anchor.set(.5),
            this.lblJackpot.position.set(12, -180),
            this.lblTreasure = new Sprite(TextureCache["icon-treasure-" + a.Config.lang + ".png"]),
            this.lblTreasure.anchor.set(.5),
            this.lblTreasure.position.set(420, -154),
            this.txtJackpot = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 25,
                fontWeight: "bold",
                fill: ["#f59b25"]
            }),
            this.txtJackpot.anchor.set(.5),
            this.txtJackpot.position.set(12, -164),
            this.xEvent = new Sprite(this.loader.resources.event.textures["ej-lb-x2"]),
            this.xEvent.anchor.set(.5),
            this.xEvent.position.set(125, -168),
            this.xEvent.visible = !1,
            this.machine.addChild(this.logo, this.lblJackpot, this.lblTreasure, this.txtJackpot, this.xEvent)
        }
        ,
        m.prototype.createLightX = function() {
            this.lightingX || (this.lightingX = new AnimatedSprite(this.framesLightingX),
            this.lightingX.animationSpeed = .4,
            this.lightingX.loop = !0,
            this.lightingX.position.set(11, -165),
            this.lightingX.anchor.set(.5),
            this.lightingX.play(),
            this.machine.addChild(this.lightingX))
        }
        ,
        m.prototype.deleteLightX = function() {
            this.lightingX && this.lightingX.destroy({
                children: !0
            }),
            this.lightingX = null
        }
        ,
        m.prototype.updateEvent = function(t) {
            var e = this;
            try {
                for (var n = this.xEvent.visible = !1, i = 0; i < t.length; i++) {
                    var o, s = t[i];
                    s.nextJackpot < 0 ? this.arrBox[s.roomID - 1].children[1].visible = this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1 : 0 == s.nextJackpot ? (this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1,
                    this.arrBox[s.roomID - 1].children[1].texture = this.loader.resources.event.textures["ej-tg-x" + s.multiplier],
                    s.roomID != a.Config.roomId || a.Config.isTry || (this.xEvent.visible = !0,
                    this.xEvent.texture = this.loader.resources.event.textures["ej-lb-x" + s.multiplier],
                    n = !0)) : (this.arrBox[s.roomID - 1].children[1].visible = !1,
                    o = "X" + s.multiplier + " " + Message.GetMessage("ev50") + ("km" == a.Config.lang ? "     " : "        ") + Message.GetMessage("ev49"),
                    this.arrBox[s.roomID - 1].children[2].text = o,
                    this.arrBox[s.roomID - 1].children[3].children[0].text = s.nextJackpot,
                    this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !0)
                }
                n ? this.lightingX || this.createLightX() : this.deleteLightX(),
                a.Config.timerEvent = setTimeout(function() {
                    r.contents.GetEvent(e)
                }, window.Config.TIME_COUNT_GET_EVENT_X ? window.Config.TIME_COUNT_GET_EVENT_X : 5e3)
            } catch (t) {
                clearTimeout(a.Config.timerEvent)
            }
        }
        ,
        m.prototype.InitEvent = function() {
            this.iconEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]),
            this.iconEvent.anchor.set(.5),
            this.iconEvent.position.set(this.size[0] / 2 - 100, -this.size[1] / 2 + 100),
            this.iconEvent.interactive = !0,
            this.iconEvent.buttonMode = !0,
            this.iconEvent.on("pointerdown", this.onDragStart).on("pointerup", this.onDragEnd).on("pointerupoutside", this.onDragEnd).on("pointermove", this.onDragMove),
            this.boxEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-bg"]),
            this.boxEvent.anchor.set(.5, 0),
            this.boxEvent.position.set(.5, 5),
            this.room1Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room1Event.anchor.set(.5),
            this.room1Event.position.set(0, 71);
            var t = new PIXI.Text(s.Util.ParseMoney(a.Config.arrRoom[0]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            t.anchor.set(.5),
            t.position.set(0, -15),
            this.room1X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room1X.anchor.set(.5),
            this.room1X.position.set(0, 10);
            var e = Message.GetMessage("ev26") + ("km" == a.Config.lang ? "     " : "        ") + Message.GetMessage("ev49");
            this.txtRoom1 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom1.anchor.set(.5),
            this.txtRoom1.position.set(0, 10),
            this.boxJackRoom1 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom1.anchor.set(.5),
            "km" == a.Config.lang && this.boxJackRoom1.scale.set(.8),
            this.boxJackRoom1.position.set("km" == a.Config.lang ? 28 : "zh" == a.Config.lang ? 9 : "en" == a.Config.lang ? 16 : 13, 10),
            this.boxJackRoom1.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom1.children[0].anchor.set(.5),
            this.room1Event.addChild(t, this.room1X, this.txtRoom1, this.boxJackRoom1),
            this.room1X.visible = this.boxJackRoom1.visible = this.txtRoom1.visible = !1,
            this.room2Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room2Event.anchor.set(.5),
            this.room2Event.position.set(0, 133);
            var n = new PIXI.Text(s.Util.ParseMoney(a.Config.arrRoom[1]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            n.anchor.set(.5),
            n.position.set(0, -15),
            this.room2X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room2X.anchor.set(.5),
            this.room2X.position.set(0, 10),
            this.txtRoom2 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom2.anchor.set(.5),
            this.txtRoom2.position.set(0, 10),
            this.boxJackRoom2 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom2.anchor.set(.5),
            "km" == a.Config.lang && this.boxJackRoom2.scale.set(.8),
            this.boxJackRoom2.position.set("km" == a.Config.lang ? 28 : "zh" == a.Config.lang ? 9 : "en" == a.Config.lang ? 16 : 13, 10),
            this.boxJackRoom2.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom2.children[0].anchor.set(.5),
            this.room2Event.addChild(n, this.room2X, this.txtRoom2, this.boxJackRoom2),
            this.room2X.visible = this.boxJackRoom2.visible = this.txtRoom2.visible = !1,
            this.room3Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room3Event.anchor.set(.5),
            this.room3Event.position.set(0, 195);
            var i = new PIXI.Text(s.Util.ParseMoney(a.Config.arrRoom[2]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            i.anchor.set(.5),
            i.position.set(0, -15),
            this.room3X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room3X.anchor.set(.5),
            this.room3X.position.set(0, 10),
            this.txtRoom3 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom3.anchor.set(.5),
            this.txtRoom3.position.set(0, 10),
            this.boxJackRoom3 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom3.anchor.set(.5),
            "km" == a.Config.lang && this.boxJackRoom3.scale.set(.8),
            this.boxJackRoom3.position.set("km" == a.Config.lang ? 28 : "zh" == a.Config.lang ? 9 : "en" == a.Config.lang ? 16 : 13, 10),
            this.boxJackRoom3.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom3.children[0].anchor.set(.5),
            this.room3Event.addChild(i, this.room3X, this.txtRoom3, this.boxJackRoom3),
            this.room3X.visible = this.boxJackRoom3.visible = this.txtRoom3.visible = !1,
            this.boxEvent.addChild(this.room1Event, this.room2Event, this.room3Event),
            this.arrBox = [this.room1Event, this.room2Event, this.room3Event],
            this.arrowEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-arrow"]),
            this.arrowEvent.anchor.set(.5),
            this.arrowEvent.position.set(0, 250),
            this.arrowEvent.scale.y = -1,
            this.arrowEvent.interactive = !0,
            this.arrowEvent.buttonMode = !0,
            this.arrowEvent.on("pointerdown", this.toogleEvent.bind(this.arrowEvent, this)).on("pointerup", this.toogleEventUp.bind(this.arrowEvent, this));
            var o = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]);
            o.anchor.set(.5),
            this.iconEvent.addChild(this.boxEvent, this.arrowEvent, o),
            this.eventContainer.addChild(this.iconEvent)
        }
        ,
        m.prototype.toogleEventUp = function(t) {
            t.iconEvent.interactive = !0
        }
        ,
        m.prototype.toogleEvent = function(t) {
            t.iconEvent.interactive = !1,
            -1 == t.arrowEvent.scale.y ? (t.arrowEvent.scale.y = 1,
            TweenMax.to(t.boxEvent, .5, {
                alpha: 0,
                data: "oracle"
            }),
            TweenMax.to(t.arrowEvent, .5, {
                y: 50,
                data: "oracle"
            })) : (TweenMax.to(t.boxEvent, .5, {
                alpha: 1,
                data: "oracle"
            }),
            TweenMax.to(t.arrowEvent, .5, {
                y: 250,
                data: "oracle"
            }),
            t.arrowEvent.scale.y = -1),
            setTimeout(function() {
                t.iconEvent.interactive = !0
            }, 500)
        }
        ,
        m.prototype.onDragStart = function(t) {
            this.data = t.data,
            this.alpha = .9,
            this.dragging = !0
        }
        ,
        m.prototype.onDragEnd = function() {
            this.data = null,
            this.alpha = 1,
            this.dragging = !1
        }
        ,
        m.prototype.onDragMove = function() {
            var t, e = this;
            e.dragging && (t = e.data.getLocalPosition(e.parent),
            e.x = t.x,
            e.y = t.y)
        }
        ,
        m.prototype.InitLines = function() {
            this.lines = [],
            this.machine.addChild(this.linesContainer);
            for (var t = 0; t < 25; t++) {
                var e = new Sprite(this.framesLine[t]);
                e.anchor.set(.5),
                e.visible = !1,
                e.position.set(this.linesPos[t][0], this.linesPos[t][1]),
                this.linesContainer.addChild(e),
                this.lines.push(e)
            }
        }
        ,
        m.prototype.InitSlots = function() {
            var t;
            this.machine.addChild(this.columnContainer),
            this.startPosition = 130;
            for (var e = 0, n = this.totalItems - 1; 0 <= n; n--)
                t = Math.floor(11 * Math.random()) + 1,
                this.column1[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !a.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column1[n].inx = t,
                this.column1[n].x = -228,
                this.column1[n].anchor.set(.5),
                this.column1[n].y = this.startPosition - 110 * e,
                this.containerColumn1.addChild(this.column1[n]),
                t = Math.floor(11 * Math.random()) + 1,
                this.column2[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !a.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column2[n].inx = t,
                this.column2[n].x = -108,
                this.column2[n].anchor.set(.5),
                this.column2[n].y = this.startPosition - 110 * e,
                this.containerColumn2.addChild(this.column2[n]),
                t = Math.floor(11 * Math.random()) + 1,
                this.column3[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !a.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column3[n].inx = t,
                this.column3[n].x = 11,
                this.column3[n].anchor.set(.5),
                this.column3[n].y = this.startPosition - 110 * e,
                this.containerColumn3.addChild(this.column3[n]),
                t = Math.floor(11 * Math.random()) + 1,
                this.column4[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !a.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column4[n].inx = t,
                this.column4[n].x = 130,
                this.column4[n].anchor.set(.5),
                this.column4[n].y = this.startPosition - 110 * e,
                this.containerColumn4.addChild(this.column4[n]),
                t = Math.floor(11 * Math.random()) + 1,
                this.column5[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !a.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column5[n].inx = t,
                this.column5[n].x = 250,
                this.column5[n].anchor.set(.5),
                this.column5[n].y = this.startPosition - 110 * e,
                this.containerColumn5.addChild(this.column5[n]),
                e++;
            this.startHeight = this.column1[0].y
        }
        ,
        m.prototype.InitMask = function() {
            this.mask = new Graphics,
            this.mask.drawRect(0, 0, 600, 330),
            this.mask.position.set(-288, -143),
            this.columnContainer.addChild(this.mask),
            this.columnContainer.mask = this.mask
        }
        ,
        m.prototype.InitAssets = function() {
            this.machine.addChild(this.buttonContainer),
            this.btnTrial = new Sprite(TextureCache["btn-trial-normal-" + a.Config.lang + ".png"]),
            this.btnTrial.name = "btn-trial-normal-" + a.Config.lang + ".png",
            this.btnTrial.anchor.set(.5),
            this.btnTrial.position.set(-145, -163),
            this.btnTrial.interactive = !0,
            this.btnTrial.buttonMode = !0,
            this.btnTrial.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnTrialDown.bind(this.btnTrial, this)),
            this.btnReal = new Sprite(TextureCache["btn-real-normal-" + a.Config.lang + ".png"]),
            this.btnReal.name = "btn-real-normal-" + a.Config.lang + ".png",
            this.btnReal.visible = !1,
            this.btnReal.anchor.set(.5),
            this.btnReal.position.set(-145, -163),
            this.btnReal.interactive = !0,
            this.btnReal.buttonMode = !0,
            this.btnReal.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnRealDown.bind(this.btnReal, this)),
            this.btnBack = new Sprite(TextureCache["btn-back-normal-" + a.Config.lang + ".png"]),
            this.btnBack.name = "btn-back-normal-" + a.Config.lang + ".png",
            this.btnBack.anchor.set(.5),
            this.btnBack.position.set(-305, -163),
            this.btnBack.interactive = !0,
            this.btnBack.buttonMode = !0,
            this.btnBack.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnBackDown.bind(this.btnBack, this)),
            this.btnHide = new Sprite(TextureCache["btn-hide.png"]),
            this.btnHide.anchor.set(.5),
            this.btnHide.position.set(-305, -192),
            this.btnHide.interactive = !0,
            this.btnHide.buttonMode = !0,
            this.btnHide.addChild(new Sprite(TextureCache["icon-hide.png"])),
            this.btnHide.children[0].anchor.set(.5),
            this.btnHide.children[0].scale.set(.8),
            this.btnHide.children[0].position.set(-15, 1),
            this.btnHide.addChild(new Sprite(TextureCache["hide-" + ("vi" === a.Config.lang ? "vi" : "en") + ".png"])),
            this.btnHide.children[1].anchor.set(0, .5),
            this.btnHide.children[1].scale.set(.85),
            this.btnHide.children[1].position.set(0, "vi" === a.Config.lang ? 0 : 1),
            this.btnHide.on("pointerdown", this.btnHideDown.bind(this.btnHide, this)),
            this.txtSession = new PIXI.Text("#",{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["#fed3a5"]
            }),
            this.txtSession.anchor.set(0, .5),
            this.txtSession.position.set(-250, -164),
            this.btnGuide = new Sprite(TextureCache["btn-guide-normal-" + a.Config.lang + ".png"]),
            this.btnGuide.name = "btn-guide-normal-" + a.Config.lang + ".png",
            this.btnGuide.anchor.set(.5),
            this.btnGuide.position.set(180, -163),
            this.btnGuide.interactive = !0,
            this.btnGuide.buttonMode = !0,
            this.btnGuide.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnGuideDown.bind(this.btnGuide, this)),
            this.btnRank = new Sprite(TextureCache["btn-rank-normal.png"]),
            this.btnRank.name = "btn-rank-normal.png",
            this.btnRank.anchor.set(.5),
            this.btnRank.position.set(227, -163),
            this.btnRank.interactive = !0,
            this.btnRank.buttonMode = !0,
            this.btnRank.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnRankDown.bind(this.btnRank, this)),
            this.btnHistory = new Sprite(TextureCache["btn-history-normal.png"]),
            this.btnHistory.name = "btn-history-normal.png",
            this.btnHistory.anchor.set(.5),
            this.btnHistory.position.set(250, -163),
            this.btnHistory.interactive = !0,
            this.btnHistory.buttonMode = !0,
            this.btnHistory.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnHistoryDown.bind(this.btnHistory, this)),
            this.btnSoundOn = new Sprite(TextureCache["btn-sound-on-normal.png"]),
            this.btnSoundOn.name = "btn-sound-on-normal.png",
            this.btnSoundOn.anchor.set(.5),
            this.btnSoundOn.position.set(273, -163),
            this.btnSoundOn.interactive = !0,
            this.btnSoundOn.buttonMode = !0,
            this.btnSoundOn.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnSoundOnDown.bind(this.btnSoundOn, this)),
            this.btnSoundOff = new Sprite(TextureCache["btn-sound-off-normal.png"]),
            this.btnSoundOff.name = "btn-sound-off-normal.png",
            this.btnSoundOff.anchor.set(.5),
            this.btnSoundOff.visible = !1,
            this.btnSoundOff.position.set(273, -163),
            this.btnSoundOff.interactive = !0,
            this.btnSoundOff.buttonMode = !0,
            this.btnSoundOff.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnSoundOffDown.bind(this.btnSoundOff, this)),
            this.lblLines = new PIXI.Text(Message.GetMessage("sl7").toUpperCase(),{
                fontFamily: "Times New Roman",
                fontSize: 15,
                fontWeight: "900",
                fill: ["#e0c6ad"]
            }),
            this.lblLines.anchor.set(.5),
            this.lblLines.position.set(-282, 215),
            this.txtLines = new PIXI.Text("1",{
                fontFamily: "Times New Roman",
                fontSize: 35,
                fontWeight: "bold",
                fill: ["#ffae00"]
            }),
            this.txtLines.anchor.set(.5),
            this.txtLines.position.set(-282, 242),
            this.btnMinusLine = new Sprite(TextureCache["btn-line-normal.png"]),
            this.btnMinusLine.name = "btn-line-normal.png",
            this.btnMinusLine.anchor.set(.5),
            this.btnMinusLine.scale.x = -1,
            this.btnMinusLine.position.set(-324, 242),
            this.btnMinusLine.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnMinusLineDown.bind(this.btnMinusLine, this)),
            this.btnPlusLine = new Sprite(TextureCache["btn-line-normal.png"]),
            this.btnPlusLine.name = "btn-line-normal.png",
            this.btnPlusLine.anchor.set(.5),
            this.btnPlusLine.position.set(-244, 242),
            this.btnPlusLine.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnPlusLineDown.bind(this.btnPlusLine, this)),
            this.lblBetValue = new PIXI.Text(Message.GetMessage("sl6").toUpperCase(),{
                fontFamily: "Times New Roman",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#e0c6ad"]
            }),
            this.lblBetValue.anchor.set(.5),
            this.lblBetValue.position.set(-161, 215),
            this.txtBetValue = new PIXI.Text("100",{
                fontFamily: "Times New Roman",
                fontSize: 18,
                fontWeight: "bold",
                fill: ["#b49e7f"]
            }),
            this.txtBetValue.anchor.set(.5),
            this.txtBetValue.position.set(-161, 233),
            this.btnMinusBet = new Sprite(TextureCache["btn-minus-normal.png"]),
            this.btnMinusBet.name = "btn-minus-normal.png",
            this.btnMinusBet.anchor.set(.5),
            this.btnMinusBet.position.set(-92, 257),
            this.btnMinusBet.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnMinusBetDown.bind(this.btnMinusBet, this)),
            this.btnPlusBet = new Sprite(TextureCache["btn-plus-normal.png"]),
            this.btnPlusBet.name = "btn-plus-normal.png",
            this.btnPlusBet.anchor.set(.5),
            this.btnPlusBet.position.set(-92, 233),
            this.btnPlusBet.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnPlusBetDown.bind(this.btnPlusBet, this)),
            this.txtTotalBet = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 22,
                fontWeight: "bold",
                fill: ["#ffb345"]
            }),
            this.txtTotalBet.anchor.set(.5),
            this.txtTotalBet.position.set(-161, 257),
            this.lblJustWon = new PIXI.Text(Message.GetMessage("sl5").toUpperCase(),{
                fontFamily: "Times New Roman",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#e0c6ad"]
            }),
            this.lblJustWon.anchor.set(.5),
            this.lblJustWon.position.set(150, 229),
            this.txtJustWon = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 22,
                fontWeight: "bold",
                fill: ["#ffb345"]
            }),
            this.txtJustWon.anchor.set(.5),
            this.txtJustWon.position.set(167, 258),
            this.btnX2 = new Sprite(TextureCache["btn-x2-normal.png"]),
            this.btnX2.name = "btn-x2-normal.png",
            this.btnX2.anchor.set(.5),
            this.btnX2.position.set(211, 228),
            this.btnX2.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnX2Down.bind(this.btnX2, this)),
            this.btnQuick = new Sprite(this.loader.resources.quick.textures["quickspin.png"]),
            this.btnQuick.anchor.set(.5),
            this.btnQuick.position.set(-25, 310),
            this.btnQuick.addChild(new PIXI.Text(Message.GetMessage("mnpk1"),{
                fontFamily: "Times New Roman",
                fontSize: 13,
                fontWeight: "bold",
                fill: ["white"]
            })),
            this.btnQuick.getChildAt(0).anchor.set(0, .5),
            this.btnQuick.getChildAt(0).position.set(15, 0),
            this.btnQuick.on("pointerdown", this.BtnQuickDown.bind(this.btnQuick, this)),
            this.btnQuick.interactive = !0,
            this.btnQuick.buttonMode = !0,
            this.btnAuto = new Sprite(TextureCache["bg-auto-spin-normal.png"]),
            this.btnAuto.name = "bg-auto-spin-normal.png",
            this.btnAuto.anchor.set(.5),
            this.btnAuto.position.set(297, 258),
            this.btnAuto.addChild(new PIXI.Text(Message.GetMessage("sl2"),{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["black"]
            })),
            this.btnAuto.getChildAt(0).anchor.set(.5),
            this.btnAuto.getChildAt(0).position.set(0, -1.5),
            this.btnAuto.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnAutoDown.bind(this.btnAuto, this)),
            this.btnMinusAuto = new Sprite(TextureCache["btn-minus-normal.png"]),
            this.btnMinusAuto.name = "btn-minus-normal.png",
            this.btnMinusAuto.anchor.set(.5),
            this.btnMinusAuto.position.set(338, 228),
            this.btnMinusAuto.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnMinusAutoDown.bind(this.btnMinusAuto, this)),
            this.btnPlusAuto = new Sprite(TextureCache["btn-plus-normal.png"]),
            this.btnPlusAuto.name = "btn-plus-normal.png",
            this.btnPlusAuto.anchor.set(.5),
            this.btnPlusAuto.position.set(257, 228),
            this.btnPlusAuto.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnPlusAutoDown.bind(this.btnPlusAuto, this)),
            this.txtAuto = new PIXI.Text("100",{
                fontFamily: "Times New Roman",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#ffae00"]
            }),
            this.txtAuto.anchor.set(.5),
            this.txtAuto.position.set(297, 230),
            this.btnTreasure = new Sprite(TextureCache["bg-treasure-normal.png"]),
            this.btnTreasure.name = "bg-treasure-normal.png",
            this.btnTreasure.anchor.set(.5),
            this.btnTreasure.position.set(438, 258),
            this.btnTreasure.addChild(new PIXI.Text(Message.GetMessage("ol35"),{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["#000"]
            })),
            this.btnTreasure.getChildAt(0).anchor.set(.5),
            this.btnTreasure.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnTreasureDown.bind(this.btnTreasure, this)),
            this.btnTreasure.interactive = !0,
            this.btnTreasure.buttonMode = !0,
            this.boxTimerTreasure = new Sprite(TextureCache["bg-treasure-normal.png"]),
            this.boxTimerTreasure.anchor.set(.5),
            this.boxTimerTreasure.position.set(438, 258),
            this.boxTimerTreasure.addChild(new PIXI.Text("00:00",{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["#000"]
            })),
            this.boxTimerTreasure.getChildAt(0).anchor.set(.5),
            this.boxTimerTreasure.visible = !1,
            this.txtUserName = new PIXI.Text("undefined" != typeof App && App.account ? App.account.nickname : "",{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["white"]
            }),
            this.txtUserName.anchor.set(.5),
            this.txtUserName.position.set(-403, 241),
            this.txtBalance = new PIXI.Text("undefined" != typeof App && App.account ? s.Util.ParseMoney(App.account.goldbalance) : "",{
                fontFamily: "Times New Roman",
                fontSize: 14,
                fontWeight: "bold",
                fill: ["#ffae00"]
            }),
            this.txtBalance.anchor.set(.5),
            this.txtBalance.position.set(-403, 257),
            this.btnSpin = new Sprite(TextureCache["btn-spin-normal-" + a.Config.lang + ".png"]),
            this.btnSpin.name = "btn-spin-normal-" + a.Config.lang + ".png",
            this.btnSpin.anchor.set(.5),
            this.btnSpin.position.set(17, 248),
            this.btnSpin.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("mousedown", this.BtnSpinDown.bind(this.btnSpin, this)).on("touchend", this.BtnSpinDown.bind(this.btnSpin, this)),
            this.btnSpin.interactive = !1,
            this.btnSpin.buttonMode = !1,
            this.btnStopAuto = new Sprite(TextureCache["btn-stop-normal-" + a.Config.lang + ".png"]),
            this.btnStopAuto.name = "btn-stop-normal-" + a.Config.lang + ".png",
            this.btnStopAuto.anchor.set(.5),
            this.btnStopAuto.position.set(17, 248),
            this.btnStopAuto.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnStopAutoDown.bind(this.btnStopAuto, this)),
            this.btnStopAuto.interactive = !0,
            this.btnStopAuto.buttonMode = !0,
            this.btnStopAuto.visible = !1,
            this.txtFreeTicket = new PIXI.Text("+0 Free",{
                fontFamily: "Arial",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#fff"],
                stroke: "#000",
                strokeThickness: 2
            }),
            this.txtFreeTicket.anchor.set(.5),
            this.txtFreeTicket.position.set(13, 200),
            this.txtFreeTicket.visible = !1,
            this.boxTrial = new Graphics,
            this.boxTrial.beginFill(0, .5),
            this.boxTrial.drawRect(0, 0, 300, 28),
            this.boxTrial.position.set(-136, -143),
            this.boxTrial.visible = !1,
            this.txtBalanceTrial = new PIXI.Text(Message.GetMessage("sl84") + ": 0",{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["#ffae00"]
            }),
            this.txtBalanceTrial.anchor.set(.5),
            this.txtBalanceTrial.position.set(this.boxTrial.x + this.boxTrial.width / 2, this.boxTrial.y + this.boxTrial.height / 2),
            this.txtBalanceTrial.visible = !1,
            this.boxFree = new Graphics,
            this.boxFree.beginFill(0, .6),
            this.boxFree.drawRect(0, 0, 220, 28),
            this.boxFree.position.set(-100, 160),
            this.boxFree.visible = !1,
            this.txtFreeTurn = new PIXI.Text(Message.GetMessage("sl20") + ": 0",{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["white"]
            }),
            this.txtFreeTurn.anchor.set(.5),
            this.txtFreeTurn.position.set(this.boxFree.x + this.boxFree.width / 2, this.boxFree.y + this.boxFree.height / 2),
            this.txtFreeTurn.visible = !1,
            this.buttonContainer.addChild(this.btnTrial, this.btnReal, this.btnBack, this.btnHide, this.txtSession, this.btnGuide, this.btnRank, this.btnHistory, this.btnSoundOn, this.btnSoundOff, this.lblLines, this.txtLines, this.btnMinusLine, this.btnPlusLine, this.lblBetValue, this.txtBetValue, this.btnMinusBet, this.btnPlusBet, this.txtTotalBet, this.lblJustWon, this.txtJustWon, this.btnX2, this.btnAuto, this.txtAuto, this.btnMinusAuto, this.btnPlusAuto, this.btnTreasure, this.boxTimerTreasure, this.txtUserName, this.txtBalance, this.boxFree, this.txtFreeTurn, this.btnSpin, this.btnStopAuto, this.btnQuick, this.txtFreeTicket, this.boxTrial, this.txtBalanceTrial)
        }
        ,
        m.prototype.InitChar = function() {
            this.txtMoney = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 50,
                fontWeight: "bold",
                fill: ["#d9c116"],
                stroke: "#000",
                strokeThickness: 5
            }),
            this.txtMoney.anchor.set(.5),
            this.txtMoney.position.set(17, 140),
            this.txtMoney.visible = !1,
            this.machine.addChild(this.effectContainer, this.txtMoney),
            this.devil = new AnimatedSprite(this.framesDevilFire),
            this.devil.anchor.set(.5),
            this.devil.animationSpeed = .2,
            this.devil.loop = !0,
            this.devil.play(),
            this.devil.position.set(-410, 0),
            this.lego = new Sprite(TextureCache["lego-normal.png"]),
            this.lego.anchor.set(.5),
            this.lego.position.set(435, 26),
            this.machine.addChild(this.devil, this.lego),
            this.arrLego = [];
            for (var t = 0; t < 9; t++) {
                var e = new Sprite(TextureCache["icon-treasure-" + (t + 1) + ".png"]);
                e.anchor.set(.5),
                e.visible = !1,
                e.position.set(this.arrLegoPos[t][0], this.arrLegoPos[t][1]),
                this.arrLego.push(e),
                this.machine.addChild(e)
            }
            this.txtMoneyTreasure = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 30,
                fontWeight: "bold",
                fill: ["#fffd00"],
                stroke: "#6f3b14",
                strokeThickness: 2
            }),
            this.txtMoneyTreasure.anchor.set(.5),
            this.txtMoneyTreasure.position.set(420, 100),
            this.txtMoneyTreasure.visible = !1,
            this.txtMultiTreasure = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["#fff"],
                stroke: "#4c180a",
                strokeThickness: 2
            }),
            this.txtMultiTreasure.anchor.set(.5),
            this.txtMultiTreasure.position.set(420, 125),
            this.txtMultiTreasure.visible = !1,
            this.iconTreasure = new Sprite(TextureCache["icon-lego.png"]),
            this.iconTreasure.anchor.set(.5),
            this.iconTreasure.position.set(13, 24),
            this.iconTreasure.visible = !1,
            this.machine.addChild(this.iconTreasure, this.txtMoneyTreasure, this.txtMultiTreasure)
        }
        ,
        m.prototype.InitPopup = function() {
            this.machine.addChild(this.popupContainer),
            this.boxPopup = new Sprite(TextureCache["popup.png"]),
            this.boxPopup.anchor.set(.5),
            this.boxPopup.position.set(0, 15),
            this.txtNotify = new PIXI.Text(Message.GetMessage("sl27").toUpperCase(),{
                fontFamily: "Times New Roman",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#000"]
            }),
            this.txtNotify.anchor.set(.5),
            this.txtNotify.position.set(0, -93),
            this.boxPopup.addChild(this.txtNotify);
            var t = new Sprite(TextureCache["btn-close-normal.png"]);
            t.name = "btn-close-normal.png",
            t.anchor.set(.5),
            t.position.set(150, -70),
            this.boxPopup.addChild(t),
            t.interactive = !0,
            t.buttonMode = !0;
            var e = this;
            t.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                e.boxPopup.visible = !1
            });
            var n = new PIXI.Text("",{
                fontFamily: "Times New Roman",
                fontSize: 16,
                fill: ["#000"],
                wordWrap: !0,
                wordWrapWidth: 500,
                align: "center"
            });
            n.anchor.set(.5),
            this.boxPopup.addChild(n),
            this.boxPopup.visible = !1,
            this.machine.addChild(this.boxPopup)
        }
        ,
        m.prototype.InitPopupWin = function() {
            this.boxPopupWin = new Sprite(TextureCache["popup.png"]),
            this.boxPopupWin.anchor.set(.5),
            this.boxPopupWin.position.set(0, 15),
            this.txtCongrats = new PIXI.Text(Message.GetMessage("sl21"),{
                fontFamily: "Times New Roman",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#000"]
            }),
            this.txtCongrats.anchor.set(.5),
            this.txtCongrats.position.set(0, -93),
            this.boxPopupWin.addChild(this.txtCongrats);
            var t = new Sprite(TextureCache["btn-close-normal.png"]);
            t.name = "btn-close-normal.png",
            t.anchor.set(.5),
            t.position.set(150, -70),
            this.boxPopupWin.addChild(t),
            t.interactive = !0,
            t.buttonMode = !0;
            var e = this;
            t.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                e.boxPopupWin.visible = !1
            });
            var n = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 30,
                fontWeight: "bold",
                fill: ["#ffffff", "orange"],
                stroke: "#4a1850",
                strokeThickness: 5,
                wordWrap: !0,
                wordWrapWidth: 440
            });
            n.anchor.set(.5),
            n.position.set(0, 20);
            var i = new PIXI.Text(Message.GetMessage("sl52"),{
                fontFamily: "Times New Roman",
                fontSize: 16,
                fill: ["#000"],
                wordWrap: !0,
                wordWrapWidth: 500,
                align: "center"
            });
            i.anchor.set(.5),
            i.position.set(0, -30);
            var o = new PIXI.Text("trong",{
                fontFamily: "Times New Roman",
                fontSize: 16,
                fill: ["#000"],
                wordWrap: !0,
                wordWrapWidth: 500,
                align: "center"
            });
            o.anchor.set(.5),
            o.position.set(0, 70),
            this.boxPopupWin.addChild(i, n, o),
            this.machine.addChild(this.boxPopupWin),
            this.boxPopupWin.visible = !1
        }
        ,
        m.prototype.InitGuide = function() {
            var t = this;
            this.payTable = new Sprite(TextureCache["guide.png"]),
            this.payTable.anchor.set(.5),
            this.payTable.position.set(15, 21),
            this.payTableContent = new Sprite(TextureCache["guide-" + a.Config.lang + "-1.png"]),
            this.payTableContent.anchor.set(.5),
            this.payTable.addChild(this.payTableContent);
            var e = new Sprite(TextureCache["btn-close-normal.png"]);
            e.name = "btn-close-normal.png",
            e.anchor.set(.5),
            e.position.set(260, -125),
            this.payTable.addChild(e),
            e.interactive = !0,
            e.buttonMode = !0,
            e.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                t.payTable.visible = !1
            }),
            this.prevGuide = new Sprite(TextureCache["btn-prev-next-normal.png"]),
            this.prevGuide.name = "btn-prev-next-normal.png",
            this.prevGuide.anchor.set(.5),
            this.prevGuide.scale.x = -1,
            this.prevGuide.position.set(-280, 0),
            this.payTable.addChild(this.prevGuide),
            this.prevGuide.interactive = !0,
            this.prevGuide.buttonMode = !0,
            this.prevGuide.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                t.inxGuide--,
                t.inxGuide <= 0 && (t.inxGuide = 4),
                t.payTableContent.texture = TextureCache["guide-" + a.Config.lang + "-" + t.inxGuide + ".png"]
            }),
            this.nextGuide = new Sprite(TextureCache["btn-prev-next-normal.png"]),
            this.nextGuide.name = "btn-prev-next-normal.png",
            this.nextGuide.anchor.set(.5),
            this.nextGuide.position.set(280, 0),
            this.payTable.addChild(this.nextGuide),
            this.nextGuide.interactive = !0,
            this.nextGuide.buttonMode = !0,
            this.nextGuide.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                t.inxGuide++,
                4 < t.inxGuide && (t.inxGuide = 1),
                t.payTableContent.texture = TextureCache["guide-" + a.Config.lang + "-" + t.inxGuide + ".png"]
            }),
            this.payTable.visible = !1,
            this.machine.addChild(this.payTable)
        }
        ,
        m.prototype.JoinGame = function(t) {
            this.hubs.connection.invoke("PlayNow", {
                RoomID: t,
                CurrencyID: a.Config.currencyId
            })
        }
        ,
        m.prototype.UpdateJackpot = function(t) {
            0 < t && !a.Config.isTry && r.contents.CountJackPot(this.txtJackpot, !0, !1, t, 3.5)
        }
        ,
        m.prototype.JoinRoom = function(t) {
            console.log(t),
            this.accountId = t.AccountID,
            this.currentPlayer = t,
            this.xEvent.visible = !1,
            this.txtUserName.text = t.Account.Nickname,
            this.txtUserName.visible = !0,
            this.txtBalance.text = s.Util.ParseMoney(t.Account.GoldBalance, void 0),
            this.balance = t.Account.GoldBalance,
            a.Config.roomId = t.RoomID,
            a.Config.totalLines = this.line ? this.line : t.TotalLine,
            this.line = null,
            a.Config.betValue = t.BetValue,
            a.Config.inRoom = !0,
            a.Config.moneyType = t.moneyType,
            s.Util.ClearTimeOut(a.Config.timeJackpot),
            this.CheckGame(this),
            window.Config.EnableXEvent && r.contents.GetEvent(this)
        }
        ,
        m.prototype.CheckGame = function(t) {
            if (s.Util.ClearTimeOut(a.Config.timeCheck),
            this.currentPlayer && null != this.currentPlayer.SlotInfo && a.Config.ready) {
                if (r.contents.UpdateControl(t),
                r.contents.GetTicket(t),
                (3 === this.currentPlayer.SlotInfo.GameStatus || null != this.currentPlayer.BonusGame && null != this.currentPlayer.BonusGame.BonusItemsData) && (a.Config.isBonus = !0),
                0 < this.currentPlayer.SlotInfo.FreeSpins && (a.Config.isFreeSpin = !0,
                a.Config.totalFreeSpin = this.currentPlayer.SlotInfo.FreeSpins,
                a.Config.freeSpinCount = this.currentPlayer.SlotInfo.FreeSpins),
                2 === this.currentPlayer.SlotInfo.GameStatus && 0 < this.currentPlayer.X2Game.StartBetValue && (a.Config.isX2 = !0),
                a.Config.isX2)
                    return void (this.x2 = new u.x2(t));
                if (a.Config.isBonus)
                    return this.bonus = new o.bonus(t),
                    void this.bonus.Init();
                if (a.Config.isFreeSpin)
                    return t.boxFree.visible = t.txtFreeTurn.visible = !0,
                    t.txtFreeTurn.text = Message.GetMessage("sl20") + ": " + this.currentPlayer.SlotInfo.FreeSpins,
                    void t.InitSpin(t);
                this.CheckAutoSpin() || r.contents.EnableButtons(t)
            } else
                a.Config.timeBonus = setTimeout(function() {
                    t.CheckGame(t)
                }, 500)
        }
        ,
        m.prototype.ShowMessage = function(t) {
            var e = this.boxPopup;
            e.getChildAt(2).text = t,
            e.visible = !0,
            a.Config.timePop = setTimeout(function() {
                e.visible = !1
            }, 2e3)
        }
        ,
        m.prototype.ShowError = function(t) {
            var e;
            switch (console.log("error", t),
            t) {
            case -51:
                e = Message.GetMessage("sl40");
                break;
            case -99:
                e = Message.GetMessage("sl71");
                break;
            case -600:
                e = Message.GetMessage("sl70");
                break;
            case -40004:
                e = Message.GetMessage("sl69");
                break;
            case -40005:
                e = Message.GetMessage("sl66"),
                setTimeout(App.handleBack, 2e3);
                break;
            default:
                e = Message.GetMessage("" + t)
            }
            this.ShowMessage(e)
        }
        ,
        m.prototype.ChangeSlots = function() {
            for (var t, e = 0; e < this.totalItems - 3; e++)
                t = Math.floor(11 * Math.random()) + 1,
                this.column1[e].texture = TextureCache[t + (0 < e && !a.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(11 * Math.random()) + 1,
                this.column2[e].texture = TextureCache[t + (0 < e && !a.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(11 * Math.random()) + 1,
                this.column3[e].texture = TextureCache[t + (0 < e && !a.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(11 * Math.random()) + 1,
                this.column4[e].texture = TextureCache[t + (0 < e && !a.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(11 * Math.random()) + 1,
                this.column5[e].texture = TextureCache[t + (0 < e && !a.Config.useBlur ? "-blur" : "") + ".png"]
        }
        ,
        m.prototype.ShowLines = function(t) {
            this.DisableLines();
            for (var e = 0; e < t; e++)
                this.lines[e].visible = !0
        }
        ,
        m.prototype.DisableLines = function() {
            for (var t = 0; t < this.lines.length; t++)
                this.lines[t].visible = !1
        }
        ,
        m.prototype.BtnOver = function() {
            this.texture = TextureCache[this.name.replace("normal", "hover")]
        }
        ,
        m.prototype.BtnOut = function() {
            this.texture = TextureCache[this.name]
        }
        ,
        m.prototype.BtnTrialDown = function(t) {
            a.Config.isTry = !0,
            t.btnTrial.visible = !1,
            t.btnReal.visible = !0,
            t.xEvent.visible = !1,
            t.trial = new l.trial(t)
        }
        ,
        m.prototype.BtnRealDown = function(t) {
            a.Config.isTry = !1,
            t.btnTrial.visible = !0,
            t.btnReal.visible = !1,
            t.boxTrial.visible = !1,
            t.txtBalanceTrial.visible = !1,
            t.BeforeSpin(),
            t.currentPlayerMain ? (t.currentPlayer = t.currentPlayerMain,
            t.JoinRoom(t.currentPlayer),
            t.currentPlayerMain = null) : (t.txtJustWon.text = "0",
            t.txtBetValue.text = "100",
            t.txtTotalBet.text = "100",
            t.txtLines.text = "1")
        }
        ,
        m.prototype.BtnBackDown = function(t) {
            window.location.hash = "#",
            window.location.reload()
        }
        ,
        m.prototype.btnHideDown = function(t) {
            a.Config.isAutoSpin ? (window.App.isAuto = !0,
            window.App.isAuto && (sessionStorage.setItem("Auto-" + t.storage, a.Config.roomId + ";" + a.Config.autoSpinCount + ";" + a.Config.isAutoSpin + ";" + a.Config.totalLines),
            window.location.hash = "#",
            window.location.reload())) : t.ShowMessage(Message.GetMessage("sl98"))
        }
        ,
        m.prototype.BtnGuideDown = function(t) {
            t.payTable.visible = !t.payTable.visible,
            t.payTable.visible && (t.nextGuide.visible = t.prevGuide.visible = !0,
            t.inxGuide = 1,
            t.payTableContent.texture = TextureCache["guide-" + a.Config.lang + "-1.png"])
        }
        ,
        m.prototype.BtnRankDown = function(t) {
            t.trans()
        }
        ,
        m.prototype.BtnHistoryDown = function(t) {
            t.his()
        }
        ,
        m.prototype.BtnSoundOnDown = function(t) {
            this.visible = !1,
            t.btnSoundOff.visible = !0,
            PIXI.sound.stopAll(),
            a.Config.sound = !1
        }
        ,
        m.prototype.BtnSoundOffDown = function(t) {
            this.visible = !1,
            t.btnSoundOn.visible = !0;
            try {
                t.bgSound.play()
            } catch (t) {}
            a.Config.sound = !0
        }
        ,
        m.prototype.BtnMinusLineDown = function(t) {
            if (!a.Config.isTicket && !a.Config.isTry && r.contents.CheckLoginOrInRoom(t)) {
                var e = t.currentPlayer;
                if (a.Config.totalLines = a.Config.totalLines <= 1 ? 25 : a.Config.totalLines - 1,
                r.contents.UpdateLines(t, a.Config.totalLines),
                r.contents.UpdateTotalBet(t, a.Config.totalLines * e.BetValue),
                t.ShowLines(a.Config.totalLines),
                a.Config.sound)
                    try {
                        PIXI.sound.play("lineSound")
                    } catch (t) {}
            }
        }
        ,
        m.prototype.BtnPlusLineDown = function(t) {
            if (!a.Config.isTicket && !a.Config.isTry && r.contents.CheckLoginOrInRoom(t)) {
                var e = t.currentPlayer;
                if (a.Config.totalLines = 25 <= a.Config.totalLines ? 1 : a.Config.totalLines + 1,
                r.contents.UpdateLines(t, a.Config.totalLines),
                r.contents.UpdateTotalBet(t, a.Config.totalLines * e.BetValue),
                t.ShowLines(a.Config.totalLines),
                a.Config.sound)
                    try {
                        PIXI.sound.play("lineSound")
                    } catch (t) {}
            }
        }
        ,
        m.prototype.BtnMinusBetDown = function(t) {
            if (!a.Config.isTry && r.contents.CheckLoginOrInRoom(t)) {
                if (a.Config.sound)
                    try {
                        PIXI.sound.play("betSound")
                    } catch (t) {}
                var e = a.Config.roomId - 1;
                e <= 0 && (e = 3),
                t.JoinGame(e)
            }
        }
        ,
        m.prototype.BtnPlusBetDown = function(t) {
            if (!a.Config.isTry && r.contents.CheckLoginOrInRoom(t)) {
                if (a.Config.sound)
                    try {
                        PIXI.sound.play("betSound")
                    } catch (t) {}
                var e = a.Config.roomId + 1;
                3 < e && (e = 1),
                t.JoinGame(e)
            }
        }
        ,
        m.prototype.BtnX2Down = function(t) {
            var e;
            a.Config.isBonus || a.Config.isX2 || a.Config.isFreeSpin || null == (e = t.currentPlayer) || 0 < e.SlotInfo.FreeSpins || e.X2Game.StartBetValue <= 0 || (t.x2 = new u.x2(t))
        }
        ,
        m.prototype.BtnQuickDown = function(t) {
            a.Config.isQuick = !a.Config.isQuick,
            t.btnQuick.texture = t.loader.resources.quick.textures["quickspin" + (a.Config.isQuick ? "-active" : "") + ".png"]
        }
        ,
        m.prototype.BtnAutoDown = function(t) {
            a.Config.autoSpinCount <= 0 ? t.ShowMessage(Message.GetMessage("sl89")) : (a.Config.isAutoSpin = window.App.isAutoOracle = !0,
            $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
            window.App.isAuto && (window.App.showPopupMessage({
                content: Message.GetMessage("sl94").replace("{0}", Message.GetMessage("na9")),
                textDone: "OK"
            }),
            sessionStorage.setItem("Auto-" + t.storage, a.Config.roomId + ";" + a.Config.autoSpinCount + ";" + a.Config.isAutoSpin + ";" + a.Config.totalLines),
            $(".ml-slot-g-oracle .state").removeClass("play").addClass("rolling"),
            $(".multislot-expand").addClass("active")),
            t.InitSpin(t))
        }
        ,
        m.prototype.BtnMinusAutoDown = function(t) {
            var e = a.Config.idx
              , n = a.Config.autoSpinNumber;
            --e < 0 && (e = n.length - 1);
            var i = a.Config.autoSpinNumber[e];
            t.txtAuto.text = s.Util.ParseMoney(i, void 0),
            a.Config.autoSpinCount = i,
            a.Config.idx = e
        }
        ,
        m.prototype.BtnPlusAutoDown = function(t) {
            var e = a.Config.idx;
            ++e > a.Config.autoSpinNumber.length - 1 && (e = 0);
            var n = a.Config.autoSpinNumber[e];
            t.txtAuto.text = s.Util.ParseMoney(n, void 0),
            a.Config.autoSpinCount = n,
            a.Config.idx = e
        }
        ,
        m.prototype.BtnTreasureDown = function(t) {
            t.payTable.visible = !0,
            t.nextGuide.visible = t.prevGuide.visible = !1,
            t.payTableContent.texture = TextureCache["guide-" + a.Config.lang + "-5.png"]
        }
        ,
        m.prototype.BtnSpinDown = function(t) {
            t.InitSpin(t)
        }
        ,
        m.prototype.BtnStopAutoDown = function(t) {
            r.contents.StopAutoSpin(t)
        }
        ,
        m.prototype.DestroyEffect = function() {
            if (this.effect)
                try {
                    this.effect.destroy({
                        children: !0
                    })
                } catch (t) {}
            this.effectContainer.removeChildren(),
            this.iconsContainer.removeChildren()
        }
        ,
        m.prototype.BeforeSpin = function() {
            r.contents.ClearTimer(),
            this.DestroyEffect(),
            this.destroyMoney(),
            this.DisableLines(),
            a.Config.numbShowEachLine = 0,
            a.Config.numberDown = 0,
            r.contents.DisableButtons(this),
            a.Config.isBonus = a.Config.isBigWin = a.Config.isJackpot = a.Config.isWinFree = a.Config.isX2 = a.Config.isSuperWin = a.Config.isMegaWin = a.Config.isFinishX2 = !1,
            this.txtMoney.visible = !1,
            this.txtMoney.text = "0";
            try {
                a.Config.countMoney.reset(),
                a.Config.countMoneyJw.reset()
            } catch (t) {}
            try {
                this.bigWinSound.stop()
            } catch (t) {}
            try {
                this.jackpotSound.stop()
            } catch (t) {}
            try {
                this.countSound.stop()
            } catch (t) {}
            if (this.isCount)
                try {
                    this.txtJustWon.text = s.Util.ParseMoney(this.currentPlayer.SpinData.PayLinePrizeValue)
                } catch (t) {}
            this.isCount = !1,
            this.boxPopup.visible = !1,
            this.boxPopupWin.visible = !1,
            a.Config.payLines = [],
            a.Config.lineItemsArr = []
        }
        ,
        m.prototype.InitSpin = function(t) {
            var e = t;
            if (!(a.Config.isSpin || a.Config.isX2 || a.Config.isBonus)) {
                e.BeforeSpin(),
                1 !== this.hubs.connection.connection.connectionState && t.InitHubs(),
                a.Config.countMoney = null,
                a.Config.timeSpin = setTimeout(function() {
                    a.Config.isSpin && (a.Config.isSpin = !1,
                    r.contents.StopAutoSpin(e),
                    r.contents.EnableButtons(e))
                }, 12e3);
                try {
                    a.Config.isTry ? a.Config.isFreeSpin ? (-1 === e.trial.index && (e.trial.index = s.Util.RandomFrom(0, e.trial.dataFree.length - 1, !1)),
                    e.trial.turn++,
                    e.StartSpin(e.trial.dataFree[e.trial.index][e.trial.turn - 1])) : e.StartSpin(e.trial.data[s.Util.RandomFrom(0, e.trial.data.length - 1, !1)]) : a.Config.isTicket && !a.Config.isFreeSpin ? e.hubs.connection.invoke("SpinForTicket", {
                        MerchantID: 0,
                        RoomID: a.Config.roomId,
                        CurrencyID: a.Config.currencyId,
                        TotalLine: a.Config.totalLines
                    }).catch(function() {
                        e.ShowMessage(Message.GetMessage("sl71")),
                        a.Config.isSpin = !1,
                        r.contents.StopAutoSpin(e),
                        r.contents.EnableButtons(e)
                    }) : e.hubs.connection.invoke("Spin", {
                        MerchantID: 0,
                        RoomID: a.Config.roomId,
                        CurrencyID: a.Config.currencyId,
                        TotalLine: a.Config.totalLines
                    }).then(function(t) {
                        t.c < 0 && (e.ShowError(t.c),
                        a.Config.isSpin = !1,
                        r.contents.StopAutoSpin(e),
                        r.contents.EnableButtons(e))
                    }).catch(function() {
                        e.ShowMessage(Message.GetMessage("sl71")),
                        a.Config.isSpin = !1,
                        r.contents.StopAutoSpin(e),
                        r.contents.EnableButtons(e)
                    })
                } catch (t) {
                    e.ShowMessage(Message.GetMessage("sl71")),
                    a.Config.isSpin = !1,
                    r.contents.StopAutoSpin(e),
                    r.contents.EnableButtons(e)
                }
            }
        }
        ,
        m.prototype.StartSpin = function(t) {
            var i, e = this;
            a.Config.isSpin || (this.currentPlayer = t,
            a.Config.isSpin = !0,
            e.txtSession.text = "#" + this.currentPlayer.SpinData.SpinID,
            e.ChangeSlots(),
            a.Config.slotData = [],
            a.Config.slotData = t.SpinData.SlotsData.split(","),
            s.Util.ClearTimeOut(a.Config.timeSpin),
            e.column1[1].texture = TextureCache[a.Config.slotData[0] + ".png"],
            e.column1[2].texture = TextureCache[a.Config.slotData[5] + ".png"],
            e.column1[3].texture = TextureCache[a.Config.slotData[10] + ".png"],
            e.column2[1].texture = TextureCache[a.Config.slotData[1] + ".png"],
            e.column2[2].texture = TextureCache[a.Config.slotData[6] + ".png"],
            e.column2[3].texture = TextureCache[a.Config.slotData[11] + ".png"],
            e.column3[1].texture = TextureCache[a.Config.slotData[2] + ".png"],
            e.column3[2].texture = TextureCache[a.Config.slotData[7] + ".png"],
            e.column3[3].texture = TextureCache[a.Config.slotData[12] + ".png"],
            e.column4[1].texture = TextureCache[a.Config.slotData[3] + ".png"],
            e.column4[2].texture = TextureCache[a.Config.slotData[8] + ".png"],
            e.column4[3].texture = TextureCache[a.Config.slotData[13] + ".png"],
            e.column5[1].texture = TextureCache[a.Config.slotData[4] + ".png"],
            e.column5[2].texture = TextureCache[a.Config.slotData[9] + ".png"],
            e.column5[3].texture = TextureCache[a.Config.slotData[14] + ".png"],
            a.Config.isQuick && (e.column1[11].texture = TextureCache[a.Config.slotData[0] + ".png"],
            e.column1[12].texture = TextureCache[a.Config.slotData[5] + ".png"],
            e.column1[13].texture = TextureCache[a.Config.slotData[10] + ".png"],
            e.column2[11].texture = TextureCache[a.Config.slotData[1] + ".png"],
            e.column2[12].texture = TextureCache[a.Config.slotData[6] + ".png"],
            e.column2[13].texture = TextureCache[a.Config.slotData[11] + ".png"],
            e.column3[11].texture = TextureCache[a.Config.slotData[2] + ".png"],
            e.column3[12].texture = TextureCache[a.Config.slotData[7] + ".png"],
            e.column3[13].texture = TextureCache[a.Config.slotData[12] + ".png"],
            e.column4[11].texture = TextureCache[a.Config.slotData[3] + ".png"],
            e.column4[12].texture = TextureCache[a.Config.slotData[8] + ".png"],
            e.column4[13].texture = TextureCache[a.Config.slotData[13] + ".png"],
            e.column5[11].texture = TextureCache[a.Config.slotData[4] + ".png"],
            e.column5[12].texture = TextureCache[a.Config.slotData[9] + ".png"],
            e.column5[13].texture = TextureCache[a.Config.slotData[14] + ".png"]),
            a.Config.itemsWin = [],
            a.Config.linesWin = [],
            a.Config.itemsWinAr = [],
            0 < (null != e.currentPlayer.SpinData.PrizesData ? Object.keys(e.currentPlayer.SpinData.PrizesData).length : 0) && (i = e.currentPlayer.SpinData.PrizesData.split(";"),
            $.each(e.currentPlayer.SpinData.PositionData.split(";"), function(t, e) {
                var n = $.map(e.split(","), function(t) {
                    return parseInt(t)
                });
                a.Config.itemsWinAr.push(n),
                a.Config.linesWin.push(i[t].split(",")[0]),
                $.each(n, function(t, e) {
                    $.inArray(e, a.Config.itemsWin) < 0 && a.Config.itemsWin.push(e)
                }),
                1e3 === parseInt(i[t].split(",")[0]) && (a.Config.isWinFree = !0)
            })),
            t.SpinData.IsJackpot && (a.Config.isJackpot = !0),
            t.SlotInfo.IsFreeSpin && (a.Config.isWinFree = !0),
            3 === t.SpinData.GameStatus && null !== t.BonusGame.BonusItemsData && 0 < t.BonusGame.BonusItemsData.length && (a.Config.isBonus = !0),
            (a.Config.isFreeSpin || a.Config.isTicket) && (e.currentPlayer.SpinData.TotalBetValue = a.Config.totalLines * e.currentPlayer.BetValue),
            e.currentPlayer.SpinData.PayLinePrizeValue >= 100 * e.currentPlayer.BetValue && (a.Config.isBigWin = !0),
            a.Config.isFreeSpin || r.contents.UpdateAutoSpin(e),
            e.Spin())
        }
        ,
        m.prototype.Spin = function() {
            var t = this;
            if (r.contents.ClearTimer(),
            a.Config.isQuick ? (t.timeTween = .7,
            t.timeBack = .1,
            t.delayFirst = .15,
            t.spinTo = -t.startHeight - 1100) : (t.timeTween = 1.2,
            t.timeBack = .2,
            t.spinTo = -t.startHeight,
            t.delayFirst = .3),
            a.Config.sound)
                try {
                    PIXI.sound.play("spinSound")
                } catch (t) {}
            TweenMax.to(t.containerColumn1, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 0,
                data: "oracle",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("stopSound")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn1, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "oracle",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.containerColumn1.y = 0,
                            t.column1[t.totalItems - 3].texture = t.column1[1].texture,
                            t.column1[t.totalItems - 3].inx = t.column1[1].inx,
                            t.column1[t.totalItems - 2].texture = t.column1[2].texture,
                            t.column1[t.totalItems - 2].inx = t.column1[2].inx,
                            t.column1[t.totalItems - 1].texture = t.column1[3].texture,
                            t.column1[t.totalItems - 1].inx = t.column1[3].inx
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn2, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: t.delayFirst,
                data: "oracle",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("stopSound")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn2, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "oracle",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column2[t.totalItems - 3].texture = t.column2[1].texture,
                            t.column2[t.totalItems - 3].inx = t.column2[1].inx,
                            t.column2[t.totalItems - 2].texture = t.column2[2].texture,
                            t.column2[t.totalItems - 2].inx = t.column2[2].inx,
                            t.column2[t.totalItems - 1].texture = t.column2[3].texture,
                            t.column2[t.totalItems - 1].inx = t.column2[3].inx,
                            t.containerColumn2.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn3, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 2 * t.delayFirst,
                data: "oracle",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("stopSound")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn3, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "oracle",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column3[t.totalItems - 3].texture = t.column3[1].texture,
                            t.column3[t.totalItems - 3].inx = t.column3[1].inx,
                            t.column3[t.totalItems - 2].texture = t.column3[2].texture,
                            t.column3[t.totalItems - 2].inx = t.column3[2].inx,
                            t.column3[t.totalItems - 1].texture = t.column3[3].texture,
                            t.column3[t.totalItems - 1].inx = t.column3[3].inx,
                            t.containerColumn3.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn4, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 3 * t.delayFirst,
                data: "oracle",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("stopSound")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn4, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "oracle",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column4[t.totalItems - 3].texture = t.column4[1].texture,
                            t.column4[t.totalItems - 3].inx = t.column4[1].inx,
                            t.column4[t.totalItems - 2].texture = t.column4[2].texture,
                            t.column4[t.totalItems - 2].inx = t.column4[2].inx,
                            t.column4[t.totalItems - 1].texture = t.column4[3].texture,
                            t.column4[t.totalItems - 1].inx = t.column4[3].inx,
                            t.containerColumn4.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn5, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 4 * t.delayFirst,
                data: "oracle",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (a.Config.sound)
                        try {
                            PIXI.sound.play("stopSound")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn5, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "oracle",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column5[t.totalItems - 3].texture = t.column5[1].texture,
                            t.column5[t.totalItems - 3].inx = t.column5[1].inx,
                            t.column5[t.totalItems - 2].texture = t.column5[2].texture,
                            t.column5[t.totalItems - 2].inx = t.column5[2].inx,
                            t.column5[t.totalItems - 1].texture = t.column5[3].texture,
                            t.column5[t.totalItems - 1].inx = t.column5[3].inx,
                            t.containerColumn5.y = 0,
                            t.CompleteSpin()
                        }
                    })
                }
            })
        }
        ,
        m.prototype.CompleteSpin = function() {
            a.Config.isSpin = !1,
            this.ShowWin()
        }
        ,
        m.prototype.ShowWin = function() {
            var t = this;
            a.Config.isAutoSpin && r.contents.EnableButton(t.btnQuick),
            100 !== this.currentPlayer.BetValue || a.Config.isTry || r.contents.GetTicket(t),
            0 === a.Config.numberDown && 15 === a.Config.slotData.length && (a.Config.isTry ? (this.trial.balance += (a.Config.isFreeSpin ? 0 : -25e4) + this.currentPlayer.SpinData.PayLinePrizeValue,
            t.txtBalanceTrial.text = Message.GetMessage("sl84") + ": " + s.Util.ParseMoney(this.trial.balance, void 0),
            r.contents.CountJackPot(t.txtJackpot, !0, !1, this.trial.jackPot + 2500, 1),
            this.trial.jackPot += 2500) : (r.contents.UpdateBalance(t, t.currentPlayer.Account.GoldBalance),
            this.balance = t.currentPlayer.Account.GoldBalance),
            t.txtJustWon.text = s.Util.ParseMoney(t.currentPlayer.SpinData.PayLinePrizeValue, void 0)),
            !t.currentPlayer.SpinData.IsAccumulate || a.Config.isTry ? (a.Config.isTry || c.accu.UpdateAccumulation(t),
            t.NormalWinOrJackPotOrBigWin(t)) : c.accu.Effect(t)
        }
        ,
        m.prototype.destroyMoney = function() {
            try {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "money-fall-oracle" === t[e].data && t[e].kill();
                for (var n = 0; n < this.moneyArr.length; n++)
                    this.moneyArr[n].destroy({
                        children: !0
                    })
            } catch (t) {}
            this.moneyArr = []
        }
        ,
        m.prototype.random = function(t, e) {
            var n;
            return null == e && (e = t,
            t = 0),
            e < t && (n = t,
            t = e,
            e = n),
            t + (e - t) * Math.random()
        }
        ,
        m.prototype.effectMoney = function() {
            this.moneyArr = [];
            for (var t = 0; t < this.total; t++)
                this.moneyArr.push(new AnimatedSprite(this.framesCoins)),
                this.moneyArr[t].anchor.set(.5),
                this.moneyArr[t].animationSpeed = .3,
                this.moneyArr[t].scale.set(this.random(.5, 1.4)),
                this.moneyContainer.addChild(this.moneyArr[t]),
                this.moneyArr[t].play(),
                this.moneyArr[t].position.set(this.random(0, this.size[0]), this.random(-200, -150)),
                TweenMax.to(this.moneyArr[t], this.random(1, 8), {
                    data: "money-fall-oracle",
                    y: this.size[1] + 200,
                    ease: Linear.easeNone,
                    repeat: -1,
                    delay: -15
                })
        }
        ,
        m.prototype.Effect = function(t) {
            var e;
            switch (t) {
            case 0:
                e = null != TextureCache["txt-treasure-" + a.Config.lang + ".png"] ? TextureCache["txt-treasure-" + a.Config.lang + ".png"] : TextureCache["txt-treasure-en.png"];
                break;
            case 1:
                e = TextureCache["txt-jackpot.png"];
                break;
            case 2:
                e = null != TextureCache["txt-big-win-" + a.Config.lang + ".png"] ? TextureCache["txt-big-win-" + a.Config.lang + ".png"] : TextureCache["txt-big-win-en.png"];
                break;
            case 3:
                e = null != TextureCache["txt-bonus-" + a.Config.lang + ".png"] ? TextureCache["txt-bonus-" + a.Config.lang + ".png"] : TextureCache["txt-bonus-en.png"];
                break;
            case 4:
                e = null != TextureCache["txt-freespin-" + a.Config.lang + ".png"] ? TextureCache["txt-freespin-" + a.Config.lang + ".png"] : TextureCache["txt-free-en.png"]
            }
            var n = new Sprite(e);
            n.anchor.set(.5),
            n.position.set(17, 20),
            n.scale.set(.01),
            this.effectContainer.addChild(n),
            1 !== t && 2 !== t || this.effectMoney(),
            TweenMax.to(n.scale, .5, {
                x: 1,
                y: 1,
                data: "oracle"
            }),
            TweenMax.to(n.scale, .5, {
                x: 1.04,
                y: 1.04,
                repeat: 7,
                yoyo: !0,
                delay: .5,
                yoyoEase: Power1.easeInOut,
                data: "oracle"
            })
        }
        ,
        m.prototype.AllIcons = function() {
            try {
                for (var t = 0; t < a.Config.linesWin.length; t++) {
                    var e = a.Config.linesWin[t];
                    10 == e ? e = 11 : 11 == e && (e = 10),
                    this.lines[e - 1].visible = !0
                }
            } catch (t) {}
            for (t = 0; t < a.Config.itemsWin.length; t++) {
                var n = new AnimatedSprite(this.framesIconsEffect);
                n.position.set(this.itemsMainGame[parseInt(a.Config.itemsWin[t]) - 1].x, this.itemsMainGame[parseInt(a.Config.itemsWin[t]) - 1].y),
                n.anchor.set(.5),
                this.iconsContainer.addChild(n),
                n.animationSpeed = 1,
                n.loop = !0,
                n.play()
            }
        }
        ,
        m.prototype.CheckAutoSpin = function() {
            if (a.Config.isAutoSpin) {
                var t = this;
                return a.Config.timeSpin = setTimeout(function() {
                    t.InitSpin(t)
                }, 1500),
                !0
            }
            return a.Config.isAutoSpin = !1,
            a.Config.autoSpinMode = 0,
            !1
        }
        ,
        m.prototype.NormalWinOrJackPotOrBigWin = function(t) {
            var e = t;
            if (e.DestroyEffect(),
            e.lego.visible = !0,
            a.Config.countMoney = null,
            a.Config.countMoneyJw = null,
            0 < e.currentPlayer.SpinData.PayLinePrizeValue) {
                if (e.AllIcons(),
                e.txtMoney.visible = !0,
                0 === a.Config.numberDown && e.showInLobby(e.currentPlayer.SpinData.PayLinePrizeValue),
                a.Config.isJackpot) {
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                    if (e.Effect(1),
                    a.Config.sound)
                        try {
                            e.jackpotSound.play()
                        } catch (t) {}
                    r.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {
                        0 !== a.Config.numberDown || a.Config.isBonus || a.Config.isFreeSpin || a.Config.isWinFree || a.Config.isAutoSpin || r.contents.EnableButtons(e)
                    }),
                    0 === a.Config.numberDown && (e.isCount = !0,
                    r.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {})),
                    a.Config.isAutoSpin && r.contents.StopAutoSpin(e),
                    a.Config.timeBonusOrFree = setTimeout(function() {
                        return e.FreeOrBonus(e)
                    }, 16e3)
                } else if (a.Config.isBigWin) {
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                    var n = 4 * e.currentPlayer.SpinData.PayLinePrizeValue / (100 * e.currentPlayer.BetValue);
                    if (a.Config.sound)
                        try {
                            e.countSound.play()
                        } catch (t) {}
                    r.contents.CountMoney(e.txtMoney, !0, !1, 0, 100 * e.currentPlayer.BetValue, 0, 4, function() {
                        if (a.Config.sound)
                            try {
                                PIXI.sound.play("countEndSound")
                            } catch (t) {}
                        0 !== a.Config.numberDown || a.Config.isBonus || a.Config.isFreeSpin || a.Config.isWinFree || a.Config.isAutoSpin || r.contents.EnableButtons(e),
                        e.Effect(2),
                        r.contents.CountMoney(e.txtMoney, !0, !1, 100 * e.currentPlayer.BetValue, e.currentPlayer.SpinData.PayLinePrizeValue, 0, n - 4, function() {
                            if (a.Config.sound)
                                try {
                                    e.bigWinSound.play()
                                } catch (t) {}
                            try {
                                e.countSound.stop()
                            } catch (t) {}
                        })
                    }),
                    0 === a.Config.numberDown && (e.isCount = !0,
                    r.contents.CountMoney(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, n, function() {}, !0)),
                    a.Config.timeBonusOrFree = setTimeout(function() {
                        return e.FreeOrBonus(e)
                    }, 1e3 * (5 + n))
                } else
                    r.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1),
                    0 === a.Config.numberDown && r.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1, function() {}),
                    a.Config.timeBonusOrFree = setTimeout(function() {
                        return e.FreeOrBonus(e)
                    }, 1500);
                a.Config.isAutoSpin && 0 < this.currentPlayer.X2Game.StartBetValue && !a.Config.isBonus && !a.Config.isFreeSpin && r.contents.EnableButton(this.btnX2, "btn-x2-normal.png")
            } else
                a.Config.timeBonusOrFree = setTimeout(function() {
                    return e.FreeOrBonus(e)
                }, 0),
                e.txtJustWon.text = s.Util.ParseMoney(e.currentPlayer.SpinData.PayLinePrizeValue, void 0)
        }
        ,
        m.prototype.FreeOrBonus = function(t) {
            var e = this;
            e.isCount = !1,
            t.DestroyEffect(),
            t.DisableLines();
            try {
                e.destroyMoney(),
                a.Config.countMoney.reset(),
                a.Config.countMoneyJw.reset()
            } catch (t) {}
            0 === a.Config.numberDown && (e.txtJustWon.text = s.Util.ParseMoney(e.currentPlayer.SpinData.PayLinePrizeValue, void 0));
            try {
                e.bigWinSound.stop()
            } catch (t) {}
            try {
                e.jackpotSound.stop()
            } catch (t) {}
            try {
                e.countSound.stop()
            } catch (t) {}
            if (a.Config.sound)
                try {
                    e.bgSound.resume()
                } catch (t) {}
            if (t.txtMoney.visible = !1,
            a.Config.numberDown++,
            a.Config.isFreeSpin && !a.Config.isWinFree && (r.contents.UpdateFreeSpin(e),
            r.contents.UpdateTotalPrizeFreeSpin(e)),
            a.Config.isBonus)
                e.SetupBonus();
            else if (a.Config.isWinFree)
                e.SetupFreeSpin();
            else {
                if (a.Config.isFreeSpin)
                    return void (0 === a.Config.freeSpinCount ? a.Config.timeSpin = setTimeout(function() {
                        return e.FinishFreeSpin(e)
                    }, 1 === a.Config.autoSpinMode ? 500 : 1500) : 1 !== a.Config.autoSpinMode && (a.Config.timeSpin = setTimeout(function() {
                        return e.InitSpin(e)
                    }, 1e3)));
                e.CheckAutoSpin() || (r.contents.EnableButtons(e),
                0 < e.currentPlayer.SpinData.PayLinePrizeValue && e.ShowEachLine())
            }
        }
        ,
        m.prototype.SetupBonus = function() {
            this.DestroyEffect(),
            this.Effect(3);
            try {
                t.bgSound.pause()
            } catch (t) {}
            if (a.Config.sound)
                try {
                    PIXI.sound.play("pingSound")
                } catch (t) {}
            setTimeout(function() {
                if (a.Config.sound)
                    try {
                        PIXI.sound.play("bonusSound")
                    } catch (t) {}
            }, 2e3),
            this.bonus = new o.bonus(this);
            var t = this;
            a.Config.timeSpin = setTimeout(function() {
                t.bonus.Init()
            }, 6e3)
        }
        ,
        m.prototype.SetupFreeSpin = function() {
            if (a.Config.sound)
                try {
                    PIXI.sound.play("freeSound")
                } catch (t) {}
            var t = this.currentPlayer.SpinData.TotalFreeSpin;
            a.Config.isFreeSpin || (a.Config.freeSpinCount = a.Config.totalFreeSpin = a.Config.totalFreePrize = 0),
            a.Config.totalFreeSpin += t - a.Config.freeSpinCount,
            a.Config.isFreeSpin && a.Config.totalFreeSpin++,
            a.Config.freeSpinCount = t,
            a.Config.isFreeSpin = !0,
            this.Effect(4),
            this.boxFree.visible = !0,
            this.txtFreeTurn.text = Message.GetMessage("sl20") + ": " + a.Config.freeSpinCount,
            this.txtFreeTurn.visible = !0;
            var e = this;
            a.Config.timeSpin = setTimeout(function() {
                e.InitSpin(e)
            }, 3e3)
        }
        ,
        m.prototype.FinishFreeSpin = function(t) {
            var e = t;
            e.boxPopupWin.getChildAt(4).text = Message.GetMessage("sl82").replace("{0}", a.Config.totalFreeSpin),
            e.boxPopupWin.visible = !0,
            r.contents.CountNumber(e.boxPopupWin.getChildAt(3), !0, !1, 0, a.Config.totalFreePrize, 0, 1, function() {}),
            e.txtJustWon.text = s.Util.ParseMoney(a.Config.totalFreePrize, void 0),
            a.Config.totalFreeSpin = a.Config.totalFreePrize = a.Config.freeSpinCount = 0,
            a.Config.isFreeSpin = !1,
            e.boxFree.visible = !1,
            a.Config.isTry && (e.trial.index = -1,
            e.trial.turn = 0),
            a.Config.timeSpin = setTimeout(function() {
                e.boxPopupWin.visible = !1,
                e.CheckAutoSpin() || r.contents.EnableButtons(e)
            }, 3500)
        }
        ,
        m.prototype.FinishBonus = function(t) {}
        ,
        m.prototype.ShowEachLine = function() {
            var t, e, n = this, i = a.Config.linesWin.length;
            a.Config.isSpin || i <= 0 ? s.Util.ClearTimeInterval(a.Config.timeIntEachLine) : (e = t = 0,
            a.Config.numbShowEachLine++,
            a.Config.timeIntEachLine = setInterval(function() {
                if (a.Config.isSpin || i <= 0)
                    s.Util.ClearTimeInterval(a.Config.timeIntEachLine);
                else if (n.DestroyEffect(),
                n.DisableLines(),
                n.EachLineEffect(a.Config.itemsWinAr[t], a.Config.linesWin[t], e),
                e++,
                ++t === i) {
                    if (s.Util.ClearTimeInterval(a.Config.timeIntEachLine),
                    2 === a.Config.numbShowEachLine)
                        return s.Util.ClearTimeInterval(a.Config.timeIntEachLine),
                        void (a.Config.timeSpin = setTimeout(function() {
                            n.DestroyEffect(),
                            n.DisableLines()
                        }, 1100));
                    a.Config.timeOutEachLine = setTimeout(function() {
                        n.NormalWinOrJackPotOrBigWin(n)
                    }, 1e3)
                }
            }, 1e3))
        }
        ,
        m.prototype.EachLineEffect = function(t, e, n) {
            for (var i, o = 0; o < t.length; o++) {
                var s = new AnimatedSprite(this.framesIconsEffect);
                s.position.set(this.itemsMainGame[parseInt(t[o]) - 1].x, this.itemsMainGame[parseInt(t[o]) - 1].y),
                s.anchor.set(.5),
                this.iconsContainer.addChild(s),
                s.animationSpeed = 1,
                s.loop = !0,
                s.play()
            }
            e <= 25 && (10 == (i = e) ? i = 11 : 11 == i && (i = 10),
            console.log(i),
            this.lines[i - 1].visible = !0)
        }
        ,
        m.prototype.Delete = function() {
            r.contents.DeleteTimer(),
            r.contents.DeleteTweens();
            try {
                PIXI.sound.stopAll(),
                PIXI.sound.removeAll()
            } catch (t) {}
            try {
                this.loader.destroy()
            } catch (t) {}
            window.removeEventListener("resize", this.resizeFunc),
            this.bonus && delete this.bonus,
            a.Config.isAutoSpin = a.Config.isSpin = a.Config.inRoom = a.Config.isBonus = a.Config.isWinFree = a.Config.isFreeSpin = !1,
            a.Config.isLogin = !1,
            r.contents.DeleteTimer(),
            a.Config.countJp = null;
            try {
                this.loader && delete this.loader
            } catch (t) {}
            try {
                document.URL.indexOf("slot") < 0 ? this.application.destroy(!0) : this.application.destroy(!1)
            } catch (t) {}
            try {
                this.hubs.connection.stop()
            } catch (t) {}
        }
        ,
        m.prototype.StopAuto = function() {
            this.isAuto = !1,
            $("#rolling-" + this.storage).removeClass("active"),
            $("#list-jp-icon-" + a.Config.gameId + "-play").length && $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
            $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).length && $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-playing").addClass("button-play"),
            $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().removeClass("playing"),
            $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId + "-playing").html(""),
            $("#list-jp-icon-" + a.Config.gameId + "-playing").html("");
            try {
                this.silent.setSession()
            } catch (t) {}
            try {
                this.silent && window.App.gameSlots && "oracle" === window.App.gameSlots.game.storage && window.App.gameSlots.game.StopAuto(),
                r.contents.StopAutoSpin(this)
            } catch (t) {}
        }
        ,
        m.prototype.StartAuto = function() {
            var t = this;
            if (0 < this.silent.autoSpin) {
                this.isAuto = !0,
                $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
                $("#list-jp-icon-" + a.Config.gameId + "-play").length && $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).length && $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().addClass("playing");
                try {
                    if (this.silent && window.App.gameSlots && "oracle" === window.App.gameSlots.game.storage)
                        return void window.App.gameSlots.game.BtnAutoDown()
                } catch (t) {}
                return this.silent.setSession(),
                setTimeout(function() {
                    return t.silent.initSpin(t.silent)
                }, 500),
                !0
            }
            return this.silent.removeSession(),
            !1
        }
        ,
        m.prototype.CheckAuto = function() {
            return this.isAuto
        }
        ,
        m.prototype.SetSilent = function() {
            a.Config.isAutoSpin && 0 < a.Config.autoSpinCount && sessionStorage.setItem("Auto-" + this.storage, a.Config.roomId + ";" + a.Config.autoSpinCount + ";true;" + a.Config.totalLines)
        }
        ,
        m.prototype.RestartAuto = function(t, e, n) {
            var i = this;
            this.isAuto = !0,
            $(".ml-slot-g-oracle .state").removeClass("play").addClass("rolling"),
            $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
            $("#list-jp-icon-" + a.Config.gameId + "-play").length && $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            this.silent.autoSpin = n,
            t != a.Config.roomId ? (this.line = e,
            a.Config.roomId = t,
            this.silent.setSession(),
            1 === this.hubs.connection.connection.connectionState ? this.JoinGame(a.Config.roomId) : this.InitHubs()) : (a.Config.totalLines = e,
            1 === this.hubs.connection.connection.connectionState ? setTimeout(function() {
                return i.silent.initSpin(i.silent)
            }, 200) : this.InitHubs()),
            $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).length && $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().addClass("playing")
        }
        ,
        m.prototype.getRoomId = function() {
            return console.log("Config.roomId", a.Config.roomId),
            a.Config.roomId
        }
        ,
        m.prototype.showInLobby = function(t) {
            var e;
            a.Config.isAutoSpin && ($("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + a.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#rolling-" + this.storage).hasClass("active") || $("#rolling-" + this.storage).addClass("active"),
            $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().hasClass("playing") || $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().addClass("playing"),
            $("#mn-lobby-rolling-oracle").length && ($("#mn-lobby-rolling-oracle").append('<span class="rolling-win">+' + s.Util.ParseMoney(t) + "</span>"),
            TweenMax.to($("#mn-lobby-rolling-oracle .rolling-win"), 2, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })),
            (e = $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId)).length && (e.parent().append('<span class="win active">+' + s.Util.ParseMoney(t) + "</span>"),
            TweenMax.to(e.parent().find("span.win"), 1, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })))
        }
        ,
        m.prototype.InitNotSilent = function(t) {
            this.isSilent = !1,
            this.size = t.size,
            this.target = t.target,
            this.loader = new PIXI.loaders.Loader,
            this.his = t.getHistory,
            this.trans = t.getStatistic,
            a.Config.ready = !1,
            this.GetAutoSpin(),
            this.CreateCanvas()
        }
        ,
        m.prototype.CreateCanvas = function() {
            PIXI.utils.skipHello(),
            this.application = new PIXI.Application(this.size[0],this.size[1],{
                transparent: !0,
                antialias: !0,
                view: this.target
            });
            var t = this;
            this.application.ticker.add(function() {
                t.Update()
            }),
            this.InitContainer();
            for (var e = 0; e < this.assets.length; e++)
                "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
            this.loader.onProgress.add(function() {
                return t.Loading(t)
            }),
            this.loader.load(function() {
                t.InitGame(),
                t.CheckGame(t),
                $("#divLoading").hide()
            })
        }
        ,
        m);
        function m(t) {
            this.assets = [{
                id: "items",
                src: "/slots/oracle/json/items.json"
            }, {
                id: "devil",
                src: "/slots/oracle/json/devil.json"
            }, {
                id: "bonusEffect",
                src: "/slots/oracle/json/bonus-effect.json"
            }, {
                id: "freeEffect",
                src: "/slots/oracle/json/free-effect.json"
            }, {
                id: "x2Effect",
                src: "/slots/oracle/json/x2-effect.json"
            }, {
                id: "x2",
                src: "/slots/oracle/json/x2.json"
            }, {
                id: "bonus",
                src: "/slots/oracle/json/bonus.json"
            }, {
                id: "ground",
                src: "/slots/oracle/json/ground.json"
            }, {
                id: "blood",
                src: "/slots/oracle/json/blood.json"
            }, {
                id: "accumulation",
                src: "/slots/oracle/json/accumulation.json"
            }, {
                id: "assets0",
                src: "/slots/oracle/json/assets-0.json"
            }, {
                id: "assets1",
                src: "/slots/oracle/json/assets-1.json"
            }, {
                id: "event",
                src: "/slots/oracle/json/event.json"
            }, {
                id: "quick",
                src: "/slots/oracle/json/quick.json"
            }, {
                id: "hide",
                src: "/slots/oracle/json/hide.json"
            }, {
                id: "fxJackpot",
                src: "/slots/oracle/json/fxJackpot.json"
            }, {
                id: "bgOracle",
                src: "/slots/oracle/assets/images/bg.jpg"
            }, {
                id: "machineOracle",
                src: "/slots/oracle/assets/images/bg-main.png"
            }, {
                id: "iconsAnimation",
                src: "/slots/oracle/assets/images/anim.png"
            }, {
                id: "lines",
                src: "/slots/oracle/assets/images/lines.png"
            }, {
                id: "coinOracle",
                src: "/slots/oracle/assets/images/coin.png"
            }, {
                id: "dotActive",
                src: "/slots/oracle/assets/images/dot-active.png"
            }, {
                id: "dotInActive",
                src: "/slots/oracle/assets/images/dot-in-active.png"
            }, {
                id: "bgSound",
                src: "/slots/oracle/assets/sounds/bgSound.mp3"
            }, {
                id: "lineSound",
                src: "/slots/oracle/assets/sounds/lineSound.mp3"
            }, {
                id: "betSound",
                src: "/slots/oracle/assets/sounds/betSound.mp3"
            }, {
                id: "accumulationSound",
                src: "/slots/oracle/assets/sounds/accumulationSound.mp3"
            }, {
                id: "accumulationWinSound",
                src: "/slots/oracle/assets/sounds/accumulationWinSound.mp3"
            }, {
                id: "bigWinSound",
                src: "/slots/oracle/assets/sounds/bigWinSound.mp3"
            }, {
                id: "bonusSound",
                src: "/slots/oracle/assets/sounds/bonusSound.mp3"
            }, {
                id: "freeSound",
                src: "/slots/oracle/assets/sounds/freeSound.mp3"
            }, {
                id: "jackpotSound",
                src: "/slots/oracle/assets/sounds/jackpotSound.mp3"
            }, {
                id: "moneySound",
                src: "/slots/oracle/assets/sounds/moneySound.mp3"
            }, {
                id: "spinSound",
                src: "/slots/oracle/assets/sounds/spinSound.mp3"
            }, {
                id: "stopSound",
                src: "/slots/oracle/assets/sounds/stopSound.mp3"
            }, {
                id: "x2ClickSound",
                src: "/slots/oracle/assets/sounds/x2WinSound.mp3"
            }, {
                id: "x2WinSound",
                src: "/slots/oracle/assets/sounds/spinSound.mp3"
            }, {
                id: "x2LoseSound",
                src: "/slots/oracle/assets/sounds/x2LoseSound.mp3"
            }, {
                id: "bonusClickSound",
                src: "/slots/oracle/assets/sounds/bonusClickSound.mp3"
            }, {
                id: "bonusLoseSound",
                src: "/slots/oracle/assets/sounds/bonusLoseSound.mp3"
            }, {
                id: "bonusStartSound",
                src: "/slots/oracle/assets/sounds/bonusStartSound.mp3"
            }, {
                id: "bonusWinFirstSound",
                src: "/slots/oracle/assets/sounds/bonusWinFirstSound.mp3"
            }, {
                id: "bonusWinSecondSound",
                src: "/slots/oracle/assets/sounds/bonusWinSecondSound.mp3"
            }, {
                id: "pingSound",
                src: "/slots/oracle/assets/sounds/ping.mp3"
            }, {
                id: "countSound",
                src: "/slots/oracle/assets/sounds/count.mp3"
            }, {
                id: "countEndSound",
                src: "/slots/oracle/assets/sounds/count_end.mp3"
            }],
            this.column1 = {},
            this.column2 = {},
            this.column3 = {},
            this.column4 = {},
            this.column5 = {},
            this.isCount = !1,
            this.total = 100,
            this.line = null,
            this.linesPos = [[-18, 37], [-18, -47], [-18, 142], [45, 18], [45, 25], [52, -26], [-22, 72], [-18, 35], [-16, 16], [-20, 26], [50, 28], [46, -28], [44, 88], [-20, -26], [-18, 86], [46, -22], [-16, 70], [46, 32], [46, 30], [-18, 26], [-20, 34], [52, 30], [-24, 26], [46, 26], [46, 28]],
            this.totalItems = 31,
            this.isSilent = !1,
            this.isAuto = !1,
            this.arrBox = [],
            this.autoClientArr = [10, 50, 200, 1e3, 5e3],
            this.balance = 0,
            this.arrLegoPos = [[423, 158], [420, 90], [414, 2], [438, -72], [470, -24], [496, -74], [378, -84], [376, 34], [430, -132]],
            this.inxGuide = 1,
            this.timeTween = 1.2,
            this.timeBack = .2,
            this.timeDelay = .1,
            this.timeSlow = .3,
            this.pointBack = -204,
            this.pointNext = -184,
            this.timerCount = 1,
            this.spinTo = 0,
            this.delayFirst = 0,
            t.storage && (this.storage = t.storage),
            t.isSilent && (this.isSilent = t.isSilent),
            this.token = t.token,
            a.Config.lang = Language.GetLanguageCode(),
            a.Config.hubUrl = t.hubUrl,
            a.Config.apiUrl = t.apiUrl,
            a.Config.api = t.api,
            t.currencyID ? a.Config.currencyId = t.currencyID : a.Config.currencyId = "undefined" != typeof App ? App.account.currencyID : 1,
            this.isSilent ? (a.Config.ready = !0,
            this.isAuto = !0,
            this.ResetTweenTab(),
            this.silent = new p.silent(this)) : (this.size = t.size,
            this.target = t.target,
            this.loader = new PIXI.loaders.Loader,
            this.his = t.getHistory,
            this.trans = t.getStatistic,
            a.Config.ready = !1,
            this.GetAutoSpin(),
            this.Init())
        }
        e.games = h
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var i = n(2)
          , o = n(5)
          , s = (a.prototype.Init = function() {
            var e = this;
            this.connection = (new i.HubConnectionBuilder).withUrl(this.url, {
                accessTokenFactory: function() {
                    return e.token
                },
                skipNegotiation: !0,
                transport: i.HttpTransportType.WebSockets
            }).build(),
            this.connection.serverTimeoutInMilliseconds = 1e5,
            this.connection.start().then(function() {
                o.Config.isLogin = !0,
                console.log("connected"),
                e.connection.invoke("PlayNow", {
                    RoomID: o.Config.roomId,
                    CurrencyID: o.Config.currencyId
                })
            }).catch(function(t) {
                return console.error(t)
            }),
            this.connection.on("JoinGame", function(t) {
                e.game.isSilent ? e.game.silent.joinRoom(t) : e.game.JoinRoom(t)
            }),
            this.connection.on("ResultSpin", function(t) {
                e.game.isSilent ? e.game.silent.startSpin(t) : e.game.StartSpin(t)
            }),
            this.connection.on("MessageError", function(t) {
                e.game.isSilent || e.game.ShowError(t)
            }),
            this.connection.on("ResultBonusGame", function(t) {
                e.game && e.game.bonus && e.game.bonus.ResultBonus(t)
            }),
            this.connection.on("ResultX2Game", function(t) {
                e.game.isSilent || e.game.x2.ShowResult(t)
            }),
            this.connection.on("UpdateJackpot", function(t) {
                e.game.isSilent || e.game.UpdateJackpot(t)
            })
        }
        ,
        a);
        function a(t, e, n) {
            this.url = t,
            this.token = e,
            this.game = n,
            this.Init()
        }
        e.default = s
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.bonus = void 0;
        var a = n(0)
          , r = n(5)
          , l = n(9);
        n(1);
        var i = (o.prototype.CreateFrames = function() {
            var t, e = this;
            for (e.framesBlood = [],
            e.framesBegin = [],
            e.framesLoop = [],
            e.framesAttack = [],
            e.framesGround = [],
            e.framesHit = [],
            e.framesBeginBack = [],
            e.framesGroundBack = [],
            t = 1; t < 38; t++)
                e.framesGround.push(TextureCache["ground-" + t + ".png"]);
            for (t = 37; 0 < t; t--)
                e.framesGroundBack.push(TextureCache["ground-" + t + ".png"]);
            for (t = 1; t < 27; t++)
                e.framesBlood.push(TextureCache["blood-" + t + ".png"]);
            for (t = 1; t < 16; t++)
                e.framesBegin.push(TextureCache["scorpion-" + t + ".png"]);
            for (t = 15; 0 < t; t--)
                e.framesBeginBack.push(TextureCache["scorpion-" + t + ".png"]);
            for (t = 16; t < 33; t++)
                e.framesLoop.push(TextureCache["scorpion-" + t + ".png"]);
            for (t = 33; t < 44; t++)
                e.framesHit.push(TextureCache["scorpion-" + t + ".png"]);
            for (t = 44; t < 59; t++)
                e.framesAttack.push(TextureCache["scorpion-" + t + ".png"])
        }
        ,
        o.prototype.Init = function() {
            var t = this;
            if (t.bonusContainer = new Container,
            t.game.machine.addChild(t.bonusContainer),
            l.contents.ClearTimer(),
            t.game.DestroyEffect(),
            t.game.DisableLines(),
            t.currentStep !== t.game.currentPlayer.BonusGame.TotalTurn - 1) {
                var e = new Sprite(TextureCache["bonus-bg.png"]);
                e.position.set(-285, -144);
                var n = new PIXI.Text(Message.GetMessage("ol1"),{
                    fontFamily: "Times New Roman",
                    fontSize: 30,
                    fontWeight: "bold",
                    fill: "white",
                    padding: 10
                });
                n.position.set(0, -120),
                n.anchor.set(.5);
                var i = new PIXI.Text(Message.GetMessage("ol2"),{
                    fontFamily: "Times New Roman",
                    fontSize: 16,
                    fontWeight: "bold",
                    fill: "white",
                    padding: 10
                });
                if (i.position.set(203, 150),
                i.anchor.set(.5, 0),
                t.txtMoney = new PIXI.Text("0",{
                    fontFamily: "Times New Roman",
                    fontSize: 16,
                    fontWeight: "bold",
                    fill: "#ffae00",
                    padding: 10
                }),
                t.txtMoney.position.set(203, 175),
                t.txtMoney.anchor.set(.5),
                t.txtTimer = new PIXI.Text(Message.GetMessage("sl78").replace("{0}", this.timer),{
                    fontFamily: "Times New Roman",
                    fontSize: 16,
                    fill: ["#ffffff"]
                }),
                t.txtTimer.position.set(-270, 175),
                t.txtTimer.anchor.set(0, .5),
                r.Config.sound)
                    try {
                        t.game.bgSound.resume()
                    } catch (t) {}
                t.bonusContainer.addChild(e, n, i, t.txtMoney, t.txtTimer);
                var o = new AnimatedSprite(t.framesGround);
                o.position.set(0, -160),
                o.anchor.set(.5, 0),
                t.bonusContainer.addChild(o),
                o.animationSpeed = .5,
                o.loop = !1,
                o.play();
                var s = new AnimatedSprite(t.framesBegin);
                s.position.set(0, -160),
                s.anchor.set(.5, 0),
                t.bonusContainer.addChild(s),
                s.animationSpeed = .3,
                s.loop = !1,
                s.play(),
                s.onComplete = function() {
                    o.destroy(),
                    s.destroy(),
                    t.scorpion.visible = !0,
                    t.scorpion.play()
                }
                ,
                t.scorpion = new AnimatedSprite(t.framesLoop),
                t.scorpion.visible = !1,
                t.scorpion.position.set(0, -160),
                t.scorpion.anchor.set(.5, 0),
                t.bonusContainer.addChild(t.scorpion),
                t.scorpion.animationSpeed = .3,
                t.scorpion.loop = !0,
                t.scorpion.interactive = !0,
                t.scorpion.buttonMode = !0,
                t.scorpion.on("pointerdown", t.ScorpionDown.bind(t.scorpion, t)),
                t.UpdateMoney(t.GetSumMoney(t.currentStep)),
                0 !== t.currentStep || r.Config.isTry ? t.txtTimer.visible = !1 : r.Config.timeBonus = setTimeout(function() {
                    t.CountBonus(t)
                }, 500)
            } else
                t.CreateMultiple(t)
        }
        ,
        o.prototype.CountBonus = function(t) {
            var e = t;
            if (a.Util.ClearTimeOut(r.Config.timeBonus),
            e.timer--,
            t.txtTimer.text = Message.GetMessage("sl78").replace("{0}", (t.timer < 10 ? "0" : "") + t.timer),
            e.timer <= 0) {
                if (t.txtTimer.visible = !1,
                r.Config.isTry)
                    return void e.PlayAll(e);
                e.game.hubs.connection.invoke("PlayBonusGameAll", {
                    RoomID: r.Config.roomId,
                    CurrencyID: r.Config.currencyId
                }).then(function(t) {
                    0 <= t.c && e.PlayAll(e)
                })
            } else
                r.Config.timeBonus = setTimeout(function() {
                    e.CountBonus(e)
                }, 1e3)
        }
        ,
        o.prototype.UpdateMoney = function(t) {
            l.contents.CountNumber(this.txtMoney, !0, !1, 0, t, 0, .5)
        }
        ,
        o.prototype.GetMoney = function(t) {
            for (var e = 0, n = 0; n < this.arrResult.length; n++)
                if (this.arrResult[n].Step === t) {
                    e = this.arrResult[n].PrizeValue;
                    break
                }
            return e
        }
        ,
        o.prototype.GetSumMoney = function(t) {
            var e = 0;
            if (null != this.game.currentPlayer.BonusGame)
                for (var n = 0; n < t; n++)
                    e += this.arrResult[n].PrizeValue;
            return e
        }
        ,
        o.prototype.ScorpionDown = function(t) {
            var e = t;
            this.interactive = !1,
            this.visible = !1,
            e.currentStep++,
            e.txtTimer.visible = !1,
            a.Util.ClearTimeOut(r.Config.timeBonus);
            var n = new AnimatedSprite(e.framesHit);
            n.position.set(0, -160),
            n.anchor.set(.5, 0),
            e.bonusContainer.addChild(n),
            n.animationSpeed = .3,
            n.loop = !1,
            n.play();
            var i = new AnimatedSprite(e.framesBlood);
            i.position.set(0, -160),
            i.anchor.set(.5, 0),
            e.bonusContainer.addChild(i),
            i.animationSpeed = .3,
            i.loop = !1,
            i.play(),
            n.onComplete = function() {
                n.destroy(),
                i.destroy(),
                e.scorpion.visible = !0
            }
            ,
            r.Config.isTry ? e.PlayStep(e.currentStep) : e.game.hubs.connection.invoke("PlayBonusGame", {
                RoomID: r.Config.roomId,
                CurrencyID: r.Config.currencyId,
                ItemID: e.currentStep
            }).then(function(t) {
                t.c < 0 && (e.scorpion.interactive = !0,
                e.scorpion.buttonMode = !0,
                e.currentStep--)
            }).catch(function(t) {
                e.scorpion.interactive = !0,
                e.scorpion.buttonMode = !0,
                e.currentStep--
            })
        }
        ,
        o.prototype.ResultBonus = function(t) {
            console.log(t),
            t.CurrentTurn < t.TotalTurn && 0 !== t.CurrentTurn ? this.PlayStep(t) : 0 < t.BonusPrizeID && (this.prizeId = t.BonusPrizeID)
        }
        ,
        o.prototype.CheckSkull = function(t) {
            for (var e = 0; e < this.arrResult.length; e++)
                if (this.arrResult[e].Step === t && 0 === this.arrResult[e].PrizeValue && 110 === this.arrResult[e].PrizeID)
                    return !0;
            return !1
        }
        ,
        o.prototype.PlayStep = function(t) {
            var i = this
              , e = i.CheckSkull(i.currentStep)
              , n = new PIXI.Text(a.Util.ParseMoney(i.GetMoney(i.currentStep), void 0),{
                fontFamily: "Arial",
                fontSize: 36,
                fontWeight: "bold",
                fill: ["#ffffff", "#00ff99"],
                stroke: "#4a1850",
                strokeThickness: 2,
                dropShadow: !0,
                dropShadowColor: "#000000",
                dropShadowBlur: 1,
                dropShadowAngle: Math.PI / 6,
                dropShadowDistance: 2,
                wordWrap: !0,
                wordWrapWidth: 440
            });
            n.position.set(0, 0),
            n.anchor.set(.5, 0),
            i.bonusContainer.addChild(n),
            TweenMax.to(n, .5, {
                data: "oracle",
                y: -200,
                alpha: 0,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    i.UpdateMoney(i.GetSumMoney(i.currentStep))
                }
            }),
            i.currentStep < i.game.currentPlayer.BonusGame.TotalTurn - 1 && (i.scorpion.interactive = !0,
            i.scorpion.buttonMode = !0),
            !e && i.currentStep !== i.game.currentPlayer.BonusGame.TotalTurn - 1 || (r.Config.timeBonus = setTimeout(function() {
                i.scorpion.visible = !1;
                var n = new AnimatedSprite(i.framesAttack);
                n.position.set(0, -160),
                n.anchor.set(.5, 0),
                i.bonusContainer.addChild(n),
                n.animationSpeed = .3,
                n.loop = !1,
                n.play(),
                n.onComplete = function() {
                    n.destroy();
                    var t = new AnimatedSprite(i.framesGroundBack);
                    t.position.set(0, -160),
                    t.anchor.set(.5, 0),
                    i.bonusContainer.addChild(t),
                    t.animationSpeed = .5,
                    t.loop = !1,
                    t.play();
                    var e = new AnimatedSprite(i.framesBeginBack);
                    e.position.set(0, -160),
                    e.anchor.set(.5, 0),
                    i.bonusContainer.addChild(e),
                    e.animationSpeed = .3,
                    e.loop = !1,
                    e.play(),
                    e.onComplete = function() {
                        setTimeout(function() {
                            t.destroy(),
                            e.destroy(),
                            i.CreateMultiple(i)
                        }, 500)
                    }
                }
            }, 1e3))
        }
        ,
        o.prototype.CreateMultiple = function(t) {
            var e = t;
            e.bonusContainer && e.bonusContainer.removeChildren();
            var n = new Sprite(TextureCache["bonus-bg.png"]);
            n.position.set(-285, -144);
            var i, o = new PIXI.Text(Message.GetMessage("sl85"),{
                fontFamily: "Times New Roman",
                fontSize: 30,
                fontWeight: "bold",
                fill: "white",
                padding: 10
            });
            for (o.position.set(0, -120),
            o.anchor.set(.5),
            e.bonusContainer.addChild(n, o),
            e.buttonMultipler = [],
            i = 0; i < 3; i++)
                e.buttonMultipler.push(new Sprite(TextureCache["D2-1.png"])),
                e.buttonMultipler[i].position.set(0 === i ? -160 : 1 === i ? 13 : 187, 20),
                e.buttonMultipler[i].anchor.set(.5),
                e.buttonMultipler[i].inx = i,
                e.bonusContainer.addChild(e.buttonMultipler[i]),
                e.buttonMultipler[i].scale.set(0, 0),
                e.buttonMultipler[i].interactive = !0,
                e.buttonMultipler[i].buttonMode = !0,
                e.buttonMultipler[i].on("pointerover", e.ButtonMultiplerOver).on("pointerout", e.ButtonMultiplerOut).on("pointerdown", e.ButtonMultiplerDown.bind(e.buttonMultipler[i], e)),
                e.iconMultipler.push(new Sprite(TextureCache["D3.png"])),
                e.iconMultipler[i].position.set(0 === i ? -160 : 1 === i ? 13 : 187, 20),
                e.iconMultipler[i].alpha = 0,
                e.iconMultipler[i].anchor.set(.5),
                e.bonusContainer.addChild(e.iconMultipler[i]);
            for (i = 0; i < 3; i++)
                TweenMax.to(e.buttonMultipler[i].scale, .3, {
                    data: "oracle",
                    x: 1,
                    y: 1,
                    delay: 0,
                    ease: Power0.easeNone,
                    onComplete: function() {}
                })
        }
        ,
        o.prototype.ButtonMultiplerOver = function() {
            this.texture = TextureCache["D2-2.png"]
        }
        ,
        o.prototype.ButtonMultiplerOut = function() {
            this.texture = TextureCache["D2-1.png"]
        }
        ,
        o.prototype.ButtonMultiplerDown = function(t) {
            var e = t;
            e.buttonChoose = this.inx,
            e.iconMultipler[e.buttonChoose].scale.x = 0;
            var n = new Sprite(TextureCache["x" + e.arrResult[e.arrResult.length - 1].Multiplier + ".png"]);
            n.position.set(0 === e.buttonChoose ? -160 : 1 === e.buttonChoose ? 13 : 187, 20),
            n.anchor.set(.5),
            n.scale.x = 0,
            e.bonusContainer.addChild(n),
            e.iconMultipler[e.buttonChoose].alpha = 1;
            for (var i = 0; i < 3; i++)
                e.buttonMultipler[i].interactive = !1,
                e.buttonMultipler[i].buttonMode = !1,
                e.buttonChoose !== i && (e.buttonMultipler[i].texture = TextureCache["D1.png"]);
            TweenMax.to(e.buttonMultipler[e.buttonChoose].scale, .5, {
                data: "oracle",
                x: 0,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {}
            }),
            TweenMax.to(e.iconMultipler[e.buttonChoose].scale, .5, {
                data: "oracle",
                x: -1,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {}
            }),
            TweenMax.to(n.scale, .5, {
                data: "oracle",
                x: 1,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    setTimeout(function() {
                        e.buttonMultipler[e.buttonChoose].visible = !1,
                        e.FinishBonus(e)
                    }, 1e3)
                }
            })
        }
        ,
        o.prototype.FinishBonus = function(t) {
            var e = t;
            if (r.Config.sound)
                try {
                    PIXI.sound.play("bonusWinSecondSound")
                } catch (t) {}
            try {
                if (r.Config.isTry)
                    return void e.PlayMultiplier();
                e.game.hubs.connection.invoke("PlayBonusGame", {
                    RoomID: r.Config.roomId,
                    CurrencyID: r.Config.currencyId,
                    ItemID: 0
                }).then(function(t) {
                    console.log(t),
                    0 <= t.c && e.PlayMultiplier()
                }).catch(function(t) {})
            } catch (t) {
                console.log(t)
            }
        }
        ,
        o.prototype.GetRandom = function(t, e) {
            for (var n = new Array, i = [1, 2, 3, 4, 5], i = 28 === e ? [3, 4, 5] : 29 === e ? [2, 3, 4] : [1, 2, 3], o = 0; o < i.length; o++)
                if (i[o] === t) {
                    i.splice(o, 1);
                    break
                }
            var s = Math.round(Math.random())
              , a = i[1 - s]
              , r = i[s];
            return n.push(a),
            n.push(r),
            n
        }
        ,
        o.prototype.PlayMultiplier = function() {
            for (var t, e, n = this, i = n.GetRandom(n.arrResult[n.arrResult.length - 1].Multiplier, n.prizeId), o = 0; o < 3; o++)
                o !== n.buttonChoose && (t = i[0],
                i.splice(0, 1),
                (e = new Sprite(TextureCache["x" + t + ".png"])).position.set(0 === o ? -160 : 1 === o ? 13 : 187, 20),
                e.anchor.set(.5),
                e.scale.x = 0,
                n.bonusContainer.addChild(e),
                n.iconMultipler[o].scale.x = 0,
                n.iconMultipler[o].alpha = .6,
                TweenMax.to(n.buttonMultipler[o].scale, .5, {
                    data: "oracle",
                    x: 0,
                    delay: 0,
                    ease: Power0.easeNone,
                    onComplete: function() {}
                }),
                TweenMax.to(n.iconMultipler[o].scale, .5, {
                    data: "oracle",
                    x: -1,
                    delay: 0,
                    ease: Power0.easeNone,
                    onComplete: function() {}
                }),
                TweenMax.to(e.scale, .5, {
                    data: "oracle",
                    x: 1,
                    delay: 0,
                    ease: Power0.easeNone,
                    onComplete: function() {}
                }));
            setTimeout(function() {
                n.PlayAll(n)
            }, 1e3)
        }
        ,
        o.prototype.PlayAll = function(t) {
            var e = t.game
              , n = t
              , i = n.arrResult[n.arrResult.length - 1].PrizeValue / n.arrResult[n.arrResult.length - 1].Multiplier
              , o = n.arrResult[n.arrResult.length - 1].Multiplier
              , s = n.arrResult[n.arrResult.length - 1].PrizeValue;
            r.Config.isFreeSpin && (r.Config.totalFreePrize += s),
            r.Config.isTry ? (e.trial.balance += s,
            n.game.txtBalanceTrial.text = Message.GetMessage("sl84") + ": " + a.Util.ParseMoney(n.game.trial.balance, void 0)) : (n.game.balance += s,
            l.contents.UpdateBalance(n.game, n.game.balance)),
            e.txtJustWon.text = a.Util.ParseMoney(s, void 0),
            r.Config.isBonus = !1,
            e.currentPlayer.X2Game.StartBetValue += s,
            setTimeout(function() {
                if (e.boxPopupWin.getChildAt(4).text = Message.GetMessage("sl83"),
                e.boxPopupWin.visible = !0,
                r.Config.sound)
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                if (r.Config.sound)
                    try {
                        PIXI.sound.play("popupSound")
                    } catch (t) {}
                e.boxPopupWin.getChildAt(3).text = a.Util.ParseMoney(i, void 0) + " x " + o + " = " + a.Util.ParseMoney(s, void 0),
                n.bonusContainer.destroy({
                    children: !0
                }),
                r.Config.isTry || (e.currentPlayer.BonusGame.BonusItemsData = null),
                setTimeout(function() {
                    if (delete e.bonus,
                    r.Config.sound)
                        try {
                            PIXI.sound.stop("popupSound")
                        } catch (t) {}
                    if (r.Config.sound)
                        try {
                            e.bgSound.resume()
                        } catch (t) {}
                    if (r.Config.isWinFree)
                        e.SetupFreeSpin();
                    else {
                        if (r.Config.isFreeSpin)
                            return void (0 === r.Config.freeSpinCount ? r.Config.timeSpin = setTimeout(function() {
                                return e.FinishFreeSpin(e)
                            }, 1 === r.Config.autoSpinMode ? 500 : 1500) : 1 !== r.Config.autoSpinMode && (r.Config.timeSpin = setTimeout(function() {
                                return e.InitSpin(e)
                            }, 500)));
                        e.CheckAutoSpin() || (l.contents.EnableButtons(e),
                        0 < e.currentPlayer.SpinData.PayLinePrizeValue && e.ShowEachLine())
                    }
                }, 3e3)
            }, 1500)
        }
        ,
        o);
        function o(t) {
            this.selectedItems = [],
            this.currentStep = 0,
            this.pointAttack = [],
            this.moneyBonus = [],
            this.buttonMultipler = [],
            this.iconMultipler = [],
            this.buttonChoose = 0,
            this.prizeId = -1,
            this.timer = 15,
            this.framesBlood = [],
            this.framesLoop = [],
            this.framesAttack = [],
            this.framesGround = [],
            this.framesHit = [],
            this.framesGroundBack = [],
            this.framesBeginBack = [],
            this.game = t,
            l.contents.DisableButtons(t),
            this.timer = 15,
            this.currentStep = t.currentPlayer.BonusGame.CurrentTurn,
            this.arrResult = t.currentPlayer.BonusGame.BonusItemsData,
            this.CreateFrames()
        }
        e.bonus = i
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.trial = void 0;
        function i(t) {
            this.player = {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    X2StartValue: 2e3,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 521600,
                    LastPrizeValue: 2e3,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 0,
                    X2StartValue: 0,
                    PayLinePrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 0,
                    BonusGameData: null,
                    SpinID: 0,
                    SlotsData: null,
                    PrizesData: null,
                    PositionData: null,
                    TotalBetValue: 0,
                    IsJackpot: !1,
                    Jackpot: 0,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 2e3,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T10:06:35.8919704",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 18295195,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            },
            this.balance = 5e7,
            this.jackPot = 5e7,
            this.data = [{
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    X2StartValue: 2e3,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 521600,
                    LastPrizeValue: 2e3,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 25,
                    X2StartValue: 2e5,
                    PayLinePrizeValue: 2e5,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 1,
                    BonusGameData: null,
                    SpinID: 1459,
                    SlotsData: "9,1,11,11,11,8,1,10,5,7,7,11,8,9,3",
                    PrizesData: "17,18,100000;23,18,100000",
                    PositionData: "6,7,13;6,2,13",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50027500,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 2e5,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T10:08:33.0774242",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 18245195,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    X2StartValue: 2e3,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 521600,
                    LastPrizeValue: 2e3,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 25,
                    X2StartValue: 0,
                    PayLinePrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 3,
                    BonusGameData: null,
                    SpinID: 1460,
                    SlotsData: "5,6,7,8,9,5,3,3,3,9,5,6,7,8,9",
                    PrizesData: "2000,30,0",
                    PositionData: "7,8,9",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 5003e4,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 13,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    BonusItemsData: [{
                        Step: 1,
                        PrizeID: 106,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 2,
                        PrizeID: 107,
                        Multiplier: .6,
                        PrizeValue: 15e4
                    }, {
                        Step: 3,
                        PrizeID: 106,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 4,
                        PrizeID: 106,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 5,
                        PrizeID: 106,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 6,
                        PrizeID: 106,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 7,
                        PrizeID: 108,
                        Multiplier: .9,
                        PrizeValue: 225e3
                    }, {
                        Step: 8,
                        PrizeID: 109,
                        Multiplier: 1.2,
                        PrizeValue: 3e5
                    }, {
                        Step: 9,
                        PrizeID: 107,
                        Multiplier: .6,
                        PrizeValue: 15e4
                    }, {
                        Step: 10,
                        PrizeID: 108,
                        Multiplier: .9,
                        PrizeValue: 225e3
                    }, {
                        Step: 11,
                        PrizeID: 106,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 12,
                        PrizeID: 106,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 13,
                        PrizeID: 101,
                        Multiplier: 1,
                        PrizeValue: 1575e3
                    }],
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 0,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T10:09:27.3967919",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 17995195,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 1e4,
                    X2StartValue: 41e4,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 50085e3,
                    LastPrizeValue: 17e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 25,
                    X2StartValue: 0,
                    PayLinePrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 1,
                    BonusGameData: null,
                    SpinID: 1498,
                    SlotsData: "5,6,7,8,9,5,2,2,2,9,5,6,7,8,9",
                    PrizesData: "1000,33,0",
                    PositionData: "7,8,9",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50087500,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !0,
                    TotalFreeSpin: 3,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 0,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T10:24:38.2793766",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 18344695,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 1e4,
                    X2StartValue: 41e4,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 50085e3,
                    LastPrizeValue: 17e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 25,
                    X2StartValue: 31e4,
                    PayLinePrizeValue: 31e4,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 1,
                    BonusGameData: null,
                    SpinID: 1502,
                    SlotsData: "10,11,11,3,11,6,7,1,7,10,9,1,10,10,1",
                    PrizesData: "9,21,50000;10,12,160000;20,23,100000",
                    PositionData: "11,12,8;6,12,8;1,12,13,14",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 5009e4,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 31e4,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T10:27:14.2126263",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 19964695,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    X2StartValue: 54700,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 522100,
                    LastPrizeValue: 43500,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 25,
                    X2StartValue: 41e4,
                    PayLinePrizeValue: 41e4,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 1,
                    BonusGameData: null,
                    SpinID: 1563,
                    SlotsData: "10,4,6,7,10,6,1,11,10,5,9,11,10,11,11",
                    PrizesData: "4,22,250000;16,12,160000",
                    PositionData: "1,7,13,9,5;6,7,3",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50105e3,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 41e4,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T11:03:37.1304118",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 21508545,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }],
            this.index = -1,
            this.dataFree = [[{
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 1e4,
                    X2StartValue: 41e4,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 50085e3,
                    LastPrizeValue: 17e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 25,
                    X2StartValue: 18e4,
                    PayLinePrizeValue: 18e4,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 1,
                    BonusGameData: null,
                    SpinID: 1499,
                    SlotsData: "7,1,11,6,11,10,11,1,8,10,8,4,10,11,2",
                    PrizesData: "8,15,120000;11,24,30000;23,24,30000",
                    PositionData: "1,2,8;6,2,8;6,2,13",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50087500,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !0,
                    TotalFreeSpin: 2,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 18e4,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T10:24:44.6872316",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 18524695,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 1e4,
                    X2StartValue: 41e4,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 50085e3,
                    LastPrizeValue: 17e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 25,
                    X2StartValue: 25e4,
                    PayLinePrizeValue: 7e4,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 1,
                    BonusGameData: null,
                    SpinID: 1500,
                    SlotsData: "8,5,9,11,11,11,11,7,1,10,5,1,11,10,1",
                    PrizesData: "7,27,20000;17,26,50000",
                    PositionData: "6,12,13;6,7,13,9",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50087500,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !0,
                    TotalFreeSpin: 1,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 25e4,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T10:24:50.112403",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 18594695,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 1e4,
                    X2StartValue: 41e4,
                    LastLines: 25,
                    CanPlayX2Game: !0,
                    FreeSpins: 0,
                    Jackpot: 50085e3,
                    LastPrizeValue: 17e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    TotalLines: 25,
                    X2StartValue: 156e4,
                    PayLinePrizeValue: 131e4,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    GameStatus: 1,
                    BonusGameData: null,
                    SpinID: 1501,
                    SlotsData: "1,1,11,9,9,8,11,1,11,11,11,4,10,5,6",
                    PrizesData: "2,34,80000;5,26,50000;8,8,750000;11,18,100000;12,26,50000;13,26,50000;14,26,50000;18,34,80000;20,35,40000;21,27,20000;24,35,40000",
                    PositionData: "1,2;11,7,3,9;1,2,8,14;6,2,8;1,7,8,9;11,7,8,9;1,7,3,9;1,2;1,12;11,2,3;1,12",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50087500,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    TicketBalance: 0
                },
                BonusGame: {
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                X2Game: {
                    X2TurnID: 0,
                    CurrentStep: 0,
                    StartBetValue: 156e4,
                    PrizeValue: 0,
                    IsStop: !1,
                    Balance: 0,
                    BetValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    Revenue: 0,
                    AccumulateRate: 0,
                    TimeRemain: 0,
                    Items: 0,
                    TotalPrizeValue: 0,
                    DateExpire: "2018-10-26T10:24:55.5307484",
                    TimeSpan: "00:00:00"
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 19904695,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }]],
            this.turn = 0;
            var e = t;
            e.txtFreeTicket.visible = !1,
            e.currentPlayer && (e.currentPlayerMain = e.currentPlayer),
            e.currentPlayer = this.player;
            for (var n = 0; n < t.arrLego.length; n++)
                t.arrLego[n].visible = !1;
            e.boxTimerTreasure.visible = !1,
            e.btnTreasure.visible = !1,
            e.DestroyEffect(),
            e.DisableLines(),
            a.contents.ClearTimer(),
            e.BeforeSpin(),
            o.Config.isTry = !0,
            s.Util.ClearTimeOut(o.Config.timeJackpot),
            this.balance = 5e7,
            this.jackPot = 5e7,
            this.index = -1;
            try {
                o.Config.countJp && o.Config.countJp.reset(),
                o.Config.countJp = null
            } catch (t) {}
            e.txtJustWon.text = "0",
            e.txtBetValue.text = "10.000",
            e.txtTotalBet.text = "250.000",
            e.txtLines.text = "25",
            a.contents.DisableButton(e.btnX2, "btn-x2-disable.png"),
            e.boxTrial.visible = !0,
            e.txtBalanceTrial.text = Message.GetMessage("sl84") + ": " + s.Util.ParseMoney(this.balance, void 0),
            e.txtBalanceTrial.visible = !0,
            e.txtJackpot.text = s.Util.ParseMoney(this.jackPot, void 0),
            t.boxTimerTreasure.visible = t.txtMoneyTreasure.visible = t.txtMultiTreasure.visible = !1,
            a.contents.EnableButtons(e),
            a.contents.DisableButton(e.btnX2, "btn-x2-disable.png")
        }
        var o = n(5)
          , s = n(0)
          , a = n(9);
        e.trial = i
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.x2 = void 0;
        var i = n(5)
          , o = n(9)
          , s = n(0)
          , a = (r.prototype.CreateFrames = function() {
            var t;
            for (this.framesStarOne = [],
            this.framesStarTwo = [],
            this.framesStarThree = [],
            this.framesThunder = [],
            t = 1; t < 5; t++)
                this.framesStarOne.push(TextureCache["star-1-" + t + ".png"]),
                this.framesStarTwo.push(TextureCache["star-2-" + t + ".png"]),
                this.framesStarThree.push(TextureCache["star-3-" + t + ".png"]);
            for (t = 1; t < 7; t++)
                this.framesThunder.push(TextureCache["thunder-" + t + ".png"])
        }
        ,
        r.prototype.CreateAssets = function() {
            var t = this
              , e = new Sprite(TextureCache["ast_x2-bg.png"]);
            e.position.set(-285, -144),
            t.btnStop = new Sprite(TextureCache["ast_x2-btn-1.png"]),
            t.btnStop.position.set(-80, 140),
            t.btnStop.buttonMode = !0,
            t.btnStop.interactive = !0,
            t.btnStop.on("pointerover", t.BtnOver).on("pointerout", t.BtnOut).on("pointerdown", t.BtnStopDown.bind(t.btnStop, t));
            var n = new PIXI.Text(Message.GetMessage("sl38"),{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: "#191509",
                padding: 10
            });
            n.position.set(t.btnStop.width / 2, t.btnStop.height / 2),
            n.anchor.set(.5),
            t.btnStop.addChild(n),
            t.btnNext = new Sprite(TextureCache["ast_x2-btn-1.png"]),
            t.btnNext.position.set(50, 140),
            t.btnNext.buttonMode = !0,
            t.btnNext.interactive = !0,
            t.btnNext.on("pointerover", t.BtnOver).on("pointerout", t.BtnOut).on("pointerdown", t.BtnNextDown.bind(t.btnNext, t));
            var i = new PIXI.Text(Message.GetMessage("sl39"),{
                fontFamily: "Times New Roman",
                fontSize: 12,
                fontWeight: "bold",
                fill: "#191509",
                padding: 10
            });
            i.anchor.set(.5),
            i.position.set(t.btnNext.width / 2, t.btnNext.height / 2),
            t.btnNext.addChild(i),
            t.title = new PIXI.Text(Message.GetMessage("ol3"),{
                fontFamily: "Times New Roman",
                fontSize: 16,
                fontWeight: "bold",
                fill: "#bca068",
                padding: 10
            }),
            t.title.position.set(0, -120),
            t.title.anchor.set(.5);
            var o = new PIXI.Text(Message.GetMessage("sl48"),{
                fontFamily: "Times New Roman",
                fontSize: 14,
                fontWeight: "bold",
                fill: "#bca068",
                padding: 10
            });
            o.position.set(-170, 150),
            o.anchor.set(.5, 0);
            var s = new PIXI.Text("X2",{
                fontFamily: "Times New Roman",
                fontSize: 14,
                fontWeight: "bold",
                fill: "#bca068",
                padding: 10
            });
            s.position.set(203, 150),
            s.anchor.set(.5, 0),
            t.txtWon = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 16,
                fontWeight: "bold",
                fill: "#ffae00",
                padding: 10
            }),
            t.txtWon.position.set(-173, 175),
            t.txtWon.anchor.set(.5),
            t.txtX2 = new PIXI.Text("0",{
                fontFamily: "Times New Roman",
                fontSize: 16,
                fontWeight: "bold",
                fill: "#ffae00",
                padding: 10
            }),
            t.txtX2.position.set(203, 175),
            t.txtX2.anchor.set(.5),
            t.x2Container.addChild(e, t.btnStop, t.btnNext, t.title, o, t.txtWon, s, t.txtX2),
            t.currentStep = t.game.currentPlayer.X2Game.CurrentStep,
            t.money = 0 < t.game.currentPlayer.X2Game.PrizeValue ? t.game.currentPlayer.X2Game.PrizeValue : t.game.currentPlayer.X2Game.StartBetValue,
            t.UpdateMoney(),
            t.UpdateTurn(),
            0 === t.currentStep && (t.btnNext.visible = !1)
        }
        ,
        r.prototype.CreateButton = function() {
            var t, e = this;
            for (e.buttonArr = [],
            t = 0; t < 4; t++) {
                e.buttonArr.push(new Sprite(TextureCache["ast_x2-item-2.png"])),
                e.buttonArr[t].position.set(e.buttonPosition[t][0], e.buttonPosition[t][1]),
                e.buttonArr[t].name = t,
                e.buttonArr[t].interactive = !0,
                e.buttonArr[t].buttonMode = !0,
                e.x2Container.addChild(e.buttonArr[t]),
                e.buttonArr[t].on("pointerover", e.ButtonArrOver).on("pointerout", e.ButtonArrOut).on("pointerdown", e.ButtonArrDown.bind(e.buttonArr[t], e));
                var n = new AnimatedSprite(e.framesStarOne);
                n.position.set(0 === t ? 10 : 1 === t ? 40 : 2 === t ? 80 : 45, 0 === t ? 10 : 1 === t ? 5 : 2 === t ? 15 : 90),
                n.animationSpeed = .3,
                n.play();
                var i = new AnimatedSprite(e.framesStarTwo);
                i.position.set(0 === t ? 85 : 1 === t || 2 === t ? 3 : 5, 0 === t || 1 === t || 2 === t ? 60 : 30),
                i.animationSpeed = .3,
                i.play();
                var o = new AnimatedSprite(e.framesStarThree);
                o.position.set(0 === t ? 3 : 1 !== t && 2 === t ? 82 : 80, 0 === t ? 100 : 1 === t ? 70 : 2 === t ? 100 : 30),
                o.animationSpeed = .3,
                o.play(),
                e.buttonArr[t].addChild(n, i, o)
            }
        }
        ,
        r.prototype.BtnOver = function() {
            this.texture = TextureCache["ast_x2-btn-2.png"]
        }
        ,
        r.prototype.BtnOut = function() {
            this.texture = TextureCache["ast_x2-btn-1.png"]
        }
        ,
        r.prototype.BtnStopDown = function(t) {
            var e = t;
            i.Config.isX2 = !1,
            e.game.currentPlayer.SlotInfo.CanPlayX2Game = !1,
            0 === e.currentStep || i.Config.isTry ? e.FinishX2(e) : e.game.hubs.connection.invoke("StopX2Game", {
                RoomID: i.Config.roomId,
                CurrencyID: i.Config.currencyId
            }).then(function(t) {
                0 <= t.c && e.FinishX2(e)
            }).catch(function() {})
        }
        ,
        r.prototype.BtnNextDown = function(t) {
            var e, n = t;
            if (i.Config.sound)
                try {
                    PIXI.sound.play("x2ClickSound")
                } catch (t) {}
            for (e = 0; e < n.iconArr.length; e++)
                n.iconArr[e].destroy();
            for (n.iconArr = [],
            e = 0; e < 4; e++)
                n.buttonArr[e].interactive = !0,
                n.buttonArr[e].buttonMode = !0,
                n.buttonArr[e].visible = !0,
                n.buttonArr[e].alpha = 1;
            n.btnNext.visible = !1
        }
        ,
        r.prototype.ButtonArrOver = function() {
            this.texture = TextureCache["ast_x2-item-3.png"]
        }
        ,
        r.prototype.ButtonArrOut = function() {
            this.texture = TextureCache["ast_x2-item-2.png"]
        }
        ,
        r.prototype.EnableButton = function() {
            for (var t = 0; t < 4; t++)
                this.buttonArr[t].interactive = !0,
                this.buttonArr[t].buttonMode = !0
        }
        ,
        r.prototype.DisableButton = function() {
            for (var t = 0; t < 4; t++)
                this.buttonArr[t].interactive = !1,
                this.buttonArr[t].buttonMode = !1
        }
        ,
        r.prototype.ButtonArrDown = function(t) {
            var e = t;
            if (e.initId = parseInt(this.name),
            i.Config.sound)
                try {
                    PIXI.sound.play("x2ClickSound")
                } catch (t) {}
            e.DisableButton(),
            i.Config.isTry ? (e.isWin = 1 === Math.floor(2 * Math.random()),
            e.ShowResult(e.isWin)) : e.game.hubs.connection.invoke("PlayX2Game", {
                RoomID: i.Config.roomId,
                CurrencyID: i.Config.currencyId
            })
        }
        ,
        r.prototype.UpdateMoney = function() {
            this.txtWon.text = s.Util.ParseMoney(this.money, void 0),
            this.x2Money = Math.round(1.99 * this.money),
            this.txtX2.text = s.Util.ParseMoney(this.x2Money, void 0)
        }
        ,
        r.prototype.UpdateTurn = function() {}
        ,
        r.prototype.CheckStep = function(t) {
            this.btnStop.visible = !1,
            null != t && (this.money = t.CurrentStep <= 3 && 0 < t.PrizeValue ? t.PrizeValue : t.StartBetValue,
            -1 === this.initId && 0 < t.CurrentStep && this.NextTurn())
        }
        ,
        r.prototype.ShowResult = function(t) {
            console.log(t);
            var e = this;
            e.btnStop.visible = !1,
            i.Config.isTry ? (e.game.txtJustWon.text = s.Util.ParseMoney(e.isWin ? e.x2Money : 0, void 0),
            e.game.trial.balance += e.isWin ? e.x2Money - e.money : -e.money,
            e.game.txtBalanceTrial.text = Message.GetMessage("sl84") + ": " + s.Util.ParseMoney(e.game.trial.balance, void 0),
            e.money = e.isWin ? e.x2Money : 0,
            e.currentStep++) : (e.isWin = 0 < t.PrizeValue,
            e.game.currentPlayer.X2Game = t,
            o.contents.UpdateBalance(e.game, t.Balance),
            e.game.txtJustWon.text = s.Util.ParseMoney(t.PrizeValue, void 0),
            e.money = t.PrizeValue,
            e.currentStep = t.CurrentStep);
            var n = new AnimatedSprite(e.framesThunder);
            n.position.set(e.thunderPosition[e.initId][0], e.thunderPosition[e.initId][1]),
            e.x2Container.addChild(n),
            n.animationSpeed = .3,
            n.loop = !1,
            n.play(),
            n.onComplete = function() {
                if (n.destroy(),
                -1 === e.initId && 0 < e.currentStep)
                    e.NextTurn();
                else if (e.currentStep <= 3) {
                    e.buttonArr[e.initId].visible = !1;
                    var t = new Sprite(TextureCache[e.isWin ? "5.png" : "6.png"]);
                    if (t.position.set(e.resultPosition[e.initId][0], e.resultPosition[e.initId][1]),
                    e.iconArr.push(t),
                    e.x2Container.addChild(t),
                    e.isWin) {
                        if (i.Config.sound)
                            try {
                                PIXI.sound.play("x2WinSound")
                            } catch (t) {}
                        setTimeout(function() {
                            for (var t = 0; t < 4; t++)
                                e.buttonArr[t].visible = !1;
                            e.UpdateMoney(),
                            e.UpdateTurn(),
                            e.NextTurn()
                        }, 1e3)
                    } else {
                        if (i.Config.sound)
                            try {
                                PIXI.sound.play("x2LoseSound")
                            } catch (t) {}
                        t.alpha = 0,
                        TweenMax.to(t, .3, {
                            data: "oracle",
                            alpha: 1,
                            delay: 0,
                            ease: Power0.easeNone,
                            onComplete: function() {}
                        }),
                        e.money = 0,
                        e.txtWon.text = "0",
                        e.txtX2.text = "0",
                        setTimeout(function() {
                            return e.ShowLose(e)
                        }, 1e3)
                    }
                }
            }
        }
        ,
        r.prototype.NextTurn = function() {
            for (var t, e, n = this, i = n.RandomArr(!1), o = 0; o < 4; o++)
                o !== n.initId && (t = i[0],
                i.splice(0, 1),
                (e = new Sprite(TextureCache[t ? "6.png" : "5.png"])).position.set(n.resultPosition[o][0], n.resultPosition[o][1]),
                n.iconArr.push(e),
                e.alpha = .6,
                n.x2Container.addChild(e));
            3 === n.currentStep ? n.FinishX2(n) : (n.btnStop.alpha = 1,
            n.btnNext.alpha = 1,
            n.btnStop.visible = !0,
            n.btnNext.visible = !0)
        }
        ,
        r.prototype.RandomArr = function(t) {
            var e = new Array;
            return 1 === Math.floor(2 * Math.random() + 1) ? (e.push(!0),
            t ? e.push(!1) : e.push(!0),
            e.push(!1)) : (e.push(!1),
            t ? (e.push(!0),
            e.push(!1)) : (e.push(!0),
            e.push(!0))),
            e
        }
        ,
        r.prototype.ShowLose = function(t) {
            for (var e, n, i = t, o = i.RandomArr(!0), s = 0; s < 4; s++)
                i.buttonArr[s].alpha = 0,
                s !== i.initId && (e = o[0],
                o.splice(0, 1),
                (n = new Sprite(TextureCache[e ? "6.png" : "5.png"])).position.set(i.resultPosition[s][0], i.resultPosition[s][1]),
                i.iconArr.push(n),
                n.alpha = .6,
                i.x2Container.addChild(n));
            i.title.text = Message.GetMessage("ol45"),
            setTimeout(function() {
                return i.FinishX2(i)
            }, 2e3)
        }
        ,
        r.prototype.FinishX2 = function(t) {
            if (i.Config.isX2 = !1,
            i.Config.isFinishX2 = !0,
            0 < t.currentStep) {
                if (t.game.txtJustWon.text = s.Util.ParseMoney(t.money, void 0),
                0 < t.money) {
                    t.x2Container.destroy({
                        children: !0
                    }),
                    t.game.boxPopupWin.getChildAt(4).text = "",
                    t.game.boxPopupWin.visible = !0,
                    o.contents.CountNumber(t.game.boxPopupWin.getChildAt(3), !0, !1, 0, t.money, 0, 1, function() {});
                    var e = t;
                    return void setTimeout(function() {
                        e.game.CheckAutoSpin() || o.contents.EnableButtons(e.game)
                    }, 2500)
                }
                return t.x2Container.destroy({
                    children: !0
                }),
                void (t.game.CheckAutoSpin() || o.contents.EnableButtons(t.game))
            }
            t.x2Container.destroy({
                children: !0
            }),
            t.game.CheckAutoSpin() || o.contents.EnableButtons(t.game)
        }
        ,
        r);
        function r(t) {
            if (this.buttonArr = [],
            this.buttonPosition = [[-220, 10], [-100, -24], [25, -25], [145, 10]],
            this.thunderPosition = [[-410, -210], [-290, -240], [-165, -240], [-46, -210]],
            this.resultPosition = [[-225, 38], [-104, 4], [21, 4], [141, 38]],
            this.iconArr = [],
            this.btnStop = null,
            this.turnLeft = 3,
            this.currentStep = 0,
            this.initId = -1,
            this.money = 0,
            this.x2Money = 0,
            this.isWin = !1,
            this.framesStarOne = [],
            this.framesStarTwo = [],
            this.framesStarThree = [],
            this.framesThunder = [],
            this.game = t,
            i.Config.isX2 = !0,
            o.contents.DisableButtons(t),
            o.contents.ClearTimer(),
            t.DestroyEffect(),
            t.DisableLines(),
            t.txtMoney.visible = !1,
            this.x2Container = new Container,
            t.machine.addChild(this.x2Container),
            this.CreateFrames(),
            this.CreateAssets(),
            this.CreateButton(),
            0 < this.currentStep) {
                this.CheckStep(t.currentPlayer.X2Game);
                for (var e = 0; e < 4; e++)
                    this.buttonArr[e].visible = !1
            }
        }
        e.x2 = a
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.silent = void 0;
        var o = n(0)
          , s = n(5)
          , i = (a.prototype.getAutoSpin = function() {
            var t = sessionStorage.getItem("Auto-" + this.game.storage);
            if (t) {
                var e = t.split(";");
                if (this.autoSpin = parseInt(e[1]),
                -1 === this.autoSpin || 0 < this.autoSpin)
                    return s.Config.roomId = parseInt(e[0]),
                    e[3] && (this.game.line = e[3]),
                    !0
            }
            return !1
        }
        ,
        a.prototype.setAutoSpin = function() {
            0 < this.autoSpin ? (this.autoSpin--,
            this.setSession(),
            0 === this.autoSpin && (this.game.isAuto = !1,
            this.removeSession())) : 0 === this.autoSpin && (this.game.isAuto = !1,
            this.removeSession(),
            $("#rolling-" + this.game.storage).removeClass("active")),
            $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId + "-playing").length && $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId + "-playing").html(0 < this.autoSpin ? o.Util.ParseMoney(this.autoSpin) : ""),
            $("#list-jp-icon-" + s.Config.gameId + "-playing").length && $("#list-jp-icon-" + s.Config.gameId + "-playing").html(0 < this.autoSpin ? o.Util.ParseMoney(this.autoSpin) : "")
        }
        ,
        a.prototype.setSession = function() {
            sessionStorage.setItem("Auto-" + this.game.storage, s.Config.roomId + ";" + this.autoSpin + ";" + this.game.isAuto + ";" + s.Config.totalLines)
        }
        ,
        a.prototype.removeSession = function() {
            sessionStorage.removeItem("Auto-" + this.game.storage)
        }
        ,
        a.prototype.joinRoom = function(t) {
            this.game.accountId = t.AccountID,
            this.game.currentPlayer = t,
            this.game.balance = t.Account.GoldBalance,
            s.Config.roomId = t.RoomID,
            s.Config.totalLines = this.game.line ? this.game.line : t.TotalLine,
            this.game.line = null,
            s.Config.betValue = t.BetValue,
            s.Config.inRoom = !0,
            s.Config.moneyType = t.moneyType,
            $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#rolling-" + this.game.storage).addClass("active"),
            $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().addClass("playing"),
            this.checkGame()
        }
        ,
        a.prototype.checkGame = function() {
            var e, t = this;
            (3 === this.game.currentPlayer.SlotInfo.GameStatus || null != this.game.currentPlayer.BonusGame && null != this.game.currentPlayer.BonusGame.BonusItemsData) && (s.Config.isBonus = !0),
            0 < this.game.currentPlayer.SlotInfo.FreeSpins && (s.Config.isFreeSpin = !0,
            s.Config.freeSpinCount = this.game.currentPlayer.SlotInfo.FreeSpins),
            2 === this.game.currentPlayer.SlotInfo.GameStatus && 0 < this.game.currentPlayer.X2Game.StartBetValue && (s.Config.isX2 = !0),
            s.Config.isX2 ? (e = this).game.hubs.connection.invoke("StopX2Game", {
                RoomID: s.Config.roomId,
                CurrencyID: s.Config.currencyId
            }).then(function(t) {
                0 <= t.c ? s.Config.isX2 = !1 : e.checkGame()
            }).catch(function() {
                e.checkGame()
            }) : s.Config.isBonus ? this.callBonus() : setTimeout(function() {
                return t.initSpin(t)
            }, 1500)
        }
        ,
        a.prototype.initSpin = function(t) {
            var e = t;
            s.Config.isSpin || e.game.isAuto && e.game.isSilent && (s.Config.isSpin = !0,
            $("#mn-lobby-rolling-oracle .rolling-win").remove(),
            s.Config.isBonus = s.Config.isX2 = s.Config.isWinFree = !1,
            e.game.hubs.connection.invoke("Spin", {
                MerchantID: 0,
                RoomID: s.Config.roomId,
                CurrencyID: s.Config.currencyId,
                TotalLine: s.Config.totalLines
            }).then(function(t) {
                t.c < 0 && (s.Config.isSpin = !1,
                setTimeout(function() {
                    return e.initSpin(e)
                }, 4e3))
            }).catch(function() {
                s.Config.isSpin = !1,
                setTimeout(function() {
                    return e.initSpin(e)
                }, 4e3)
            }))
        }
        ,
        a.prototype.startSpin = function(t) {
            var n;
            this.game.currentPlayer = t,
            s.Config.slotData = [],
            s.Config.slotData = t.SpinData.SlotsData.split(","),
            o.Util.ClearTimeOut(s.Config.timeSpin),
            0 < (null != this.game.currentPlayer.SpinData.PrizesData ? Object.keys(this.game.currentPlayer.SpinData.PrizesData).length : 0) && (n = this.game.currentPlayer.SpinData.PrizesData.split(";"),
            $.each(this.game.currentPlayer.SpinData.PositionData.split(";"), function(t, e) {
                1e3 === parseInt(n[t].split(",")[0]) && (s.Config.isWinFree = !0)
            })),
            t.SpinData.IsJackpot && (this.autoSpin = 0),
            t.SlotInfo.IsFreeSpin && (s.Config.isWinFree = !0),
            3 === t.SpinData.GameStatus && null !== t.BonusGame.BonusItemsData && 0 < t.BonusGame.BonusItemsData.length && (s.Config.isBonus = !0),
            s.Config.isFreeSpin || this.setAutoSpin(),
            this.showWin()
        }
        ,
        a.prototype.showMoney = function(t, e) {
            var n, i = this;
            $("#mn-lobby-rolling-oracle").length && ($("#mn-lobby-rolling-oracle").append('<span class="rolling-win">+' + o.Util.ParseMoney(t) + "</span>"),
            TweenMax.to($("#mn-lobby-rolling-oracle .rolling-win"), 2, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })),
            $("#rolling-" + this.game.storage).hasClass("active") || $("#rolling-" + this.game.storage).addClass("active"),
            $("#popupJackpot").hasClass("show") && ($("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + s.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().hasClass("playing") || $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().addClass("playing"),
            (n = $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId)).length && (n.parent().append('<span class="win active">+' + o.Util.ParseMoney(t) + "</span>"),
            TweenMax.to(n.parent().find("span.win"), 1, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            }))),
            setTimeout(function() {
                e(i)
            }, 2100)
        }
        ,
        a.prototype.updateBalance = function(t) {
            0 < $(".tien1 .spanMoney").length && $(".tien1 .spanMoney").text(o.Util.ParseMoney(t)),
            0 < $("#divHeader .money-1 .text").length && $("#divHeader .money-1 .text").text(o.Util.ParseMoney(t))
        }
        ,
        a.prototype.increaseBalance = function(t) {
            var e;
            0 != t && (0 < $("#divHeader .money-1 .text").length ? (e = o.Util.unParseMoney($("#divHeader .money-1 .text").text()),
            e += t,
            $("#divHeader .money-1 .text").text(o.Util.ParseMoney(e))) : 0 < $(".tien1 .spanMoney").length && (e = o.Util.unParseMoney($(".tien1 .spanMoney").text()),
            e += t,
            $(".tien1 .spanMoney").text(o.Util.ParseMoney(e))))
        }
        ,
        a.prototype.updateFreeSpin = function() {
            s.Config.freeSpinCount--
        }
        ,
        a.prototype.showWin = function() {
            this.updateBalance(this.game.currentPlayer.Account.GoldBalance),
            0 < this.game.currentPlayer.SpinData.PayLinePrizeValue ? this.showMoney(this.game.currentPlayer.SpinData.PayLinePrizeValue, this.callAcc) : this.callAcc(this)
        }
        ,
        a.prototype.callAcc = function(t) {
            t.game.currentPlayer.SpinData.IsAccumulate && 9 === t.game.currentPlayer.SpinData.AccumulateItems ? t.showMoney(t.game.currentPlayer.AccumulateGame.TotalPrizeValue, this.finishAcc) : t.bonusOrFree(t)
        }
        ,
        a.prototype.finishAcc = function(t) {
            t.game.currentPlayer.AccumulateGame.Items = 0,
            t.game.currentPlayer.AccumulateGame.TotalPrizeValue = 0,
            t.game.currentPlayer.SpinData.IsAccumulate = !1,
            t.bonusOrFree(t)
        }
        ,
        a.prototype.bonusOrFree = function(t) {
            s.Config.isBonus ? t.callBonus() : (s.Config.isFreeSpin && t.updateFreeSpin(),
            s.Config.isWinFree = !0,
            s.Config.freeSpinCount = t.game.currentPlayer.SlotInfo.FreeSpins,
            s.Config.isWinFree = !1,
            s.Config.isFreeSpin && 0 === s.Config.freeSpinCount && (s.Config.isFreeSpin = !1),
            t.checkAutoSpin(t))
        }
        ,
        a.prototype.callBonus = function() {
            var e = this;
            this.game.hubs.connection.invoke("PlayBonusGameAll", {
                RoomID: s.Config.roomId,
                CurrencyID: s.Config.currencyId
            }).then(function(t) {
                0 <= t.c && e.finishBonus()
            }).catch(function() {
                e.callBonus()
            })
        }
        ,
        a.prototype.finishBonus = function() {
            s.Config.isBonus = !1;
            var t = this.game.currentPlayer.BonusGame.BonusItemsData[this.game.currentPlayer.BonusGame.BonusItemsData.length - 1].PrizeValue;
            this.increaseBalance(t),
            this.game.currentPlayer.BonusGame.BonusItemsData = null,
            this.showMoney(t, this.bonusOrFree)
        }
        ,
        a.prototype.checkAutoSpin = function(t) {
            s.Config.isSpin = !1,
            -1 === t.autoSpin || 0 < t.autoSpin ? setTimeout(function() {
                return t.initSpin(t)
            }, 4500) : (this.game.isAuto = !1,
            this.removeSession(),
            $("#rolling-" + t.game.storage).removeClass("active"),
            $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-playing").addClass("button-play"),
            $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
            $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().removeClass("playing"))
        }
        ,
        a);
        function a(t) {
            this.autoSpin = -1,
            this.game = t,
            this.getAutoSpin() && this.game.InitHubs()
        }
        e.silent = i
    }
    ],
    a.c = l,
    a.d = function(t, e, n) {
        a.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }
    ,
    a.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    a.t = function(e, t) {
        if (1 & t && (e = a(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var n = Object.create(null);
        if (a.r(n),
        Object.defineProperty(n, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                a.d(n, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return n
    }
    ,
    a.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return a.d(e, "a", e),
        e
    }
    ,
    a.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    a.p = "/",
    a(a.s = 36);
    function a(t) {
        if (l[t])
            return l[t].exports;
        var e = l[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return r[t].call(e.exports, e, e.exports, a),
        e.l = !0,
        e.exports
    }
    var r, l
});

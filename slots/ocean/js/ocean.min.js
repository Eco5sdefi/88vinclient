!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : "function" == typeof define && define.amd ? define("ocean", ["libs", "pixi-sound", "signalR", "WebFont"], e) : "object" == typeof exports ? exports.ocean = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : t.ocean = e(t.libs, t["pixi-sound"], t.signalR, t.WebFont)
}(window, function(n, i, o, s) {
    return l = {},
    a.m = r = [function(t, e) {
        t.exports = n
    }
    , function(t, e) {
        t.exports = i
    }
    , function(t, e) {
        t.exports = o
    }
    , function(t, e) {
        t.exports = s
    }
    , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.Config = void 0;
        e.Config = {
            hubUrl: null,
            apiUrl: null,
            api: null,
            lang: null,
            roomId: 1,
            countJpLobby: [null, null, null],
            countJp: null,
            countMoneyJw: null,
            countMoney: null,
            isMobile: !1,
            isOrientation: !1,
            isLobby: !0,
            arrRoom: [100, 1e3, 1e4],
            messages: null,
            ready: !1,
            music: !0,
            sound: !0,
            timeJackpot: null,
            timeSpin: null,
            timePop: null,
            timeBonusOrFree: null,
            timeOutEachLine: null,
            timeIntEachLine: null,
            timeShowWin: null,
            timeBonus: null,
            timerEvent: null,
            currencyId: 1,
            isTry: !1,
            freeSpinCount: 0,
            isFreeSpin: !1,
            totalFreePrize: 0,
            isTicket: !1,
            isAutoSpin: !1,
            isSpin: !1,
            isBonus: !1,
            isWinFree: !1,
            isX2: !1,
            isLogin: !1,
            inRoom: !1,
            gameId: 207,
            autoSpinCount: -1,
            numbShowEachLine: 0,
            numberDown: 0,
            isBigWin: !1,
            isJackpot: !1,
            isSuperWin: !1,
            isMegaWin: !1,
            payLines: [],
            lineItemsArr: [],
            totalLines: 0,
            betValue: 0,
            moneyType: 0,
            totalFreeSpin: 0,
            slotData: [],
            linesWin: [],
            itemsWinAr: [],
            itemsWin: [],
            totalBetConfig: {
                BigWin: 100,
                SuperWin: 500,
                MegaWin: 1e3
            },
            autoSpinMode: 0,
            oldRoomId: 0,
            useBlur: !0,
            isQuick: !1
        }
    }
    , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.lines = void 0;
        var o = n(16)
          , i = {
            CurrentLine: "",
            CurrentLineArray: [],
            TotalLines: 0,
            DisableAllLineSelect: function(t) {
                for (var e = 0; e < t.linesSelect.length; e++)
                    t.linesSelect[e].active = !1,
                    t.linesSelect[e].getChildAt(0).alpha = 0
            },
            DisableAllLine: function(t) {
                for (var e = 0; e < t.linesSelect.length; e++)
                    t.linesImage[e].visible = !1
            },
            SetLines: function(t, e) {
                var n, i;
                0 === t.length ? (this.CurrentLine = "1",
                this.CurrentLineArray = [1]) : (n = [],
                i = t.split(","),
                $.each(i, function(t, e) {
                    n.push(parseInt(e))
                }),
                this.CurrentLineArray = n,
                this.CurrentLine = t),
                e.txtLines.text = this.CurrentLineArray.length,
                this.TotalLines = this.CurrentLineArray.length,
                this.ShowLines(e),
                o.contents.UpdateTotalBet(e, e.currentPlayer.BetValue * this.TotalLines)
            },
            ShowLines: function(t) {
                var e;
                for (this.DisableAllLineSelect(t),
                this.DisableAllLine(t),
                e = 0; e < this.CurrentLineArray.length; e++)
                    t.linesSelect[this.CurrentLineArray[e] - 1].getChildAt(0).alpha = .4,
                    t.linesSelect[this.CurrentLineArray[e] - 1].filters = [t.filter],
                    t.linesSelect[this.CurrentLineArray[e] - 1].active = !0,
                    t.linesImage[this.CurrentLineArray[e] - 1].visible = !0
            },
            HideLines: function(t) {
                for (var e = 0; e < 20; e++)
                    t.linesImage[e].visible = !1
            },
            ArrayPop: function(t) {
                this.CurrentLineArray.splice($.inArray(t, this.CurrentLineArray), 1)
            },
            ArrayPush: function(t) {
                this.CurrentLineArray.push(t)
            },
            ChooseEachLine: function(t) {
                this.CurrentLineArray.sort(function(t, e) {
                    return t - e
                }),
                this.CurrentLine = "";
                for (var e = 0; e < this.CurrentLineArray.length; e++)
                    this.CurrentLine += this.CurrentLineArray[e] + ",";
                0 < this.CurrentLine.length && (this.CurrentLine = this.CurrentLine.substring(0, this.CurrentLine.length - 1)),
                t.txtLines.text = this.CurrentLineArray.length,
                this.TotalLines = this.CurrentLineArray.length,
                this.ShowLines(t)
            },
            ShowLinesWin: function(t, e) {
                if (0 < t.length)
                    for (var n = 0; n < t.length; n++)
                        e.linesSelect[t[n] - 1].filters = [e.filter],
                        e.linesImage[t[n] - 1].visible = !0
            }
        };
        e.lines = i
    }
    , , , , , function(t, o, e) {
        "use strict";
        Object.defineProperty(o, "__esModule", {
            value: !0
        }),
        o.contents = void 0;
        var u = e(7)
          , h = e(0)
          , n = e(11);
        o.contents = {
            timer: 0,
            page: 0,
            pageSize: 10,
            UpdateBalance: function(t, e) {
                0 <= e && (t.txtBalance.text = h.Util.ParseMoney(e, void 0))
            },
            GetEvent: function(e) {
                h.Util.ClearTimeOut(e.timerEvent),
                $.ajax({
                    type: "GET",
                    url: u.Config.api + "api/game/GetSlotEvent?CurrencyID=" + u.Config.currencyId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        t && t.d && e && e.updateEvent(t.d)
                    },
                    error: function() {}
                })
            },
            GetJackpot: function(i) {
                h.Util.ClearTimeOut(u.Config.timeJackpot),
                $.ajax({
                    type: "GET",
                    url: u.Config.api + "api/game/JackpotGetAll?CurrencyID=" + u.Config.currencyId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        if (t && t.d && i)
                            for (var e = t.d, n = 0; n < e.length; n++)
                                u.Config.isLobby && o.contents.CountJackPotLobby(n, i.arrJackpot[n], !0, !1, e[n].jackpotFund, 8),
                                u.Config.roomId === e[n].roomID && o.contents.CountJackPot(i.txtJackpot, !0, !1, e[n].jackpotFund, 1 === u.Config.roomId ? 3 : 5);
                        u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                            o.contents.GetJackpot(i)
                        }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                    },
                    error: function() {
                        u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                            o.contents.GetJackpot(i)
                        }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                    }
                })
            },
            GetTicket: function(e) {
                $.ajax({
                    type: "GET",
                    url: u.Config.apiUrl + "GetAccountTicket/?currencyID=" + u.Config.currencyId + "&GameID=" + u.Config.gameId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    headers: {
                        Authorization: "Bearer " + e.token
                    },
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        console.log("fr", t),
                        0 < t.d.length ? o.contents.UpdateTicket(e, t.d) : (u.Config.isTicket = !1,
                        e.boxTurnFreeTicket.visible = !1)
                    }
                })
            },
            CountJackPotLobby: function(t, e, n, i, o, s) {
                null === u.Config.countJpLobby[t] ? (u.Config.countJpLobby[t] = new h.Util.CountUp(e,n,i,0,o,0,s,void 0),
                u.Config.countJpLobby[t].start()) : u.Config.countJpLobby[t].update(o)
            },
            CountJackPot: function(t, e, n, i, o) {
                null === u.Config.countJp ? (u.Config.countJp = new h.Util.CountUp(t,e,n,0,i,0,o,void 0),
                u.Config.countJp.start()) : u.Config.countJp.update(i)
            },
            ChangeResources: function(t) {
                if (u.Config.ready) {
                    for (var e = t, n = 0; n < e.linesChoosePos.length; n++)
                        e.linesChoosePos[n].getChildAt(0).text = Message.GetMessage("sl" + (11 + n));
                    e.btnAutoSpin.getChildAt(0).texture = void 0 !== TextureCache["autospin" + u.Config.lang] ? TextureCache["autospin" + u.Config.lang] : TextureCache.autospinen,
                    e.boxPopupWin.getChildAt(0).text = Message.GetMessage("sl21"),
                    e.boxPopupWin.getChildAt(1).text = Message.GetMessage("sl52"),
                    e.txtNotify.text = Message.GetMessage("sl27"),
                    e.btnQuick.children[0].text = Message.GetMessage("mnpk1"),
                    e.btnLines.children[0].text = Message.GetMessage("sl7"),
                    e.btnBet.children[0].text = Message.GetMessage("sl6"),
                    e.boxTotalBet.children[0].text = Message.GetMessage("sl4"),
                    e.boxJustWon.children[0].text = Message.GetMessage("sl5"),
                    e.btnStopAuto.texture = TextureCache["vi" === u.Config.lang ? "text-stop.png" : "text-stop-" + u.Config.lang + ".png"],
                    e.btnSpin.texture = TextureCache["vi" === u.Config.lang ? "text-spin.png" : "text-spin-" + u.Config.lang + ".png"],
                    e.txtMode.text = u.Config.isTry ? Message.GetMessage("sl8") : Message.GetMessage("sl9"),
                    e.boxLines.children[1].text = Message.GetMessage("sl10"),
                    e.payTable.getChildAt(0).text = Message.GetMessage("sl18")
                }
            },
            CountNumber: function(t, e, n, i, o, s, a, r) {
                var l = new h.Util.CountUp(t,e,n,i,o,0,a,void 0);
                r ? l.start(r) : l.start()
            },
            CountMoney: function(t, e, n, i, o, s, a, r, l) {
                l ? u.Config.countMoneyJw = new h.Util.CountUp(t,e,n,i,o,0,a,void 0) : u.Config.countMoney = new h.Util.CountUp(t,e,n,i,o,0,a,void 0),
                r ? l ? u.Config.countMoneyJw.start(r) : u.Config.countMoney.start(r) : l ? u.Config.countMoneyJw.start() : u.Config.countMoney.start()
            },
            UpdateFreeSpin: function(t) {
                var e = t;
                u.Config.freeSpinCount--,
                0 < u.Config.freeSpinCount ? (e.txtTurnFree.text = Message.GetMessage("sl20") + ": " + u.Config.freeSpinCount,
                e.boxTurnFree.visible = !0) : e.boxTurnFree.visible = !1
            },
            UpdateTotalPrizeFreeSpin: function(t) {
                var e = t;
                u.Config.isFreeSpin ? (u.Config.totalFreePrize += t.currentPlayer.SpinData.PayLinePrizeValue,
                e.txtJustWon.text = h.Util.ParseMoney(u.Config.totalFreePrize, void 0)) : u.Config.totalFreePrize = 0
            },
            UpdateLastWon: function(t, e) {
                t.txtJustWon.text = h.Util.ParseMoney(e, void 0)
            },
            UpdatePrizeValue: function(t, e) {
                t.txtBetValue.text = h.Util.ParseMoney(e, void 0)
            },
            UpdateTotalBet: function(t, e) {
                t.txtToTalBet.text = h.Util.ParseMoney(e, void 0)
            },
            UpdateLines: function(t, e) {
                n.lines.SetLines(e, t)
            },
            UpdateTicket: function(t, e) {
                var n = t;
                e[u.Config.roomId - 1] && 0 < e[u.Config.roomId - 1].balance ? (n.txtTurnFreeTicket.text = "+" + e[u.Config.roomId - 1].balance + " Free",
                n.boxTurnFreeTicket.visible = !0,
                u.Config.isTicket || o.contents.UpdateLines(n, "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20"),
                u.Config.isTicket = !0) : (u.Config.isTicket = !1,
                n.boxTurnFreeTicket.visible = !1)
            },
            UpdateControl: function(t) {
                o.contents.UpdateLastWon(t, null != t.currentPlayer.SlotInfo ? t.currentPlayer.SlotInfo.LastPrizeValue : 0),
                o.contents.UpdateLines(t, t.line ? t.line : t.currentPlayer.SlotInfo.LastLineData),
                o.contents.UpdatePrizeValue(t, t.currentPlayer.BetValue),
                o.contents.UpdateTotalBet(t, t.currentPlayer.BetValue * n.lines.TotalLines),
                o.contents.GetTicket(t),
                t.line = null
            },
            DisableButton: function(t, e, n) {
                t.buttonMode = !1,
                t.interactive = !1,
                e ? t.texture = TextureCache[e] : n && (t.tint = n)
            },
            EnableButton: function(t, e) {
                t.buttonMode = !0,
                t.interactive = !0,
                e ? t.texture = TextureCache[e] : t.tint = 16777215
            },
            DisableButtons: function(t) {
                var e = t;
                o.contents.DisableButton(e.btnLines),
                o.contents.DisableButton(e.btnBet),
                o.contents.DisableButton(e.btnAutoSpin),
                o.contents.DisableButton(e.btnQuick),
                o.contents.DisableButton(e.btnSpin),
                o.contents.DisableButton(e.btnMinus),
                o.contents.DisableButton(e.btnPlus),
                u.Config.isAutoSpin ? (e.btnStopAuto.visible = !0,
                e.btnAutoSpin.getChildAt(1).texture = TextureCache["icon-auto-active.png"]) : (e.btnAutoSpin.getChildAt(1).texture = TextureCache["icon-auto-inactive.png"],
                e.btnStopAuto.visible = !1),
                e.btnQuick.children[1].visible = u.Config.isQuick
            },
            EnableButtons: function(t) {
                var e = t;
                o.contents.EnableButton(e.btnLines),
                o.contents.EnableButton(e.btnBet),
                o.contents.EnableButton(e.btnAutoSpin),
                o.contents.EnableButton(e.btnSpin),
                o.contents.EnableButton(e.btnQuick),
                o.contents.EnableButton(e.btnMinus),
                o.contents.EnableButton(e.btnPlus),
                e.btnStopAuto.visible = u.Config.isAutoSpin,
                e.btnSpin.visible = !0
            },
            UpdateAutoSpin: function(t) {
                window.App.isAuto && sessionStorage.setItem("Auto-" + t.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";" + u.Config.isAutoSpin + ";" + n.lines.CurrentLine)
            },
            StopAutoSpin: function(t) {
                var e = t;
                if (u.Config.isAutoSpin) {
                    if (u.Config.isAutoSpin = !1,
                    e.btnStopAuto.visible = !1,
                    e.btnAutoSpin.getChildAt(1).texture = TextureCache["icon-auto-inactive.png"],
                    e.btnSpin.visible || (e.btnSpin.visible = !0),
                    $("#rolling-" + t.storage).removeClass("active"),
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId).removeClass("button-playing").addClass("button-play"),
                    $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                    $("#ljp-" + u.Config.gameId + "-room-" + u.Config.roomId).parent().removeClass("playing"),
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").html(""),
                    $("#list-jp-icon-" + u.Config.gameId + "-playing").html(""),
                    sessionStorage.removeItem("Auto-" + t.storage),
                    window.App.isAutoOcean = !1,
                    u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree)
                        return;
                    u.Config.timeSpin = setTimeout(function() {
                        return o.contents.EnableButtons(t)
                    }, 2e3)
                }
            },
            CheckLoginOrInRoom: function(t) {
                var e = t;
                return !(u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree) && (u.Config.isLogin ? !!u.Config.inRoom || (e.showMessage(Message.GetMessage("sl79")),
                !1) : (e.showMessage(Language.GetMessage("app003")),
                !1))
            },
            DeleteTimer: function() {
                h.Util.ClearTimeOut(u.Config.timerEvent),
                h.Util.ClearTimeOut(u.Config.timeSpin),
                h.Util.ClearTimeOut(u.Config.timeBonus),
                h.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                h.Util.ClearTimeOut(u.Config.timeOutEachLine),
                h.Util.ClearTimeOut(u.Config.timeShowWin),
                h.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                h.Util.ClearTimeOut(u.Config.timeJackpot),
                h.Util.ClearTimeOut(u.Config.timePop)
            },
            ClearTimer: function() {
                h.Util.ClearTimeOut(u.Config.timeSpin),
                h.Util.ClearTimeOut(u.Config.timeBonus),
                h.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                h.Util.ClearTimeOut(u.Config.timeOutEachLine),
                h.Util.ClearTimeOut(u.Config.timeShowWin),
                h.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                h.Util.ClearTimeOut(u.Config.timePop)
            },
            DeleteTwEffect: function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "ocean-eff" === t[e].data && t[e].kill()
            },
            DeleteTweens: function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "ocean-eff" !== t[e].data && "ocean" !== t[e].data && "money-fall-ocean" !== t[e].data || t[e].kill()
            }
        }
    }
    , , , , , , , , , , , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.game = void 0;
        var i = n(31)
          , o = n(3)
          , s = (a.prototype.delete = function() {
            this.game.delete()
        }
        ,
        a.prototype.startAuto = function() {
            return this.game.StartAuto()
        }
        ,
        a.prototype.stopAuto = function() {
            this.game.StopAuto()
        }
        ,
        a.prototype.checkAuto = function() {
            return this.game.CheckAuto()
        }
        ,
        a.prototype.getRoomId = function() {
            return this.game.getRoomId()
        }
        ,
        a.prototype.setSilent = function() {
            this.game.SetSilent()
        }
        ,
        a.prototype.restartAuto = function(t, e) {
            this.game.RestartAuto(t, e)
        }
        ,
        a);
        function a(t) {
            o.load({
                custom: {
                    families: ["SVN-SAF", "Roboto"]
                },
                fontactive: function() {}
            }),
            this.game = new i.games(t)
        }
        e.game = s
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.games = void 0;
        var a = n(0)
          , i = n(32)
          , o = n(11)
          , r = n(7)
          , l = n(16)
          , s = n(33)
          , u = n(34)
          , h = n(35);
        n(1);
        var c = (p.prototype.GetAutoSpin = function() {
            var t = sessionStorage.getItem("Auto-" + this.storage);
            if (this.isSilent = !1,
            t) {
                var e = t.split(";");
                if ("true" === e[2] && (-1 === parseInt(e[1]) || 0 < parseInt(e[1])))
                    return r.Config.autoSpinCount = parseInt(e[1]),
                    r.Config.isAutoSpin = window.App.isAutoOcean = !0,
                    window.App.isAuto = !0,
                    $(".multislot-expand").addClass("active"),
                    r.Config.roomId = parseInt(e[0]),
                    void (e[3] && (this.line = e[3]))
            }
            sessionStorage.removeItem("Auto-" + this.storage)
        }
        ,
        p.prototype.Init = function() {
            PIXI.utils.skipHello(),
            this.application = new PIXI.Application(this.size[0],this.size[1] - 40,{
                antialias: !0,
                view: this.target,
                transparent: !0
            });
            var t = this;
            this.application.ticker.add(function() {
                t.Update(t)
            }),
            this.application.ticker.speed = 2,
            this.application.ticker.minFPS = 60,
            this.InitContainer();
            for (var e = 0; e < this.assets.length; e++)
                "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
            this.loader.on("progress", function() {
                return t.Loading(t)
            }),
            this.loader.load(function() {
                t.InitGame(),
                t.InitHubs(),
                $("#divLoading").hide()
            })
        }
        ,
        p.prototype.Loading = function(t) {
            $("#divLoading").show(),
            $("#popupJackpot").removeClass("show"),
            0 < $("#divLoading .loading-percent").length ? ($("#divLoading .loading-percent").css("width", parseInt(t.loader.progress) + "%"),
            $("#divLoading .loading-text").html(parseInt(t.loader.progress) + "%")) : ($("#loading-progress span").css("width", parseInt(t.loader.progress) + "%"),
            $("#loading-progress-txt").html(parseInt(t.loader.progress) + "%"))
        }
        ,
        p.prototype.InitHubs = function() {
            this.hubs = new i.default(r.Config.hubUrl + "gameHub",this.token,this)
        }
        ,
        p.prototype.Update = function(t) {
            var e = Date.now();
            if (t.bubbleLeft)
                try {
                    t.bubbleLeft.update(.001 * (e - t.elapsed))
                } catch (t) {}
            if (t.bubbleRight)
                try {
                    t.bubbleRight.update(.001 * (e - t.elapsed))
                } catch (t) {}
            if (t.dotLeft)
                try {
                    t.dotLeft.update(.001 * (e - t.elapsed))
                } catch (t) {}
            if (t.dotRight)
                try {
                    t.dotRight.update(.001 * (e - t.elapsed))
                } catch (t) {}
            t.elapsed = e
        }
        ,
        p.prototype.ResetTweenTab = function() {
            window.addEventListener("blur", function() {
                TweenLite.lagSmoothing(0)
            }, !1),
            window.addEventListener("focus", function() {
                TweenLite.lagSmoothing(1e3, 16)
            }, !1)
        }
        ,
        p.prototype.InitContainer = function() {
            this.bgContainer = new Container,
            this.bgContainer.name = "background-container",
            this.lobbyContainer = new Container,
            this.lobbyContainer.name = "lobby-container",
            this.linesContainer = new Container,
            this.linesContainer.name = "lines-container",
            this.assetsContainer = new Container,
            this.assetsContainer.name = "assets-container",
            this.mainContainer = new Container,
            this.mainContainer.name = "main-container",
            this.iconsContainer = new Container,
            this.iconsContainer.name = "icon-container",
            this.containerColumn1 = new Container,
            this.containerColumn2 = new Container,
            this.containerColumn3 = new Container,
            this.containerColumn4 = new Container,
            this.containerColumn5 = new Container,
            this.effectContainer = new Container,
            this.effectContainer.name = "effect-container",
            this.popupContainer = new Container,
            this.popupContainer.name = "popup-container",
            this.guideContainer = new Container,
            this.guideContainer.name = "guide-container",
            this.moneyContainer = new Container,
            this.moneyContainer.name = "money-container",
            this.moneyEffectContainer = new Container,
            this.eventContainer = new Container,
            this.mainContainer.addChild(this.containerColumn1, this.containerColumn2, this.containerColumn3, this.containerColumn4, this.containerColumn5, this.iconsContainer),
            this.application.stage.addChild(this.bgContainer, this.lobbyContainer, this.assetsContainer, this.effectContainer, this.moneyContainer, this.moneyEffectContainer, this.guideContainer, this.popupContainer, this.eventContainer)
        }
        ,
        p.prototype.UpdateJackpot = function(t) {
            0 < t && r.Config.inRoom && !r.Config.isTry && l.contents.CountJackPot(this.txtJackpot, !0, !1, t, 3.5)
        }
        ,
        p.prototype.InitGame = function() {
            var t = this;
            this.filter = new PIXI.filters.ColorMatrixFilter,
            this.filter.matrix = [1, 0, 0, .1, 0, 0, 1, 0, .1, 0, 0, 0, 1, .1, 0, 0, 0, 0, 1, 0],
            this.filterGray = new PIXI.filters.ColorMatrixFilter,
            this.filterGray.matrix = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0],
            this.InitFrames(),
            this.InitBg(),
            this.InitLobby(),
            this.InitGamePlay(),
            this.InitButtons(),
            this.InitLines(),
            this.InitSlots(),
            this.InitMask(),
            this.InitBoxLines(),
            this.InitPaytable(),
            this.InitPopup(),
            this.InitPopupWin(),
            this.InitEvent(),
            $(".loading").hide(),
            this.itemsMainGame = [this.column1[this.totalItems - 3], this.column2[this.totalItems - 3], this.column3[this.totalItems - 3], this.column4[this.totalItems - 3], this.column5[this.totalItems - 3], this.column1[this.totalItems - 2], this.column2[this.totalItems - 2], this.column3[this.totalItems - 2], this.column4[this.totalItems - 2], this.column5[this.totalItems - 2], this.column1[this.totalItems - 1], this.column2[this.totalItems - 1], this.column3[this.totalItems - 1], this.column4[this.totalItems - 1], this.column5[this.totalItems - 1]],
            l.contents.GetJackpot(this),
            l.contents.ChangeResources(this),
            r.Config.ready = !0;
            try {
                this.reelSpin = this.loader.resources.reelSpin.sound,
                this.reelSpin.loop = !0,
                this.bgSound = this.loader.resources.bgSound.sound,
                this.bgSound.volume = .1,
                this.bgSound.loop = !0,
                this.bigWinSound = this.loader.resources.bigWin.sound,
                this.bigWinSound.loop = !1,
                this.endBigWinSound = this.loader.resources.bigWinCountingEnd.sound,
                this.endBigWinSound.loop = !1,
                this.jackpotSound = this.loader.resources.jackpotWin.sound,
                this.jackpotSound.loop = !1,
                this.moneyIncrease = this.loader.resources.countSound.sound,
                this.moneyIncrease.loop = !0,
                this.moneyIncrease.volume = 1.5
            } catch (t) {}
            if (r.Config.music)
                try {
                    this.bgSound.play()
                } catch (t) {}
            this.assetsContainer.visible = !1,
            this.mainContainer.visible = !1,
            this.popupContainer.visible = !1,
            this.btnBack.visible = !1,
            this.iconEvent.visible = !1,
            window.Config.EnableXEvent && l.contents.GetEvent(this),
            this.Resize(this),
            this.ResetTweenTab(),
            this.resizeFunc = function() {
                return t.Resize(t)
            }
            ,
            window.addEventListener("resize", this.resizeFunc)
        }
        ,
        p.prototype.Resize = function(t) {
            t.size = [$(window).width(), $(window).height()],
            t.application.renderer.resize($(window).width(), $(window).height()),
            t.bgContainer.children[0].scale.set(t.size[0] / 1920),
            t.bgContainer.children[0].anchor.set(.5),
            t.bgContainer.children[0].position.set(t.size[0] / 2, t.size[1] / 2);
            var e = Math.min(t.size[0] / 1750, t.size[1] / 768);
            t.assetsContainer.scale.set(e),
            t.assetsContainer.position.set(t.size[0] / 2, t.size[1] / 2),
            t.popupContainer.scale.set(e),
            t.popupContainer.position.set(t.size[0] / 2, t.size[1] / 2),
            t.moneyContainer.scale.set(e),
            t.moneyContainer.position.set(t.size[0] / 2, t.size[1] / 2),
            t.lobbyContainer.scale.set(e),
            t.lobbyContainer.position.set(t.size[0] / 2, t.size[1] / 2 + 40),
            t.eventContainer.scale.set(e),
            t.eventContainer.position.set(t.size[0] / 2, t.size[1] / 2),
            r.Config.isBonus && void 0 !== this.bonus && (t.bonus.bonusContainer.scale.set(e),
            t.bonus.bonusContainer.position.set(t.size[0] / 2, t.size[1] / 2))
        }
        ,
        p.prototype.createLightX = function() {
            this.lightingX || (this.lightingX = new AnimatedSprite(this.framesLightingX),
            this.lightingX.animationSpeed = .4,
            this.lightingX.loop = !0,
            this.lightingX.position.set(-12, -272),
            this.lightingX.anchor.set(.5),
            this.lightingX.play(),
            this.assetsContainer.addChild(this.lightingX))
        }
        ,
        p.prototype.deleteLightX = function() {
            this.lightingX && this.lightingX.destroy({
                children: !0
            }),
            this.lightingX = null
        }
        ,
        p.prototype.updateEvent = function(t) {
            var e = this;
            try {
                for (var n = this.xEvent.visible = !1, i = 0; i < t.length; i++) {
                    var o, s = t[i];
                    this.xLobby[s.roomID - 1].visible = !1,
                    s.nextJackpot < 0 ? this.arrBox[s.roomID - 1].children[1].visible = this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1 : 0 == s.nextJackpot ? (this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !1,
                    this.arrBox[s.roomID - 1].children[1].texture = this.loader.resources.event.textures["ej-tg-x" + s.multiplier],
                    r.Config.inRoom ? s.roomID != r.Config.roomId || r.Config.isTry || (this.xEvent.visible = !0,
                    this.xEvent.texture = this.loader.resources.event.textures["ej-lb-x" + s.multiplier],
                    n = !0) : (this.xLobby[s.roomID - 1].visible = !0,
                    this.xLobby[s.roomID - 1].texture = this.loader.resources.event.textures["ej-lb-x" + s.multiplier])) : (this.arrBox[s.roomID - 1].children[1].visible = !1,
                    o = "X" + s.multiplier + " " + Message.GetMessage("ev50") + ("km" == r.Config.lang ? "     " : "        ") + Message.GetMessage("ev49"),
                    this.arrBox[s.roomID - 1].children[2].text = o,
                    this.arrBox[s.roomID - 1].children[3].children[0].text = s.nextJackpot,
                    this.arrBox[s.roomID - 1].children[2].visible = this.arrBox[s.roomID - 1].children[3].visible = !0)
                }
                n ? this.lightingX || this.createLightX() : this.deleteLightX(),
                r.Config.timerEvent = setTimeout(function() {
                    l.contents.GetEvent(e)
                }, window.Config.TIME_COUNT_GET_EVENT_X ? window.Config.TIME_COUNT_GET_EVENT_X : 5e3)
            } catch (t) {
                clearTimeout(r.Config.timerEvent)
            }
        }
        ,
        p.prototype.InitEvent = function() {
            this.iconEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]),
            this.iconEvent.anchor.set(.5),
            this.iconEvent.position.set(this.size[0] / 2 - 100, -this.size[1] / 2 + 100),
            this.iconEvent.interactive = !0,
            this.iconEvent.buttonMode = !0,
            this.iconEvent.on("pointerdown", this.onDragStart).on("pointerup", this.onDragEnd).on("pointerupoutside", this.onDragEnd).on("pointermove", this.onDragMove),
            this.boxEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-bg"]),
            this.boxEvent.anchor.set(.5, 0),
            this.boxEvent.position.set(.5, 5),
            this.room1Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room1Event.anchor.set(.5),
            this.room1Event.position.set(0, 71);
            var t = new PIXI.Text(a.Util.ParseMoney(r.Config.arrRoom[0]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            t.anchor.set(.5),
            t.position.set(0, -15),
            this.room1X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room1X.anchor.set(.5),
            this.room1X.position.set(0, 10);
            var e = Message.GetMessage("ev26") + ("km" == r.Config.lang ? "     " : "        ") + Message.GetMessage("ev49");
            this.txtRoom1 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom1.anchor.set(.5),
            this.txtRoom1.position.set(0, 10),
            this.boxJackRoom1 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom1.anchor.set(.5),
            "km" == r.Config.lang && this.boxJackRoom1.scale.set(.8),
            this.boxJackRoom1.position.set("km" == r.Config.lang ? 28 : "zh" == r.Config.lang ? 9 : "en" == r.Config.lang ? 16 : 13, 10),
            this.boxJackRoom1.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom1.children[0].anchor.set(.5),
            this.room1Event.addChild(t, this.room1X, this.txtRoom1, this.boxJackRoom1),
            this.room1X.visible = this.boxJackRoom1.visible = this.txtRoom1.visible = !1,
            this.room2Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room2Event.anchor.set(.5),
            this.room2Event.position.set(0, 133);
            var n = new PIXI.Text(a.Util.ParseMoney(r.Config.arrRoom[1]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            n.anchor.set(.5),
            n.position.set(0, -15),
            this.room2X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room2X.anchor.set(.5),
            this.room2X.position.set(0, 10),
            this.txtRoom2 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom2.anchor.set(.5),
            this.txtRoom2.position.set(0, 10),
            this.boxJackRoom2 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom2.anchor.set(.5),
            "km" == r.Config.lang && this.boxJackRoom2.scale.set(.8),
            this.boxJackRoom2.position.set("km" == r.Config.lang ? 28 : "zh" == r.Config.lang ? 9 : "en" == r.Config.lang ? 16 : 13, 10),
            this.boxJackRoom2.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom2.children[0].anchor.set(.5),
            this.room2Event.addChild(n, this.room2X, this.txtRoom2, this.boxJackRoom2),
            this.room2X.visible = this.boxJackRoom2.visible = this.txtRoom2.visible = !1,
            this.room3Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room3Event.anchor.set(.5),
            this.room3Event.position.set(0, 195);
            var i = new PIXI.Text(a.Util.ParseMoney(r.Config.arrRoom[2]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            i.anchor.set(.5),
            i.position.set(0, -15),
            this.room3X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room3X.anchor.set(.5),
            this.room3X.position.set(0, 10),
            this.txtRoom3 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom3.anchor.set(.5),
            this.txtRoom3.position.set(0, 10),
            this.boxJackRoom3 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom3.anchor.set(.5),
            "km" == r.Config.lang && this.boxJackRoom3.scale.set(.8),
            this.boxJackRoom3.position.set("km" == r.Config.lang ? 28 : "zh" == r.Config.lang ? 9 : "en" == r.Config.lang ? 16 : 13, 10),
            this.boxJackRoom3.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom3.children[0].anchor.set(.5),
            this.room3Event.addChild(i, this.room3X, this.txtRoom3, this.boxJackRoom3),
            this.room3X.visible = this.boxJackRoom3.visible = this.txtRoom3.visible = !1,
            this.boxEvent.addChild(this.room1Event, this.room2Event, this.room3Event),
            this.arrBox = [this.room1Event, this.room2Event, this.room3Event],
            this.arrowEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-arrow"]),
            this.arrowEvent.anchor.set(.5),
            this.arrowEvent.position.set(0, 250),
            this.arrowEvent.scale.y = -1,
            this.arrowEvent.interactive = !0,
            this.arrowEvent.buttonMode = !0,
            this.arrowEvent.on("pointerdown", this.toogleEvent.bind(this.arrowEvent, this)).on("pointerup", this.toogleEventUp.bind(this.arrowEvent, this));
            var o = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]);
            o.anchor.set(.5),
            this.iconEvent.addChild(this.boxEvent, this.arrowEvent, o),
            this.eventContainer.addChild(this.iconEvent)
        }
        ,
        p.prototype.toogleEventUp = function(t) {
            t.iconEvent.interactive = !0
        }
        ,
        p.prototype.toogleEvent = function(t) {
            t.iconEvent.interactive = !1,
            -1 == t.arrowEvent.scale.y ? (t.arrowEvent.scale.y = 1,
            TweenMax.to(t.boxEvent, .5, {
                alpha: 0,
                data: "dancing"
            }),
            TweenMax.to(t.arrowEvent, .5, {
                y: 50,
                data: "dancing"
            })) : (TweenMax.to(t.boxEvent, .5, {
                alpha: 1,
                data: "dancing"
            }),
            TweenMax.to(t.arrowEvent, .5, {
                y: 250,
                data: "dancing"
            }),
            t.arrowEvent.scale.y = -1),
            setTimeout(function() {
                t.iconEvent.interactive = !0
            }, 500)
        }
        ,
        p.prototype.onDragStart = function(t) {
            this.data = t.data,
            this.alpha = .9,
            this.dragging = !0
        }
        ,
        p.prototype.onDragEnd = function() {
            this.data = null,
            this.alpha = 1,
            this.dragging = !1
        }
        ,
        p.prototype.onDragMove = function() {
            var t, e = this;
            e.dragging && (t = e.data.getLocalPosition(e.parent),
            e.x = t.x,
            e.y = t.y)
        }
        ,
        p.prototype.InitFrames = function() {
            var t;
            for (this.framesEffectRoom = [],
            this.framesIconsEffect = [],
            this.framesFish = [],
            this.framesJackpot = [],
            this.framesCoins = [],
            this.framesLightingX = [],
            t = 1; t < 16; t++)
                this.framesIconsEffect.push(TextureCache["sea-icon-effect-" + t + ".png"]);
            for (t = 0; t < 20; t++)
                this.framesLightingX.push(this.loader.resources.fxJackpot.textures["fxJackpotSheets_000" + (t < 10 ? "0" : "") + t + ".png"]);
            this.framesCoins = framesFromTilesetImage("coinOcean", 30, 31)
        }
        ,
        p.prototype.InitBg = function() {
            this.bg = new Sprite(TextureCache.bgSea),
            this.bgContainer.addChild(this.bg),
            this.bg.anchor.set(.5),
            this.bg.position.set(this.size[0] / 2, this.size[1] / 2 + 18),
            this.bubbleLeft = new PIXI.particles.Emitter(this.bg,[TextureCache["bubbleOc.png"]],this.loader.resources.bubbleParticle.data),
            this.bubbleLeft.spawnPos.x = -this.size[0] / 2,
            this.bubbleLeft.spawnPos.y = 200,
            this.bubbleLeft.emit = !0,
            this.dotLeft = new PIXI.particles.Emitter(this.bg,[TextureCache["oceanDot.png"]],this.loader.resources.dotParticle.data),
            this.dotLeft.spawnPos.x = -this.size[0] / 2 + 100,
            this.dotLeft.spawnPos.y = 450,
            this.dotLeft.emit = !0,
            this.bubbleRight = new PIXI.particles.Emitter(this.bg,[TextureCache["bubbleOc.png"]],this.loader.resources.bubbleParticle.data),
            this.bubbleRight.spawnPos.x = 500,
            this.bubbleRight.spawnPos.y = 200,
            this.bubbleRight.emit = !0,
            this.dotRight = new PIXI.particles.Emitter(this.bg,[TextureCache["oceanDot.png"]],this.loader.resources.dotParticle.data),
            this.dotRight.spawnPos.x = 600,
            this.dotRight.spawnPos.y = 400,
            this.dotRight.emit = !0,
            this.fishLeft = new PIXI.Sprite(TextureCache["fishShadow.png"]),
            this.fishLeft.x = -122,
            this.fishLeft.y = 0,
            this.fishLeft.alpha = 0,
            this.fishRight = new PIXI.Sprite(TextureCache["fishShadow.png"]),
            this.fishRight.x = 0,
            this.fishRight.y = 0,
            this.fishRight.alpha = 0,
            this.fishRight.scale.x = -1,
            this.bg.addChild(this.fishLeft, this.fishRight),
            this.CreateFishShadow(this.fishLeft, {
                x: "-=600"
            }, 3.5),
            this.CreateFishShadow(this.fishRight, {
                x: "+=600"
            }, 0)
        }
        ,
        p.prototype.CreateFishShadow = function(t, e, n, i) {
            var o = new TimelineMax({
                repeat: -1,
                delay: n
            });
            o.add(TweenLite.to(t, 2, {
                alpha: 1,
                delay: 5,
                ease: Power0.easeNone
            })),
            o.add(TweenLite.to(t, 1.5, {
                alpha: 0,
                delay: 1.5,
                ease: Power1.easeOut
            }));
            var s = t.scale.x < 0 ? -1.5 : 1.5;
            t.scale.y,
            TweenMax.to(t, 5, {
                x: e.x,
                repeat: -1,
                delay: n,
                ease: Power1.easeInOut,
                onRepeat: function() {
                    t.x = a.Util.RandomFrom(600, 800, !0),
                    t.y = a.Util.RandomFrom(-150, 150, !0)
                },
                pixi: {
                    scaleX: s,
                    scaleY: .7
                }
            })
        }
        ,
        p.prototype.enableLoby = function() {
            for (var t = 0; t < 3; t++)
                this.arrChar[t].interactive = !0,
                this.arrChar[t].buttonMode = !0
        }
        ,
        p.prototype.InitLobby = function() {
            this.arrJackpot = [],
            this.xLobby = [],
            this.arrChar = [];
            for (var t = 0; t < 3; t++) {
                var e = new Sprite(TextureCache["stone.png"]);
                e.anchor.set(.5),
                e.position.set(this.lobbyIconPos[1][t][0], this.lobbyIconPos[1][t][1]),
                this.lobbyContainer.addChild(e);
                var n = new Sprite(TextureCache[this.lobbyIconPos[2][t][2]]);
                n.inx = t + 1,
                n.anchor.set(.5),
                n.position.set(this.lobbyIconPos[2][t][0], this.lobbyIconPos[2][t][1]),
                this.lobbyContainer.addChild(n),
                this.arrChar.push(n),
                n.on("pointerover", this.charOver).on("pointerout", this.charOut).on("pointerdown", this.charDown.bind(n, this));
                var i = new PIXI.Text(0 == t ? "100" : 1 == t ? "1.000" : "10.000",{
                    fontFamily: "SVN-SAF",
                    fontSize: 20,
                    fill: ["#eefffe"],
                    dropShadow: !0,
                    dropShadowColor: "#000000",
                    dropShadowAngle: 2,
                    dropShadowBlur: 1
                });
                i.anchor.set(.5),
                i.position.set(e.x, e.y - 26);
                var o = new Sprite(this.loader.resources.event.textures["ej-lb-x2"]);
                o.anchor.set(.5),
                o.position.set(e.x, e.y - 120),
                o.visible = !1,
                this.xLobby.push(o);
                var s = new BitmapText("0",{
                    font: "20x SAF-Small-Red"
                });
                s.anchor.set(.5),
                this.arrJackpot.push(s),
                s.position.set(e.x, e.y + 20),
                this.lobbyContainer.addChild(i, s, o)
            }
            var a = new Sprite(TextureCache["back" + r.Config.lang + ".png"]);
            a.anchor.set(.5),
            a.position.set(-460, 93),
            a.interactive = !0,
            a.buttonMode = !0,
            a.on("pointerover", this.btnOver.bind(a, this)).on("pointerout", this.btnOut).on("pointerdown", function() {
                window.location.hash = "#",
                window.location.reload()
            }),
            this.lobbyContainer.addChild(a)
        }
        ,
        p.prototype.InitSlots = function() {
            var t;
            this.startPosition = 482;
            for (var e = 0, n = this.totalItems - 1; 0 <= n; n--) {
                t = Math.floor(7 * Math.random()) + 1;
                var i = "item-" + r.Config.roomId + "_" + t + (2 < n && n < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png";
                this.column1[n] = new Sprite(TextureCache[i]),
                this.column1[n].x = 0,
                this.column1[n].y = this.startPosition - 130 * e,
                this.column1[n].anchor.set(.5),
                this.containerColumn1.addChild(this.column1[n]),
                t = Math.floor(7 * Math.random()) + 1,
                this.column2[n] = new Sprite(TextureCache["item-" + r.Config.roomId + "_" + t + (2 < n && n < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column2[n].x = 150,
                this.column2[n].y = this.startPosition - 130 * e,
                this.column2[n].anchor.set(.5),
                this.containerColumn2.addChild(this.column2[n]),
                t = Math.floor(7 * Math.random()) + 1,
                this.column3[n] = new Sprite(TextureCache["item-" + r.Config.roomId + "_" + t + (2 < n && n < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column3[n].x = 300,
                this.column3[n].y = this.startPosition - 130 * e,
                this.column3[n].anchor.set(.5),
                this.containerColumn3.addChild(this.column3[n]),
                t = Math.floor(7 * Math.random()) + 1,
                this.column4[n] = new Sprite(TextureCache["item-" + r.Config.roomId + "_" + t + (2 < n && n < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column4[n].x = 450,
                this.column4[n].y = this.startPosition - 130 * e,
                this.column4[n].anchor.set(.5),
                this.containerColumn4.addChild(this.column4[n]),
                t = Math.floor(7 * Math.random()) + 1,
                this.column5[n] = new Sprite(TextureCache["item-" + r.Config.roomId + "_" + t + (2 < n && n < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column5[n].x = 600,
                this.column5[n].y = this.startPosition - 130 * e,
                this.column5[n].anchor.set(.5),
                this.containerColumn5.addChild(this.column5[n]),
                e++
            }
            this.startHeight = this.column1[0].y
        }
        ,
        p.prototype.InitGamePlay = function() {
            this.bgGame = new Sprite(TextureCache["main.png"]),
            this.bgGame.anchor.set(.5),
            this.bgGame.position.set(0, -60),
            this.assetsContainer.addChild(this.bgGame),
            this.assetsContainer.addChild(this.mainContainer),
            this.mainContainer.position.set(-303, -408),
            this.txtJackpot = new PIXI.extras.BitmapText("0",{
                font: "40px SAF-Small-White"
            }),
            this.txtJackpot.anchor.set(.5),
            this.txtJackpot.position.set(0, -283),
            this.xEvent = new Sprite(this.loader.resources.event.textures["ej-lb-x2"]),
            this.xEvent.anchor.set(.5),
            this.xEvent.position.set(135, -310),
            this.xEvent.visible = !1,
            this.balanceTrial = new PIXI.Text(Message.GetMessage("sl37") + ": 50.000.000",{
                fontFamily: "SVN-SAF",
                fontSize: 25,
                fontWeight: "bold",
                fill: ["#fff"],
                stroke: "#052e51",
                strokeThickness: 3,
                padding: 30,
                wordWrap: !0,
                wordWrapWidth: 370
            }),
            this.balanceTrial.anchor.set(.5),
            this.balanceTrial.position.set(300, 180),
            this.balanceTrial.visible = !1,
            this.mainContainer.addChild(this.balanceTrial),
            this.txtSession = new PIXI.Text("#0",{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fill: ["#eefffe"],
                dropShadow: !0,
                dropShadowColor: "#000000",
                dropShadowAngle: 2,
                dropShadowBlur: 1
            }),
            this.txtSession.anchor.set(0, .5),
            this.txtSession.position.set(-292, -269),
            this.btnSound = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnSound.anchor.set(.5),
            this.btnSound.position.set(183, -287),
            this.btnSound.addChild(new Sprite(TextureCache["icon-sound-on.png"])),
            this.btnSound.getChildAt(0).anchor.set(.5),
            this.btnSound.getChildAt(0).position.set(0, 0),
            this.btnSound.interactive = !0,
            this.btnSound.buttonMode = !0,
            this.btnSound.on("pointerover", this.btnOver.bind(this.btnSound, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnSoundDown.bind(this.btnSound, this)),
            this.btnMusic = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnMusic.anchor.set(.5),
            this.btnMusic.position.set(247, -287),
            this.btnMusic.addChild(new Sprite(TextureCache["icon-music-on.png"])),
            this.btnMusic.getChildAt(0).anchor.set(.5),
            this.btnMusic.getChildAt(0).position.set(0, 0),
            this.btnMusic.interactive = !0,
            this.btnMusic.buttonMode = !0,
            this.btnMusic.visible = !1,
            this.btnMusic.on("pointerover", this.btnOver.bind(this.btnMusic, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnSoundDown.bind(this.btnSound, this)),
            this.btnGuide = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnGuide.name = "btn-guide",
            this.btnGuide.anchor.set(.5),
            this.btnGuide.position.set(374, -287),
            this.btnGuide.addChild(new Sprite(TextureCache["icon-guide.png"])),
            this.btnGuide.getChildAt(0).anchor.set(.5),
            this.btnGuide.getChildAt(0).position.set(0, 0),
            this.btnGuide.interactive = !0,
            this.btnGuide.buttonMode = !0,
            this.btnGuide.on("pointerover", this.btnOver.bind(this.btnGuide, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnGuideDown.bind(this.btnGuide, this)),
            this.btnHistory = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnHistory.name = "btn-history",
            this.btnHistory.anchor.set(.5),
            this.btnHistory.position.set(310, -287),
            this.btnHistory.addChild(new Sprite(TextureCache["icon-history.png"])),
            this.btnHistory.getChildAt(0).anchor.set(.5),
            this.btnHistory.getChildAt(0).position.set(0, 0),
            this.btnHistory.interactive = !0,
            this.btnHistory.buttonMode = !0,
            this.btnHistory.on("pointerover", this.btnOver.bind(this.btnHistory, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnHistoryDown.bind(this.btnHistory, this)),
            this.btnRank = new Sprite(TextureCache["button-common-normal.png"]),
            this.btnRank.name = "btn-top-rank",
            this.btnRank.anchor.set(.5),
            this.btnRank.position.set(247, -287),
            this.btnRank.addChild(new Sprite(TextureCache["icon-rank.png"])),
            this.btnRank.getChildAt(0).anchor.set(.5),
            this.btnRank.getChildAt(0).position.set(0, 0),
            this.btnRank.interactive = !0,
            this.btnRank.buttonMode = !0,
            this.btnRank.on("pointerover", this.btnOver.bind(this.btnRank, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnRankDown.bind(this.btnRank, this)),
            this.btnBack = new Sprite(TextureCache["BtnLobby_Normal.png"]),
            this.btnBack.anchor.set(.5),
            this.btnBack.scale.set(.7),
            this.btnBack.position.set(-392, -316),
            this.btnBack.interactive = !0,
            this.btnBack.buttonMode = !0,
            this.btnBack.on("pointerover", this.btnOver.bind(this.btnBack, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnBackDown.bind(this.btnBack, this)),
            this.btnHide = new Sprite(TextureCache["btn-hide.png"]),
            this.btnHide.anchor.set(.5),
            this.btnHide.scale.set(.7),
            this.btnHide.position.set(-307, -316),
            this.btnHide.interactive = !0,
            this.btnHide.buttonMode = !0,
            this.btnHide.addChild(new Sprite(TextureCache["icon-hide.png"])),
            this.btnHide.children[0].anchor.set(.5),
            this.btnHide.children[0].position.set(-15, 0),
            this.btnHide.addChild(new Sprite(TextureCache["hide-" + ("vi" === r.Config.lang ? "vi" : "en") + ".png"])),
            this.btnHide.children[1].anchor.set(0, .5),
            this.btnHide.children[1].position.set(0, 0),
            this.btnHide.on("pointerdown", this.btnHideDown.bind(this.btnHide, this)),
            this.btnTrial = new Sprite(TextureCache["BtnTrial_Normal.png"]),
            this.btnTrial.anchor.set(.5),
            this.btnTrial.scale.set(.7),
            this.btnTrial.width = 90,
            this.btnTrial.position.set(-210, -316),
            this.btnTrial.addChild(new PIXI.Text(Message.GetMessage("sl9"),{
                fontFamily: "SVN-SAF",
                fontSize: 16,
                fill: ["#eefffe"],
                dropShadow: !0,
                dropShadowColor: "#000000",
                dropShadowAngle: 2,
                dropShadowBlur: 1
            })),
            this.btnTrial.getChildAt(0).anchor.set(.5),
            this.btnTrial.getChildAt(0).position.set(0, 0),
            this.btnTrial.interactive = !0,
            this.btnTrial.buttonMode = !0,
            this.btnTrial.on("pointerover", this.btnOver.bind(this.btnTrial, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnTrialDown.bind(this.btnTrial, this)),
            this.assetsContainer.addChild(this.txtJackpot, this.xEvent, this.txtSession, this.btnSound, this.btnMusic, this.btnGuide, this.btnHistory, this.btnRank, this.btnBack, this.btnHide, this.btnTrial)
        }
        ,
        p.prototype.InitButtons = function() {
            var t = new Sprite(TextureCache["main-bar.png"]);
            t.name = "main-bar",
            t.anchor.set(.5),
            t.position.set(0, 234),
            this.assetsContainer.addChild(t),
            this.btnLines = new Sprite(TextureCache["button-line-normal.png"]),
            this.btnLines.name = "button-line-normal.png",
            this.btnLines.anchor.set(.5),
            this.btnLines.position.set(-432, 11),
            this.btnLines.addChild(new PIXI.Text(Message.GetMessage("sl7"),{
                fontFamily: "SVN-SAF",
                fontSize: 13,
                fill: ["#ffed63"]
            })),
            this.btnLines.getChildAt(0).anchor.set(.5),
            this.btnLines.getChildAt(0).position.set(0, -10),
            this.btnLines.interactive = !0,
            this.btnLines.buttonMode = !0,
            this.btnLines.on("pointerover", this.btnOver.bind(this.btnLines, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnLinesDown.bind(this.btnLines, this)),
            this.txtLines = new PIXI.Text("20",{
                fontFamily: "SVN-SAF",
                fontSize: 15,
                fill: ["#eefffe"]
            }),
            this.txtLines.anchor.set(.5),
            this.txtLines.position.set(-7, 7),
            this.btnLines.addChild(this.txtLines),
            this.txtUserName = new PIXI.Text("undefined" != typeof App && App.account ? App.account.nickname : "",{
                fontFamily: "SVN-SAF",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                padding: 10
            }),
            this.txtUserName.anchor.set(.5),
            this.txtUserName.position.set(-432, -36),
            this.txtBalance = new PIXI.Text("undefined" != typeof App && App.account ? a.Util.ParseMoney(App.account.goldBalance) : "",{
                fontFamily: "SVN-SAF",
                fontSize: 13,
                fontWeight: "bold",
                fill: ["#ffb600"]
            }),
            this.txtBalance.anchor.set(.5),
            this.txtBalance.position.set(-275, -36),
            t.addChild(this.btnLines, this.txtUserName, this.txtBalance),
            this.btnBet = new Sprite(TextureCache["bet-bg.png"]),
            this.btnBet.name = "bet-bg.png",
            this.btnBet.anchor.set(.5),
            this.btnBet.position.set(-327, 13),
            this.btnBet.addChild(new PIXI.Text(Message.GetMessage("sl6"),{
                fontFamily: "SVN-SAF",
                fontSize: 13,
                fill: ["#ffdf4f"]
            })),
            this.btnBet.getChildAt(0).anchor.set(.5),
            this.btnBet.getChildAt(0).position.set(-5, -13),
            this.txtBetValue = new PIXI.Text("100",{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fill: ["#eefffe"]
            }),
            this.txtBetValue.anchor.set(.5),
            this.txtBetValue.position.set(-15, 9),
            this.btnBet.addChild(this.txtBetValue),
            this.btnPlus = new Sprite(TextureCache["button-control.png"]),
            this.btnPlus.anchor.set(.5),
            this.btnPlus.scale.x = -1,
            this.btnPlus.position.set(50, -15),
            this.btnPlus.addChild(new PIXI.Text("+",{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fill: ["#eefffe"]
            })),
            this.btnPlus.getChildAt(0).anchor.set(.5),
            this.btnPlus.interactive = !0,
            this.btnPlus.buttonMode = !0,
            this.btnPlus.on("pointerover", this.btnOver.bind(this.btnPlus, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnPlusDown.bind(this.btnPlus, this)),
            this.btnMinus = new Sprite(TextureCache["button-control.png"]),
            this.btnMinus.anchor.set(.5),
            this.btnMinus.addChild(new PIXI.Text("-",{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fill: ["#eefffe"]
            })),
            this.btnMinus.getChildAt(0).anchor.set(.5),
            this.btnMinus.position.set(50, 15),
            this.btnMinus.interactive = !0,
            this.btnMinus.buttonMode = !0,
            this.btnMinus.on("pointerover", this.btnOver.bind(this.btnMinus, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnMinusDown.bind(this.btnMinus, this)),
            this.btnBet.addChild(this.btnMinus, this.btnPlus),
            t.addChild(this.btnBet),
            this.boxTotalBet = new Sprite(TextureCache["sea-bg-total-bet.png"]),
            this.boxTotalBet.anchor.set(.5),
            this.boxTotalBet.position.set(-140, 25),
            this.boxTotalBet.addChild(new PIXI.Text(Message.GetMessage("sl4"),{
                fontFamily: "SVN-SAF",
                fontSize: 13,
                fill: ["#ffdf4f"]
            })),
            this.boxTotalBet.getChildAt(0).anchor.set(.5),
            this.boxTotalBet.getChildAt(0).position.set(0, -12),
            this.txtToTalBet = new PIXI.Text("0",{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fill: ["#eefffe"]
            }),
            this.txtToTalBet.anchor.set(.5),
            this.txtToTalBet.position.set(0, 7),
            this.boxTotalBet.addChild(this.txtToTalBet),
            this.boxJustWon = new Sprite(TextureCache["sea-bg-total-bet.png"]),
            this.boxJustWon.anchor.set(.5),
            this.boxJustWon.position.set(150, 25),
            this.boxJustWon.addChild(new PIXI.Text(Message.GetMessage("sl5"),{
                fontFamily: "SVN-SAF",
                fontSize: 13,
                fill: ["#ffdf4f"]
            })),
            this.boxJustWon.getChildAt(0).anchor.set(.5),
            this.boxJustWon.getChildAt(0).position.set(0, -12),
            this.txtJustWon = new PIXI.Text("0",{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fill: ["#eefffe"]
            }),
            this.txtJustWon.anchor.set(.5),
            this.txtJustWon.position.set(0, 7),
            this.boxJustWon.addChild(this.txtJustWon),
            t.addChild(this.boxTotalBet, this.boxJustWon),
            this.btnQuick = new Sprite(this.loader.resources.quick.textures["quickspin.png"]),
            this.btnQuick.name = "btnQuick",
            this.btnQuick.anchor.set(.5),
            this.btnQuick.position.set(515, 10);
            var e = new PIXI.Text(Message.GetMessage("mnpk1"),{
                fontFamily: "SVN-SAF",
                fontSize: 13,
                fill: ["#ffed63"]
            });
            e.anchor.set(0, .5),
            e.position.set(-35, 0),
            this.btnQuick.addChild(e);
            var n = new Sprite(this.loader.resources.quick.textures["quickspin-active.png"]);
            n.anchor.set(.5),
            n.position.set(-58, -3),
            n.visible = !1,
            this.btnQuick.addChild(n),
            this.btnQuick.interactive = !0,
            this.btnQuick.buttonMode = !0,
            this.btnQuick.on("pointerover", this.btnOver.bind(this.btnQuick, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnQuickDown.bind(this.btnQuick, this)),
            this.btnAutoSpin = new Sprite(TextureCache["button-auto-normal.png"]),
            this.btnAutoSpin.name = "btnAutoSpin",
            this.btnAutoSpin.anchor.set(.5),
            this.btnAutoSpin.position.set(332, 10);
            var i = new Sprite(void 0 !== TextureCache["autospin" + r.Config.lang + ".png"] ? TextureCache["autospin" + r.Config.lang + ".png"] : TextureCache["autospinen.png"]);
            i.anchor.set(.5),
            i.position.set(10, 4),
            this.btnAutoSpin.addChild(i);
            var o = new Sprite(TextureCache["icon-auto-inactive.png"]);
            o.anchor.set(.5),
            o.position.set(-33, 2),
            this.btnAutoSpin.addChild(o),
            this.btnAutoSpin.interactive = !0,
            this.btnAutoSpin.buttonMode = !0,
            this.btnAutoSpin.on("pointerover", this.btnOver.bind(this.btnAutoSpin, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnAutoSpinDown.bind(this.btnAutoSpin, this)),
            this.btnStopAuto = new Sprite(TextureCache["button-spin-normal.png"]),
            this.btnStopAuto.name = "btnStopAuto",
            this.btnStopAuto.anchor.set(.5),
            this.btnStopAuto.position.set(0, -18),
            this.btnStopAuto.addChild(new Sprite(TextureCache["vi" == r.Config.lang ? "text-stop.png" : "text-stop-" + r.Config.lang + ".png"])),
            this.btnStopAuto.getChildAt(0).anchor.set(.5),
            this.btnStopAuto.getChildAt(0).position.set(0, 16),
            this.btnStopAuto.visible = !1,
            this.btnStopAuto.interactive = !0,
            this.btnStopAuto.buttonMode = !0,
            this.btnStopAuto.on("pointerover", this.btnOver.bind(this.btnStopAuto, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnStopAutoDown.bind(this.btnStopAuto, this)),
            this.btnSpin = new Sprite(TextureCache["button-spin-normal.png"]),
            this.btnSpin.name = "btnSpin",
            this.btnSpin.anchor.set(.5),
            this.btnSpin.position.set(0, -18),
            this.btnSpin.addChild(new Sprite(TextureCache["vi" == r.Config.lang ? "text-spin.png" : "text-spin-" + r.Config.lang + ".png"])),
            this.btnSpin.getChildAt(0).anchor.set(.5),
            this.btnSpin.getChildAt(0).position.set(0, 16),
            this.btnSpin.interactive = !0,
            this.btnSpin.buttonMode = !0,
            this.btnSpin.on("pointerover", this.btnOver.bind(this.btnSpin, this)).on("pointerout", this.btnOut).on("pointerdown", this.btnSpinDown.bind(this.btnSpin, this)),
            this.txtMoney = new BitmapText("0",{
                font: "50px SAF-Small-Red"
            }),
            this.txtMoney.anchor.set(.5),
            this.txtMoney.position.set(0, 95),
            this.txtMoney.visible = !1,
            this.moneyContainer.addChild(this.txtMoney),
            this.boxTurnFree = new Sprite(TextureCache["ticket.png"]),
            this.boxTurnFree.name = "boxFree",
            this.boxTurnFree.anchor.set(.5),
            this.boxTurnFree.position.set(0, -47),
            this.txtTurnFree = new PIXI.Text("+0",{
                fontFamily: "SVN-SAF",
                fontSize: 16,
                fill: ["#eefffe"],
                dropShadow: !0,
                dropShadowColor: "#000000",
                dropShadowAngle: 2,
                dropShadowBlur: 1
            }),
            this.txtTurnFree.anchor.set(.5),
            this.txtTurnFree.position.set(0, 0),
            this.boxTurnFree.addChild(this.txtTurnFree),
            this.boxTurnFree.visible = !1,
            this.boxTurnFreeTicket = new Sprite(TextureCache["ticket.png"]),
            this.boxTurnFreeTicket.name = "boxFreeTicket",
            this.boxTurnFreeTicket.anchor.set(.5),
            this.boxTurnFreeTicket.position.set(0, 47),
            this.txtTurnFreeTicket = new PIXI.Text("+0",{
                fontFamily: "SVN-SAF",
                fontSize: 16,
                fill: ["#eefffe"],
                dropShadow: !0,
                dropShadowColor: "#000000",
                dropShadowAngle: 2,
                dropShadowBlur: 1
            }),
            this.txtTurnFreeTicket.anchor.set(.5),
            this.txtTurnFreeTicket.position.set(0, 0),
            this.boxTurnFreeTicket.addChild(this.txtTurnFreeTicket),
            this.boxTurnFreeTicket.visible = !1,
            t.addChild(this.btnQuick, this.btnAutoSpin, this.btnSpin, this.btnStopAuto, this.boxTurnFree, this.boxTurnFreeTicket)
        }
        ,
        p.prototype.InitLines = function() {
            this.linesImage = [],
            this.linesNumber = [];
            for (var t = 0; t < this.linesImagePosition.length; t++)
                this.linesImage.push(new Sprite(TextureCache["line-" + (t + 1) + ".png"])),
                this.linesImage[t].anchor.set(.5),
                this.linesImage[t].visible = !1,
                this.linesImage[t].name = t,
                this.linesImage[t].position.set(this.linesImagePosition[t][0], this.linesImagePosition[t][1]),
                this.linesContainer.addChild(this.linesImage[t]);
            this.assetsContainer.addChild(this.linesContainer)
        }
        ,
        p.prototype.InitMask = function() {
            this.mask = new Graphics,
            this.mask.drawRect(0, 0, 760, 391),
            this.mask.position.set(-80, 163),
            this.mainContainer.addChild(this.mask),
            this.mainContainer.mask = this.mask
        }
        ,
        p.prototype.InitBoxLines = function() {
            var t, e = this, n = this;
            for (this.boxLines = new Sprite(TextureCache["popup.png"]),
            this.boxLines.name = "boxline-popup",
            this.boxLines.anchor.set(.5),
            this.boxLines.position.set(0, -65),
            this.boxLines.addChild(new Sprite(TextureCache["button-close-normal.png"])),
            this.boxLines.getChildAt(0).anchor.set(.5),
            this.boxLines.getChildAt(0).position.set(284, -132),
            this.boxLines.getChildAt(0).interactive = !0,
            this.boxLines.getChildAt(0).buttonMode = !0,
            this.boxLines.getChildAt(0).on("pointerover", this.btnOver.bind(this.boxLines.getChildAt(0), this)).on("pointerout", this.btnOut).on("pointerdown", function() {
                n.boxLines.visible = !1
            }),
            this.boxLines.addChild(new PIXI.Text(Message.GetMessage("sl10"),{
                fontFamily: "SVN-SAF",
                fontSize: 25,
                fontWeight: "bold",
                fill: ["#eefffe"],
                stroke: "#052e51",
                strokeThickness: 3,
                padding: 30,
                wordWrap: !0,
                wordWrapWidth: 370
            })),
            this.boxLines.getChildAt(1).anchor.set(.5),
            this.boxLines.getChildAt(1).y = -111,
            this.linesChoose = [],
            t = 0; t < this.linesChoosePos.length; t++)
                this.linesChoose.push(new Sprite(TextureCache["button-table-line-inactive.png"])),
                this.linesChoose[t].inx = t,
                this.linesChoose[t].anchor.set(.5),
                this.linesChoose[t].position.set(this.linesChoosePos[t][0], this.linesChoosePos[t][1]),
                this.linesChoose[t].addChild(new PIXI.Text(this.linesChoosePos[t][2],{
                    fontFamily: "SVN-SAF",
                    fontSize: 14,
                    fill: ["#eefffe"]
                })),
                this.linesChoose[t].getChildAt(0).anchor.set(.5),
                this.linesChoose[t].getChildAt(0).position.set(0, 0),
                this.linesChoose[t].interactive = !0,
                this.linesChoose[t].buttonMode = !0,
                this.linesChoose[t].on("pointerover", function() {
                    e.texture = TextureCache["button-table-line-active.png"]
                }).on("pointerout", function() {
                    e.texture = TextureCache["button-table-line-inactive.png"]
                }).on("pointerdown", this.linesChooseDown.bind(this.linesChoose[t], this)),
                this.boxLines.addChild(this.linesChoose[t]);
            for (this.linesSelect = [],
            t = 0; t < this.linesSelectPos.length; t++)
                this.linesSelect.push(new Sprite(TextureCache["Line_" + (t + 1) + ".png"])),
                this.linesSelect[t].name = "index-" + t,
                this.linesSelect[t].inx = t,
                this.linesSelect[t].active = !1,
                this.linesSelect[t].anchor.set(.5),
                this.linesSelect[t].position.set(this.linesSelectPos[t][0], this.linesSelectPos[t][1]),
                this.linesSelect[t].interactive = !0,
                this.linesSelect[t].buttonMode = !0,
                this.linesSelect[t].on("pointerover", this.btnOver.bind(this.linesSelect[t], this)).on("pointerout", function() {
                    e.active || (e.filters = null)
                }).on("pointerdown", this.linesDown.bind(this.linesSelect[t], this)),
                this.linesSelect[t].addChild(new Sprite(TextureCache["line-rect-active.png"])),
                this.linesSelect[t].getChildAt(0).anchor.set(.5),
                this.linesSelect[t].getChildAt(0).alpha = 0,
                this.boxLines.addChild(this.linesSelect[t]);
            this.boxLines.visible = !1,
            this.popupContainer.addChild(this.boxLines)
        }
        ,
        p.prototype.InitPaytable = function() {
            this.payTable = new Sprite(TextureCache["popup.png"]),
            this.payTable.anchor.set(.5),
            this.payTable.position.set(0, -60);
            var t = new PIXI.Text(Message.GetMessage("sl18"),{
                fontFamily: "SVN-Rocker",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#ffffff"]
            });
            t.anchor.set(.5),
            t.position.set(0, -110),
            this.payTable.addChild(t),
            this.payTableContent = new Sprite(TextureCache["pay1.png"]),
            this.payTableContent.anchor.set(.5),
            this.payTableContent.position.set(0, 25),
            this.payTable.addChild(this.payTableContent);
            var e = new Sprite(TextureCache["sea-close-pop.png"]);
            e.name = "sea-close-pop.png",
            e.anchor.set(.5),
            e.position.set(260, -110),
            this.payTable.addChild(e),
            e.interactive = !0,
            e.buttonMode = !0;
            var n = this;
            e.on("pointerover", this.btnOver.bind(e, this)).on("pointerout", this.btnOut).on("pointerdown", function() {
                n.payTable.visible = !1
            }),
            this.payTable.visible = !1,
            this.assetsContainer.addChild(this.payTable)
        }
        ,
        p.prototype.InitPopup = function() {
            this.boxPopup = new Sprite(TextureCache["popup.png"]),
            this.boxPopup.name = "normal-popup",
            this.boxPopup.anchor.set(.5),
            this.boxPopup.position.set(0, -60),
            this.txtNotify = new PIXI.Text(Message.GetMessage("sl27"),{
                fontFamily: "SVN-SAF",
                fontSize: 25,
                fontWeight: "bold",
                fill: ["#ffffff"]
            }),
            this.txtNotify.anchor.set(.5),
            this.txtNotify.position.set(0, -110),
            this.boxPopup.addChild(this.txtNotify);
            var t = new PIXI.Text("",{
                fontFamily: "SVN-SAF",
                fontSize: 25,
                fontWeight: "bold",
                fill: ["#fff"],
                stroke: "#052e51",
                strokeThickness: 3,
                padding: 30,
                wordWrap: !0,
                wordWrapWidth: 370
            });
            t.anchor.set(.5, 0),
            t.position.set(0, -20),
            this.boxPopup.addChild(new Sprite(TextureCache["sea-close-pop.png"])),
            this.boxPopup.getChildAt(1).anchor.set(.5),
            this.boxPopup.getChildAt(1).position.set(200, -100),
            this.boxPopup.getChildAt(1).interactive = !0,
            this.boxPopup.getChildAt(1).buttonMode = !0;
            var e = this;
            this.boxPopup.getChildAt(1).on("pointerover", this.btnOver.bind(this.boxPopup, this)).on("pointerout", this.btnOut).on("pointerdown", function() {
                e.boxPopup.visible = !1
            }),
            this.boxPopup.visible = !1,
            this.boxPopup.addChild(t),
            this.popupContainer.addChild(this.boxPopup)
        }
        ,
        p.prototype.InitPopupWin = function() {
            this.boxPopupWin = new Sprite(TextureCache["popup.png"]),
            this.boxPopupWin.name = "win-popup",
            this.boxPopupWin.anchor.set(.5),
            this.boxPopupWin.position.set(0, 0);
            var t = new PIXI.Text(Message.GetMessage("sl21"),{
                fontFamily: "SVN-SAF",
                fontSize: 25,
                fontWeight: "bold",
                fill: ["#eefffe"],
                stroke: "#052e51",
                strokeThickness: 3,
                padding: 30,
                wordWrap: !0,
                wordWrapWidth: 370
            });
            t.anchor.set(.5),
            t.position.set(0, -111);
            var e = new PIXI.Text(Message.GetMessage("sl52"),{
                fontFamily: "SVN-SAF",
                fontSize: 25,
                fontWeight: "bold",
                fill: ["#eefffe"],
                stroke: "#052e51",
                strokeThickness: 3,
                padding: 30,
                wordWrap: !0,
                wordWrapWidth: 370
            });
            e.anchor.set(.5, 0),
            e.position.set(0, -44);
            var n = new BitmapText("0",{
                font: "50px SAF-Small-Red",
                align: "center"
            });
            n.anchor.set(.5),
            n.position.set(0, 30);
            var i = new PIXI.Text("trong",{
                fontFamily: "SVN-SAF",
                fontSize: 25,
                fontWeight: "bold",
                fill: ["#eefffe"],
                stroke: "#052e51",
                strokeThickness: 3,
                padding: 30,
                wordWrap: !0,
                wordWrapWidth: 370
            });
            i.anchor.set(.5, 0),
            i.position.set(0, 76),
            this.boxPopupWin.addChild(t, e, n, i),
            this.boxPopupWin.y = -50,
            this.boxPopupWin.visible = !1,
            this.popupContainer.addChild(this.boxPopupWin)
        }
        ,
        p.prototype.JoinGame = function(t) {
            r.Config.isLogin ? this.hubs.connection.invoke("PlayNow", {
                RoomID: t,
                CurrencyID: r.Config.currencyId
            }) : this.showMessage(Language.GetMessage("app003"))
        }
        ,
        p.prototype.JoinRoom = function(t) {
            l.contents.ClearTimer(),
            this.accountId = t.AccountID,
            this.currentPlayer = t,
            this.xEvent.visible = !1,
            r.Config.roomId = t.RoomID,
            r.Config.totalLines = this.line ? this.line.length : t.TotalLine,
            r.Config.betValue = t.BetValue,
            r.Config.inRoom = !0,
            r.Config.isLobby = !1,
            r.Config.moneyType = t.moneyType,
            this.assetsContainer.visible = !0,
            this.mainContainer.visible = !0,
            this.popupContainer.visible = !0,
            this.lobbyContainer.visible = !1,
            this.btnBack.visible = !0,
            r.Config.isTry || (this.txtUserName.text = t.Account.Nickname,
            this.balance = t.Account.GoldBalance),
            a.Util.ClearTimeOut(r.Config.timeJackpot),
            this.changeSlotsRoom(),
            this.checkGame(),
            window.Config.EnableXEvent && l.contents.GetEvent(this)
        }
        ,
        p.prototype.changeSlots = function() {
            for (var t, e = 0; e < this.totalItems - 3; e++)
                t = Math.floor(7 * Math.random()) + 1,
                this.column1[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column2[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column3[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column4[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column5[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"]
        }
        ,
        p.prototype.changeSlotsRoom = function() {
            for (var t, e = 0; e < this.totalItems; e++)
                t = Math.floor(7 * Math.random()) + 1,
                this.column1[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column2[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column3[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column4[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(7 * Math.random()) + 1,
                this.column5[e].texture = TextureCache["item-" + r.Config.roomId + "_" + t + (2 < e && e < this.totalItems - 3 && r.Config.useBlur ? "-blur" : "") + ".png"]
        }
        ,
        p.prototype.checkGame = function() {
            if (l.contents.UpdateControl(this),
            l.contents.GetTicket(this),
            0 < this.currentPlayer.SlotInfo.FreeSpins)
                return r.Config.isFreeSpin = !0,
                l.contents.DisableButtons(this),
                r.Config.totalFreeSpin = 0,
                r.Config.freeSpinCount = 0,
                void this.setupFreeSpin();
            this.checkAutoSpin() || l.contents.EnableButtons(this)
        }
        ,
        p.prototype.showMessage = function(t) {
            var e = this.boxPopup;
            e.getChildAt(2).text = t,
            e.visible = !0
        }
        ,
        p.prototype.showError = function(t) {
            var e;
            switch (console.log("error", t),
            t) {
            case -51:
                e = Message.GetMessage("sl40");
                break;
            case -99:
                e = Message.GetMessage("sl71");
                break;
            case -600:
                e = Message.GetMessage("sl70");
                break;
            case -40004:
                e = Message.GetMessage("sl69");
                break;
            case -40005:
                e = Message.GetMessage("sl66"),
                setTimeout(App.handleBack, 2e3);
                break;
            default:
                e = t
            }
            this.showMessage(e)
        }
        ,
        p.prototype.charOver = function() {
            this.scale.set(1.05)
        }
        ,
        p.prototype.charOut = function() {
            this.scale.set(1)
        }
        ,
        p.prototype.charDown = function(t) {
            r.Config.isLogin && (t.balanceTrial.visible = !1,
            r.Config.roomId = parseInt(this.inx),
            r.Config.oldRoomId = parseInt(this.inx),
            t.JoinGame(r.Config.roomId))
        }
        ,
        p.prototype.btnOver = function(t) {
            if (this.filters = [t.filter],
            r.Config.sound)
                try {
                    PIXI.sound.play("btnHover")
                } catch (t) {}
        }
        ,
        p.prototype.btnOut = function() {
            this.filters = null
        }
        ,
        p.prototype.btnSoundDown = function(t) {
            if (r.Config.sound)
                try {
                    PIXI.sound.play("click2")
                } catch (t) {}
            if (r.Config.sound) {
                r.Config.sound = !1;
                try {
                    t.bgSound.stop()
                } catch (t) {}
                t.btnSound.getChildAt(0).texture = TextureCache["icon-sound-off.png"]
            } else {
                t.btnSound.getChildAt(0).texture = TextureCache["icon-sound-on.png"];
                try {
                    t.bgSound.play()
                } catch (t) {}
                r.Config.sound = !0
            }
        }
        ,
        p.prototype.btnGuideDown = function(t) {
            var e = t;
            r.Config.inRoom ? (e.payTable.visible = !0,
            e.payTableContent.texture = TextureCache["pay" + r.Config.roomId + ".png"]) : e.showMessage(Language.GetMessage("me-2014"))
        }
        ,
        p.prototype.btnHistoryDown = function(t) {
            t.his()
        }
        ,
        p.prototype.btnRankDown = function(t) {
            t.trans()
        }
        ,
        p.prototype.btnBackDown = function(t) {
            if (r.Config.isAutoSpin && window.App.isAuto)
                return window.location.hash = "#",
                void window.location.reload();
            if (!(r.Config.isSpin || r.Config.isAutoSpin || r.Config.isFreeSpin)) {
                t.assetsContainer.visible = !1,
                t.mainContainer.visible = !1,
                t.popupContainer.visible = !1,
                t.lobbyContainer.visible = !0,
                t.destroyEffect(),
                t.destroyMoney(),
                t.txtMoney.visible = !1,
                l.contents.DeleteTimer(),
                l.contents.GetJackpot(t);
                try {
                    t.bigWinSound.stop(),
                    t.endBigWinSound.stop(),
                    t.jackpotSound.stop(),
                    t.moneyIncrease.stop(),
                    r.Config.countMoney.reset(),
                    r.Config.countMoneyJw.reset()
                } catch (t) {}
                r.Config.isTry && (r.Config.isTry = !1,
                delete t.trial,
                t.btnTrial.getChildAt(0).text = Message.GetMessage("sl9")),
                r.Config.roomId = 1
            }
        }
        ,
        p.prototype.btnHideDown = function(t) {
            r.Config.isAutoSpin ? (window.App.isAuto = !0,
            window.App.isAuto && (sessionStorage.setItem("Auto-" + t.storage, r.Config.roomId + ";" + r.Config.autoSpinCount + ";" + r.Config.isAutoSpin + ";" + o.lines.CurrentLine),
            window.location.hash = "#",
            window.location.reload())) : t.showMessage(Message.GetMessage("sl98"))
        }
        ,
        p.prototype.btnTrialDown = function(t) {
            var e = t;
            r.Config.isSpin || r.Config.isAutoSpin || r.Config.isFreeSpin || (l.contents.ClearTimer(),
            e.destroyEffect(),
            o.lines.DisableAllLine(t),
            r.Config.numbShowEachLine = 0,
            r.Config.numberDown = 0,
            e.txtMoney.visible = !1,
            r.Config.isTry ? (r.Config.isTry = !1,
            e.JoinGame(r.Config.oldRoomId),
            e.btnTrial.getChildAt(0).text = Message.GetMessage("sl9"),
            l.contents.GetTicket(t),
            l.contents.GetJackpot(t),
            e.balanceTrial.visible = !1) : (r.Config.isTry = !0,
            e.btnTrial.getChildAt(0).text = Message.GetMessage("sl8"),
            e.trial = new u.trial(t),
            e.balanceTrial.text = Message.GetMessage("sl37") + ": " + a.Util.ParseMoney(e.trial.balance, void 0),
            e.boxTurnFreeTicket.visible = !1,
            e.balanceTrial.visible = !0,
            e.xEvent.visible = !1))
        }
        ,
        p.prototype.btnLinesDown = function(t) {
            r.Config.isTicket || r.Config.isTry || (t.boxLines.visible = !0,
            o.lines.SetLines(o.lines.CurrentLine, t))
        }
        ,
        p.prototype.btnPlusDown = function(t) {
            if (r.Config.isTry)
                t.showMessage(Message.GetMessage("sl79"));
            else {
                if (t.beforeSpin(),
                l.contents.CheckLoginOrInRoom(t)) {
                    var e = r.Config.roomId + 1;
                    if (3 < e && (e = 1),
                    r.Config.sound)
                        try {
                            PIXI.sound.play(1 === e ? "decreaseBet" : "increaseBet")
                        } catch (t) {}
                    t.JoinGame(e)
                }
                l.contents.EnableButtons(t)
            }
        }
        ,
        p.prototype.btnMinusDown = function(t) {
            if (r.Config.sound)
                try {
                    PIXI.sound.play("btnClick")
                } catch (t) {}
            if (r.Config.isTry)
                t.showMessage(Message.GetMessage("sl79"));
            else {
                if (t.beforeSpin(),
                l.contents.CheckLoginOrInRoom(t)) {
                    var e = r.Config.roomId - 1;
                    if (e <= 0 && (e = 3),
                    r.Config.sound)
                        try {
                            PIXI.sound.play(3 === r.Config.roomId ? "increaseBet" : "decreaseBet")
                        } catch (t) {}
                    t.JoinGame(e)
                }
                l.contents.EnableButtons(t)
            }
        }
        ,
        p.prototype.btnAutoSpinDown = function(t) {
            var e = t;
            r.Config.isAutoSpin = window.App.isAutoOcean = !0,
            $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
            window.App.isAuto && (window.App.showPopupMessage({
                content: Message.GetMessage("sl94").replace("{0}", Message.GetMessage("na10")),
                textDone: "OK"
            }),
            sessionStorage.setItem("Auto-" + t.storage, r.Config.roomId + ";" + r.Config.autoSpinCount + ";" + r.Config.isAutoSpin + ";" + o.lines.CurrentLine),
            $(".multislot-expand").addClass("active")),
            t.btnAutoSpin.getChildAt(1).texture = TextureCache["icon-auto-active.png"],
            e.initSpin(e)
        }
        ,
        p.prototype.btnQuickDown = function(t) {
            r.Config.isQuick = !r.Config.isQuick,
            t.btnQuick.getChildAt(1).visible = r.Config.isQuick
        }
        ,
        p.prototype.btnStopAutoDown = function(t) {
            l.contents.StopAutoSpin(t)
        }
        ,
        p.prototype.linesChooseDown = function(t) {
            var e = t;
            switch (this.inx) {
            case 0:
                l.contents.UpdateLines(e, "2,4,6,8,10,12,14,16,18,20");
                break;
            case 1:
                l.contents.UpdateLines(e, "1,3,5,7,9,11,13,15,17,19");
                break;
            case 2:
                l.contents.UpdateLines(e, "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20");
                break;
            case 3:
                o.lines.CurrentLine = "",
                o.lines.CurrentLineArray = [],
                o.lines.TotalLines = 0,
                o.lines.DisableAllLineSelect(e),
                o.lines.DisableAllLine(e),
                e.txtLines.text = "0",
                l.contents.UpdateTotalBet(e, 0)
            }
        }
        ,
        p.prototype.linesDown = function(t) {
            l.contents.CheckLoginOrInRoom(t) && (this.active ? (o.lines.ArrayPop(this.inx + 1),
            this.getChildAt(0).alpha = 0) : (this.getChildAt(0).alpha = .4,
            o.lines.ArrayPush(this.inx + 1)),
            o.lines.ChooseEachLine(t),
            l.contents.UpdateTotalBet(t, t.currentPlayer.BetValue * o.lines.TotalLines))
        }
        ,
        p.prototype.btnSpinDown = function(t) {
            t.initSpin(t)
        }
        ,
        p.prototype.destroyEffect = function() {
            l.contents.DeleteTwEffect(),
            null != this.effect && (this.effectContainer.removeChild(this.effect),
            this.effect.destroy({
                children: !0
            }),
            this.effect = null),
            this.effectContainer.destroy(),
            this.effectContainer = new Container,
            this.effectContainer.name = "effect-container",
            this.application.stage.addChildAt(this.effectContainer, this.application.stage.children.length - 3),
            this.iconsContainer.destroy(),
            this.iconsContainer = new Container,
            this.mainContainer.addChild(this.iconsContainer)
        }
        ,
        p.prototype.beforeSpin = function() {
            l.contents.ClearTimer(),
            this.destroyEffect(),
            o.lines.DisableAllLine(this),
            r.Config.numbShowEachLine = 0,
            r.Config.numberDown = 0,
            l.contents.DisableButtons(this),
            this.boxLines.visible = !1,
            r.Config.isBonus = r.Config.isBigWin = r.Config.isJackpot = r.Config.isWinFree = r.Config.isX2 = r.Config.isSuperWin = r.Config.isMegaWin = !1,
            this.txtMoney.visible = !1,
            this.txtMoney.text = "0",
            this.destroyMoney();
            try {
                r.Config.countMoney.reset(),
                r.Config.countMoneyJw.reset()
            } catch (t) {}
            try {
                this.bigWinSound.stop(),
                this.endBigWinSound.stop(),
                this.jackpotSound.stop(),
                this.moneyIncrease.stop()
            } catch (t) {}
            if (this.isCount)
                try {
                    this.txtJustWon.text = a.Util.ParseMoney(this.currentPlayer.SpinData.PayLinePrizeValue)
                } catch (t) {}
            if (this.isCount = !1,
            this.boxPopup.visible = !1,
            this.boxPopupWin.visible = !1,
            r.Config.sound)
                try {
                    this.bgSound.resume()
                } catch (t) {}
            r.Config.payLines = [],
            r.Config.lineItemsArr = []
        }
        ,
        p.prototype.initSpin = function(t) {
            var e = t;
            if (t.lobbyContainer.visible && (t.assetsContainer.visible = !0,
            t.mainContainer.visible = !0,
            t.popupContainer.visible = !0,
            t.lobbyContainer.visible = !1),
            !r.Config.isSpin)
                if (0 !== o.lines.TotalLines) {
                    if (e.beforeSpin(),
                    1 !== this.hubs.connection.connection.connectionState && t.InitHubs(),
                    r.Config.countMoney = null,
                    r.Config.sound)
                        try {
                            PIXI.sound.play("click1")
                        } catch (t) {}
                    r.Config.timeSpin = setTimeout(function() {
                        r.Config.isSpin && (r.Config.isSpin = !1,
                        l.contents.StopAutoSpin(e),
                        l.contents.EnableButtons(e))
                    }, 12e3);
                    try {
                        r.Config.isTry ? r.Config.isFreeSpin ? (-1 === e.trial.index && (e.trial.index = a.Util.RandomFrom(0, e.trial.dataFree.length - 1, void 0)),
                        e.trial.turn++,
                        e.startSpin(e.trial.dataFree[e.trial.index][e.trial.turn - 1])) : e.startSpin(e.trial.data[a.Util.RandomFrom(0, e.trial.data.length - 1, void 0)]) : r.Config.isTicket && !r.Config.isFreeSpin ? e.hubs.connection.invoke("SpinForTicket", {
                            MerchantID: 0,
                            RoomID: r.Config.roomId,
                            CurrencyID: r.Config.currencyId
                        }).catch(function() {
                            e.showMessage(Message.GetMessage("sl71")),
                            r.Config.isSpin = !1,
                            l.contents.StopAutoSpin(e),
                            l.contents.EnableButtons(e)
                        }) : e.hubs.connection.invoke("Spin", {
                            MerchantID: 0,
                            RoomID: r.Config.roomId,
                            CurrencyID: r.Config.currencyId,
                            Lines: o.lines.CurrentLine
                        }).then(function(t) {
                            t.c < 0 && (e.showError(t.c),
                            r.Config.isSpin = !1,
                            l.contents.StopAutoSpin(e),
                            l.contents.EnableButtons(e))
                        }).catch(function() {
                            e.showMessage(Message.GetMessage("sl71")),
                            r.Config.isSpin = !1,
                            l.contents.StopAutoSpin(e),
                            l.contents.EnableButtons(e)
                        })
                    } catch (t) {
                        e.showMessage(Message.GetMessage("sl71")),
                        r.Config.isSpin = !1,
                        l.contents.StopAutoSpin(e),
                        l.contents.EnableButtons(e)
                    }
                } else
                    e.showMessage(Message.GetMessage("sl81"))
        }
        ,
        p.prototype.startSpin = function(t) {
            console.log("spin", t);
            var i, e = this;
            l.contents.ClearTimer(),
            r.Config.isSpin || (e.currentPlayer = t,
            r.Config.isSpin = !0,
            e.txtSession.text = "#" + this.currentPlayer.SpinData.SpinID,
            r.Config.slotData = [],
            r.Config.slotData = t.SpinData.SlotsData.split(","),
            e.changeSlots(),
            e.column1[1].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[0] + ".png"],
            e.column1[1].inx = r.Config.slotData[0],
            e.column1[2].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[5] + ".png"],
            e.column1[2].inx = r.Config.slotData[5],
            e.column1[3].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[10] + ".png"],
            e.column1[3].inx = r.Config.slotData[10],
            e.column2[1].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[1] + ".png"],
            e.column2[1].inx = r.Config.slotData[1],
            e.column2[2].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[6] + ".png"],
            e.column2[2].inx = r.Config.slotData[6],
            e.column2[3].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[11] + ".png"],
            e.column2[3].inx = r.Config.slotData[11],
            e.column3[1].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[2] + ".png"],
            e.column3[1].inx = r.Config.slotData[2],
            e.column3[2].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[7] + ".png"],
            e.column3[2].inx = r.Config.slotData[7],
            e.column3[3].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[12] + ".png"],
            e.column3[3].inx = r.Config.slotData[12],
            e.column4[1].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[3] + ".png"],
            e.column4[1].inx = r.Config.slotData[3],
            e.column4[2].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[8] + ".png"],
            e.column4[2].inx = r.Config.slotData[8],
            e.column4[3].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[13] + ".png"],
            e.column4[3].inx = r.Config.slotData[13],
            e.column5[1].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[4] + ".png"],
            e.column5[1].inx = r.Config.slotData[4],
            e.column5[2].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[9] + ".png"],
            e.column5[2].inx = r.Config.slotData[9],
            e.column5[3].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[14] + ".png"],
            e.column5[3].inx = r.Config.slotData[14],
            r.Config.isQuick && (e.column1[11].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[0] + ".png"],
            e.column1[11].inx = r.Config.slotData[0],
            e.column1[12].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[5] + ".png"],
            e.column1[12].inx = r.Config.slotData[5],
            e.column1[13].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[10] + ".png"],
            e.column1[13].inx = r.Config.slotData[10],
            e.column2[11].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[1] + ".png"],
            e.column2[11].inx = r.Config.slotData[1],
            e.column2[12].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[6] + ".png"],
            e.column2[12].inx = r.Config.slotData[6],
            e.column2[13].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[11] + ".png"],
            e.column2[13].inx = r.Config.slotData[11],
            e.column3[11].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[2] + ".png"],
            e.column3[11].inx = r.Config.slotData[2],
            e.column3[12].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[7] + ".png"],
            e.column3[12].inx = r.Config.slotData[7],
            e.column3[13].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[12] + ".png"],
            e.column3[13].inx = r.Config.slotData[12],
            e.column4[11].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[3] + ".png"],
            e.column4[11].inx = r.Config.slotData[3],
            e.column4[12].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[8] + ".png"],
            e.column4[12].inx = r.Config.slotData[8],
            e.column4[13].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[13] + ".png"],
            e.column4[13].inx = r.Config.slotData[13],
            e.column5[11].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[4] + ".png"],
            e.column5[11].inx = r.Config.slotData[4],
            e.column5[12].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[9] + ".png"],
            e.column5[12].inx = r.Config.slotData[9],
            e.column5[13].texture = TextureCache["item-" + r.Config.roomId + "_" + r.Config.slotData[14] + ".png"],
            e.column5[13].inx = r.Config.slotData[14]),
            r.Config.linesWin = [],
            r.Config.itemsWinAr = [],
            r.Config.itemsWin = [],
            0 < (null != e.currentPlayer.SpinData.PrizesData ? Object.keys(e.currentPlayer.SpinData.PrizesData).length : 0) && (i = e.currentPlayer.SpinData.PrizesData.split(";"),
            $.each(e.currentPlayer.SpinData.PositionData.split(";"), function(t, e) {
                var n = $.map(e.split(","), function(t) {
                    return parseInt(t)
                });
                r.Config.itemsWinAr.push(n),
                r.Config.linesWin.push(i[t].split(",")[0]),
                $.each(n, function(t, e) {
                    $.inArray(e, r.Config.itemsWin) < 0 && r.Config.itemsWin.push(e)
                })
            })),
            (r.Config.isFreeSpin || r.Config.isTicket) && (e.currentPlayer.SpinData.TotalBetValue = o.lines.TotalLines * e.currentPlayer.BetValue),
            e.currentPlayer.SpinData.IsJackpot && (r.Config.isJackpot = !0),
            e.currentPlayer.SpinData.PayLinePrizeValue >= r.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue && (r.Config.isBigWin = !0),
            e.currentPlayer.SpinData.PayLinePrizeValue >= r.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue && (r.Config.isSuperWin = !0),
            e.currentPlayer.SpinData.PayLinePrizeValue >= r.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue && (r.Config.isMegaWin = !0),
            t.SpinData.IsFreeSpin && (r.Config.isWinFree = !0),
            null !== t.SpinData.BonusGameData && 0 < t.SpinData.BonusGameData.length && (r.Config.isBonus = !0),
            a.Util.ClearTimeOut(r.Config.timeSpin),
            r.Config.isFreeSpin || l.contents.UpdateAutoSpin(e),
            e.spin())
        }
        ,
        p.prototype.spin = function() {
            var t = this;
            if (l.contents.ClearTimer(),
            r.Config.isQuick ? (t.timeTween = .7,
            t.timeBack = .1,
            t.delayFirst = .15,
            t.spinTo = -t.startHeight - 1300) : (t.timeTween = 1.4,
            t.timeBack = .3,
            t.spinTo = -t.startHeight,
            t.delayFirst = .3),
            r.Config.sound)
                try {
                    t.reelSpin.play()
                } catch (t) {}
            TweenMax.to(t.containerColumn1, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 0,
                data: "sea",
                ease: Power0.easeNone,
                onComplete: function() {
                    try {
                        t.reelSpin.stop()
                    } catch (t) {}
                    if (r.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn1, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "sea",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.containerColumn1.y = 0,
                            t.column1[t.totalItems - 3].texture = t.column1[1].texture,
                            t.column1[t.totalItems - 3].inx = t.column1[1].inx,
                            t.column1[t.totalItems - 2].texture = t.column1[2].texture,
                            t.column1[t.totalItems - 2].inx = t.column1[2].inx,
                            t.column1[t.totalItems - 1].texture = t.column1[3].texture,
                            t.column1[t.totalItems - 1].inx = t.column1[3].inx
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn2, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: t.delayFirst,
                data: "sea",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (r.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn2, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "sea",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column2[t.totalItems - 3].texture = t.column2[1].texture,
                            t.column2[t.totalItems - 3].inx = t.column2[1].inx,
                            t.column2[t.totalItems - 2].texture = t.column2[2].texture,
                            t.column2[t.totalItems - 2].inx = t.column2[2].inx,
                            t.column2[t.totalItems - 1].texture = t.column2[3].texture,
                            t.column2[t.totalItems - 1].inx = t.column2[3].inx,
                            t.containerColumn2.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn3, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 2 * t.delayFirst,
                data: "sea",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (r.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn3, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "sea",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column3[t.totalItems - 3].texture = t.column3[1].texture,
                            t.column3[t.totalItems - 3].inx = t.column3[1].inx,
                            t.column3[t.totalItems - 2].texture = t.column3[2].texture,
                            t.column3[t.totalItems - 2].inx = t.column3[2].inx,
                            t.column3[t.totalItems - 1].texture = t.column3[3].texture,
                            t.column3[t.totalItems - 1].inx = t.column3[3].inx,
                            t.containerColumn3.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn4, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 3 * t.delayFirst,
                data: "sea",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (r.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn4, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "sea",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column4[t.totalItems - 3].texture = t.column4[1].texture,
                            t.column4[t.totalItems - 3].inx = t.column4[1].inx,
                            t.column4[t.totalItems - 2].texture = t.column4[2].texture,
                            t.column4[t.totalItems - 2].inx = t.column4[2].inx,
                            t.column4[t.totalItems - 1].texture = t.column4[3].texture,
                            t.column4[t.totalItems - 1].inx = t.column4[3].inx,
                            t.containerColumn4.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn5, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 4 * t.delayFirst,
                data: "sea",
                ease: Power0.easeNone,
                onComplete: function() {
                    if (r.Config.sound)
                        try {
                            PIXI.sound.play("endReelSpin")
                        } catch (t) {}
                    TweenMax.to(t.containerColumn5, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "sea",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column5[t.totalItems - 3].texture = t.column5[1].texture,
                            t.column5[t.totalItems - 3].inx = t.column5[1].inx,
                            t.column5[t.totalItems - 2].texture = t.column5[2].texture,
                            t.column5[t.totalItems - 2].inx = t.column5[2].inx,
                            t.column5[t.totalItems - 1].texture = t.column5[3].texture,
                            t.column5[t.totalItems - 1].inx = t.column5[3].inx,
                            t.containerColumn5.y = 0,
                            t.completeSpin()
                        }
                    })
                }
            })
        }
        ,
        p.prototype.completeSpin = function() {
            if (r.Config.isSpin = !1,
            r.Config.sound)
                try {
                    this.reelSpin.stop()
                } catch (t) {}
            this.showWin()
        }
        ,
        p.prototype.showWin = function() {
            var t = this;
            r.Config.isAutoSpin && l.contents.EnableButton(t.btnQuick),
            r.Config.isTry || 1 !== r.Config.roomId || l.contents.GetTicket(t),
            0 === r.Config.numberDown && 15 === r.Config.slotData.length && (r.Config.isTry ? (this.trial.balance += (r.Config.isFreeSpin ? 0 : -2e5) + this.currentPlayer.SpinData.PayLinePrizeValue,
            t.balanceTrial.text = Message.GetMessage("sl37") + ": " + a.Util.ParseMoney(this.trial.balance, void 0),
            l.contents.CountJackPot(t.txtJackpot, !0, !1, this.trial.jackPot + 2500, 1),
            this.trial.jackPot += 2500) : (l.contents.UpdateBalance(t, t.currentPlayer.Account.GoldBalance),
            this.balance = t.currentPlayer.Account.GoldBalance),
            t.txtJustWon.text = a.Util.ParseMoney(t.currentPlayer.SpinData.PayLinePrizeValue, void 0)),
            t.normalWinOrJackPotOrBigWin()
        }
        ,
        p.prototype.destroyMoney = function() {
            try {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "money-fall-ocean" === t[e].data && t[e].kill();
                for (var n = 0; n < this.moneyArr.length; n++)
                    this.moneyArr[n].destroy({
                        children: !0
                    })
            } catch (t) {}
            this.moneyArr = []
        }
        ,
        p.prototype.random = function(t, e) {
            var n;
            return null == e && (e = t,
            t = 0),
            e < t && (n = t,
            t = e,
            e = n),
            t + (e - t) * Math.random()
        }
        ,
        p.prototype.effectMoney = function() {
            this.moneyArr = [];
            for (var t = 0; t < this.total; t++)
                this.moneyArr.push(new AnimatedSprite(this.framesCoins)),
                this.moneyArr[t].anchor.set(.5),
                this.moneyArr[t].animationSpeed = .3,
                this.moneyArr[t].scale.set(this.random(1, 2)),
                this.moneyEffectContainer.addChild(this.moneyArr[t]),
                this.moneyArr[t].play(),
                this.moneyArr[t].position.set(this.random(0, this.size[0]), this.random(-200, -150)),
                TweenMax.to(this.moneyArr[t], this.random(1, 8), {
                    data: "money-fall-ocean",
                    y: this.size[1] + 200,
                    ease: Linear.easeNone,
                    repeat: -1,
                    delay: -15
                })
        }
        ,
        p.prototype.effectWin = function(t) {
            this.destroyEffect();
            var e = 1 === t ? "vi" == r.Config.lang ? "jackpot.png" : "jackpot-en.png" : "vi" == r.Config.lang ? "bigwin.png" : "bigwin-" + r.Config.lang + ".png"
              , n = new Sprite(TextureCache["light.png"]);
            n.anchor.set(.5),
            n.position.set(0, -20);
            var i = new Sprite(TextureCache[e]);
            i.anchor.set(.5),
            i.position.set(0, -110),
            TweenMax.to(i.scale, .5, {
                data: "ocean",
                x: 1.1,
                y: 1.1,
                delay: 0,
                ease: Power0.easeNone,
                yoyo: !0,
                repeat: 9,
                onComplete: function() {}
            }),
            TweenMax.to(n, 10, {
                data: "ocean",
                rotation: 360,
                ease: Power0.easeNone,
                repeat: 9,
                onComplete: function() {}
            }),
            this.effectContainer.addChild(n, i),
            this.effectMoney(),
            this.size = [$(window).width(), $(window).height()];
            var o = Math.min(this.size[0] / 1750, this.size[1] / 768);
            this.effectContainer.scale.set(o),
            this.effectContainer.position.set(this.size[0] / 2, this.size[1] / 2)
        }
        ,
        p.prototype.normalWinOrJackPotOrBigWin = function() {
            var t, e = this;
            for (e.destroyEffect(),
            o.lines.DisableAllLine(this),
            r.Config.countMoney = null,
            r.Config.countMoneyJw = null,
            t = 0; t < r.Config.linesWin.length; t++)
                r.Config.linesWin[t] < 21 && (e.linesImage[r.Config.linesWin[t] - 1].visible = !0);
            if (0 < e.currentPlayer.SpinData.PayLinePrizeValue)
                if (e.txtMoney.visible = !0,
                0 === r.Config.numberDown && e.showInLobby(e.currentPlayer.SpinData.PayLinePrizeValue),
                r.Config.isJackpot) {
                    e.effectWin(1);
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                    if (r.Config.sound)
                        try {
                            e.jackpotSound.play()
                        } catch (t) {}
                    l.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {
                        0 !== r.Config.numberDown || r.Config.isBonus || r.Config.isFreeSpin || r.Config.isWinFree || r.Config.isAutoSpin || l.contents.EnableButtons(e)
                    }),
                    0 === r.Config.numberDown && (e.isCount = !0,
                    l.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {})),
                    r.Config.isAutoSpin && l.contents.StopAutoSpin(e),
                    r.Config.timeBonusOrFree = setTimeout(function() {
                        e.freeOrBonus(e)
                    }, 22e3)
                } else if (r.Config.isSuperWin || r.Config.isBigWin || r.Config.isMegaWin) {
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                    var n = 4 * e.currentPlayer.SpinData.PayLinePrizeValue / (r.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue);
                    if (r.Config.sound)
                        try {
                            e.moneyIncrease.play()
                        } catch (t) {}
                    l.contents.CountMoney(e.txtMoney, !0, !1, 0, r.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue, 0, 4, function() {
                        if (r.Config.sound)
                            try {
                                PIXI.sound.play("countEndSound")
                            } catch (t) {}
                        0 !== r.Config.numberDown || r.Config.isBonus || r.Config.isFreeSpin || r.Config.isWinFree || r.Config.isAutoSpin || l.contents.EnableButtons(e),
                        e.effectWin(2),
                        l.contents.CountMoney(e.txtMoney, !0, !1, r.Config.totalBetConfig.BigWin * e.currentPlayer.BetValue, e.currentPlayer.SpinData.PayLinePrizeValue, 0, n - 4, function() {
                            if (r.Config.sound)
                                try {
                                    e.bigWinSound.play()
                                } catch (t) {}
                            try {
                                e.moneyIncrease.stop()
                            } catch (t) {}
                        })
                    }),
                    0 === r.Config.numberDown && (e.isCount = !0,
                    l.contents.CountMoney(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, n, function() {}, !0)),
                    r.Config.timeBonusOrFree = setTimeout(function() {
                        e.freeOrBonus(e)
                    }, 1e3 * (6 + n))
                } else {
                    if (l.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1),
                    r.Config.sound)
                        try {
                            PIXI.sound.play("win")
                        } catch (t) {}
                    0 === r.Config.numberDown && l.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1, function() {}),
                    r.Config.timeBonusOrFree = setTimeout(function() {
                        e.freeOrBonus(e)
                    }, 1500)
                }
            else
                r.Config.timeBonusOrFree = setTimeout(function() {
                    e.freeOrBonus(e)
                }, 0),
                e.txtJustWon.text = a.Util.ParseMoney(e.currentPlayer.SpinData.PayLinePrizeValue, void 0)
        }
        ,
        p.prototype.freeOrBonus = function(t) {
            var e = t;
            e.isCount = !1;
            try {
                e.destroyMoney(),
                r.Config.countMoney.reset(),
                r.Config.countMoneyJw.reset()
            } catch (t) {}
            0 === r.Config.numberDown && (e.txtJustWon.text = a.Util.ParseMoney(e.currentPlayer.SpinData.PayLinePrizeValue, void 0)),
            r.Config.numberDown++,
            e.destroyEffect(),
            o.lines.DisableAllLine(e);
            try {
                e.bigWinSound.stop(),
                e.endBigWinSound.stop(),
                e.jackpotSound.stop(),
                e.moneyIncrease.stop()
            } catch (t) {}
            if (e.txtMoney.visible = !1,
            a.Util.ClearTimeOut(r.Config.timeBonusOrFree),
            r.Config.isFreeSpin && (l.contents.UpdateFreeSpin(e),
            l.contents.UpdateTotalPrizeFreeSpin(e)),
            r.Config.isBonus)
                e.setupBonus();
            else if (r.Config.isWinFree)
                e.setupFreeSpin();
            else {
                if (r.Config.isFreeSpin)
                    return void (0 === r.Config.freeSpinCount ? r.Config.timeSpin = setTimeout(function() {
                        return e.finishFreeSpin(e)
                    }, 1 === r.Config.autoSpinMode ? 500 : 1500) : 1 !== r.Config.autoSpinMode && (r.Config.timeSpin = setTimeout(function() {
                        return e.initSpin(e)
                    }, 500)));
                e.checkAutoSpin() || (l.contents.EnableButtons(e),
                0 < e.currentPlayer.SpinData.PayLinePrizeValue && e.showEachLine())
            }
        }
        ,
        p.prototype.setupFreeSpin = function() {
            if (this.destroyEffect(),
            r.Config.sound)
                try {
                    PIXI.sound.play("winBonusFreespin")
                } catch (t) {}
            var t = this.currentPlayer.SlotInfo.FreeSpins;
            r.Config.isFreeSpin || (r.Config.freeSpinCount = r.Config.totalFreeSpin = r.Config.totalFreePrize = 0),
            r.Config.isFreeSpin = !0,
            r.Config.totalFreeSpin += t,
            r.Config.freeSpinCount += t;
            var e = new Sprite(TextureCache["light.png"]);
            e.anchor.set(.5),
            e.position.set(0, -20);
            var n = new Sprite(TextureCache["vi" == r.Config.lang ? "freespin.png" : "freespin-" + r.Config.lang + ".png"]);
            n.anchor.set(.5),
            n.position.set(0, -110),
            TweenMax.to(n.scale, .5, {
                data: "ocean",
                x: 1.1,
                y: 1.1,
                delay: 0,
                ease: Power0.easeNone,
                yoyo: !0,
                repeat: -1,
                onComplete: function() {}
            }),
            TweenMax.to(e, 10, {
                data: "ocean",
                rotation: 360,
                ease: Power0.easeNone,
                repeat: -1,
                onComplete: function() {}
            }),
            this.effectContainer.addChild(e, n);
            var i = Math.min(this.size[0] / 1750, this.size[1] / 768);
            this.effectContainer.scale.set(i),
            this.effectContainer.position.set(this.size[0] / 2, this.size[1] / 2),
            this.boxTurnFree.visible = !0,
            this.boxTurnFreeTicket.visible = !1,
            this.txtTurnFree.text = Message.GetMessage("sl20") + ": " + r.Config.freeSpinCount,
            this.size = [$(window).width(), $(window).height()];
            var o = this;
            r.Config.timeSpin = setTimeout(function() {
                o.initSpin(o)
            }, 3e3)
        }
        ,
        p.prototype.finishFreeSpin = function(t) {
            var e = t;
            if (e.boxPopupWin.getChildAt(3).text = Message.GetMessage("sl82").replace("{0}", r.Config.totalFreeSpin),
            e.boxPopupWin.visible = !0,
            l.contents.CountNumber(e.boxPopupWin.getChildAt(2), !0, !1, 0, r.Config.totalFreePrize, 0, 1, function() {}),
            e.txtJustWon.text = a.Util.ParseMoney(r.Config.totalFreePrize, void 0),
            r.Config.totalFreeSpin = r.Config.totalFreePrize = r.Config.freeSpinCount = 0,
            r.Config.isFreeSpin = !1,
            e.boxTurnFree.visible = !1,
            r.Config.sound)
                try {
                    PIXI.sound.play("endBonusFreespin")
                } catch (t) {}
            r.Config.isTry && (t.trial.index = -1,
            t.trial.turn = 0),
            r.Config.timeSpin = setTimeout(function() {
                e.boxPopupWin.visible = !1,
                t.checkAutoSpin() || l.contents.EnableButtons(e)
            }, 3500)
        }
        ,
        p.prototype.setupBonus = function() {
            (i = this).destroyEffect();
            var t = new Sprite(TextureCache["light.png"]);
            t.anchor.set(.5),
            t.position.set(0, -20);
            var e = new Sprite(TextureCache["bonus.png"]);
            if (e.anchor.set(.5),
            e.position.set(0, -110),
            r.Config.sound)
                try {
                    PIXI.sound.play("pingSound")
                } catch (t) {}
            setTimeout(function() {
                if (r.Config.sound)
                    try {
                        PIXI.sound.play("winBonusFreespin")
                    } catch (t) {}
            }, 2e3);
            try {
                i.bgSound.pause()
            } catch (t) {}
            TweenMax.to(e.scale, .5, {
                data: "ocean",
                x: 1.1,
                y: 1.1,
                delay: 0,
                ease: Power0.easeNone,
                yoyo: !0,
                repeat: -1,
                onComplete: function() {}
            }),
            TweenMax.to(t, 10, {
                data: "ocean",
                rotation: 360,
                ease: Power0.easeNone,
                repeat: -1,
                onComplete: function() {}
            }),
            this.effectContainer.addChild(t, e);
            var n = Math.min(this.size[0] / 1750, this.size[1] / 768);
            this.effectContainer.scale.set(n),
            this.effectContainer.position.set(this.size[0] / 2, this.size[1] / 2),
            this.bonus = new s.bonus(this);
            var i = this;
            r.Config.timeSpin = setTimeout(function() {
                i.bonus.init()
            }, 5e3)
        }
        ,
        p.prototype.checkAutoSpin = function() {
            if (r.Config.isAutoSpin) {
                var t = this;
                return r.Config.timeSpin = setTimeout(function() {
                    t.initSpin(t)
                }, 1500),
                !0
            }
            return r.Config.isAutoSpin = !1,
            r.Config.autoSpinMode = 0,
            !1
        }
        ,
        p.prototype.showEachLine = function() {
            var t = this;
            a.Util.ClearTimeOut(r.Config.timeOutEachLine);
            var e = r.Config.linesWin.length
              , n = 0;
            0 !== e ? (r.Config.numbShowEachLine++,
            r.Config.timeIntEachLine = setInterval(function() {
                if (r.Config.isSpin)
                    a.Util.ClearTimeInterval(r.Config.timeIntEachLine);
                else if (t.destroyEffect(),
                o.lines.DisableAllLine(t),
                r.Config.linesWin[n] < 20)
                    r.Config.timeSpin = setTimeout(function() {
                        if (t.linesImage[r.Config.linesWin[n] - 1].visible = !0,
                        t.createIconEffect(r.Config.itemsWinAr[n]),
                        ++n === e) {
                            if (a.Util.ClearTimeInterval(r.Config.timeIntEachLine),
                            r.Config.isAutoSpin && 0 < r.Config.autoSpinCount)
                                return void t.initSpin(t);
                            r.Config.numbShowEachLine < 3 ? r.Config.timeShowWin = setTimeout(function() {
                                t.normalWinOrJackPotOrBigWin()
                            }, 2600) : setTimeout(function() {
                                t.destroyEffect(),
                                o.lines.DisableAllLine(t)
                            }, 1200)
                        }
                    }, 50);
                else if (++n === e) {
                    if (a.Util.ClearTimeInterval(r.Config.timeIntEachLine),
                    r.Config.isAutoSpin && 0 < r.Config.autoSpinCount)
                        return void t.initSpin(t);
                    r.Config.numbShowEachLine < 2 ? r.Config.timeShowWin = setTimeout(function() {
                        t.normalWinOrJackPotOrBigWin()
                    }, 2600) : setTimeout(function() {
                        t.destroyEffect(),
                        o.lines.DisableAllLine(t)
                    }, 1200)
                }
            }, 1700)) : a.Util.ClearTimeInterval(r.Config.timeIntEachLine)
        }
        ,
        p.prototype.createIconEffect = function(t) {
            if (!(null == t || t.length <= 0))
                for (var e = 0; e < t.length; e++) {
                    var n = new AnimatedSprite(this.framesIconsEffect);
                    n.anchor.set(.5),
                    n.scale.set(.8),
                    n.position.set(this.itemsMainGame[t[e] - 1].x, this.itemsMainGame[t[e] - 1].y),
                    n.animationSpeed = .5,
                    n.play(),
                    this.iconsContainer.addChild(n)
                }
        }
        ,
        p.prototype.finishBonus = function(t) {
            this.currentPlayer = t,
            l.contents.UpdateBalance(this, t.Account.Balance)
        }
        ,
        p.prototype.delete = function() {
            l.contents.DeleteTimer(),
            l.contents.DeleteTweens();
            try {
                PIXI.sound.stopAll(),
                PIXI.sound.removeAll()
            } catch (t) {}
            try {
                this.loader.destroy()
            } catch (t) {}
            window.removeEventListener("resize", this.resizeFunc),
            this.bonus && delete this.bonus,
            r.Config.isAutoSpin = r.Config.isSpin = r.Config.inRoom = r.Config.isBonus = r.Config.isWinFree = r.Config.isFreeSpin = !1,
            r.Config.isLogin = !1,
            l.contents.DeleteTimer(),
            l.contents.timer = 0,
            r.Config.countJp = null;
            try {
                this.loader && delete this.loader
            } catch (t) {}
            try {
                document.URL.indexOf("slot") < 0 ? this.application.destroy(!0) : this.application.destroy(!1)
            } catch (t) {}
            try {
                this.hubs.connection.stop()
            } catch (t) {}
        }
        ,
        p.prototype.StopAuto = function() {
            this.isAuto = !1,
            $("#rolling-" + this.storage).removeClass("active"),
            $("#list-jp-icon-" + r.Config.gameId + "-play").length && $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
            $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).length && $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).removeClass("button-playing").addClass("button-play"),
            $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().removeClass("playing");
            try {
                this.silent.setSession()
            } catch (t) {}
            try {
                this.silent && window.App.gameSlots && "ocean" === window.App.gameSlots.game.storage && window.App.gameSlots.game.StopAuto(),
                l.contents.StopAutoSpin(this)
            } catch (t) {}
        }
        ,
        p.prototype.StartAuto = function() {
            var t = this;
            if (0 < this.silent.autoSpin || -1 === this.silent.autoSpin) {
                this.isAuto = !0,
                $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
                $("#list-jp-icon-" + r.Config.gameId + "-play").length && $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).length && $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().addClass("playing");
                try {
                    if (this.silent && window.App.gameSlots && "ocean" === window.App.gameSlots.game.storage)
                        return void window.App.gameSlots.game.btnAutoSpinDown()
                } catch (t) {}
                return this.silent.setSession(),
                1 === this.hubs.connection.connection.connectionState ? setTimeout(function() {
                    return t.silent.initSpin(t.silent)
                }, 200) : this.InitHubs(),
                !0
            }
            return this.silent.removeSession(),
            !1
        }
        ,
        p.prototype.CheckAuto = function() {
            return this.isAuto
        }
        ,
        p.prototype.SetSilent = function() {
            r.Config.isAutoSpin && (0 < r.Config.autoSpinCount || -1 === r.Config.autoSpinCount) && sessionStorage.setItem("Auto-" + this.storage, r.Config.roomId + ";" + r.Config.autoSpinCount + ";true;" + o.lines.CurrentLine)
        }
        ,
        p.prototype.RestartAuto = function(t, e) {
            var n = this;
            this.isAuto = !0,
            $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
            $("#list-jp-icon-" + r.Config.gameId + "-play").length && $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            t != r.Config.roomId ? (this.line = e,
            r.Config.roomId = t,
            this.silent.setSession(),
            1 === this.hubs.connection.connection.connectionState ? this.JoinGame(r.Config.roomId) : this.InitHubs()) : (o.lines.CurrentLine = e,
            1 === this.hubs.connection.connection.connectionState ? setTimeout(function() {
                return n.silent.initSpin(n.silent)
            }, 200) : this.InitHubs()),
            $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).length && $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().addClass("playing")
        }
        ,
        p.prototype.getRoomId = function() {
            return console.log("Config.roomId", r.Config.roomId),
            r.Config.roomId
        }
        ,
        p.prototype.showInLobby = function(t) {
            var e;
            r.Config.isAutoSpin && ($("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + r.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#rolling-" + this.storage).hasClass("active") || $("#rolling-" + this.storage).addClass("active"),
            $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().hasClass("playing") || $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().addClass("playing"),
            $("#mn-lobby-rolling-ocean").length && ($("#mn-lobby-rolling-ocean").append('<span class="rolling-win">+' + a.Util.ParseMoney(t) + "</span>"),
            TweenMax.to($("#mn-lobby-rolling-ocean .rolling-win"), 2, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })),
            (e = $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId)).length && (e.parent().append('<span class="win active">+' + a.Util.ParseMoney(t) + "</span>"),
            TweenMax.to(e.parent().find("span.win"), 1, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })))
        }
        ,
        p.prototype.InitNotSilent = function(t) {
            this.isSilent = !1,
            this.size = t.size,
            this.target = t.target,
            this.loader = new PIXI.loaders.Loader,
            this.his = t.getHistory,
            this.trans = t.getStatistic,
            r.Config.ready = !1,
            this.GetAutoSpin(),
            this.CreateCanvas()
        }
        ,
        p.prototype.CreateCanvas = function() {
            PIXI.utils.skipHello(),
            this.application = new PIXI.Application(this.size[0],this.size[1],{
                transparent: !0,
                antialias: !0,
                view: this.target
            });
            var t = this;
            this.application.ticker.add(function() {
                t.Update(t)
            }),
            this.InitContainer();
            for (var e = 0; e < this.assets.length; e++)
                "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
            this.loader.onProgress.add(function() {
                return t.Loading(t)
            }),
            this.loader.load(function() {
                t.InitGame(),
                t.checkGame(),
                $("#divLoading").hide()
            })
        }
        ,
        p);
        function p(t) {
            this.line = null,
            this.column1 = {},
            this.column2 = {},
            this.column3 = {},
            this.column4 = {},
            this.column5 = {},
            this.autoClientArr = [10, 50, 200, 1e3, 5e3],
            this.autoArrPos = [[200, 185], [200, 145], [200, 105], [200, 65], [200, 25]],
            this.elapsed = Date.now(),
            this.jackpotLobby = [],
            this.totalItems = 31,
            this.startHeight = -3645,
            this.startHeightSpeed = -1277,
            this.timeTween = 1.4,
            this.timeTweenSpeed = 1.4,
            this.startPosition = 0,
            this.timerCount = 1,
            this.linesImage = [],
            this.linesNumber = [],
            this.pointNext = 112,
            this.pointBack = 92,
            this.total = 100,
            this.linesNumberPosition = [[-398.5, -69], [-420, -204.5], [-398.5, 115.5], [-420, -24], [-420, -115], [-398.5, -248], [-420, 66], [-398, -164], [-420, 167], [-398.5, 22.5], [437, 116], [458, -206], [437, -72], [461, -121], [461, 61], [440, -248], [461, -30], [440, 21], [439, -159], [461, 166]],
            this.guideInx = 0,
            this.lobbyIconPos = [[[-300, 0], [0, 0], [300, 0]], [[-300, 80], [0, 80], [300, 80]], [[-292, -150, "room-1.png"], [-8, -150, "room-2.png"], [289, -150, "room-3.png"]], [[-300, -160, "stone.png"], [0, -160, "stone.png"], [300, -160, "stone.png"]], [[-300, -40], [0, -40], [300, -40]]],
            this.linesImagePosition = [[-38, -45], [-16, -167], [-20, 104], [-26, -85], [-25, 22], [-20, -106], [-16, 39], [-33, -17], [-1, -30], [-35, -43], [17, -39], [13, -25], [35, -20], [22, -7], [13, 36], [16, -106], [23, 39], [32, -76], [29, -19], [-3, -32]],
            this.linesChoosePos = [[-220, -40, Message.GetMessage("sl11")], [-220, 7, Message.GetMessage("sl12")], [-220, 54, Message.GetMessage("sl13")], [-220, 101, Message.GetMessage("sl14")]],
            this.linesSelect = [],
            this.linesSelectPos = [[-100, -45], [-20, -45], [60, -45], [140, -45], [220, -45], [-100, 0], [-20, 0], [60, 0], [140, 0], [220, 0], [-100, 45], [-20, 45], [60, 45], [140, 45], [220, 45], [-100, 90], [-20, 90], [60, 90], [140, 90], [220, 90]],
            this.arrJackpot = [],
            this.timeBack = .3,
            this.timeDelay = .1,
            this.balance = 0,
            this.isCount = !1,
            this.isSilent = !1,
            this.isAuto = !1,
            this.assets = [{
                id: "resources",
                src: "/slots/ocean/json/resources.json"
            }, {
                id: "lines",
                src: "/slots/ocean/json/lines.json"
            }, {
                id: "linesEffect",
                src: "/slots/ocean/json/lines-effect.json"
            }, {
                id: "popup",
                src: "/slots/ocean/json/popup.json"
            }, {
                id: "popupLine",
                src: "/slots/ocean/json/popup_line.json"
            }, {
                id: "gamePlay",
                src: "/slots/ocean/json/game-play.json"
            }, {
                id: "quick",
                src: "/slots/ocean/json/quick.json"
            }, {
                id: "fxJackpot",
                src: "/slots/ocean/json/fxJackpot.json"
            }, {
                id: "bubbleParticle",
                src: "/slots/ocean/json/bubble.json"
            }, {
                id: "dotParticle",
                src: "/slots/ocean/json/dot.json"
            }, {
                id: "event",
                src: "/slots/ocean/json/event.json"
            }, {
                id: "hide",
                src: "/slots/ocean/json/hide.json"
            }, {
                id: "",
                src: "/slots/ocean/fonts/SAF-Red.xml"
            }, {
                id: "",
                src: "/slots/ocean/fonts/SAF-White.xml"
            }, {
                id: "",
                src: "/slots/ocean/fonts/SAF-Small-Red.xml"
            }, {
                id: "",
                src: "/slots/ocean/fonts/SAF-Small-White.xml"
            }, {
                id: "bgSea",
                src: "/slots/ocean/assets/images/background.jpg"
            }, {
                id: "icon-sound-off.png",
                src: "/slots/ocean/assets/images/icon-sound-off.png"
            }, {
                id: "icon-rank.png",
                src: "/slots/ocean/assets/images/icon-rank.png"
            }, {
                id: "icon-history.png",
                src: "/slots/ocean/assets/images/icon-history.png"
            }, {
                id: "BtnLobby_Normal.png",
                src: "/slots/ocean/assets/images/BtnLobby_Normal.png"
            }, {
                id: "BtnTrial_Normal.png",
                src: "/slots/ocean/assets/images/BtnTrial_Normal.png"
            }, {
                id: "autospinvi.png",
                src: "/slots/ocean/assets/images/AutoSpinvi.png"
            }, {
                id: "autospinen.png",
                src: "/slots/ocean/assets/images/autospinen.png"
            }, {
                id: "autospinkm.png",
                src: "/slots/ocean/assets/images/autospin-km.png"
            }, {
                id: "autospinzh.png",
                src: "/slots/ocean/assets/images/autospin-zh.png"
            }, {
                id: "jackpot-en.png",
                src: "/slots/ocean/assets/images/jackpot-en.png"
            }, {
                id: "bigwin-en.png",
                src: "/slots/ocean/assets/images/bigwin-en.png"
            }, {
                id: "bigwin-km.png",
                src: "/slots/ocean/assets/images/bigwin-km.png"
            }, {
                id: "bigwin-zh.png",
                src: "/slots/ocean/assets/images/bigwin-zh.png"
            }, {
                id: "freespin-en.png",
                src: "/slots/ocean/assets/images/freespin-en.png"
            }, {
                id: "freespin-km.png",
                src: "/slots/ocean/assets/images/freespin-km.png"
            }, {
                id: "freespin-zh.png",
                src: "/slots/ocean/assets/images/freespin-zh.png"
            }, {
                id: "text-spin-en.png",
                src: "/slots/ocean/assets/images/text-spin-en.png"
            }, {
                id: "text-spin-zh.png",
                src: "/slots/ocean/assets/images/text-spin-zh.png"
            }, {
                id: "text-spin-km.png",
                src: "/slots/ocean/assets/images/text-spin-km.png"
            }, {
                id: "text-stop-en.png",
                src: "/slots/ocean/assets/images/text-stop-en.png"
            }, {
                id: "text-stop-km.png",
                src: "/slots/ocean/assets/images/text-stop-km.png"
            }, {
                id: "text-stop-zh.png",
                src: "/slots/ocean/assets/images/text-stop-zh.png"
            }, {
                id: "pay1.png",
                src: "/slots/ocean/assets/images/PayTable1.png"
            }, {
                id: "pay2.png",
                src: "/slots/ocean/assets/images/PayTable2.png"
            }, {
                id: "pay3.png",
                src: "/slots/ocean/assets/images/PayTable3.png"
            }, {
                id: "backvi.png",
                src: "/slots/ocean/assets/images/btn-back-lobby-vi.png"
            }, {
                id: "backen.png",
                src: "/slots/ocean/assets/images/btn-back-lobby-en.png"
            }, {
                id: "backzh.png",
                src: "/slots/ocean/assets/images/btn-back-lobby-zh.png"
            }, {
                id: "backkm.png",
                src: "/slots/ocean/assets/images/btn-back-lobby-km.png"
            }, {
                id: "bubbleOc.png",
                src: "/slots/ocean/assets/images/bubble.png"
            }, {
                id: "fishShadow.png",
                src: "/slots/ocean/assets/images/fishShadow.png"
            }, {
                id: "oceanDot.png",
                src: "/slots/ocean/assets/images/ocean-dot.png"
            }, {
                id: "coinOcean",
                src: "/slots/ocean/assets/images/coin.png"
            }, {
                id: "bgSound",
                src: "/slots/ocean/assets/sounds/bg-music.mp3"
            }, {
                id: "bigWin",
                src: "/slots/ocean/assets/sounds/bigWin.mp3"
            }, {
                id: "bigWinCounting",
                src: "/slots/ocean/assets/sounds/bigWinCounting.mp3"
            }, {
                id: "bigWinCountingEnd",
                src: "/slots/ocean/assets/sounds/bigWinCountingEnd.mp3"
            }, {
                id: "btnHover",
                src: "/slots/ocean/assets/sounds/btn-hover.mp3"
            }, {
                id: "click1",
                src: "/slots/ocean/assets/sounds/click1.mp3"
            }, {
                id: "click2",
                src: "/slots/ocean/assets/sounds/click2.mp3"
            }, {
                id: "collectWinJackpot",
                src: "/slots/ocean/assets/sounds/collectWinJackpot.mp3"
            }, {
                id: "decreaseBet",
                src: "/slots/ocean/assets/sounds/decrease-bet.mp3"
            }, {
                id: "endReelSpin",
                src: "/slots/ocean/assets/sounds/end_reel_spin.mp3"
            }, {
                id: "endBonusFreespin",
                src: "/slots/ocean/assets/sounds/endBonusFreespin.mp3"
            }, {
                id: "increaseBet",
                src: "/slots/ocean/assets/sounds/increase-Bet.mp3"
            }, {
                id: "jackpotWin",
                src: "/slots/ocean/assets/sounds/jackpotWin.mp3"
            }, {
                id: "reelSpin",
                src: "/slots/ocean/assets/sounds/reel_Spin.mp3"
            }, {
                id: "waterDroplet",
                src: "/slots/ocean/assets/sounds/water_Droplet.mp3"
            }, {
                id: "win",
                src: "/slots/ocean/assets/sounds/win.mp3"
            }, {
                id: "winBonusFreespin",
                src: "/slots/ocean/assets/sounds/winBonusFreespin.mp3"
            }, {
                id: "countSound",
                src: "/slots/ocean/assets/sounds/count.mp3"
            }, {
                id: "countEndSound",
                src: "/slots/ocean/assets/sounds/count_end.mp3"
            }, {
                id: "pingSound",
                src: "/slots/ocean/assets/sounds/ping.mp3"
            }, {
                id: "popupSound",
                src: "/slots/ocean/assets/sounds/popup.mp3"
            }],
            this.arrBox = [],
            this.arrChar = [],
            this.spinTo = 0,
            this.delayFirst = 0,
            t.isSilent && (this.isSilent = t.isSilent),
            t.storage && (this.storage = t.storage),
            this.token = t.token,
            r.Config.lang = Language.GetLanguageCode(),
            r.Config.hubUrl = t.hubUrl,
            r.Config.apiUrl = t.apiUrl,
            r.Config.api = t.api,
            t.currencyID ? r.Config.currencyId = t.currencyID : r.Config.currencyId = "undefined" != typeof App ? App.account.currencyID : 1,
            this.isSilent ? (r.Config.ready = !0,
            this.isAuto = !0,
            this.ResetTweenTab(),
            this.silent = new h.silent(this)) : (this.size = t.size,
            this.target = t.target,
            this.loader = new PIXI.loaders.Loader,
            this.his = t.getHistory,
            this.trans = t.getStatistic,
            r.Config.ready = !1,
            this.GetAutoSpin(),
            this.Init())
        }
        e.games = c
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var i = n(2)
          , o = n(7)
          , s = (a.prototype.Init = function() {
            var e = this;
            this.connection = (new i.HubConnectionBuilder).withUrl(this.url, {
                accessTokenFactory: function() {
                    return e.token
                },
                skipNegotiation: !0,
                transport: i.HttpTransportType.WebSockets
            }).build(),
            this.connection.serverTimeoutInMilliseconds = 1e5,
            this.connection.start().then(function() {
                o.Config.isLogin = !0,
                e.game.isSilent || o.Config.isAutoSpin ? e.game.hubs.connection.invoke("PlayNow", {
                    RoomID: o.Config.roomId,
                    CurrencyID: o.Config.currencyId
                }) : e.game.enableLoby(),
                console.log("connected")
            }).catch(function(t) {
                return console.error(t)
            }),
            this.connection.on("JoinGame", function(t) {
                e.game.isSilent ? e.game.silent.joinRoom(t) : e.game.JoinRoom(t)
            }),
            this.connection.on("ResultSpin", function(t) {
                e.game.isSilent ? e.game.silent.startSpin(t) : e.game.startSpin(t)
            }),
            this.connection.on("MessageError", function(t) {
                e.game.isSilent || e.game.showError(t)
            }),
            this.connection.on("ResultBonusGame", function(t) {
                e.game.isSilent ? e.game.silent.finishBonus(t) : e.game.finishBonus(t)
            }),
            this.connection.on("UpdateJackpot", function(t) {
                e.game.isSilent || e.game.UpdateJackpot(t)
            })
        }
        ,
        a);
        function a(t, e, n) {
            this.url = t,
            this.token = e,
            this.game = n,
            this.Init()
        }
        e.default = s
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.bonus = void 0;
        var p = n(0)
          , u = n(7)
          , s = n(16)
          , i = n(11);
        n(1);
        var o = (a.prototype.init = function() {
            var t = this.game;
            t.destroyEffect(),
            s.contents.ClearTimer(),
            i.lines.DisableAllLine(t),
            this.disableContainer(),
            this.bonusContainer = new Container,
            this.bonusContainer.name = "bonus-container",
            t.application.stage.addChildAt(this.bonusContainer, t.application.stage.children.length - 3);
            var e = new Sprite(TextureCache["bonus-light.png"]);
            if (e.anchor.set(.5),
            e.y = -50,
            this.bonusContainer.addChild(e),
            this.createButtons(),
            this.createFish(),
            this.updatePick(),
            this.txtMulti.text = this.startBonus,
            u.Config.sound)
                try {
                    t.bgSound.resume()
                } catch (t) {}
            t.size = [$(window).width(), $(window).height()];
            var n = Math.min(t.size[0] / 1750, t.size[1] / 768);
            this.bonusContainer.scale.set(n),
            this.bonusContainer.position.set(t.size[0] / 2, t.size[1] / 2),
            this.countBonus(this)
        }
        ,
        a.prototype.disableContainer = function() {
            var t = this.game;
            t.mainContainer.visible = !1,
            t.assetsContainer.visible = !1,
            t.linesContainer.visible = !1,
            t.bgGame.visible = !1
        }
        ,
        a.prototype.enableContainer = function() {
            this.game.mainContainer.visible = !0,
            this.game.assetsContainer.visible = !0,
            this.game.linesContainer.visible = !0,
            this.game.bgGame.visible = !0
        }
        ,
        a.prototype.createButtons = function() {
            var t = this.game
              , e = new Container
              , n = new Sprite(TextureCache["label.png"]);
            n.anchor.set(.5),
            e.addChild(n),
            e.position.set(264, 185),
            e.addChild(new PIXI.Text(Message.GetMessage("sl57"),{
                fontFamily: "SVN-SAF",
                fontSize: 18,
                fill: ["#eefffe"]
            })),
            e.getChildAt(1).anchor.set(0, .5),
            e.getChildAt(1).position.set(-83, 0),
            this.txtMulti = new BitmapText("0",{
                font: "24px SAF-Small-Red"
            }),
            this.txtMulti.anchor.set(.5),
            this.txtMulti.position.set(44, 0),
            e.addChild(this.txtMulti);
            var i = new Container
              , o = new Sprite(TextureCache["label.png"]);
            o.anchor.set(.5),
            o.scale.x = -1,
            i.addChild(o),
            i.position.set(-270, 185),
            i.addChild(new PIXI.Text(Message.GetMessage("sl58"),{
                fontFamily: "SVN-SAF",
                fontSize: 18,
                fill: ["#eefffe"]
            })),
            i.getChildAt(1).anchor.set(0, .5),
            i.getChildAt(1).position.set(-87, 0),
            this.txtPick = new BitmapText("0",{
                font: "24px SAF-Small-Red"
            }),
            this.txtPick.anchor.set(.5),
            this.txtPick.position.set(44, 0),
            i.addChild(this.txtPick);
            var s = new PIXI.Text("#" + t.currentPlayer.SpinData.SpinID,{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fill: ["#eefffe"]
            });
            s.anchor.set(.5),
            s.position.set(0, -335);
            var a = new Sprite(TextureCache["button-quick.png"]);
            a.name = "bonusQuick",
            a.anchor.set(.5),
            a.position.set(0, 170),
            a.addChild(new PIXI.Text(Message.GetMessage("sl56"),{
                fontFamily: "SVN-SAF",
                fontSize: 18,
                fill: ["#eefffe"]
            })),
            a.getChildAt(0).anchor.set(.5),
            a.getChildAt(0).position.set(0, 0),
            a.on("pointerover", t.btnOver.bind(a, t)).on("pointerout", t.btnOut).on("pointerdown", this.btnQuickPlayDown.bind(a, this)),
            a.interactive = !0,
            a.buttonMode = !0,
            this.txtTimer = new PIXI.Text(Message.GetMessage("sl78").replace("{0}", this.timer),{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fontWeight: "bold",
                fill: ["#fff"],
                stroke: "#052e51",
                strokeThickness: 3
            }),
            this.txtTimer.anchor.set(.5),
            this.txtTimer.position.set(0, 206),
            this.bonusContainer.addChild(e, i, s, a, this.txtTimer)
        }
        ,
        a.prototype.createFish = function() {
            this.game;
            for (var t = 0, e = 1, n = 0, i = 0; i < 16; i++)
                i % 4 == 0 && 3 < i && (n = 100 * e,
                e++,
                t = 0),
                this.fishArray[i] = new Sprite(TextureCache["item-1.png"]),
                this.fishArray[i].inx = i,
                this.fishArray[i].position.set(145 * t - 225, -210 + n),
                this.fishArray[i].anchor.set(.5),
                this.fishArray[i].scale.set(.8),
                this.bonusContainer.addChild(this.fishArray[i]),
                this.fishArray[i].interactive = !0,
                this.fishArray[i].buttonMode = !0,
                this.fishArray[i].on("pointerover", this.fishOver).on("pointerout", this.fishOut).on("pointerdown", this.fishDown.bind(this.fishArray[i], this)),
                t++
        }
        ,
        a.prototype.countBonus = function(t) {
            p.Util.ClearTimeOut(u.Config.timeBonus),
            --t.timer,
            t.txtTimer.text = Message.GetMessage("sl78").replace("{0}", (t.timer < 10 ? "0" : "") + t.timer),
            0 === t.timer ? (t.finishBonus(t),
            t.txtTimer.visible = !1) : u.Config.timeBonus = setTimeout(function() {
                t.countBonus(t)
            }, 1e3)
        }
        ,
        a.prototype.btnQuickPlayDown = function(t) {
            this.interactive = !1,
            this.buttonMode = !1,
            t.disableButtons(),
            t.finishBonus(t)
        }
        ,
        a.prototype.disableButtons = function() {
            for (var t = 0; t < Object.keys(this.fishArray).length; t++)
                this.fishArray[t].interactive = !1,
                this.fishArray[t].buttonMode = !1
        }
        ,
        a.prototype.enableButtons = function() {
            for (var t = 0; t < Object.keys(this.fishArray).length; t++)
                -1 === $.inArray(t, this.fishClick) && (this.fishArray[t].interactive = !0,
                this.fishArray[t].buttonMode = !0)
        }
        ,
        a.prototype.fishOver = function() {
            TweenMax.to(this.scale, .2, {
                x: .75,
                y: .75,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {}
            })
        }
        ,
        a.prototype.fishOut = function() {
            TweenMax.to(this.scale, .2, {
                x: .8,
                y: .8,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {}
            })
        }
        ,
        a.prototype.fishDown = function(t) {
            t.game;
            var e, n, i, o, s, a, r, l = t;
            p.Util.ClearTimeOut(u.Config.timeBonus),
            l.txtTimer.visible = !1,
            l.bonusContainer.getChildByName("bonusQuick").visible = !1,
            l.step >= l.numberPick || l.isAward || l.isClicking || (n = (e = l.goldData[l.step].split(","))[1],
            i = e[3],
            o = l.getItem(n),
            l.isAward = "bonus" === o,
            this.interactive = !1,
            this.buttonMode = !1,
            this.visible = !1,
            l.btn = this,
            l.disableButtons(),
            l.fishClick.push(this.inx),
            l.step++,
            "gold" === o ? ((s = new Sprite(TextureCache["item-2.png"])).position.set(l.btn.x, l.btn.y),
            s.anchor.set(.5),
            s.scale.set(.1, .1),
            l.bonusContainer.addChild(s),
            l.isClicking = !0,
            TweenMax.to(s.scale, .2, {
                x: 1,
                y: 1,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    var t = new BitmapText(p.Util.ParseMoney(i / l.startBonus, void 0),{
                        font: "22px SAF-Small-Red"
                    });
                    t.anchor.set(.5),
                    t.position.set(0, 35),
                    s.addChild(t),
                    TweenMax.to(t, .2, {
                        y: 15,
                        delay: 0,
                        ease: Power0.easeNone,
                        onComplete: function() {}
                    }),
                    TweenMax.to(t, .2, {
                        y: 35,
                        delay: .2,
                        ease: Power0.easeNone,
                        onComplete: function() {}
                    }),
                    setTimeout(function() {
                        t.visible = !1
                    }, 700);
                    var e = new BitmapText(p.Util.ParseMoney(i, void 0),{
                        font: "22px SAF-Small-Red"
                    });
                    e.anchor.set(.5),
                    e.position.set(0, 35),
                    s.addChild(e),
                    e.alpha = 0,
                    TweenMax.to(e, 0, {
                        alpha: 1,
                        delay: .7,
                        ease: Power0.easeNone,
                        onComplete: function() {}
                    }),
                    TweenMax.to(e, .2, {
                        y: 15,
                        delay: .7,
                        ease: Power0.easeNone,
                        onComplete: function() {}
                    }),
                    TweenMax.to(e, .2, {
                        y: 35,
                        delay: .9,
                        ease: Power0.easeNone,
                        onComplete: function() {}
                    }),
                    l.isClicking = !1,
                    l.enableButtons()
                }
            }),
            l.updatePick(),
            l.step >= l.numberPick && !l.isAward && setTimeout(function() {
                return l.finishBonus(l)
            }, 2e3)) : "lucky" === o ? ((a = new Sprite(TextureCache["item-4.png"])).position.set(l.btn.x, l.btn.y),
            a.anchor.set(.5),
            a.scale.set(.1),
            l.bonusContainer.addChild(a),
            TweenMax.to(a.scale, .2, {
                x: 1,
                y: 1,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    l.startPick++,
                    l.updateMulti(),
                    TweenMax.to(l.txtPick, .2, {
                        alpha: .6,
                        delay: 0,
                        yoyo: !0,
                        repeat: 3,
                        ease: Power0.easeNone,
                        onComplete: function() {
                            l.enableButtons()
                        }
                    })
                }
            })) : ((r = new Sprite(TextureCache["item-3.png"])).position.set(l.btn.x, l.btn.y),
            r.anchor.set(.5),
            r.scale.set(.1),
            l.bonusContainer.addChild(r),
            TweenMax.to(r.scale, .2, {
                x: .7,
                y: .7,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    setTimeout(function() {
                        l.createReward(l)
                    }, 500)
                }
            })))
        }
        ,
        a.prototype.createReward = function(t) {
            var e = t.game
              , n = t;
            n.rewardContainer = new Container,
            t.bonusContainer.addChild(n.rewardContainer);
            var i = new Graphics;
            i.beginFill(0, .4),
            i.drawRect(-350, -230, 700, 450),
            i.endFill();
            var o = new Sprite(TextureCache["multiple-bg.png"]);
            o.anchor.set(.5),
            o.position.set(0, 0);
            var s = new PIXI.Text(Message.GetMessage("sl59"),{
                fontFamily: "SVN-SAF",
                fontSize: 20,
                fill: ["#eefffe"]
            });
            s.anchor.set(.5),
            s.position.set(0, -146),
            o.addChild(s);
            for (var a = 0; a < 5; a++)
                n.awardArray[a] = new Sprite(TextureCache["icon-multiple.png"]),
                n.awardArray[a].anchor.set(.5),
                n.awardArray[a].scale.set(.9),
                n.awardArray[a].position.set(n.awardPosition[a][0], n.awardPosition[a][1]),
                o.addChild(n.awardArray[a]),
                n.awardArray[a].interactive = !0,
                n.awardArray[a].buttonMode = !0,
                n.awardArray[a].on("pointerover", e.btnOver.bind(n.awardArray[a], e)).on("pointerout", e.btnTintOut).on("pointerdown", n.awardDown.bind(n.awardArray[a], n));
            n.rewardContainer.addChild(i, o)
        }
        ,
        a.prototype.awardDown = function(t) {
            for (var e = t.game, n = t, i = [10, 10, 15, 15, 20], o = n.goldData[n.step - 1].split(","), s = o[3], a = 0; a < 5; a++)
                n.awardArray[a].interactive = !1,
                n.awardArray[a].buttonMode = !1;
            var r = e.currentPlayer.BetValue
              , l = o[3] / (n.startBonus * r)
              , u = i.indexOf(l);
            i.splice(u, 1);
            var h = this.x
              , c = new BitmapText(p.Util.ParseMoney(l * r, void 0),{
                font: "22px SAF-Small-Red"
            });
            c.anchor.set(.5),
            c.position.set(this.x, this.y + 20),
            n.rewardContainer.getChildAt(1).addChild(c),
            this.texture = TextureCache["icon-multiple.png"],
            TweenMax.to(c, .2, {
                data: "ocean",
                y: c.y - 10,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    TweenMax.to(c, .2, {
                        data: "ocean",
                        y: c.y + 10,
                        delay: 0,
                        ease: Power0.easeNone,
                        onComplete: function() {
                            var t, e = 0;
                            for (a = 0; a < 5; a++)
                                h !== n.awardPosition[a][0] && (n.awardArray[a].alpha = .8,
                                (t = new BitmapText(p.Util.ParseMoney(i[e] * r, void 0),{
                                    font: "22px SAF-Small-Red"
                                })).anchor.set(.5),
                                t.position.set(n.awardArray[a].x, n.awardArray[a].y + 10),
                                n.rewardContainer.getChildAt(1).addChild(t),
                                TweenMax.to(t, .2, {
                                    data: "ocean",
                                    y: t.y - 10,
                                    delay: 0,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                TweenMax.to(t, .2, {
                                    data: "ocean",
                                    y: t.y + 10,
                                    delay: .2,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                e++);
                            n.updatePick(),
                            n.isAward = !1,
                            setTimeout(function() {
                                n.rewardContainer.destroy({
                                    children: !0
                                }),
                                n.btn.texture = TextureCache["item-2.png"];
                                var t = new BitmapText(p.Util.ParseMoney(l * r, void 0),{
                                    font: "22px SAF-Small-Red"
                                });
                                t.anchor.set(.5),
                                t.position.set(n.btn.x, n.btn.y),
                                n.bonusContainer.addChild(t),
                                TweenMax.to(t, .2, {
                                    y: t.y + 5,
                                    delay: 0,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                TweenMax.to(t, .2, {
                                    y: t.y + 35,
                                    delay: .2,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                setTimeout(function() {
                                    t.visible = !1
                                }, 700),
                                setTimeout(function() {
                                    n.step >= n.numberPick ? setTimeout(n.finishBonus(n), 1200) : n.enableButtons()
                                }, 300);
                                var e = new BitmapText(p.Util.ParseMoney(s, void 0),{
                                    font: "22px SAF-Small-Red"
                                });
                                e.anchor.set(.5),
                                e.alpha = 0,
                                e.position.set(n.btn.x, n.btn.y),
                                n.bonusContainer.addChild(e),
                                TweenMax.to(e, 0, {
                                    alpha: 1,
                                    delay: .7,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                TweenMax.to(e, .2, {
                                    y: e.y + 5,
                                    delay: .7,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                }),
                                TweenMax.to(e, .2, {
                                    y: e.y + 35,
                                    delay: .9,
                                    ease: Power0.easeNone,
                                    onComplete: function() {}
                                })
                            }, 1200)
                        }
                    })
                }
            })
        }
        ,
        a.prototype.updateMulti = function() {
            this.startBonus++,
            this.txtMulti.text = "x" + this.startBonus
        }
        ,
        a.prototype.updatePick = function() {
            var t = this.startPick - this.step;
            0 <= t ? this.txtPick.text = t : (this.txtPick.text = "0",
            this.disableButtons())
        }
        ,
        a.prototype.getItem = function(t) {
            var e = "";
            switch (parseInt(t)) {
            case 200:
            case 201:
            case 202:
            case 203:
                e = "bonus";
                break;
            case 210:
                e = "lucky";
                break;
            case 220:
                e = "gold"
            }
            return e
        }
        ,
        a.prototype.finishBonus = function(t) {
            var e = t
              , n = t.game;
            p.Util.ClearTimeOut(u.Config.timeBonus),
            e.txtTimer.visible = !1,
            u.Config.isTry || n.hubs.connection.invoke("PlayBonusGame", {
                RoomID: u.Config.roomId,
                CurrencyID: u.Config.currencyId
            }).then(function() {}).catch(function() {});
            for (var i = 0, o = 0; o < e.goldData.length; o++)
                i += parseInt(e.goldData[o].split(",")[3]);
            try {
                e.rewardContainer.destroy()
            } catch (t) {}
            if (u.Config.sound)
                try {
                    n.bgSound.pause()
                } catch (t) {}
            if (u.Config.sound)
                try {
                    PIXI.sound.play("popupSound")
                } catch (t) {}
            n.boxPopupWin.getChildAt(3).text = Message.GetMessage("sl83"),
            n.boxPopupWin.visible = !0,
            s.contents.CountNumber(n.boxPopupWin.getChildAt(2), !0, !1, 0, i, 0, 1, function() {}),
            u.Config.isFreeSpin && (u.Config.totalFreePrize += i),
            n.txtJustWon.text = p.Util.ParseMoney(i, void 0),
            u.Config.isTry ? (n.trial.balance += i,
            n.balanceTrial.text = Message.GetMessage("sl37") + ": " + p.Util.ParseMoney(n.trial.balance, void 0)) : (n.balance += i,
            s.contents.UpdateBalance(n, n.balance)),
            setTimeout(function() {
                if (n.boxPopupWin.visible = !1,
                e.bonusContainer.destroy({
                    children: !0
                }),
                e.enableContainer(),
                u.Config.isBonus = !1,
                delete n.bonus,
                u.Config.sound)
                    try {
                        PIXI.sound.stop("popupSound")
                    } catch (t) {}
                if (u.Config.sound)
                    try {
                        n.bgSound.resume()
                    } catch (t) {}
                u.Config.isWinFree ? n.setupFreeSpin() : u.Config.isFreeSpin ? 0 === u.Config.freeSpinCount ? n.finishFreeSpin(n) : setTimeout(function() {
                    return n.initSpin(n)
                }, 300) : n.checkAutoSpin() || (s.contents.EnableButtons(n),
                0 < n.currentPlayer.SpinData.TotalPrizeValue && n.showEachLine())
            }, 3e3)
        }
        ,
        a);
        function a(t) {
            this.startBonus = 0,
            this.goldData = [],
            this.step = 0,
            this.startPick = 10,
            this.numberPick = 0,
            this.fishArray = {},
            this.fishClick = [],
            this.awardArray = {},
            this.isAward = !1,
            this.textArray = {},
            this.textIndex = 0,
            this.txtMulti = null,
            this.txtPick = null,
            this.txtSession = null,
            this.bonusContainer = null,
            this.rewardContainer = null,
            this.filter = null,
            this.position = null,
            this.btn = null,
            this.timer = 0,
            this.txtTimer = null,
            this.isClicking = !1,
            this.awardPosition = [[-150, -40], [0, -40], [150, -40], [-80, 70], [80, 70]],
            this.game = t,
            this.startBonus = t.currentPlayer.SpinData.StartBonus,
            this.startPick = 10,
            this.goldData = t.currentPlayer.SpinData.BonusGameData.split(";"),
            this.timer = 15,
            this.fishClick = [],
            this.numberPick = this.goldData.length
        }
        e.bonus = o
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.trial = void 0;
        function i(t) {
            this.player = {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50146200,
                    LastLineData: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                    LastPrizeValue: 36e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1074,
                    SlotsData: "7,6,6,6,6,5,4,7,6,5,4,6,6,7,6",
                    PrizesData: "2,14,100000;3,15,20000;6,15,20000;8,15,20000;9,14,100000;10,15,20000;11,15,20000;12,15,20000;18,15,20000;19,15,20000",
                    PositionData: "2,3,4,5;12,13,15;2,4,5;3,5,12;2,4,13,15;2,4,13;3,9,15;5,9,13;2,3,4;4,5,12",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50146200,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 36e4,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 513300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            },
            this.balance = 5e7,
            this.jackPot = 5e7,
            this.data = [{
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 5015e4,
                    LastLineData: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                    LastPrizeValue: 2e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1093,
                    SlotsData: "7,7,7,7,7,7,7,7,7,7,7,7,7,7,7",
                    PrizesData: "1,16,300000;2,16,300000;3,16,300000;4,16,300000;5,16,300000;6,16,300000;7,16,300000;8,16,300000;9,16,300000;10,16,300000;11,16,300000;12,16,300000;13,16,300000;14,16,300000;15,16,300000;16,16,300000;17,16,300000;18,16,300000;19,16,300000;20,16,300000",
                    PositionData: "6,7,8,9,10;1,2,3,4,5;11,12,13,14,15;3,6,7,9,10;6,7,9,10,13;1,2,4,5,8;8,11,12,14,15;1,3,5,12,14;2,4,11,13,15;2,4,6,10,13;3,7,9,11,15;1,5,7,9,13;4,6,8,10,12;2,6,8,10,14;7,8,9,11,15;1,5,7,8,9;6,10,12,13,14;2,3,4,6,10;4,5,8,11,12;1,2,8,14,15",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 5015e4,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 6e6,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 7180400,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50126100,
                    LastLineData: "",
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1063,
                    SlotsData: "4,4,4,4,6,6,1,5,5,6,3,6,4,7,6",
                    PrizesData: "2,8,200000;6,9,40000;9,9,40000;10,9,40000;13,15,20000;17,15,20000;18,9,40000",
                    PositionData: "1,2,3,4;1,2,4;2,4,13;2,4,13;6,10,12;6,10,12;2,3,4",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50128800,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 4e5,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 1173300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50126100,
                    LastLineData: "",
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1065,
                    SlotsData: "5,5,5,3,7,4,3,3,4,5,7,5,5,7,6",
                    PrizesData: "2,12,30000;8,12,30000;10,12,30000;17,12,30000;18,12,30000",
                    PositionData: "1,2,3;1,3,12;2,10,13;10,12,13;2,3,10",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50132300,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 15e4,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 923300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50126100,
                    LastLineData: "",
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1066,
                    SlotsData: "7,5,7,4,7,6,4,6,2,6,5,7,5,6,2",
                    PrizesData: "1,15,20000;8,17,60000;9,12,30000;13,15,20000;14,14,100000;17,15,20000",
                    PositionData: "6,8,10;1,3,5,12;2,11,13;6,8,10;6,8,10,14;6,10,14",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50133700,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 25e4,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 973300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    FreeSpins: 0,
                    Jackpot: 50126100,
                    LastLineData: "",
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0,
                    TotalFreeSpins: 0
                },
                SpinData: {
                    SpinID: 1074,
                    SlotsData: "7,6,6,6,6,5,4,7,6,5,4,6,6,7,6",
                    PrizesData: "2,14,100000;3,15,20000;6,15,20000;8,15,20000;9,14,100000;10,15,20000;11,15,20000;12,15,20000;18,15,20000;19,15,20000",
                    PositionData: "2,3,4,5;12,13,15;2,4,5;3,5,12;2,4,13,15;2,4,13;3,9,15;5,9,13;2,3,4;4,5,12",
                    TotalBetValue: 2e5,
                    IsJackpot: !1,
                    Jackpot: 50146200,
                    JackpotNum: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 36e4,
                    TicketBalance: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 513300,
                    CoinBalance: 0,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 0,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",
                Turbo: !1,
                RoomID: 3
            }],
            this.index = -1,
            this.dataFree = [[], []],
            this.turn = 0;
            var e = t;
            if (e.currentPlayer && (e.currentPlayerMain = e.currentPlayer),
            e.currentPlayer = this.player,
            o.Config.isTry = !0,
            o.Config.inRoom = !0,
            o.Config.roomId = 3,
            o.Config.countJp)
                try {
                    o.Config.countJp.reset()
                } catch (t) {}
            s.Util.ClearTimeOut(o.Config.timeJackpot),
            this.balance = 5e7,
            this.jackPot = 5e7,
            this.index = -1,
            e.JoinRoom(e.currentPlayer),
            e.balanceTrial.text = Message.GetMessage("sl37") + ": " + s.Util.ParseMoney(this.balance, void 0),
            e.balanceTrial.visible = !0,
            e.txtJackpot.text = s.Util.ParseMoney(this.jackPot, void 0)
        }
        var o = n(7)
          , s = n(0);
        e.trial = i
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.silent = void 0;
        var o = n(0)
          , s = n(7)
          , i = n(11)
          , a = (r.prototype.getAutoSpin = function() {
            var t = sessionStorage.getItem("Auto-" + this.game.storage);
            if (t) {
                var e = t.split(";");
                if (this.autoSpin = parseInt(e[1]),
                -1 === this.autoSpin || 0 < this.autoSpin)
                    return s.Config.roomId = parseInt(e[0]),
                    e[3] && (this.game.line = e[3]),
                    !0
            }
            return !1
        }
        ,
        r.prototype.setAutoSpin = function() {
            0 < this.autoSpin ? (this.autoSpin--,
            this.setSession(),
            0 === this.autoSpin && (this.game.isAuto = !1,
            this.removeSession())) : 0 === this.autoSpin && (this.game.isAuto = !1,
            this.removeSession(),
            $("#rolling-" + this.game.storage).removeClass("active"))
        }
        ,
        r.prototype.setSession = function() {
            sessionStorage.setItem("Auto-" + this.game.storage, s.Config.roomId + ";" + this.autoSpin + ";" + this.game.isAuto + ";" + i.lines.CurrentLine)
        }
        ,
        r.prototype.removeSession = function() {
            sessionStorage.removeItem("Auto-" + this.game.storage)
        }
        ,
        r.prototype.joinRoom = function(t) {
            this.game.accountId = t.AccountID,
            this.game.currentPlayer = t,
            this.game.balance = t.Account.GoldBalance,
            s.Config.roomId = t.RoomID,
            s.Config.totalLines = t.TotalLine,
            s.Config.betValue = t.BetValue,
            s.Config.inRoom = !0,
            s.Config.moneyType = t.moneyType,
            i.lines.CurrentLine = this.game.line ? this.game.line : t.SlotInfo.LastLineData,
            this.game.line = null,
            s.Config.totalLines = i.lines.CurrentLine.length,
            $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#rolling-" + this.game.storage).addClass("active"),
            $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().addClass("playing"),
            this.game.cb && this.game.cb(),
            this.game.cb = null,
            this.checkGame()
        }
        ,
        r.prototype.checkGame = function() {
            var t = this
              , e = this.game.currentPlayer.SlotInfo.FreeSpins;
            0 < e && (s.Config.isFreeSpin = !0,
            s.Config.freeSpinCount = e),
            setTimeout(function() {
                return t.initSpin(t)
            }, 1500)
        }
        ,
        r.prototype.initSpin = function(t) {
            var e = t;
            s.Config.isSpin || e.game.isAuto && e.game.isSilent && (s.Config.isSpin = !0,
            $("#mn-lobby-rolling-ocean .rolling-win").remove(),
            s.Config.isBonus = s.Config.isWinFree = !1,
            e.game.hubs.connection.invoke("Spin", {
                MerchantID: 0,
                RoomID: s.Config.roomId,
                CurrencyID: s.Config.currencyId,
                Lines: i.lines.CurrentLine
            }).then(function(t) {
                t.c < 0 && (s.Config.isSpin = !1,
                setTimeout(function() {
                    return e.initSpin(e)
                }, 4e3))
            }).catch(function() {
                s.Config.isSpin = !1,
                setTimeout(function() {
                    return e.initSpin(e)
                }, 4e3)
            }))
        }
        ,
        r.prototype.startSpin = function(t) {
            this.game.currentPlayer = t,
            s.Config.slotData = [],
            s.Config.slotData = t.SpinData.SlotsData.split(","),
            o.Util.ClearTimeOut(s.Config.timeSpin),
            t.SpinData.IsJackpot && (this.autoSpin = 0),
            t.SpinData.IsFreeSpin && (s.Config.isWinFree = !0),
            null !== t.SpinData.BonusGameData && 0 < t.SpinData.BonusGameData.length && (s.Config.isBonus = !0),
            s.Config.isFreeSpin || this.setAutoSpin(),
            this.showWin()
        }
        ,
        r.prototype.showMoney = function(t, e) {
            var n, i = this;
            try {
                $("#mn-lobby-rolling-ocean").length && ($("#mn-lobby-rolling-ocean").append('<span class="rolling-win">+' + o.Util.ParseMoney(t) + "</span>"),
                TweenMax.to($("#mn-lobby-rolling-ocean .rolling-win"), 2, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                })),
                $("#rolling-" + this.game.storage).hasClass("active") || $("#rolling-" + this.game.storage).addClass("active"),
                $("#popupJackpot").hasClass("show") && ($("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + s.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().hasClass("playing") || $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().addClass("playing"),
                (n = $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId)).length && (n.parent().append('<span class="win active">+' + o.Util.ParseMoney(t) + "</span>"),
                TweenMax.to(n.parent().find("span.win"), 1, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                }))),
                setTimeout(function() {
                    e(i)
                }, 2100)
            } catch (t) {
                e(i)
            }
        }
        ,
        r.prototype.updateBalance = function(t) {
            0 < $(".tien1 .spanMoney").length && $(".tien1 .spanMoney").text(o.Util.ParseMoney(t)),
            0 < $("#divHeader .money-1 .text").length && $("#divHeader .money-1 .text").text(o.Util.ParseMoney(t))
        }
        ,
        r.prototype.increaseBalance = function(t) {
            var e;
            0 != t && (0 < $("#divHeader .money-1 .text").length ? (e = o.Util.unParseMoney($("#divHeader .money-1 .text").text()),
            e += t,
            $("#divHeader .money-1 .text").text(o.Util.ParseMoney(e))) : 0 < $(".tien1 .spanMoney").length && (e = o.Util.unParseMoney($(".tien1 .spanMoney").text()),
            e += t,
            $(".tien1 .spanMoney").text(o.Util.ParseMoney(e))))
        }
        ,
        r.prototype.updateFreeSpin = function() {
            s.Config.freeSpinCount--
        }
        ,
        r.prototype.showWin = function() {
            this.updateBalance(this.game.currentPlayer.Account.GoldBalance),
            0 < this.game.currentPlayer.SpinData.PayLinePrizeValue ? this.showMoney(this.game.currentPlayer.SpinData.PayLinePrizeValue, this.bonusOrFree) : this.bonusOrFree(this)
        }
        ,
        r.prototype.bonusOrFree = function(t) {
            var e;
            s.Config.isBonus ? t.callBonus() : (s.Config.isFreeSpin && t.updateFreeSpin(),
            s.Config.isWinFree = !0,
            e = t.game.currentPlayer.SlotInfo.FreeSpins,
            s.Config.isFreeSpin || (s.Config.freeSpinCount = 0),
            s.Config.isFreeSpin = !0,
            s.Config.freeSpinCount += e,
            s.Config.isWinFree = !1,
            s.Config.isFreeSpin && 0 === s.Config.freeSpinCount && (s.Config.isFreeSpin = !1),
            t.checkAutoSpin(t))
        }
        ,
        r.prototype.callBonus = function() {
            var e = this;
            this.game.hubs.connection.invoke("PlayBonusGame", {
                RoomID: s.Config.roomId,
                CurrencyID: s.Config.currencyId
            }).then(function(t) {
                0 <= t.c && e.finishBonus()
            }).catch(function() {
                e.callBonus()
            })
        }
        ,
        r.prototype.finishBonus = function() {
            s.Config.isBonus = !1;
            for (var t = 0, e = this.game.currentPlayer.SpinData.BonusGameData.split(";"), n = 0; n < e.length; n++)
                t += parseInt(e[n].split(",")[3]);
            this.increaseBalance(t),
            this.showMoney(t, this.bonusOrFree)
        }
        ,
        r.prototype.checkAutoSpin = function(t) {
            s.Config.isSpin = !1,
            -1 === t.autoSpin || 0 < t.autoSpin ? setTimeout(function() {
                return t.initSpin(t)
            }, 4500) : (this.game.isAuto = !1,
            this.removeSession(),
            $("#rolling-" + t.game.storage).removeClass("active"),
            $("#list-jp-icon-" + s.Config.gameId + "-room-" + s.Config.roomId).removeClass("button-playing").addClass("button-play"),
            $("#list-jp-icon-" + s.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
            $("#ljp-" + s.Config.gameId + "-room-" + s.Config.roomId).parent().removeClass("playing"))
        }
        ,
        r);
        function r(t) {
            this.autoSpin = -1,
            this.game = t,
            this.getAutoSpin() && this.game.InitHubs()
        }
        e.silent = a
    }
    ],
    a.c = l,
    a.d = function(t, e, n) {
        a.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }
    ,
    a.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    a.t = function(e, t) {
        if (1 & t && (e = a(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var n = Object.create(null);
        if (a.r(n),
        Object.defineProperty(n, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                a.d(n, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return n
    }
    ,
    a.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return a.d(e, "a", e),
        e
    }
    ,
    a.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    a.p = "/",
    a(a.s = 30);
    function a(t) {
        if (l[t])
            return l[t].exports;
        var e = l[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return r[t].call(e.exports, e, e.exports, a),
        e.l = !0,
        e.exports
    }
    var r, l
});

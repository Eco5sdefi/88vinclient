!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : "function" == typeof define && define.amd ? define("dancing", ["libs", "pixi-sound", "signalR", "WebFont"], e) : "object" == typeof exports ? exports.dancing = e(require("libs"), require("pixi-sound"), require("signalR"), require("WebFont")) : t.dancing = e(t.libs, t["pixi-sound"], t.signalR, t.WebFont)
}(window, function(n, i, o, a) {
    return l = {},
    s.m = r = [function(t, e) {
        t.exports = n
    }
    , function(t, e) {
        t.exports = i
    }
    , function(t, e) {
        t.exports = o
    }
    , function(t, e) {
        t.exports = a
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.Config = void 0;
        e.Config = {
            hubUrl: null,
            apiUrl: null,
            api: null,
            lang: null,
            roomId: 1,
            countJp: null,
            countMoneyJw: null,
            countMoney: null,
            isMobile: !1,
            isOrientation: !1,
            isLobby: !0,
            arrRoom: [100, 1e3, 1e4],
            messages: null,
            ready: !1,
            music: !0,
            sound: !0,
            timeJackpot: null,
            timeSpin: null,
            timePop: null,
            timeBonusOrFree: null,
            timeOutEachLine: null,
            timeIntEachLine: null,
            timeShowWin: null,
            timeBonus: null,
            timeCheck: null,
            timeAcc: null,
            timerEvent: null,
            currencyId: 1,
            isTry: !1,
            freeSpinCount: 0,
            isFreeSpin: !1,
            totalFreePrize: 0,
            isTicket: !1,
            isAutoSpin: !1,
            isSpin: !1,
            isBonus: !1,
            isWinFree: !1,
            isX2: !1,
            isLogin: !1,
            inRoom: !1,
            gameId: 205,
            autoSpinCount: 100,
            numbShowEachLine: 0,
            numberDown: 0,
            isBigWin: !1,
            isJackpot: !1,
            isSuperWin: !1,
            isMegaWin: !1,
            payLines: [],
            lineItemsArr: [],
            totalLines: 0,
            betValue: 0,
            moneyType: 0,
            totalFreeSpin: 0,
            slotData: [],
            linesWin: [],
            itemsWinAr: [],
            itemsWin: [],
            autoSpinMode: 0,
            useBlur: !1,
            startFreeSpin: 0,
            idx: 3,
            autoSpinNumber: [10, 25, 50, 100, 200, 500, 1e3, 2e3, 5e3],
            isCrazy: !1,
            slotDataMain: [],
            slotWild: [],
            isQuick: !1
        }
    }
    , , , , , , , , function(t, i, e) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        }),
        i.contents = void 0;
        var u = e(4)
          , c = e(0)
          , n = e(17);
        i.contents = {
            page: 0,
            pageSize: 10,
            UpdateBalance: function(t, e) {
                0 <= e && (t.txtBalance.text = c.Util.ParseMoney(e, void 0))
            },
            GetEvent: function(e) {
                c.Util.ClearTimeOut(e.timerEvent),
                $.ajax({
                    type: "GET",
                    url: u.Config.api + "api/game/GetSlotEvent?CurrencyID=" + u.Config.currencyId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        t && t.d && e && e.updateEvent(t.d)
                    },
                    error: function() {}
                })
            },
            GetJackpot: function(n) {
                c.Util.ClearTimeOut(u.Config.timeJackpot),
                $.ajax({
                    type: "GET",
                    url: u.Config.api + "api/game/JackpotGetAll?CurrencyID=" + u.Config.currencyId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        if (t && t.d && n)
                            for (var e = 0; e < t.d.length; e++)
                                if (t.d[e].roomID === u.Config.roomId) {
                                    i.contents.CountJackPot(n.txtJackpot, !0, !1, t.d[e].jackpotFund, 1 === u.Config.roomId ? 3 : 5);
                                    break
                                }
                        u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                            i.contents.GetJackpot(n)
                        }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                    },
                    error: function() {
                        u.Config.inRoom || (u.Config.timeJackpot = setTimeout(function() {
                            i.contents.GetJackpot(n)
                        }, window.Config.TIME_COUNT_JACKPOT_LOBBY ? window.Config.TIME_COUNT_JACKPOT_LOBBY : 5e3))
                    }
                })
            },
            GetTicket: function(e) {
                $.ajax({
                    type: "GET",
                    url: u.Config.apiUrl + "GetAccountTicket/?currencyID=" + u.Config.currencyId + "&GameID=" + u.Config.gameId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: !1,
                    headers: {
                        Authorization: "Bearer " + e.token
                    },
                    crossDomain: !0,
                    xhrFields: {
                        withCredentials: !0
                    },
                    success: function(t) {
                        0 < t.d.length ? i.contents.UpdateTicket(e, t.d) : (u.Config.isTicket = !1,
                        e.txtFreeTicket.visible = !1)
                    }
                })
            },
            CountJackPot: function(t, e, n, i, o) {
                null === u.Config.countJp ? (u.Config.countJp = new c.Util.CountUp(t,e,n,0,i,0,o,void 0),
                u.Config.countJp.start()) : u.Config.countJp.update(i)
            },
            ChangeResources: function(t) {
                var e;
                u.Config.ready && ((e = t).lblLines.text = Message.GetMessage("sl7"),
                e.lblBetValue.text = Message.GetMessage("sl6"),
                e.lblTotalBet.text = Message.GetMessage("sl4"),
                e.lblJustWon.text = Message.GetMessage("sl5"),
                e.txtCongrats.text = Message.GetMessage("sl21"),
                e.txtNotify.text = Message.GetMessage("sl27"),
                e.btnAuto.getChildAt(0).text = Message.GetMessage("sl2"),
                e.txtMode.text = u.Config.isTry ? Message.GetMessage("sl8") : Message.GetMessage("sl9"),
                e.payTable.getChildAt(0).text = Message.GetMessage("sl18"),
                e.boxPopupWin.getChildAt(2).text = Message.GetMessage("sl52"),
                e.btnSpin.getChildAt(0).texture = null != TextureCache["text-spin-" + u.Config.lang + ".png"] ? TextureCache["text-spin-" + u.Config.lang + ".png"] : TextureCache["text-spin-en.png"],
                e.btnStopAuto.getChildAt(0).texture = null != TextureCache["text-stop-" + u.Config.lang + ".png"] ? TextureCache["text-stop-" + u.Config.lang + ".png"] : TextureCache["text-stop-en.png"],
                e.txtLinesChoose.text = Message.GetMessage("sl10"))
            },
            CountNumber: function(t, e, n, i, o, a, s, r) {
                var l = new c.Util.CountUp(t,e,n,i,o,0,s,void 0);
                r ? l.start(r) : l.start()
            },
            CountMoney: function(t, e, n, i, o, a, s, r, l) {
                l ? u.Config.countMoneyJw = new c.Util.CountUp(t,e,n,i,o,0,s,void 0) : u.Config.countMoney = new c.Util.CountUp(t,e,n,i,o,0,s,void 0),
                r ? l ? u.Config.countMoneyJw.start(r) : u.Config.countMoney.start(r) : l ? u.Config.countMoneyJw.start() : u.Config.countMoney.start()
            },
            UpdateFreeSpin: function(t) {
                var e = t;
                u.Config.freeSpinCount--,
                0 < u.Config.freeSpinCount ? (e.txtFreeTurn.text = u.Config.freeSpinCount + " " + Message.GetMessage("dc20") + " x " + (0 === t.currentPlayer.SpinData.FreeSpinMultiplier ? 1 : t.currentPlayer.SpinData.FreeSpinMultiplier),
                e.boxFree.visible = !0) : e.boxFree.visible = !1
            },
            UpdateTotalPrizeFreeSpin: function(t) {
                var e = t;
                u.Config.isFreeSpin ? (u.Config.totalFreePrize = t.currentPlayer.SpinData && t.currentPlayer.SpinData.FreeSpinPrizeValue ? t.currentPlayer.SpinData.FreeSpinPrizeValue : t.currentPlayer.SlotInfo.FreeSpinPrizeValue,
                e.txtJustWon.text = c.Util.ParseMoney(u.Config.totalFreePrize, void 0)) : u.Config.totalFreePrize = 0
            },
            UpdateLastWon: function(t, e) {
                t.txtJustWon.text = c.Util.ParseMoney(e, void 0)
            },
            UpdatePrizeValue: function(t, e) {
                t.txtBetValue.text = c.Util.ParseMoney(e, void 0)
            },
            UpdateTotalBet: function(t, e) {
                t.txtTotalBet.text = c.Util.ParseMoney(e, void 0)
            },
            UpdateLines: function(t, e) {
                0 === e && (e = 1),
                t.txtLines.text = e,
                u.Config.totalLines = e
            },
            UpdateTicket: function(t, e) {
                var n = t;
                e[u.Config.roomId - 1] && 0 < e[u.Config.roomId - 1].balance ? (n.txtFreeTicket.text = "+" + e[u.Config.roomId - 1].balance + " Free",
                n.txtFreeTicket.visible = !0,
                u.Config.isTicket = !0,
                i.contents.UpdateLines(n, 25),
                i.contents.UpdateTotalBet(n, 25 * n.currentPlayer.BetValue)) : (u.Config.isTicket = !1,
                n.txtFreeTicket.visible = !1)
            },
            UpdateControl: function(t) {
                i.contents.UpdateLines(t, t.line ? t.line : t.currentPlayer.SlotInfo.LastLines),
                i.contents.UpdatePrizeValue(t, t.currentPlayer.BetValue),
                i.contents.UpdateTotalBet(t, t.currentPlayer.BetValue * u.Config.totalLines),
                i.contents.UpdateLastWon(t, t.currentPlayer.SlotInfo.LastPrizeValue),
                n.accu.UpdateAccumulation(t),
                t.line = null
            },
            DisableButton: function(t, e, n) {
                t.buttonMode = !1,
                t.interactive = !1,
                e ? t.texture = TextureCache[e] : n && (t.tint = n)
            },
            EnableButton: function(t, e) {
                t.buttonMode = !0,
                t.interactive = !0,
                e ? t.texture = TextureCache[e] : t.tint = 16777215
            },
            DisableButtons: function(t) {
                var e = t;
                i.contents.DisableButton(e.btnMode),
                !window.App.isAuto || !u.Config.isAutoSpin && window.App.isAuto ? i.contents.DisableButton(e.btnBack) : i.contents.EnableButton(e.btnBack),
                i.contents.DisableButton(e.btnMinusLine, "btn-minus-bottom-disable.png"),
                i.contents.DisableButton(e.btnPlusLine, "btn-plus-disable.png"),
                i.contents.DisableButton(e.btnMinusBet, "btn-minus-bottom-disable.png"),
                i.contents.DisableButton(e.btnPlusBet, "btn-plus-disable.png"),
                i.contents.DisableButton(e.btnAuto, "btn-auto-disable.png"),
                i.contents.DisableButton(e.btnQuick),
                i.contents.DisableButton(e.btnMinusAuto, "btn-minus-disable.png"),
                i.contents.DisableButton(e.btnPlusAuto, "btn-plus-disable.png"),
                i.contents.DisableButton(e.btnSpin),
                e.txtSpin.tint = 5592405,
                u.Config.isAutoSpin ? (e.btnStopAuto.visible = !0,
                e.btnSpin.visible = !1) : (e.btnStopAuto.visible = !1,
                e.btnSpin.visible = !0),
                e.btnQuick.texture = e.loader.resources.quick.textures["quickspin" + (u.Config.isQuick ? "-active" : "") + ".png"]
            },
            EnableButtons: function(t) {
                var e = t;
                i.contents.EnableButton(e.btnMode),
                i.contents.EnableButton(e.btnBack),
                i.contents.EnableButton(e.btnMinusLine, "btn-minus-bottom-normal.png"),
                i.contents.EnableButton(e.btnPlusLine, "btn-plus-normal.png"),
                i.contents.EnableButton(e.btnMinusBet, "btn-minus-bottom-normal.png"),
                i.contents.EnableButton(e.btnPlusBet, "btn-plus-normal.png"),
                i.contents.EnableButton(e.btnAuto, "btn-auto-normal.png"),
                i.contents.EnableButton(e.btnQuick),
                i.contents.EnableButton(e.btnMinusAuto, "btn-minus-normal.png"),
                i.contents.EnableButton(e.btnPlusAuto, "btn-plus-normal.png"),
                i.contents.EnableButton(e.btnSpin),
                e.txtSpin.tint = 16777215,
                u.Config.isAutoSpin ? (e.btnStopAuto.visible = !0,
                e.btnSpin.visible = !1) : (e.btnStopAuto.visible = !1,
                e.btnSpin.visible = !0)
            },
            UpdateAutoSpin: function(t) {
                u.Config.isAutoSpin && (u.Config.autoSpinCount--,
                0 <= u.Config.autoSpinCount && (t.txtAuto.text = c.Util.ParseMoney(u.Config.autoSpinCount, void 0),
                window.App.isAuto && sessionStorage.setItem("Auto-" + t.storage, u.Config.roomId + ";" + u.Config.autoSpinCount + ";" + u.Config.isAutoSpin + ";" + u.Config.totalLines)),
                u.Config.autoSpinCount <= 0 && i.contents.StopAutoSpin(t)),
                $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").length && $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").html(0 < u.Config.autoSpinCount ? c.Util.ParseMoney(u.Config.autoSpinCount) : ""),
                $("#list-jp-icon-" + u.Config.gameId + "-playing").length && $("#list-jp-icon-" + u.Config.gameId + "-playing").html(0 < u.Config.autoSpinCount ? c.Util.ParseMoney(u.Config.autoSpinCount) : "")
            },
            StopAutoSpin: function(t) {
                var e = t;
                if (u.Config.isAutoSpin) {
                    if (u.Config.isAutoSpin = !1,
                    e.btnStopAuto.visible = !1,
                    $("#rolling-" + t.storage).removeClass("active"),
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId).removeClass("button-playing").addClass("button-play"),
                    $("#list-jp-icon-" + u.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
                    $("#ljp-" + u.Config.gameId + "-room-" + u.Config.roomId).parent().removeClass("playing"),
                    $("#list-jp-icon-" + u.Config.gameId + "-room-" + u.Config.roomId + "-playing").html(""),
                    $("#list-jp-icon-" + u.Config.gameId + "-playing").html(""),
                    sessionStorage.removeItem("Auto-" + t.storage),
                    window.App.isAutoDancing = !1,
                    e.btnSpin.visible || (e.btnSpin.visible = !0),
                    u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree)
                        return;
                    u.Config.timeSpin = setTimeout(function() {
                        return i.contents.EnableButtons(t)
                    }, 2e3)
                }
            },
            CheckLoginOrInRoom: function(t) {
                var e = t;
                return !(u.Config.isSpin || u.Config.isFreeSpin || u.Config.isBonus || u.Config.isWinFree) && (u.Config.isLogin ? !!u.Config.inRoom || (e.showMessage(Message.GetMessage("sl79")),
                !1) : (e.showMessage(Message.GetMessage("app003")),
                !1))
            },
            DeleteTimer: function() {
                c.Util.ClearTimeOut(u.Config.timerEvent),
                c.Util.ClearTimeOut(u.Config.timeSpin),
                c.Util.ClearTimeOut(u.Config.timeBonus),
                c.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                c.Util.ClearTimeOut(u.Config.timeOutEachLine),
                c.Util.ClearTimeOut(u.Config.timeShowWin),
                c.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                c.Util.ClearTimeOut(u.Config.timeJackpot),
                c.Util.ClearTimeOut(u.Config.timePop)
            },
            ClearTimer: function() {
                c.Util.ClearTimeOut(u.Config.timeSpin),
                c.Util.ClearTimeOut(u.Config.timeBonus),
                c.Util.ClearTimeOut(u.Config.timeBonusOrFree),
                c.Util.ClearTimeOut(u.Config.timeOutEachLine),
                c.Util.ClearTimeOut(u.Config.timeShowWin),
                c.Util.ClearTimeInterval(u.Config.timeIntEachLine),
                c.Util.ClearTimeOut(u.Config.timePop)
            },
            DeleteTwEffect: function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "dancing-eff" === t[e].data && t[e].kill()
            },
            DeleteTweens: function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "dancing-eff" !== t[e].data && "dancing" !== t[e].data && "money-fall-dancing" !== t[e].data || t[e].kill()
            }
        }
    }
    , , , , , function(t, a, e) {
        "use strict";
        Object.defineProperty(a, "__esModule", {
            value: !0
        }),
        a.accu = void 0;
        var n = e(4)
          , i = e(22);
        a.accu = {
            arr: [],
            UpdateAccumulation: function(t) {
                var e = t.currentPlayer.AccumulateGame;
                if (0 < e.Items) {
                    if (a.accu.arr.length < e.Items)
                        for (var n = e.Items - a.accu.arr.length, i = 0; i < n; i++) {
                            var o = new Sprite(TextureCache[t.crazyChar[a.accu.arr.length] + "-active.png"]);
                            o.anchor.set(.5),
                            o.position.set(t.crazyPos[a.accu.arr.length][0], t.crazyPos[a.accu.arr.length][1]),
                            a.accu.arr.push(o),
                            t.accContainer.addChild(o),
                            TweenMax.to(o, .5, {
                                data: "dancing",
                                rotation: 4 * Math.PI
                            })
                        }
                } else
                    a.accu.Disable()
            },
            Disable: function() {
                if (0 < a.accu.arr.length)
                    for (var t = 0; t < a.accu.arr.length; t++)
                        try {
                            a.accu.arr[t].destroy()
                        } catch (t) {}
                a.accu.arr = []
            },
            Effect: function(t) {
                var e = new Sprite(TextureCache["txt-crazy.png"]);
                if (e.anchor.set(.5),
                e.position.set(0, 0),
                t.iconsContainer.addChild(e),
                n.Config.sound)
                    try {
                        PIXI.sound.play("crazySound")
                    } catch (t) {}
                TweenMax.to(e.scale, .3, {
                    x: 1.2,
                    y: 1.2,
                    data: "dancing",
                    repeat: 5,
                    yoyo: !0
                }),
                setTimeout(function() {
                    t.crazy = new i.crazy(t)
                }, 1550)
            },
            DisableLego: function(t) {
                t.lego.visible = !1;
                for (var e = 0; e < t.arrLego.length; e++)
                    t.arrLego[e].visible = !1
            }
        }
    }
    , , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.crazy = void 0;
        var o = n(4)
          , i = n(0)
          , a = n(12)
          , s = n(17)
          , r = (l.prototype.Init = function() {
            a.contents.ClearTimer(),
            this.game.DestroyEffect(),
            this.game.DisableLines(),
            a.contents.DisableButtons(this.game);
            var t = new Sprite(TextureCache["crazy-bg.png"]);
            t.anchor.set(.5),
            t.scale.set(.997, .99),
            t.position.set(0, 0),
            this.crazyContainer.addChild(t),
            this.CreateBox(),
            this.CheckBox(),
            this.CreateStar(),
            this.TweenStar(),
            this.starContainer.visible = !1,
            this.bar = new Graphics,
            this.bar.beginFill(0, .6),
            this.bar.drawRect(-220, 164, 420, 50);
            var e = new PIXI.Text("x",{
                fontFamily: "KT",
                fontSize: 30,
                fill: "red",
                align: "center",
                fontWeight: "bold"
            });
            e.position.set(0, 187),
            e.anchor.set(.5),
            this.txtMoney = new PIXI.Text("0",{
                fontFamily: "KT",
                fontSize: 30,
                fill: "#fff",
                align: "center",
                fontWeight: "bold"
            }),
            this.txtMoney.position.set(-15, 187),
            this.txtMoney.anchor.set(1, .5),
            this.txtMulti = new PIXI.Text("1",{
                fontFamily: "KT",
                fontSize: 30,
                fill: "#fff",
                align: "center",
                fontWeight: "bold"
            }),
            this.txtMulti.position.set(15, 187),
            this.txtMulti.anchor.set(0, .5),
            this.UpdateMoneyMulti(-1),
            this.txtTimer = new PIXI.Text("00:15",{
                fontFamily: "KT",
                fontSize: 20,
                fill: "#fff",
                align: "center",
                fontWeight: "bold"
            }),
            this.txtTimer.position.set(-360, -210),
            this.crazyContainer.addChild(this.bar, e, this.txtMoney, this.txtMulti, this.txtTimer),
            o.Config.isFreeSpin && (this.game.boxFree.visible = !1);
            var n = this;
            0 === this.currentStep ? o.Config.timeBonus = setTimeout(function() {
                return n.CountCrazy(n)
            }, 1e3) : this.txtTimer.visible = !1
        }
        ,
        l.prototype.UpdateMoneyMulti = function(t) {
            if (-1 !== t)
                this.money += this.game.currentPlayer.AccumulateGame.AccumulateItemsData[t].PrizeStep,
                this.multi += this.game.currentPlayer.AccumulateGame.AccumulateItemsData[t].Multiplier;
            else
                for (var e = 0; e < this.currentStep; e++)
                    this.money += this.game.currentPlayer.AccumulateGame.AccumulateItemsData[e].PrizeStep,
                    this.multi += this.game.currentPlayer.AccumulateGame.AccumulateItemsData[e].Multiplier;
            this.txtMoney.text = i.Util.ParseMoney(this.money, void 0),
            this.txtMulti.text = this.multi + (this.CheckCrazy() ? " x 10" : "")
        }
        ,
        l.prototype.CheckCrazy = function() {
            for (var t = [301, 302, 303, 304, 305], e = 0, n = 0; n < t.length; n++)
                for (var i = t[n], o = 0; o < this.currentStep; o++) {
                    var a = this.game.currentPlayer.AccumulateGame.AccumulateItemsData[o];
                    if (a.PrizeID === i) {
                        e += 1,
                        a.Step > this.crazyStep && (this.crazyStep = a.Step);
                        break
                    }
                }
            return 5 === e
        }
        ,
        l.prototype.CountCrazy = function(t) {
            var e = t;
            i.Util.ClearTimeOut(o.Config.timeBonus),
            e.timer--,
            t.txtTimer.text = (t.timer < 10 ? "0" : "") + t.timer,
            e.timer <= 0 ? (t.txtTimer.visible = !1,
            e.game.hubs.connection.invoke("PlayCrazyBonusAll", {
                RoomID: o.Config.roomId,
                CurrencyID: o.Config.currencyId
            }).then(function(t) {
                console.log(t)
            })) : o.Config.timeBonus = setTimeout(function() {
                e.CountCrazy(e)
            }, 1e3)
        }
        ,
        l.prototype.CreateBox = function() {
            for (var t = 0; t < 24; t++)
                this.box[t] = new Sprite(TextureCache[this.boxLocation[t][0] + ".png"]),
                this.box[t].position.set(this.boxLocation[t][1], this.boxLocation[t][2]),
                this.box[t].inx = t,
                this.box[t].anchor.set(.5),
                this.crazyContainer.addChild(this.box[t]),
                this.box[t].interactive = !0,
                this.box[t].buttonMode = !0,
                this.box[t].on("pointerover", this.BoxOver.bind(this.box[t], this)).on("pointerout", this.BoxOut.bind(this.box[t], this)).on("pointerdown", this.BoxDown.bind(this.box[t], this))
        }
        ,
        l.prototype.CheckBox = function() {
            for (var t = 0; t < this.currentStep; t++) {
                this.box[this.selectedItems[t]].interactive = !1,
                this.box[this.selectedItems[t]].buttonMode = !1,
                this.box[this.selectedItems[t]].visible = !1;
                var e = new Sprite(TextureCache[this.SetIcon(this.game.currentPlayer.AccumulateGame.AccumulateItemsData[t].PrizeID)]);
                e.anchor.set(.5),
                e.position.set(this.box[this.selectedItems[t]].x, this.box[this.selectedItems[t]].y),
                this.crazyContainer.addChild(e)
            }
        }
        ,
        l.prototype.SetIcon = function(t) {
            var e = "";
            switch (t) {
            case 301:
                e = "C.png";
                break;
            case 302:
                e = "R.png";
                break;
            case 303:
                e = "A.png";
                break;
            case 304:
                e = "Z.png";
                break;
            case 305:
                e = "Y.png";
                break;
            case 306:
                e = "crazy_x1.png";
                break;
            case 307:
                e = "crazy_x2.png";
                break;
            case 308:
                e = "crazy_x3.png";
                break;
            case 309:
                e = "crazy_x4.png";
                break;
            case 310:
                e = "CRAZY"
            }
            return e
        }
        ,
        l.prototype.CreateStar = function() {
            for (var t = 0; t < 3; t++)
                this.starLight.push(new Sprite(TextureCache["star" + t + ".png"])),
                this.starLight[this.starLight.length - 1].position.set(0 === t ? 10 : 1 === t ? -30 : 40, 0 === t ? -20 : 1 === t ? 20 : 10),
                this.starLight[this.starLight.length - 1].anchor.set(.5),
                this.starContainer.addChild(this.starLight[this.starLight.length - 1])
        }
        ,
        l.prototype.TweenStar = function() {
            for (var t = 0; t < 3; t++)
                TweenMax.to(this.starLight[t], 0 === t ? .3 : 2 === t ? .4 : .5, {
                    data: "dancing",
                    alpha: 0,
                    yoyo: !0,
                    repeat: -1,
                    delay: 0,
                    ease: Power0.easeNone,
                    onComplete: function() {}
                });
            this.starContainer.visible = !0
        }
        ,
        l.prototype.DisableStar = function() {
            this.starContainer.visible = !1
        }
        ,
        l.prototype.BoxOver = function(t) {
            var e = t;
            e.starContainer.position.set(this.x, this.y),
            e.starContainer.visible = !0
        }
        ,
        l.prototype.BoxOut = function(t) {
            t.starContainer.visible = !1
        }
        ,
        l.prototype.DisableBoxes = function() {
            for (var t = 0; t < 24; t++)
                this.box[t].interactive = !1,
                this.box[t].buttonMode = !1
        }
        ,
        l.prototype.EnableBoxes = function() {
            for (var t = 0; t < 24; t++)
                -1 === $.inArray(t + 1, this.selectedItems) && (this.box[t].interactive = !0,
                this.box[t].buttonMode = !0)
        }
        ,
        l.prototype.BoxDown = function(t) {
            var e = t;
            e.txtTimer.visible = !1,
            i.Util.ClearTimeOut(o.Config.timeBonus),
            e.currentPos = this.inx,
            e.DisableBoxes(),
            e.game.hubs.connection.invoke("PlayCrazyBonus", {
                RoomID: o.Config.roomId,
                CurrencyID: o.Config.currencyId,
                ItemID: e.currentPos
            }).then(function(t) {
                console.log(t),
                t.c < 0 && e.EnableBoxes()
            }).catch(function(t) {
                console.log(t),
                e.EnableBoxes()
            })
        }
        ,
        l.prototype.ResultAccumulateGame = function(t) {
            console.log(t);
            var e = this;
            if (0 !== t.TotalStep) {
                this.box[this.currentPos].visible = !1,
                this.DisableStar(),
                this.currentStep++,
                this.box[this.currentPos].interactive = !1,
                this.box[this.currentPos].buttonMode = !1;
                var n = new Sprite(TextureCache[this.SetIcon(this.game.currentPlayer.AccumulateGame.AccumulateItemsData[this.currentStep - 1].PrizeID)]);
                n.position.set(this.box[this.currentPos].x, this.box[this.currentPos].y),
                n.anchor.set(.5),
                this.crazyContainer.addChildAt(n, this.crazyContainer.children.length - 10),
                this.UpdateMoneyMulti(this.currentStep - 1);
                var i = this.CheckCrazy();
                if (1 === t.IsCrazy && i && t.CurrentStep === this.crazyStep && (setTimeout(function() {
                    var t = new Sprite(TextureCache["txt-crazy.png"]);
                    if (t.anchor.set(.5),
                    t.position.set(0, 0),
                    e.game.iconsContainer.addChild(t),
                    o.Config.sound)
                        try {
                            PIXI.sound.play("crazySound")
                        } catch (t) {}
                    TweenMax.to(t.scale, .3, {
                        x: 1.2,
                        y: 1.2,
                        data: "dancing",
                        repeat: 5,
                        yoyo: !0
                    })
                }, 500),
                setTimeout(function() {
                    e.game.DestroyEffect()
                }, 2500)),
                t.TotalStep === t.CurrentStep)
                    return void setTimeout(function() {
                        e.FinishCrazy(t)
                    }, t.IsCrazy ? 3e3 : 1e3);
                e.EnableBoxes()
            } else if (t.TotalStep === t.CurrentStep || 0 === t.CurrentStep)
                return void setTimeout(function() {
                    e.FinishCrazy(t)
                }, 1e3)
        }
        ,
        l.prototype.FinishCrazy = function(t) {
            var e = this
              , n = i.Util.ParseMoney(t.TotalPrizeValue, void 0);
            e.game.balance += t.TotalPrizeValue,
            a.contents.UpdateBalance(e.game, e.game.balance),
            o.Config.isCrazy = !1,
            e.game.boxPopupWin.getChildAt(3).text = Message.GetMessage("sl88"),
            e.game.boxPopupWin.visible = !0,
            e.game.boxPopupWin.getChildAt(2).text = n,
            e.crazyContainer.destroy({
                children: !0
            }),
            e.starContainer.destroy({
                children: !0
            }),
            e.game.currentPlayer.AccumulateGame.AccumulateItemsData = null,
            e.game.currentPlayer.AccumulateGame.Items = 0,
            s.accu.UpdateAccumulation(e.game),
            setTimeout(function() {
                o.Config.isFreeSpin && (e.game.boxFree.visible = !0),
                e.game.NormalWinOrJackPotOrBigWin(e.game)
            }, 2e3)
        }
        ,
        l);
        function l(t) {
            this.selectedItems = [],
            this.currentStep = 0,
            this.multi = 1,
            this.money = 0,
            this.crazyStep = 0,
            this.isCrazy = !1,
            this.box = [],
            this.starLight = [],
            this.timer = 15,
            this.currentPos = -1,
            this.boxLocation = [["gift_yellow", -305.5, -153.5], ["gift_blue", -184.5, -153.5], ["gift_red", -63.5, -153.5], ["gift_yellow", 57.5, -153.5], ["gift_blue", 178.5, -153.5], ["gift_red", 299.5, -153.5], ["gift_yellow", -305.5, -48.5], ["gift_blue", -184.5, -48.5], ["gift_red", -63.5, -48.5], ["gift_yellow", 57.5, -48.5], ["gift_blue", 178.5, -48.5], ["gift_red", 299.5, -48.5], ["gift_yellow", -305.5, 56.5], ["gift_blue", -184.5, 56.5], ["gift_red", -63.5, 56.5], ["gift_yellow", 57.5, 56.5], ["gift_blue", 178.5, 56.5], ["gift_red", 299.5, 56.5], ["gift_yellow", -305.5, 161.5], ["gift_blue", -184.5, 161.5], ["gift_red", -63.5, 161.5], ["gift_yellow", 57.5, 161.5], ["gift_blue", 178.5, 161.5], ["gift_red", 299.5, 161.5]],
            this.game = t,
            this.box = [],
            this.starLight = [],
            this.currentStep = this.game.currentPlayer.AccumulateGame.CurrentStep,
            this.selectedItems = this.game.currentPlayer.AccumulateGame.SelectedItems,
            this.timer = 15,
            this.crazyContainer = new Container,
            this.starContainer = new Container,
            t.columnContainer.addChildAt(this.crazyContainer, t.columnContainer.children.length - 1),
            t.columnContainer.addChildAt(this.starContainer, t.columnContainer.children.length - 1),
            this.Init()
        }
        e.crazy = r
    }
    , , , , , , , , , , , , , , , , , , , , , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.game = void 0;
        var i = n(44)
          , o = n(3)
          , a = (s.prototype.delete = function() {
            this.game.Delete()
        }
        ,
        s.prototype.startAuto = function() {
            return this.game.StartAuto()
        }
        ,
        s.prototype.stopAuto = function() {
            this.game.StopAuto()
        }
        ,
        s.prototype.checkAuto = function() {
            return this.game.CheckAuto()
        }
        ,
        s.prototype.getRoomId = function() {
            return this.game.getRoomId()
        }
        ,
        s.prototype.setSilent = function() {
            this.game.SetSilent()
        }
        ,
        s.prototype.restartAuto = function(t, e, n) {
            this.game.RestartAuto(t, e, n)
        }
        ,
        s);
        function s(t) {
            o.load({
                custom: {
                    families: ["KT", "Prophit", "Roboto"]
                },
                fontactive: function() {}
            }),
            this.game = new i.games(t)
        }
        e.game = a
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.games = void 0;
        var s = n(0)
          , i = n(45)
          , r = n(4)
          , l = n(12)
          , o = n(46)
          , a = n(47);
        n(1);
        var u = n(22)
          , c = n(17)
          , p = n(48)
          , h = n(49)
          , g = (m.prototype.GetAutoSpin = function() {
            var t = sessionStorage.getItem("Auto-" + this.storage);
            if (this.isSilent = !1,
            t) {
                var e = t.split(";");
                if ("true" === e[2] && (-1 === parseInt(e[1]) || 0 < parseInt(e[1])))
                    return r.Config.autoSpinCount = parseInt(e[1]),
                    r.Config.isAutoSpin = window.App.isAutoDancing = !0,
                    window.App.isAuto = !0,
                    $(".multislot-expand").addClass("active"),
                    r.Config.roomId = parseInt(e[0]),
                    void (e[3] && (this.line = e[3]))
            }
            sessionStorage.removeItem("Auto-" + this.storage)
        }
        ,
        m.prototype.Init = function() {
            PIXI.utils.skipHello(),
            this.application = new PIXI.Application(this.size[0],this.size[1],{
                transparent: !0,
                antialias: !0,
                view: this.target
            });
            var t = this;
            this.application.ticker.add(function() {
                t.Update(t)
            }),
            this.InitContainer();
            for (var e = 0; e < this.assets.length; e++)
                "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
            this.loader.onProgress.add(function() {
                return t.Loading(t)
            }),
            this.loader.load(function() {
                t.isLoad = !0,
                t.InitGame(),
                t.InitHubs(),
                $("#divLoading").hide()
            })
        }
        ,
        m.prototype.Loading = function(t) {
            $("#divLoading").show(),
            $("#popupJackpot").removeClass("show"),
            0 < $("#divLoading .loading-percent").length ? ($("#divLoading .loading-percent").css("width", parseInt(t.loader.progress) + "%"),
            $("#divLoading .loading-text").html(parseInt(t.loader.progress) + "%")) : ($("#loading-progress span").css("width", parseInt(t.loader.progress) + "%"),
            $("#loading-progress-txt").html(parseInt(t.loader.progress) + "%"))
        }
        ,
        m.prototype.Update = function(t) {
            t.bgSpin && (t.bgSpin.rotation += .03)
        }
        ,
        m.prototype.InitHubs = function() {
            this.hubs = new i.default(r.Config.hubUrl + "gameHub",this.token,this)
        }
        ,
        m.prototype.ResetTweenTab = function() {
            window.addEventListener("blur", function() {
                TweenLite.lagSmoothing(0)
            }, !1),
            window.addEventListener("focus", function() {
                TweenLite.lagSmoothing(1e3, 16)
            }, !1)
        }
        ,
        m.prototype.InitContainer = function() {
            this.bgContainer = new Container,
            this.loaderContainer = new Container,
            this.linesContainer = new Container,
            this.machineContainer = new Container,
            this.mainContainer = new Container,
            this.buttonContainer = new Container,
            this.iconsContainer = new Container,
            this.containerColumn1 = new Container,
            this.containerColumn2 = new Container,
            this.containerColumn3 = new Container,
            this.containerColumn4 = new Container,
            this.containerColumn5 = new Container,
            this.popupContainer = new Container,
            this.guideContainer = new Container,
            this.moneyContainer = new Container,
            this.effectContainer = new Container,
            this.accContainer = new Container,
            this.eventContainer = new Container,
            this.columnContainer = new Container,
            this.columnContainer.addChild(this.containerColumn1, this.containerColumn2, this.containerColumn3, this.containerColumn4, this.containerColumn5, this.iconsContainer),
            this.application.stage.addChild(this.loaderContainer, this.bgContainer, this.machineContainer, this.moneyContainer)
        }
        ,
        m.prototype.InitGame = function() {
            this.filter = new PIXI.filters.ColorMatrixFilter,
            this.filter.matrix = [1, 0, 0, .1, 0, 0, 1, 0, .1, 0, 0, 0, 1, .1, 0, 0, 0, 0, 1, 0],
            this.filterGray = new PIXI.filters.ColorMatrixFilter,
            this.filterGray.matrix = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0],
            this.InitFrames(),
            this.InitBg(),
            this.InitMachine(),
            this.InitLines(),
            this.InitSlots(),
            this.InitMask(),
            this.InitAssets(),
            this.InitPopup(),
            this.InitPopupWin(),
            this.InitGuide(),
            this.machine.addChild(this.eventContainer),
            this.InitEvent(),
            this.itemsMainGame = [this.column1[this.totalItems - 3], this.column2[this.totalItems - 3], this.column3[this.totalItems - 3], this.column4[this.totalItems - 3], this.column5[this.totalItems - 3], this.column1[this.totalItems - 2], this.column2[this.totalItems - 2], this.column3[this.totalItems - 2], this.column4[this.totalItems - 2], this.column5[this.totalItems - 2], this.column1[this.totalItems - 1], this.column2[this.totalItems - 1], this.column3[this.totalItems - 1], this.column4[this.totalItems - 1], this.column5[this.totalItems - 1]],
            l.contents.DisableButtons(this),
            r.Config.ready = !0,
            this.Resize(this),
            this.ResetTweenTab();
            var t = this;
            try {
                this.countSound = this.loader.resources.countSound.sound,
                this.countSound.loop = !0,
                this.countSound.volume = 1.5,
                this.bigWinSound = this.loader.resources.bigwinSound.sound,
                this.bigWinSound.loop = !1,
                this.jackpotSound = this.loader.resources.jackpotSound.sound,
                this.jackpotSound.loop = !0,
                this.bgSound = this.loader.resources["bgSound_" + (Math.floor(4 * Math.random()) + 1)].sound,
                this.bgSound.volume = .2,
                this.bgSound.loop = !0,
                r.Config.sound && this.bgSound.play()
            } catch (t) {}
            this.iconEvent.visible = !1,
            window.Config.EnableXEvent && l.contents.GetEvent(this),
            t.resizeFunc = function() {
                return t.Resize(t)
            }
            ,
            window.addEventListener("resize", t.resizeFunc)
        }
        ,
        m.prototype.Resize = function(t) {
            t.size = [$(window).width(), $(window).height()],
            t.application.renderer.resize($(window).width(), $(window).height()),
            t.size[0] < 1160 || t.size[1] < 730 ? (t.backGround.scale.set(t.size[0] / 1920),
            t.backGround.anchor.set(.5, 0),
            t.backGround.position.set(t.size[0] / 2, 0),
            t.machine.scale.set(Math.min(t.size[0] / 1160, t.size[1] / 730)),
            t.machine.anchor.set(.5),
            t.machine.position.set(t.size[0] / 2, 354 * Math.min(t.size[0] / 1160, t.size[1] / 730))) : (t.machine.scale.set(1),
            t.backGround.scale.set(1),
            t.backGround.anchor.set(.5, 0),
            t.backGround.position.set(t.size[0] / 2, 0),
            t.machine.anchor.set(.5),
            t.machine.position.set(t.size[0] / 2, 354))
        }
        ,
        m.prototype.InitFrames = function() {
            for (this.framesGirlWild = [],
            this.framesLightBg = [],
            this.framesLight = [],
            this.framesDancer = [],
            this.framesIconAnimation = [],
            this.framesLine = [],
            this.framesCoins = [],
            this.framesLightingX = [],
            n = 1; n < 95; n++)
                this.framesGirlWild.push(TextureCache["dancer-" + n + ".png"]);
            for (n = 1; n < 16; n++)
                this.framesLight.push(TextureCache["light-1-" + n + ".png"]);
            for (n = 1; n < 22; n++)
                this.framesLightBg.push(TextureCache["light-2-" + n + ".png"]);
            for (var t = 0; t < 11; t++) {
                for (var e = [], n = 1; n < 51; n++)
                    e.push(TextureCache[t + 1 + "-" + n + ".png"]);
                this.framesIconAnimation.push(e)
            }
            for (n = 51; n < 59; n++)
                this.framesIconAnimation[1].push(TextureCache["2-" + n + ".png"]),
                this.framesIconAnimation[2].push(TextureCache["3-" + n + ".png"]);
            for (n = 0; n < 3; n++) {
                var i = framesFromTilesetImage("girl-" + (n + 1), 210, 420);
                this.framesDancer = this.framesDancer.concat(i)
            }
            for (n = 0; n < 20; n++)
                this.framesLightingX.push(TextureCache["fxJackpotSheets_000" + (n < 10 ? "0" : "") + n + ".png"]);
            var o = [[722, 2626, 717, 34], [722, 2662, 717, 34], [722, 2698, 717, 34], [2, 2, 725, 354], [725, 1325, 706, 304], [729, 385, 709, 168], [726, 1102, 707, 221], [722, 1972, 717, 347], [2, 2234, 718, 302], [2, 2713, 715, 316], [724, 1631, 715, 339], [727, 935, 712, 165], [719, 2734, 706, 156], [2, 3031, 704, 183], [2, 2538, 718, 173], [2, 1089, 722, 179], [2, 1270, 721, 269], [2, 692, 723, 395], [722, 2321, 717, 303], [729, 2, 709, 381], [729, 555, 708, 378], [719, 2892, 702, 321], [2, 1887, 718, 345], [2, 358, 725, 332], [2, 1541, 720, 344]];
            for (n = 0; n < o.length; n++)
                this.framesLine.push(frame(TextureCache.lines, o[n][0], o[n][1], o[n][2], o[n][3]));
            this.framesCoins = framesFromTilesetImage("coinDancing", 30, 31)
        }
        ,
        m.prototype.InitBg = function() {
            this.backGround = new Sprite(TextureCache.bgDancing),
            this.backGround.anchor.set(.5, 0),
            this.backGround.position.set(this.size[0] / 2, 0),
            this.bgContainer.addChild(this.backGround)
        }
        ,
        m.prototype.InitMachine = function() {
            this.machine = new Sprite(TextureCache["bg-main.png"]),
            this.machine.anchor.set(.5),
            this.machine.position.set(this.size[0] / 2, 354),
            this.machineContainer.addChild(this.machine);
            var t = new Sprite(TextureCache["bg-left.png"]);
            t.anchor.set(.5),
            t.position.set(-475, -64);
            var e = new Sprite(TextureCache["bg-right.png"]);
            e.anchor.set(.5),
            e.position.set(475, 4);
            var n = new Sprite(TextureCache["bg-session.png"]);
            n.anchor.set(.5),
            n.position.set(-330, -245),
            this.txtUserName = new PIXI.Text("undefined" != typeof App && App.account ? App.account.nickname : "",{
                fontFamily: "KT",
                fontSize: 13,
                fontWeight: "bold",
                fill: ["white"]
            }),
            this.txtUserName.anchor.set(.5),
            this.txtUserName.position.set(0, -10),
            this.txtBalance = new PIXI.Text("undefined" != typeof App && App.account ? s.Util.ParseMoney(App.account.goldbalance) : "",{
                fontFamily: "KT",
                fontSize: 18,
                fontWeight: "bold",
                fill: ["yellow"]
            }),
            this.txtBalance.anchor.set(.5),
            this.txtBalance.position.set(0, 7),
            n.addChild(this.txtUserName, this.txtBalance),
            this.bgJackpot = new Sprite(TextureCache["bg-jackpot.png"]),
            this.bgJackpot.anchor.set(.5),
            this.bgJackpot.position.set(62, -305),
            this.lblJackpot = new Sprite(TextureCache["icon-jackpot.png"]),
            this.lblJackpot.anchor.set(.5),
            this.lblJackpot.position.set(-60, -28),
            this.txtJackpot = new PIXI.Text("0",{
                fontFamily: "Prophit",
                fontSize: 45,
                fill: ["#fff600"]
            }),
            this.txtJackpot.anchor.set(.5),
            this.txtJackpot.position.set(-60, 10),
            this.xEvent = new Sprite(this.loader.resources.event.textures["ej-lb-x2"]),
            this.xEvent.anchor.set(.5),
            this.xEvent.position.set(150, 10),
            this.xEvent.visible = !1,
            this.bgJackpot.addChild(this.lblJackpot, this.txtJackpot, this.xEvent);
            var i = new Sprite(TextureCache["bg-session.png"]);
            i.anchor.set(.5),
            i.position.set(330, -245),
            this.txtSession = new PIXI.Text("#",{
                fontFamily: "KT",
                fontSize: 13,
                fontWeight: "bold",
                fill: ["white"]
            }),
            this.txtSession.anchor.set(0, .5),
            this.txtSession.position.set(-75, 0),
            i.addChild(this.txtSession),
            this.btnMode = new Sprite(TextureCache["btn-trial-normal.png"]),
            this.btnMode.name = "btn-trial-normal.png",
            this.btnMode.anchor.set(.5),
            this.btnMode.position.set(-297, -294),
            this.lblMode = new Sprite(TextureCache["txt-trial-" + r.Config.lang + ".png"]),
            this.lblMode.anchor.set(.5),
            this.btnMode.addChild(this.lblMode),
            this.btnMode.interactive = !0,
            this.btnMode.buttonMode = !0,
            this.btnMode.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnModeDown.bind(this.btnMode, this)),
            this.btnHide = new Sprite(TextureCache["btn-trial-normal.png"]),
            this.btnHide.name = "btn-trial-normal.png",
            this.btnHide.anchor.set(.5),
            this.btnHide.position.set(-412, -294),
            this.btnHide.addChild(new Sprite(TextureCache["icon-hide.png"])),
            this.btnHide.getChildAt(0).anchor.set(.5),
            this.btnHide.getChildAt(0).position.set(-20, 0),
            this.btnHide.addChild(new Sprite(TextureCache["hide-" + ("vi" === r.Config.lang ? "vi" : "en") + ".png"])),
            this.btnHide.getChildAt(1).anchor.set(.5),
            this.btnHide.getChildAt(1).position.set("vi" === r.Config.lang ? 10 : 15, "vi" === r.Config.lang ? -2 : 0),
            this.btnHide.interactive = !0,
            this.btnHide.buttonMode = !0,
            this.btnHide.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.btnHideDown.bind(this.btnHide, this)),
            this.btnBack = new Sprite(TextureCache["btn-setting-normal.png"]),
            this.btnBack.name = "btn-setting-normal.png",
            this.btnBack.anchor.set(.5),
            this.btnBack.position.set(-495, -294),
            this.btnBack.addChild(new Sprite(TextureCache["icon-back.png"])),
            this.btnBack.children[0].anchor.set(.5),
            this.btnBack.interactive = !0,
            this.btnBack.buttonMode = !0,
            this.btnBack.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnBackDown.bind(this.btnBack, this)),
            this.btnGuide = new Sprite(TextureCache["btn-setting-normal.png"]),
            this.btnGuide.name = "btn-setting-normal.png",
            this.btnGuide.anchor.set(.5),
            this.btnGuide.position.set(260, -294),
            this.btnGuide.addChild(new Sprite(TextureCache["icon-guide.png"])),
            this.btnGuide.children[0].anchor.set(.5),
            this.btnGuide.interactive = !0,
            this.btnGuide.buttonMode = !0,
            this.btnGuide.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnGuideDown.bind(this.btnGuide, this)),
            this.btnRank = new Sprite(TextureCache["btn-setting-normal.png"]),
            this.btnRank.name = "btn-setting-normal.png",
            this.btnRank.anchor.set(.5),
            this.btnRank.position.set(308, -294),
            this.btnRank.addChild(new Sprite(TextureCache["icon-rank.png"])),
            this.btnRank.children[0].anchor.set(.5),
            this.btnRank.interactive = !0,
            this.btnRank.buttonMode = !0,
            this.btnRank.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnRankDown.bind(this.btnRank, this)),
            this.btnHistory = new Sprite(TextureCache["btn-setting-normal.png"]),
            this.btnHistory.name = "btn-setting-normal.png",
            this.btnHistory.anchor.set(.5),
            this.btnHistory.position.set(356, -294),
            this.btnHistory.addChild(new Sprite(TextureCache["icon-history.png"])),
            this.btnHistory.children[0].anchor.set(.5),
            this.btnHistory.interactive = !0,
            this.btnHistory.buttonMode = !0,
            this.btnHistory.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnHistoryDown.bind(this.btnHistory, this)),
            this.btnSound = new Sprite(TextureCache["btn-setting-normal.png"]),
            this.btnSound.name = "btn-setting-normal.png",
            this.btnSound.anchor.set(.5),
            this.btnSound.position.set(404, -294),
            this.btnSound.addChild(new Sprite(TextureCache["icon-sound-on.png"])),
            this.btnSound.children[0].anchor.set(.5),
            this.btnSound.interactive = !0,
            this.btnSound.buttonMode = !0,
            this.btnSound.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnSoundDown.bind(this.btnSound, this)),
            this.dancer = new AnimatedSprite(this.framesDancer),
            this.dancer.anchor.set(.5),
            this.dancer.scale.x = -1,
            this.dancer.position.set(-445, 35),
            this.dancer.animationSpeed = .3,
            this.dancer.loop = !1,
            this.txtBalanceTrial = new PIXI.Text(Message.GetMessage("sl84") + ": 0",{
                fontFamily: "KT",
                fontSize: 18,
                fill: ["yellow"]
            }),
            this.txtBalanceTrial.anchor.set(.5),
            this.txtBalanceTrial.position.set(0, -240),
            this.txtBalanceTrial.visible = !1,
            this.machine.addChild(t, e, n, this.bgJackpot, i, this.btnMode, this.btnHide, this.btnBack, this.btnGuide, this.btnRank, this.btnHistory, this.btnSound, this.linesContainer, this.txtBalanceTrial, this.dancer);
            for (var o = 0; o < this.crazyChar.length; o++) {
                var a = new Sprite(TextureCache[this.crazyChar[o] + "-normal.png"]);
                a.anchor.set(.5),
                a.position.set(this.crazyPos[o][0], this.crazyPos[o][1]),
                this.machine.addChild(a)
            }
        }
        ,
        m.prototype.createLightX = function() {
            this.lightingX || (this.lightingX = new AnimatedSprite(this.framesLightingX),
            this.lightingX.animationSpeed = .4,
            this.lightingX.loop = !0,
            this.lightingX.position.set(-65, 25),
            this.lightingX.anchor.set(.5),
            this.lightingX.play(),
            this.bgJackpot.addChild(this.lightingX))
        }
        ,
        m.prototype.deleteLightX = function() {
            this.lightingX && this.lightingX.destroy({
                children: !0
            }),
            this.lightingX = null
        }
        ,
        m.prototype.updateEvent = function(t) {
            var e = this;
            try {
                for (var n = this.xEvent.visible = !1, i = 0; i < t.length; i++) {
                    var o, a = t[i];
                    a.nextJackpot < 0 ? this.arrBox[a.roomID - 1].children[1].visible = this.arrBox[a.roomID - 1].children[2].visible = this.arrBox[a.roomID - 1].children[3].visible = !1 : 0 == a.nextJackpot ? (this.arrBox[a.roomID - 1].children[2].visible = this.arrBox[a.roomID - 1].children[3].visible = !1,
                    this.arrBox[a.roomID - 1].children[1].texture = this.loader.resources.event.textures["ej-tg-x" + a.multiplier],
                    a.roomID != r.Config.roomId || r.Config.isTry || (this.xEvent.visible = !0,
                    this.xEvent.texture = this.loader.resources.event.textures["ej-lb-x" + a.multiplier],
                    n = !0)) : (this.arrBox[a.roomID - 1].children[1].visible = !1,
                    o = "X" + a.multiplier + " " + Message.GetMessage("ev50") + ("km" == r.Config.lang ? "     " : "        ") + Message.GetMessage("ev49"),
                    this.arrBox[a.roomID - 1].children[2].text = o,
                    this.arrBox[a.roomID - 1].children[3].children[0].text = a.nextJackpot,
                    this.arrBox[a.roomID - 1].children[2].visible = this.arrBox[a.roomID - 1].children[3].visible = !0),
                    n ? this.lightingX || this.createLightX() : this.deleteLightX()
                }
                r.Config.timerEvent = setTimeout(function() {
                    l.contents.GetEvent(e)
                }, window.Config.TIME_COUNT_GET_EVENT_X ? window.Config.TIME_COUNT_GET_EVENT_X : 5e3)
            } catch (t) {
                clearTimeout(r.Config.timerEvent)
            }
        }
        ,
        m.prototype.InitEvent = function() {
            this.iconEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]),
            this.iconEvent.anchor.set(.5),
            this.iconEvent.position.set(this.size[0] / 2 - 100, -this.size[1] / 2 + 100),
            this.iconEvent.interactive = !0,
            this.iconEvent.buttonMode = !0,
            this.iconEvent.on("pointerdown", this.onDragStart).on("pointerup", this.onDragEnd).on("pointerupoutside", this.onDragEnd).on("pointermove", this.onDragMove),
            this.boxEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-bg"]),
            this.boxEvent.anchor.set(.5, 0),
            this.boxEvent.position.set(.5, 5),
            this.room1Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room1Event.anchor.set(.5),
            this.room1Event.position.set(0, 71);
            var t = new PIXI.Text(s.Util.ParseMoney(r.Config.arrRoom[0]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            t.anchor.set(.5),
            t.position.set(0, -15),
            this.room1X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room1X.anchor.set(.5),
            this.room1X.position.set(0, 10);
            var e = Message.GetMessage("ev26") + ("km" == r.Config.lang ? "     " : "        ") + Message.GetMessage("ev49");
            this.txtRoom1 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom1.anchor.set(.5),
            this.txtRoom1.position.set(0, 10),
            this.boxJackRoom1 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom1.anchor.set(.5),
            "km" == r.Config.lang && this.boxJackRoom1.scale.set(.8),
            this.boxJackRoom1.position.set("km" == r.Config.lang ? 28 : "zh" == r.Config.lang ? 9 : "en" == r.Config.lang ? 16 : 13, 10),
            this.boxJackRoom1.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom1.children[0].anchor.set(.5),
            this.room1Event.addChild(t, this.room1X, this.txtRoom1, this.boxJackRoom1),
            this.room1X.visible = this.boxJackRoom1.visible = this.txtRoom1.visible = !1,
            this.room2Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room2Event.anchor.set(.5),
            this.room2Event.position.set(0, 133);
            var n = new PIXI.Text(s.Util.ParseMoney(r.Config.arrRoom[1]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            n.anchor.set(.5),
            n.position.set(0, -15),
            this.room2X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room2X.anchor.set(.5),
            this.room2X.position.set(0, 10),
            this.txtRoom2 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom2.anchor.set(.5),
            this.txtRoom2.position.set(0, 10),
            this.boxJackRoom2 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom2.anchor.set(.5),
            "km" == r.Config.lang && this.boxJackRoom2.scale.set(.8),
            this.boxJackRoom2.position.set("km" == r.Config.lang ? 28 : "zh" == r.Config.lang ? 9 : "en" == r.Config.lang ? 16 : 13, 10),
            this.boxJackRoom2.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom2.children[0].anchor.set(.5),
            this.room2Event.addChild(n, this.room2X, this.txtRoom2, this.boxJackRoom2),
            this.room2X.visible = this.boxJackRoom2.visible = this.txtRoom2.visible = !1,
            this.room3Event = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-btn"]),
            this.room3Event.anchor.set(.5),
            this.room3Event.position.set(0, 195);
            var i = new PIXI.Text(s.Util.ParseMoney(r.Config.arrRoom[2]),{
                fontFamily: "Roboto",
                fontSize: 15,
                fill: ["#aaf573"]
            });
            i.anchor.set(.5),
            i.position.set(0, -15),
            this.room3X = new PIXI.Sprite(this.loader.resources.event.textures["ej-tg-x2"]),
            this.room3X.anchor.set(.5),
            this.room3X.position.set(0, 10),
            this.txtRoom3 = new PIXI.Text(e,{
                fontFamily: "Roboto",
                fontSize: 13,
                fontStyle: "italic",
                fill: ["white"],
                wordWrap: !0,
                wordWrapWidth: 200
            }),
            this.txtRoom3.anchor.set(.5),
            this.txtRoom3.position.set(0, 10),
            this.boxJackRoom3 = new PIXI.Sprite(this.loader.resources.event.textures["ej-t-bg"]),
            this.boxJackRoom3.anchor.set(.5),
            "km" == r.Config.lang && this.boxJackRoom3.scale.set(.8),
            this.boxJackRoom3.position.set("km" == r.Config.lang ? 28 : "zh" == r.Config.lang ? 9 : "en" == r.Config.lang ? 16 : 13, 10),
            this.boxJackRoom3.addChild(new PIXI.Text("2",{
                fontFamily: "Roboto",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["yellow"]
            })),
            this.boxJackRoom3.children[0].anchor.set(.5),
            this.room3Event.addChild(i, this.room3X, this.txtRoom3, this.boxJackRoom3),
            this.room3X.visible = this.boxJackRoom3.visible = this.txtRoom3.visible = !1,
            this.boxEvent.addChild(this.room1Event, this.room2Event, this.room3Event),
            this.arrBox = [this.room1Event, this.room2Event, this.room3Event],
            this.arrowEvent = new PIXI.Sprite(this.loader.resources.event.textures["ej-arrow"]),
            this.arrowEvent.anchor.set(.5),
            this.arrowEvent.position.set(0, 250),
            this.arrowEvent.scale.y = -1,
            this.arrowEvent.interactive = !0,
            this.arrowEvent.buttonMode = !0,
            this.arrowEvent.on("pointerdown", this.toogleEvent.bind(this.arrowEvent, this)).on("pointerup", this.toogleEventUp.bind(this.arrowEvent, this));
            var o = new PIXI.Sprite(this.loader.resources.event.textures["ej-event"]);
            o.anchor.set(.5),
            this.iconEvent.addChild(this.boxEvent, this.arrowEvent, o),
            this.eventContainer.addChild(this.iconEvent)
        }
        ,
        m.prototype.toogleEventUp = function(t) {
            t.iconEvent.interactive = !0
        }
        ,
        m.prototype.toogleEvent = function(t) {
            t.iconEvent.interactive = !1,
            -1 == t.arrowEvent.scale.y ? (t.arrowEvent.scale.y = 1,
            TweenMax.to(t.boxEvent, .5, {
                alpha: 0,
                data: "dancing"
            }),
            TweenMax.to(t.arrowEvent, .5, {
                y: 50,
                data: "dancing"
            })) : (TweenMax.to(t.boxEvent, .5, {
                alpha: 1,
                data: "dancing"
            }),
            TweenMax.to(t.arrowEvent, .5, {
                y: 250,
                data: "dancing"
            }),
            t.arrowEvent.scale.y = -1),
            setTimeout(function() {
                t.iconEvent.interactive = !0
            }, 500)
        }
        ,
        m.prototype.onDragStart = function(t) {
            this.data = t.data,
            this.alpha = .9,
            this.dragging = !0
        }
        ,
        m.prototype.onDragEnd = function() {
            this.data = null,
            this.alpha = 1,
            this.dragging = !1
        }
        ,
        m.prototype.onDragMove = function() {
            var t, e = this;
            e.dragging && (t = e.data.getLocalPosition(e.parent),
            e.x = t.x,
            e.y = t.y)
        }
        ,
        m.prototype.InitLines = function() {
            var t;
            for (this.linesArr = [],
            this.dotLinesArr = [],
            this.txtLinesArr = [],
            this.machine.addChild(this.linesContainer),
            t = 0; t < 25; t++) {
                var e = new Sprite(this.framesLine[t]);
                e.anchor.set(.5),
                e.visible = !1,
                e.position.set(this.linesPos[t][0], this.linesPos[t][1]),
                this.linesContainer.addChild(e),
                this.linesArr.push(e)
            }
            for (t = 0; t < 25; t++) {
                var n = new Sprite(TextureCache["dot-line.png"]);
                n.anchor.set(.5),
                n.position.set(this.dotLinesPos[t][0], this.dotLinesPos[t][1]),
                this.linesContainer.addChild(n),
                this.dotLinesArr.push(n)
            }
            for (t = 0; t < 25; t++) {
                var i = new Sprite(TextureCache["circle-line.png"]);
                i.anchor.set(.5),
                i.visible = !1,
                i.position.set(this.dotLinesPos[t][0], this.dotLinesPos[t][1]),
                i.addChild(new PIXI.Text(t + 1,{
                    fontFamily: "KT",
                    fontSize: 18,
                    fill: ["white"]
                })),
                i.children[0].anchor.set(.5),
                this.linesContainer.addChild(i),
                this.txtLinesArr.push(i)
            }
        }
        ,
        m.prototype.InitSlots = function() {
            var t;
            this.machine.addChild(this.columnContainer),
            this.startPosition = 142;
            for (var e = 0, n = this.totalItems - 1; 0 <= n; n--)
                t = Math.floor(11 * Math.random()) + 1,
                this.column1[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column1[n].inx = t,
                this.column1[n].x = -300.5,
                this.column1[n].anchor.set(.5),
                this.column1[n].y = this.startPosition - 142 * e,
                this.containerColumn1.addChild(this.column1[n]),
                t = Math.floor(11 * Math.random()) + 1,
                this.column2[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column2[n].inx = t,
                this.column2[n].x = -150,
                this.column2[n].anchor.set(.5),
                this.column2[n].y = this.startPosition - 142 * e,
                this.containerColumn2.addChild(this.column2[n]),
                t = Math.floor(11 * Math.random()) + 1,
                this.column3[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column3[n].inx = t,
                this.column3[n].x = .5,
                this.column3[n].anchor.set(.5),
                this.column3[n].y = this.startPosition - 142 * e,
                this.containerColumn3.addChild(this.column3[n]),
                t = Math.floor(11 * Math.random()) + 1,
                this.column4[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column4[n].inx = t,
                this.column4[n].x = 150.5,
                this.column4[n].anchor.set(.5),
                this.column4[n].y = this.startPosition - 142 * e,
                this.containerColumn4.addChild(this.column4[n]),
                t = Math.floor(11 * Math.random()) + 1,
                this.column5[n] = new Sprite(TextureCache[t + (3 < n && n < this.totalItems - 3 && !r.Config.useBlur ? "-blur" : "") + ".png"]),
                this.column5[n].inx = t,
                this.column5[n].x = 301,
                this.column5[n].anchor.set(.5),
                this.column5[n].y = this.startPosition - 142 * e,
                this.containerColumn5.addChild(this.column5[n]),
                e++;
            this.startHeight = this.column1[0].y
        }
        ,
        m.prototype.InitMask = function() {
            this.mask = new Graphics,
            this.mask.beginFill(16777215, 0),
            this.mask.drawRect(0, 0, 750, 428),
            this.mask.position.set(-375, -214),
            this.columnContainer.addChild(this.mask),
            this.columnContainer.mask = this.mask
        }
        ,
        m.prototype.InitAssets = function() {
            this.boxMoney = new Sprite(TextureCache["bg-money.png"]),
            this.boxMoney.anchor.set(.5),
            this.boxMoney.position.set(0, 160),
            this.boxMoney.visible = !1,
            this.txtMoney = new PIXI.Text("0",{
                fontFamily: "'Prophit'",
                fontSize: 40,
                fill: ["#fffc00"]
            }),
            this.txtMoney.anchor.set(.5),
            this.txtMoney.position.set(0, 0),
            this.boxMoney.addChild(this.txtMoney),
            this.machine.addChild(this.effectContainer, this.boxMoney);
            var t = new Sprite(TextureCache["bg-btn.png"]);
            t.anchor.set(.5),
            t.position.set(0, 296),
            this.machine.addChild(t, this.buttonContainer, this.accContainer),
            this.bgSpin = new Sprite(TextureCache["btn-spin.png"]),
            this.bgSpin.position.set(0, 296),
            this.bgSpin.anchor.set(.5);
            var e = new Graphics;
            e.beginFill(16777215, 0),
            e.drawRect(0, 0, 196, 180),
            e.position.set(-98, 189);
            var n = new Graphics;
            n.beginFill(16777215, 0),
            n.drawRect(0, 0, 196, 180),
            n.position.set(-98, 189);
            var i = new Graphics;
            i.beginFill(16777215, 0),
            i.drawRect(0, 0, 196, 180),
            i.position.set(-98, 189),
            this.buttonContainer.addChild(this.bgSpin, e),
            this.bgSpin.mask = e,
            this.btnSpin = new Sprite(TextureCache["btn-spin-trans.png"]),
            this.btnSpin.name = "btn-spin-trans.png",
            this.btnSpin.anchor.set(.5),
            this.btnSpin.position.set(0, 296),
            this.btnSpin.on("pointerover", this.BtnOverRot).on("pointerout", this.BtnOutRot).on("pointerdown", this.BtnSpinDown.bind(this.btnSpin, this)),
            this.txtSpin = new Sprite(TextureCache["txt-spin-normal-" + r.Config.lang + ".png"]),
            this.txtSpin.anchor.set(.5),
            this.btnSpin.addChild(this.txtSpin),
            this.btnSpin.mask = n,
            this.btnSpin.interactive = !0,
            this.btnSpin.buttonMode = !0,
            this.btnStopAuto = new Sprite(TextureCache["btn-spin-trans.png"]),
            this.btnStopAuto.name = "button-spin-normal-" + r.Config.lang + ".png",
            this.btnStopAuto.anchor.set(.5),
            this.btnStopAuto.position.set(0, 296),
            this.btnStopAuto.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnStopAutoDown.bind(this.btnStopAuto, this)),
            this.txtStop = new Sprite(TextureCache["txt-stop-normal-" + r.Config.lang + ".png"]),
            this.txtStop.anchor.set(.5),
            this.btnStopAuto.addChild(this.txtStop),
            this.btnStopAuto.mask = i,
            this.btnStopAuto.interactive = !0,
            this.btnStopAuto.buttonMode = !0,
            this.btnStopAuto.visible = !1,
            this.boxLines = new Sprite(TextureCache["bg-lines.png"]),
            this.boxLines.anchor.set(.5),
            this.boxLines.position.set(-355, 296),
            this.lblLines = new PIXI.Text(Message.GetMessage("sl7").toUpperCase(),{
                fontFamily: "KT",
                fontSize: 18,
                fill: ["rgb(58, 1, 89)"],
                stroke: "rgb(168, 46, 247)",
                strokeThickness: 1
            }),
            this.lblLines.anchor.set(.5),
            this.lblLines.position.set(0, -48),
            this.txtLines = new PIXI.Text("1",{
                fontFamily: "KT",
                fontSize: 65,
                fill: ["rgb(255, 180, 0)"],
                stroke: "rgba(0, 0, 0, 0.6)",
                strokeThickness: 3
            }),
            this.txtLines.anchor.set(.5),
            this.txtLines.position.set(16, 0),
            this.btnMinusLine = new Sprite(TextureCache["btn-minus-bottom-normal.png"]),
            this.btnMinusLine.name = "btn-minus-bottom-normal.png",
            this.btnMinusLine.scale.x = -1,
            this.btnMinusLine.anchor.set(.5),
            this.btnMinusLine.position.set(-44, 16),
            this.btnMinusLine.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnMinusLineDown.bind(this.btnMinusLine, this)),
            this.btnPlusLine = new Sprite(TextureCache["btn-plus-normal.png"]),
            this.btnPlusLine.name = "btn-plus-normal.png",
            this.btnPlusLine.anchor.set(.5),
            this.btnPlusLine.position.set(-44, -16),
            this.btnPlusLine.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnPlusLineDown.bind(this.btnPlusLine, this)),
            this.boxLines.addChild(this.lblLines, this.txtLines, this.btnMinusLine, this.btnPlusLine),
            this.boxBet = new Sprite(TextureCache["bg-bet-won.png"]),
            this.boxBet.anchor.set(.5),
            this.boxBet.position.set(-190, 287),
            this.lblBetValue = new PIXI.Text(Message.GetMessage("sl6").toUpperCase(),{
                fontFamily: "KT",
                fontSize: 18,
                fill: ["rgb(58, 1, 89)"],
                stroke: "rgb(168, 46, 247)",
                strokeThickness: 1
            }),
            this.lblBetValue.anchor.set(.5),
            this.lblBetValue.position.set(0, -39),
            this.txtBetValue = new PIXI.Text("100",{
                fontFamily: "KT",
                fontSize: 23,
                fill: ["rgb(217, 48, 151)"]
            }),
            this.txtBetValue.anchor.set(.5),
            this.txtBetValue.position.set(-15, -8),
            this.txtTotalBet = new PIXI.Text("100",{
                fontFamily: "KT",
                fontSize: 23,
                fontWeight: "bold",
                fill: ["rgb(255, 180, 0)"]
            }),
            this.txtTotalBet.anchor.set(.5),
            this.txtTotalBet.position.set(-15, 24),
            this.btnMinusBet = new Sprite(TextureCache["btn-minus-bottom-normal.png"]),
            this.btnMinusBet.name = "btn-minus-bottom-normal.png",
            this.btnMinusBet.anchor.set(.5),
            this.btnMinusBet.position.set(59.5, 25),
            this.btnMinusBet.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnMinusBetDown.bind(this.btnMinusBet, this)),
            this.btnPlusBet = new Sprite(TextureCache["btn-plus-normal.png"]),
            this.btnPlusBet.name = "btn-plus-normal.png",
            this.btnPlusBet.scale.x = -1,
            this.btnPlusBet.anchor.set(.5),
            this.btnPlusBet.position.set(59.5, -7),
            this.btnPlusBet.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnPlusBetDown.bind(this.btnPlusBet, this)),
            this.boxBet.addChild(this.lblBetValue, this.txtBetValue, this.txtTotalBet, this.btnMinusBet, this.btnPlusBet),
            this.boxWon = new Sprite(TextureCache["bg-bet-won.png"]),
            this.boxWon.anchor.set(.5),
            this.boxWon.position.set(185, 287),
            this.lblJustWon = new PIXI.Text(Message.GetMessage("sl5").toUpperCase(),{
                fontFamily: "KT",
                fontSize: 18,
                fill: ["rgb(255, 242, 210)"]
            }),
            this.lblJustWon.anchor.set(.5),
            this.lblJustWon.position.set(0, -8),
            this.txtJustWon = new PIXI.Text("0",{
                fontFamily: "KT",
                fontSize: 24,
                fill: ["rgb(255, 180, 0)"]
            }),
            this.txtJustWon.anchor.set(.5),
            this.txtJustWon.position.set(0, 24),
            this.boxWon.addChild(this.lblJustWon, this.txtJustWon),
            this.boxAuto = new Sprite(TextureCache["bg-auto.png"]),
            this.boxAuto.anchor.set(.5),
            this.boxAuto.position.set(350, 287),
            this.btnQuick = new Sprite(this.loader.resources.quick.textures["quickspin.png"]),
            this.btnQuick.name = "quickspin.png",
            this.btnQuick.anchor.set(.5),
            this.btnQuick.position.set(-230, -46),
            this.btnQuick.addChild(new PIXI.Text(Message.GetMessage("mnpk1"),{
                fontFamily: "KT",
                fontSize: 15,
                fill: ["white"],
                stroke: "yellow",
                strokeThickness: 1
            })),
            this.btnQuick.getChildAt(0).anchor.set(0, .5),
            this.btnQuick.getChildAt(0).position.set(15, -1.5),
            this.btnQuick.on("pointerdown", this.BtnDown).on("pointerup", this.BtnQuickDown.bind(this.btnQuick, this)),
            this.btnAuto = new Sprite(TextureCache["btn-auto-normal.png"]),
            this.btnAuto.name = "btn-auto-normal.png",
            this.btnAuto.anchor.set(.5),
            this.btnAuto.position.set(0, 26),
            this.btnAuto.addChild(new PIXI.Text(Message.GetMessage("sl2"),{
                fontFamily: "KT",
                fontSize: 15,
                fill: ["rgb(33, 20, 134)"],
                stroke: "rgb(0, 210, 255)",
                strokeThickness: 1
            })),
            this.btnAuto.getChildAt(0).anchor.set(.5),
            this.btnAuto.getChildAt(0).position.set(0, -1.5),
            this.btnAuto.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnAutoDown.bind(this.btnAuto, this)),
            this.btnMinusAuto = new Sprite(TextureCache["btn-minus-normal.png"]),
            this.btnMinusAuto.name = "btn-minus-normal.png",
            this.btnMinusAuto.anchor.set(.5),
            this.btnMinusAuto.position.set(50, -7),
            this.btnMinusAuto.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnMinusAutoDown.bind(this.btnMinusAuto, this)),
            this.btnPlusAuto = new Sprite(TextureCache["btn-plus-normal.png"]),
            this.btnPlusAuto.name = "btn-plus-normal.png",
            this.btnPlusAuto.anchor.set(.5),
            this.btnPlusAuto.position.set(-50, -7),
            this.btnPlusAuto.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnPlusAutoDown.bind(this.btnPlusAuto, this)),
            this.txtAuto = new PIXI.Text("100",{
                fontFamily: "KT",
                fontSize: 21,
                fill: ["rgb(255, 180, 0)"]
            }),
            this.txtAuto.anchor.set(.5),
            this.txtAuto.position.set(0, -8),
            this.boxAuto.addChild(this.btnQuick, this.btnAuto, this.btnMinusAuto, this.btnPlusAuto, this.txtAuto),
            this.boxFree = new Sprite(TextureCache["bg-freespin.png"]),
            this.boxFree.anchor.set(.5),
            this.boxFree.position.set(225, 208),
            this.lblFreeTurn = new PIXI.Text(Message.GetMessage("sl20") + ": ",{
                fontFamily: "KT",
                fontSize: 12,
                fill: ["white"]
            }),
            this.lblFreeTurn.anchor.set(1, .5),
            this.lblFreeTurn.position.set(20, 0),
            this.txtFreeTurn = new PIXI.Text("0",{
                fontFamily: "KT",
                fontSize: 12,
                fontWeight: "bold",
                fill: ["#ffea00"]
            }),
            this.txtFreeTurn.anchor.set(0, .5),
            this.txtFreeTurn.position.set(20, 0),
            this.boxFree.addChild(this.lblFreeTurn, this.txtFreeTurn),
            this.boxFree.visible = !1,
            this.txtFreeTicket = new PIXI.Text("+0 FREE",{
                fontFamily: "KT",
                fontSize: 15,
                fontWeight: "bold",
                fill: ["#ffea00"]
            }),
            this.txtFreeTicket.anchor.set(.5),
            this.txtFreeTicket.position.set(0, 246),
            this.txtFreeTicket.visible = !1,
            this.buttonContainer.addChild(this.btnSpin, n, this.btnStopAuto, i, this.boxLines, this.boxBet, this.boxWon, this.boxAuto, this.boxFree, this.txtFreeTicket)
        }
        ,
        m.prototype.InitPopup = function() {
            this.machine.addChild(this.popupContainer),
            this.boxPopup = new Sprite(TextureCache["popup.png"]),
            this.boxPopup.anchor.set(.5),
            this.boxPopup.position.set(0, 0),
            this.txtNotify = new PIXI.Text(Message.GetMessage("sl27").toUpperCase(),{
                fontFamily: "KT",
                fontSize: 25,
                fill: ["#fff600"]
            }),
            this.txtNotify.anchor.set(.5),
            this.txtNotify.position.set(0, -93),
            this.boxPopup.addChild(this.txtNotify);
            var t = new Sprite(TextureCache["btn-close-normal.png"]);
            t.name = "btn-close-normal.png",
            t.anchor.set(.5),
            t.position.set(0, 116),
            t.addChild(new PIXI.Text(Message.GetMessage("sl23").toUpperCase(),{
                fontFamily: "KT",
                fontSize: 25,
                fill: ["#370350"],
                dropShadow: !0,
                dropShadowColor: "#ffba00",
                dropShadowDistance: 1
            })),
            t.children[0].anchor.set(.5),
            this.boxPopup.addChild(t),
            t.interactive = !0,
            t.buttonMode = !0;
            var e = this;
            t.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                e.boxPopup.visible = !1
            });
            var n = new PIXI.Text("",{
                fontFamily: "KT",
                fontSize: 16,
                fill: ["#fff"],
                wordWrap: !0,
                wordWrapWidth: 500,
                align: "center"
            });
            n.anchor.set(.5),
            this.boxPopup.addChild(n),
            this.boxPopup.visible = !1,
            this.machine.addChild(this.boxPopup)
        }
        ,
        m.prototype.InitPopupWin = function() {
            this.boxPopupWin = new Sprite(TextureCache["popup.png"]),
            this.boxPopupWin.anchor.set(.5),
            this.boxPopupWin.position.set(0, 0);
            var t = new Sprite(TextureCache["btn-close-normal.png"]);
            t.name = "btn-close-normal.png",
            t.anchor.set(.5),
            t.position.set(0, 116),
            t.addChild(new PIXI.Text(Message.GetMessage("sl23").toUpperCase(),{
                fontFamily: "KT",
                fontSize: 25,
                fill: ["#370350"],
                dropShadow: !0,
                dropShadowColor: "#ffba00",
                dropShadowDistance: 1
            })),
            t.children[0].anchor.set(.5),
            this.boxPopupWin.addChild(t),
            t.interactive = !0,
            t.buttonMode = !0;
            var e = this;
            t.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                e.boxPopupWin.visible = !1
            });
            var n = new PIXI.Text("0",{
                fontFamily: "KT",
                fontSize: 60,
                fill: ["#ffffff", "orange"],
                stroke: "#4a1850",
                strokeThickness: 5,
                wordWrap: !0,
                wordWrapWidth: 440
            });
            n.anchor.set(.5),
            n.position.set(0, -10);
            var i = new PIXI.Text(Message.GetMessage("sl52"),{
                fontFamily: "KT",
                fontSize: 20,
                fill: ["#fff"],
                wordWrap: !0,
                wordWrapWidth: 500,
                align: "center"
            });
            i.anchor.set(.5),
            i.position.set(0, -80);
            var o = new PIXI.Text("trong",{
                fontFamily: "KT",
                fontSize: 20,
                fill: ["#fff"],
                wordWrap: !0,
                wordWrapWidth: 500,
                align: "center"
            });
            o.anchor.set(.5),
            o.position.set(0, 55),
            this.boxPopupWin.addChild(i, n, o),
            this.machine.addChild(this.boxPopupWin),
            this.boxPopupWin.visible = !1
        }
        ,
        m.prototype.InitGuide = function() {
            var t = this;
            this.payTable = new Sprite(TextureCache["dancing-bg-guide.png"]),
            this.payTable.anchor.set(.5),
            this.payTableContent = new Sprite(TextureCache["dancing-guide-en-1.png"]),
            this.payTableContent.anchor.set(.5),
            this.payTable.addChild(this.payTableContent);
            var e = new Sprite(TextureCache["bg-btn.png"]);
            e.anchor.set(.5),
            e.position.set(0, this.payTable.height / 2 + e.height / 2),
            this.payTable.addChild(e);
            var n = new Sprite(TextureCache["btn-back-normal.png"]);
            n.name = "btn-back-normal.png",
            n.anchor.set(.5),
            n.position.set(0, 0),
            n.addChild(new Sprite(TextureCache["txt-back-" + r.Config.lang + ".png"])),
            n.children[0].anchor.set(.5),
            e.addChild(n),
            n.interactive = !0,
            n.buttonMode = !0,
            n.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                t.payTable.visible = !1
            }),
            this.prevGuide = new Sprite(TextureCache["btn-prev-next-normal.png"]),
            this.prevGuide.name = "btn-prev-next-normal.png",
            this.prevGuide.anchor.set(.5),
            this.prevGuide.scale.x = -1,
            this.prevGuide.position.set(-n.width / 2 - this.prevGuide.width / 2 - 10, 0),
            e.addChild(this.prevGuide),
            this.prevGuide.interactive = !0,
            this.prevGuide.buttonMode = !0,
            this.prevGuide.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                t.inxGuide--,
                t.inxGuide <= 0 && (t.inxGuide = 7),
                t.payTableContent.texture = TextureCache["dancing-guide-" + r.Config.lang + "-" + t.inxGuide + ".png"]
            }),
            this.nextGuide = new Sprite(TextureCache["btn-prev-next-normal.png"]),
            this.nextGuide.name = "btn-prev-next-normal.png",
            this.nextGuide.anchor.set(.5),
            this.nextGuide.position.set(n.width / 2 + this.prevGuide.width / 2 + 10, 0),
            e.addChild(this.nextGuide),
            this.nextGuide.interactive = !0,
            this.nextGuide.buttonMode = !0,
            this.nextGuide.on("pointerover", this.BtnOver).on("pointerout", this.BtnOut).on("pointerdown", function() {
                t.inxGuide++,
                7 < t.inxGuide && (t.inxGuide = 1),
                t.payTableContent.texture = TextureCache["dancing-guide-" + r.Config.lang + "-" + t.inxGuide + ".png"]
            }),
            this.payTable.visible = !1,
            this.machine.addChild(this.payTable)
        }
        ,
        m.prototype.JoinGame = function(t) {
            var e = this;
            try {
                this.hubs.connection.invoke("PlayNow", {
                    RoomID: t,
                    CurrencyID: r.Config.currencyId
                }).catch(function() {
                    App.showPopupMessage({
                        content: Message.GetMessage("sl71"),
                        textDone: "OK"
                    }),
                    App.handleBack(),
                    e.Delete()
                })
            } catch (t) {
                App.showPopupMessage({
                    content: Message.GetMessage("sl71"),
                    textDone: "OK"
                }),
                App.handleBack(),
                e.Delete()
            }
        }
        ,
        m.prototype.JoinRoom = function(t) {
            this.accountId = t.AccountID,
            this.currentPlayer = t,
            this.balance = t.Account.GoldBalance,
            r.Config.roomId = t.RoomID,
            r.Config.totalLines = this.line ? this.line : t.TotalLine,
            this.line = null,
            r.Config.betValue = t.BetValue,
            r.Config.inRoom = !0,
            r.Config.moneyType = t.moneyType,
            s.Util.ClearTimeOut(r.Config.timeJackpot),
            this.isSilent || (this.xEvent.visible = !1,
            this.txtUserName.text = t.Account.Nickname,
            this.txtUserName.visible = !0,
            this.txtBalance.text = s.Util.ParseMoney(t.Account.GoldBalance, void 0),
            window.Config.EnableXEvent && l.contents.GetEvent(this)),
            this.CheckGame(this)
        }
        ,
        m.prototype.CheckGame = function(t) {
            if (s.Util.ClearTimeOut(r.Config.timeCheck),
            this.currentPlayer && null != this.currentPlayer.SlotInfo && r.Config.ready) {
                if (l.contents.UpdateControl(t),
                l.contents.GetTicket(t),
                4 === this.currentPlayer.SlotInfo.GameStatus && null != this.currentPlayer.AccumulateGame && null != this.currentPlayer.AccumulateGame.AccumulateItemsData && (r.Config.isCrazy = !0),
                (3 === this.currentPlayer.SlotInfo.GameStatus || null != this.currentPlayer.BonusGame && null != this.currentPlayer.BonusGame.BonusItemsData) && (r.Config.isBonus = !0),
                0 < this.currentPlayer.SlotInfo.FreeSpins && (r.Config.isWinFree = !0,
                r.Config.totalFreeSpin = this.currentPlayer.SlotInfo.FreeSpins,
                r.Config.freeSpinCount = this.currentPlayer.SlotInfo.FreeSpins),
                r.Config.isCrazy)
                    return void (this.crazy = new u.crazy(t));
                if (r.Config.isBonus)
                    return this.bonus = new o.bonus(t),
                    void this.bonus.Init();
                if (r.Config.isWinFree)
                    return void t.SetupFreeSpin(t);
                this.CheckAutoSpin() || l.contents.EnableButtons(t)
            } else
                r.Config.timeBonus = setTimeout(function() {
                    t.CheckGame(t)
                }, 500)
        }
        ,
        m.prototype.UpdateJackpot = function(t) {
            0 < t && !r.Config.isTry && !window.Config.USE_JACKPOT_API && l.contents.CountJackPot(this.txtJackpot, !0, !1, t, window.Config.TIME_COUNT_JACKPOT_LOBBY / 1e3)
        }
        ,
        m.prototype.ShowMessage = function(t) {
            var e = this.boxPopup;
            e.getChildAt(2).text = t,
            e.visible = !0,
            r.Config.timePop = setTimeout(function() {
                e.visible = !1
            }, 2e3)
        }
        ,
        m.prototype.ShowError = function(t) {
            var e;
            switch (console.log("error", t),
            t) {
            case -51:
                e = Message.GetMessage("sl40");
                break;
            case -99:
                e = Message.GetMessage("sl71");
                break;
            case -600:
                e = Message.GetMessage("sl70");
                break;
            case -40004:
                e = Message.GetMessage("sl69");
                break;
            case -40005:
                e = Message.GetMessage("sl66"),
                setTimeout(App.handleBack, 2e3);
                break;
            default:
                e = t
            }
            this.ShowMessage(e)
        }
        ,
        m.prototype.ChangeSlots = function() {
            for (var t, e = 0; e < this.totalItems - 3; e++)
                t = Math.floor(11 * Math.random()) + 1,
                this.column1[e].texture = TextureCache[t + (0 < e && !r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(11 * Math.random()) + 1,
                this.column2[e].texture = TextureCache[t + (0 < e && !r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(11 * Math.random()) + 1,
                this.column3[e].texture = TextureCache[t + (0 < e && !r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(11 * Math.random()) + 1,
                this.column4[e].texture = TextureCache[t + (0 < e && !r.Config.useBlur ? "-blur" : "") + ".png"],
                t = Math.floor(11 * Math.random()) + 1,
                this.column5[e].texture = TextureCache[t + (0 < e && !r.Config.useBlur ? "-blur" : "") + ".png"];
            null != r.Config.slotDataMain && 15 === r.Config.slotDataMain.length && (this.column1[this.totalItems - 3].texture = TextureCache[r.Config.slotDataMain[0] + ".png"],
            this.column1[this.totalItems - 2].texture = TextureCache[r.Config.slotDataMain[5] + ".png"],
            this.column1[this.totalItems - 1].texture = TextureCache[r.Config.slotDataMain[10] + ".png"],
            this.column2[this.totalItems - 3].texture = TextureCache[r.Config.slotDataMain[1] + ".png"],
            this.column2[this.totalItems - 2].texture = TextureCache[r.Config.slotDataMain[6] + ".png"],
            this.column2[this.totalItems - 1].texture = TextureCache[r.Config.slotDataMain[11] + ".png"],
            this.column3[this.totalItems - 3].texture = TextureCache[r.Config.slotDataMain[2] + ".png"],
            this.column3[this.totalItems - 2].texture = TextureCache[r.Config.slotDataMain[7] + ".png"],
            this.column3[this.totalItems - 1].texture = TextureCache[r.Config.slotDataMain[12] + ".png"],
            this.column4[this.totalItems - 3].texture = TextureCache[r.Config.slotDataMain[3] + ".png"],
            this.column4[this.totalItems - 2].texture = TextureCache[r.Config.slotDataMain[8] + ".png"],
            this.column4[this.totalItems - 1].texture = TextureCache[r.Config.slotDataMain[13] + ".png"],
            this.column5[this.totalItems - 3].texture = TextureCache[r.Config.slotDataMain[4] + ".png"],
            this.column5[this.totalItems - 2].texture = TextureCache[r.Config.slotDataMain[9] + ".png"],
            this.column5[this.totalItems - 1].texture = TextureCache[r.Config.slotDataMain[14] + ".png"],
            r.Config.slotDataMain = [])
        }
        ,
        m.prototype.ShowLines = function(t) {
            for (var e = 0; e < t; e++)
                this.linesArr[e].visible = !0,
                this.txtLinesArr[e].visible = !0
        }
        ,
        m.prototype.DisableLines = function() {
            for (var t = 0; t < this.linesArr.length; t++)
                this.linesArr[t].visible = !1,
                this.txtLinesArr[t].visible = !1
        }
        ,
        m.prototype.BtnOver = function() {
            void 0 !== TextureCache[this.name.replace("normal", "hover")] && (this.texture = TextureCache[this.name.replace("normal", "hover")])
        }
        ,
        m.prototype.BtnOut = function() {
            this.texture = TextureCache[this.name]
        }
        ,
        m.prototype.BtnDown = function() {
            void 0 !== TextureCache[this.name.replace("normal", "click")] && (this.texture = TextureCache[this.name.replace("normal", "click")])
        }
        ,
        m.prototype.btnHideDown = function(t) {
            r.Config.isAutoSpin ? (window.App.isAuto = !0,
            window.App.isAuto && (sessionStorage.setItem("Auto-" + t.storage, r.Config.roomId + ";" + r.Config.autoSpinCount + ";" + r.Config.isAutoSpin + ";" + r.Config.totalLines),
            window.location.hash = "#",
            window.location.reload())) : t.ShowMessage(Message.GetMessage("sl98"))
        }
        ,
        m.prototype.BtnModeDown = function(t) {
            r.Config.isTry ? (r.Config.isTry = !1,
            t.lblMode.texture = TextureCache["txt-trial-" + r.Config.lang + ".png"],
            t.BeforeSpin(),
            t.txtBalanceTrial.visible = !1,
            t.currentPlayerMain && r.Config.isLogin ? (t.currentPlayer = t.currentPlayerMain,
            t.currentPlayerMain = null,
            t.JoinRoom(t.currentPlayer)) : (t.txtJustWon.text = "0",
            t.txtBetValue.text = "100",
            t.txtTotalBet.text = "100",
            t.txtLines.text = "1",
            t.DisableButtons(t))) : (r.Config.isTry = !0,
            t.xEvent.visible = !1,
            t.trial = new a.trial(t),
            t.lblMode.texture = TextureCache["txt-real-" + r.Config.lang + ".png"],
            t.txtFreeTicket.visible = !1,
            t.txtBalanceTrial.visible = !0)
        }
        ,
        m.prototype.BtnBackDown = function(t) {
            window.location.hash = "#",
            window.location.reload()
        }
        ,
        m.prototype.BtnGuideDown = function(t) {
            t.inxGuide = 1,
            t.payTableContent.texture = TextureCache["dancing-guide-" + r.Config.lang + "-" + t.inxGuide + ".png"],
            t.payTable.visible = !t.payTable.visible
        }
        ,
        m.prototype.BtnRankDown = function(t) {
            t.trans()
        }
        ,
        m.prototype.BtnHistoryDown = function(t) {
            t.his()
        }
        ,
        m.prototype.BtnSoundDown = function(t) {
            r.Config.sound ? (r.Config.sound = !1,
            PIXI.sound.muteAll(),
            t.btnSound.getChildAt(0).texture = TextureCache["icon-sound-off.png"]) : (t.btnSound.getChildAt(0).texture = TextureCache["icon-sound-on.png"],
            r.Config.sound = !0,
            PIXI.sound.unmuteAll())
        }
        ,
        m.prototype.BtnOverRot = function() {
            TweenMax.to(this.children[0], .3, {
                data: "dancing",
                rotation: 4 * Math.PI
            })
        }
        ,
        m.prototype.BtnOutRot = function() {
            TweenMax.to(this.children[0], .3, {
                data: "dancing",
                rotation: 0
            })
        }
        ,
        m.prototype.BtnMinusLineDown = function(t) {
            var e;
            r.Config.isTicket || r.Config.isTry || l.contents.CheckLoginOrInRoom(t) && (e = t.currentPlayer,
            r.Config.totalLines = r.Config.totalLines <= 1 ? 25 : r.Config.totalLines - 1,
            l.contents.UpdateLines(t, r.Config.totalLines),
            l.contents.UpdateTotalBet(t, r.Config.totalLines * e.BetValue),
            t.DisableLines(),
            t.ShowLines(r.Config.totalLines))
        }
        ,
        m.prototype.BtnPlusLineDown = function(t) {
            var e;
            r.Config.isTicket || r.Config.isTry || l.contents.CheckLoginOrInRoom(t) && (e = t.currentPlayer,
            r.Config.totalLines = 25 <= r.Config.totalLines ? 1 : r.Config.totalLines + 1,
            l.contents.UpdateLines(t, r.Config.totalLines),
            l.contents.UpdateTotalBet(t, r.Config.totalLines * e.BetValue),
            t.DisableLines(),
            t.ShowLines(r.Config.totalLines))
        }
        ,
        m.prototype.BtnMinusBetDown = function(t) {
            var e;
            r.Config.isTry || (t.BeforeSpin(),
            l.contents.CheckLoginOrInRoom(t) && ((e = r.Config.roomId - 1) <= 0 && (e = 3),
            t.JoinGame(e)))
        }
        ,
        m.prototype.BtnPlusBetDown = function(t) {
            var e;
            r.Config.isTry || (t.BeforeSpin(),
            l.contents.CheckLoginOrInRoom(t) && (3 < (e = r.Config.roomId + 1) && (e = 1),
            t.JoinGame(e)))
        }
        ,
        m.prototype.BtnAutoDown = function(t) {
            r.Config.autoSpinCount <= 0 ? t.ShowMessage(Message.GetMessage("sl89")) : (r.Config.isAutoSpin = window.App.isAutoDancing = !0,
            $(".multislot-expand").hasClass("active") && !window.App.isAuto && (window.App.isAuto = !0),
            window.App.isAuto && (window.App.showPopupMessage({
                content: Message.GetMessage("sl94").replace("{0}", Message.GetMessage("na11")),
                textDone: "OK"
            }),
            sessionStorage.setItem("Auto-" + t.storage, r.Config.roomId + ";" + r.Config.autoSpinCount + ";" + r.Config.isAutoSpin + ";" + r.Config.totalLines),
            $(".multislot-expand").addClass("active")),
            t.InitSpin(t))
        }
        ,
        m.prototype.BtnQuickDown = function(t) {
            r.Config.isQuick = !r.Config.isQuick,
            t.btnQuick.texture = t.loader.resources.quick.textures["quickspin" + (r.Config.isQuick ? "-active" : "") + ".png"]
        }
        ,
        m.prototype.BtnMinusAutoDown = function(t) {
            var e = r.Config.idx
              , n = r.Config.autoSpinNumber;
            --e < 0 && (e = n.length - 1);
            var i = r.Config.autoSpinNumber[e];
            t.txtAuto.text = s.Util.ParseMoney(i, void 0),
            r.Config.autoSpinCount = i,
            r.Config.idx = e
        }
        ,
        m.prototype.BtnPlusAutoDown = function(t) {
            var e = r.Config.idx;
            ++e > r.Config.autoSpinNumber.length - 1 && (e = 0);
            var n = r.Config.autoSpinNumber[e];
            t.txtAuto.text = s.Util.ParseMoney(n, void 0),
            r.Config.autoSpinCount = n,
            r.Config.idx = e
        }
        ,
        m.prototype.BtnSpinDown = function(t) {
            t.InitSpin(t)
        }
        ,
        m.prototype.BtnStopAutoDown = function(t) {
            l.contents.StopAutoSpin(t)
        }
        ,
        m.prototype.DestroyEffect = function() {
            if (this.effect)
                try {
                    this.effect.destroy({
                        children: !0
                    })
                } catch (t) {}
            this.effectContainer.removeChildren(),
            this.iconsContainer.removeChildren(),
            this.iconsContainer.alpha = 1
        }
        ,
        m.prototype.BeforeSpin = function() {
            l.contents.ClearTimer(),
            this.DestroyEffect(),
            this.destroyMoney(),
            this.DisableLines(),
            this.EnableMainIcons(),
            r.Config.numbShowEachLine = 0,
            r.Config.numberDown = 0,
            l.contents.DisableButtons(this),
            r.Config.isBonus = r.Config.isBigWin = r.Config.isJackpot = r.Config.isCrazy = r.Config.isWinFree = r.Config.isX2 = r.Config.isSuperWin = r.Config.isMegaWin = !1,
            this.boxMoney.visible = !1,
            this.txtMoney.text = "0";
            try {
                r.Config.countMoney.reset(),
                r.Config.countMoneyJw.reset()
            } catch (t) {}
            try {
                this.bigWinSound.stop()
            } catch (t) {}
            try {
                this.jackpotSound.stop()
            } catch (t) {}
            try {
                this.countSound.stop()
            } catch (t) {}
            if (this.isCount)
                try {
                    this.txtJustWon.text = s.Util.ParseMoney(this.currentPlayer.SpinData.PayLinePrizeValue)
                } catch (t) {}
            this.isCount = !1,
            this.boxPopup.visible = !1,
            this.boxPopupWin.visible = !1,
            r.Config.payLines = [],
            r.Config.lineItemsArr = []
        }
        ,
        m.prototype.InitSpin = function(t) {
            var e = t;
            if (!r.Config.isSpin) {
                e.BeforeSpin(),
                1 !== this.hubs.connection.connection.connectionState && t.InitHubs(),
                e.RunDancer(),
                r.Config.countMoney = null,
                r.Config.timeSpin = setTimeout(function() {
                    r.Config.isSpin && (r.Config.isSpin = !1,
                    l.contents.StopAutoSpin(e),
                    l.contents.EnableButtons(e))
                }, 12e3);
                try {
                    r.Config.isTry ? r.Config.isFreeSpin ? (-1 === e.trial.index && (e.trial.index = s.Util.RandomFrom(0, e.trial.dataFree.length - 1, !1)),
                    e.trial.turn++,
                    e.StartSpin(e.trial.dataFree[e.trial.index][e.trial.turn - 1])) : e.StartSpin(e.trial.data[s.Util.RandomFrom(0, e.trial.data.length - 1, !1)]) : r.Config.isTicket && !r.Config.isFreeSpin ? e.hubs.connection.invoke("SpinForTicket", {
                        MerchantID: 0,
                        RoomID: r.Config.roomId,
                        CurrencyID: r.Config.currencyId,
                        TotalLine: r.Config.totalLines
                    }).catch(function() {
                        e.ShowMessage(Message.GetMessage("sl71")),
                        r.Config.isSpin = !1,
                        l.contents.StopAutoSpin(e),
                        l.contents.EnableButtons(e)
                    }) : e.hubs.connection.invoke("Spin", {
                        MerchantID: 0,
                        RoomID: r.Config.roomId,
                        CurrencyID: r.Config.currencyId,
                        TotalLine: r.Config.totalLines
                    }).then(function(t) {
                        t.c < 0 && (e.ShowError(t.c),
                        r.Config.isSpin = !1,
                        l.contents.StopAutoSpin(e),
                        l.contents.EnableButtons(e))
                    }).catch(function() {
                        e.ShowMessage(Message.GetMessage("sl71")),
                        r.Config.isSpin = !1,
                        l.contents.StopAutoSpin(e),
                        l.contents.EnableButtons(e)
                    })
                } catch (t) {
                    e.ShowMessage(Message.GetMessage("sl71")),
                    r.Config.isSpin = !1,
                    l.contents.StopAutoSpin(e),
                    l.contents.EnableButtons(e)
                }
            }
        }
        ,
        m.prototype.StartSpin = function(t) {
            console.log("spin", t);
            var o, e = this;
            r.Config.isSpin || (this.currentPlayer = t,
            r.Config.isSpin = !0,
            e.txtSession.text = "#" + this.currentPlayer.SpinData.SpinID,
            r.Config.isFreeSpin ? (e.free.ChangeSlots(),
            e.free.pinContainer.visible = !0) : e.ChangeSlots(),
            r.Config.slotData = [],
            r.Config.slotData = t.SpinData.SlotsData.split(","),
            s.Util.ClearTimeOut(r.Config.timeSpin),
            e.column1[0].texture = TextureCache[r.Config.slotData[0] + ".png"],
            e.column1[1].texture = TextureCache[r.Config.slotData[5] + ".png"],
            e.column1[2].texture = TextureCache[r.Config.slotData[10] + ".png"],
            e.column2[0].texture = TextureCache[r.Config.slotData[1] + ".png"],
            e.column2[1].texture = TextureCache[r.Config.slotData[6] + ".png"],
            e.column2[2].texture = TextureCache[r.Config.slotData[11] + ".png"],
            e.column3[0].texture = TextureCache[r.Config.slotData[2] + ".png"],
            e.column3[1].texture = TextureCache[r.Config.slotData[7] + ".png"],
            e.column3[2].texture = TextureCache[r.Config.slotData[12] + ".png"],
            e.column4[0].texture = TextureCache[r.Config.slotData[3] + ".png"],
            e.column4[1].texture = TextureCache[r.Config.slotData[8] + ".png"],
            e.column4[2].texture = TextureCache[r.Config.slotData[13] + ".png"],
            e.column5[0].texture = TextureCache[r.Config.slotData[4] + ".png"],
            e.column5[1].texture = TextureCache[r.Config.slotData[9] + ".png"],
            e.column5[2].texture = TextureCache[r.Config.slotData[14] + ".png"],
            r.Config.isQuick && (e.column1[15].texture = TextureCache[r.Config.slotData[0] + ".png"],
            e.column1[16].texture = TextureCache[r.Config.slotData[5] + ".png"],
            e.column1[17].texture = TextureCache[r.Config.slotData[10] + ".png"],
            e.column2[15].texture = TextureCache[r.Config.slotData[1] + ".png"],
            e.column2[16].texture = TextureCache[r.Config.slotData[6] + ".png"],
            e.column2[17].texture = TextureCache[r.Config.slotData[11] + ".png"],
            e.column3[15].texture = TextureCache[r.Config.slotData[2] + ".png"],
            e.column3[16].texture = TextureCache[r.Config.slotData[7] + ".png"],
            e.column3[17].texture = TextureCache[r.Config.slotData[12] + ".png"],
            e.column4[15].texture = TextureCache[r.Config.slotData[3] + ".png"],
            e.column4[16].texture = TextureCache[r.Config.slotData[8] + ".png"],
            e.column4[17].texture = TextureCache[r.Config.slotData[13] + ".png"],
            e.column5[15].texture = TextureCache[r.Config.slotData[4] + ".png"],
            e.column5[16].texture = TextureCache[r.Config.slotData[9] + ".png"],
            e.column5[17].texture = TextureCache[r.Config.slotData[14] + ".png"]),
            r.Config.itemsWin = [],
            r.Config.linesWin = [],
            r.Config.itemsWinAr = [],
            r.Config.isFreeSpin || this.CreateArrayslotWild(),
            0 < (null != e.currentPlayer.SpinData.PrizesData ? Object.keys(e.currentPlayer.SpinData.PrizesData).length : 0) && (o = e.currentPlayer.SpinData.PrizesData.split(";"),
            $.each(e.currentPlayer.SpinData.PositionData.split(";"), function(t, e) {
                var n = $.map(e.split(","), function(t) {
                    return parseInt(t)
                });
                r.Config.itemsWinAr.push(n);
                var i = parseInt(o[t].split(",")[1]);
                r.Config.linesWin.push(parseInt(o[t].split(",")[0])),
                $.each(n, function(t, e) {
                    $.inArray(e, r.Config.itemsWin) < 0 && r.Config.itemsWin.push(e)
                }),
                r.Config.isJackpot || 1 !== i || (r.Config.isJackpot = !0),
                !r.Config.isFreeSpin && 0 <= $.inArray(i, [28, 29, 30]) && (r.Config.isWinFree = !0),
                !r.Config.isBonus && 0 <= $.inArray(i, [25, 26, 27]) && (r.Config.isBonus = !0)
            })),
            t.SpinData.IsJackpot && (r.Config.isJackpot = !0),
            null !== this.currentPlayer.AccumulateGame && 5 === this.currentPlayer.AccumulateGame.Items && this.currentPlayer.SpinData.IsAccumulate && null != this.currentPlayer.AccumulateGame.AccumulateItemsData && (r.Config.isCrazy = !0),
            t.SlotInfo.CanPlayBonusGame && null !== t.BonusGame.BonusItemsData && 0 < t.BonusGame.BonusItemsData.length && (r.Config.isBonus = !0),
            t.SlotInfo.IsFreeSpin && (r.Config.isWinFree = !0),
            (r.Config.isFreeSpin || r.Config.isTicket) && (e.currentPlayer.SpinData.TotalBetValue = r.Config.totalLines * e.currentPlayer.BetValue),
            e.currentPlayer.SpinData.PayLinePrizeValue >= 100 * e.currentPlayer.BetValue && (r.Config.isBigWin = !0),
            r.Config.isFreeSpin || l.contents.UpdateAutoSpin(e),
            e.Spin())
        }
        ,
        m.prototype.CreateArrayslotWild = function() {
            if (this.iconsContainer.y = 442,
            r.Config.slotWild = [],
            0 < r.Config.slotData.length && $.each(r.Config.slotData, function(t, e) {
                1 === parseInt(e) && (0 <= $.inArray(t, [0, 5, 10]) && $.inArray(0, r.Config.slotWild) < 0 ? r.Config.slotWild.push(0) : 0 <= $.inArray(t, [1, 6, 11]) && $.inArray(1, r.Config.slotWild) < 0 ? r.Config.slotWild.push(1) : 0 <= $.inArray(t, [2, 7, 12]) && $.inArray(2, r.Config.slotWild) < 0 ? r.Config.slotWild.push(2) : 0 <= $.inArray(t, [3, 8, 13]) && $.inArray(3, r.Config.slotWild) < 0 ? r.Config.slotWild.push(3) : 0 <= $.inArray(t, [4, 9, 14]) && $.inArray(4, r.Config.slotWild) < 0 && r.Config.slotWild.push(4))
            }),
            this.girlWild = [],
            this.light = [],
            this.lightBg = [],
            0 < r.Config.slotWild.length)
                for (var t = 0; t < r.Config.slotWild.length; t++)
                    this.lightBg[t] = new AnimatedSprite(this.framesLightBg),
                    this.lightBg[t].position.set(this.lightBgPos[r.Config.slotWild[t]][0], this.lightBgPos[r.Config.slotWild[t]][1]),
                    this.lightBg[t].scale.set(1, 1.1),
                    this.lightBg[t].anchor.set(.5),
                    this.light[t] = new AnimatedSprite(this.framesLight),
                    this.light[t].position.set(this.lightPos[r.Config.slotWild[t]][0], this.lightPos[r.Config.slotWild[t]][1]),
                    this.light[t].scale.set(.9, 1.02),
                    this.light[t].anchor.set(.5),
                    this.girlWild[t] = new AnimatedSprite(this.framesGirlWild),
                    this.girlWild[t].position.set(this.girlWildPos[r.Config.slotWild[t]][0], this.girlWildPos[r.Config.slotWild[t]][1]),
                    this.girlWild[t].anchor.set(.5),
                    this.iconsContainer.addChild(this.lightBg[t], this.light[t], this.girlWild[t])
        }
        ,
        m.prototype.RunDancer = function() {
            this.dancer.gotoAndPlay(0)
        }
        ,
        m.prototype.ChangeWild = function() {
            var n = this;
            $.each(r.Config.slotWild, function(t, e) {
                switch (e) {
                case 1:
                    n.column2[n.totalItems - 3].texture = TextureCache["1.png"],
                    n.column2[n.totalItems - 2].texture = TextureCache["1.png"],
                    n.column2[n.totalItems - 1].texture = TextureCache["1.png"],
                    r.Config.slotData[1] = r.Config.slotData[6] = r.Config.slotData[11] = 1;
                    break;
                case 2:
                    n.column3[n.totalItems - 3].texture = TextureCache["1.png"],
                    n.column3[n.totalItems - 2].texture = TextureCache["1.png"],
                    n.column3[n.totalItems - 1].texture = TextureCache["1.png"],
                    r.Config.slotData[2] = r.Config.slotData[7] = r.Config.slotData[12] = 1;
                    break;
                case 3:
                    n.column4[n.totalItems - 3].texture = TextureCache["1.png"],
                    n.column4[n.totalItems - 2].texture = TextureCache["1.png"],
                    n.column4[n.totalItems - 1].texture = TextureCache["1.png"],
                    r.Config.slotData[3] = r.Config.slotData[8] = r.Config.slotData[13] = 1
                }
            })
        }
        ,
        m.prototype.ShowGirl = function() {
            this.ChangeWild(),
            l.contents.ClearTimer();
            for (var t = this, e = 0; e < r.Config.slotWild.length; e++)
                t.lightBg[e].animationSpeed = t.animationSpeed,
                t.lightBg[e].loop = !0,
                t.lightBg[e].play(),
                t.light[e].animationSpeed = t.animationSpeed,
                t.light[e].loop = !0,
                t.light[e].play(),
                t.girlWild[e].animationSpeed = t.animationSpeed,
                t.girlWild[e].loop = !1,
                t.girlWild[e].play(),
                e === r.Config.slotWild.length - 1 && (t.girlWild[e].onComplete = function() {
                    t.DestroyEffect()
                }
                );
            if (r.Config.sound)
                try {
                    PIXI.sound.play("expandSound")
                } catch (t) {}
            r.Config.timeSpin = setTimeout(function() {
                TweenMax.to(t.iconsContainer, .5, {
                    data: "dancing",
                    alpha: 0
                }),
                r.Config.timeShowWin = setTimeout(function() {
                    t.ShowWin(t)
                }, 600)
            }, 1e3)
        }
        ,
        m.prototype.Spin = function() {
            var t = this;
            if (r.Config.isQuick ? (t.timeTween = .6,
            t.timeBack = .1,
            t.delayFirst = .15,
            t.spinTo = -t.startHeight - 2130) : (t.timeTween = 1.3,
            t.timeBack = .3,
            t.spinTo = -t.startHeight,
            t.delayFirst = .3),
            l.contents.ClearTimer(),
            r.Config.sound)
                try {
                    PIXI.sound.play("spinSound")
                } catch (t) {}
            TweenMax.to(t.containerColumn1, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 0,
                data: "dancing",
                ease: Power0.easeNone,
                onComplete: function() {
                    TweenMax.to(t.containerColumn1, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "dancing",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.containerColumn1.y = 0,
                            t.column1[t.totalItems - 3].texture = t.column1[0].texture,
                            t.column1[t.totalItems - 3].inx = t.column1[0].inx,
                            t.column1[t.totalItems - 2].texture = t.column1[1].texture,
                            t.column1[t.totalItems - 2].inx = t.column1[1].inx,
                            t.column1[t.totalItems - 1].texture = t.column1[2].texture,
                            t.column1[t.totalItems - 1].inx = t.column1[2].inx
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn2, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: t.delayFirst,
                data: "dancing",
                ease: Power0.easeNone,
                onComplete: function() {
                    TweenMax.to(t.containerColumn2, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "dancing",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column2[t.totalItems - 3].texture = t.column2[0].texture,
                            t.column2[t.totalItems - 3].inx = t.column2[0].inx,
                            t.column2[t.totalItems - 2].texture = t.column2[1].texture,
                            t.column2[t.totalItems - 2].inx = t.column2[1].inx,
                            t.column2[t.totalItems - 1].texture = t.column2[2].texture,
                            t.column2[t.totalItems - 1].inx = t.column2[2].inx,
                            t.containerColumn2.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn3, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 2 * t.delayFirst,
                data: "dancing",
                ease: Power0.easeNone,
                onComplete: function() {
                    TweenMax.to(t.containerColumn3, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "dancing",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column3[t.totalItems - 3].texture = t.column3[0].texture,
                            t.column3[t.totalItems - 3].inx = t.column3[0].inx,
                            t.column3[t.totalItems - 2].texture = t.column3[1].texture,
                            t.column3[t.totalItems - 2].inx = t.column3[1].inx,
                            t.column3[t.totalItems - 1].texture = t.column3[2].texture,
                            t.column3[t.totalItems - 1].inx = t.column3[2].inx,
                            t.containerColumn3.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn4, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 3 * t.delayFirst,
                data: "dancing",
                ease: Power0.easeNone,
                onComplete: function() {
                    TweenMax.to(t.containerColumn4, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "dancing",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column4[t.totalItems - 3].texture = t.column4[0].texture,
                            t.column4[t.totalItems - 3].inx = t.column4[0].inx,
                            t.column4[t.totalItems - 2].texture = t.column4[1].texture,
                            t.column4[t.totalItems - 2].inx = t.column4[1].inx,
                            t.column4[t.totalItems - 1].texture = t.column4[2].texture,
                            t.column4[t.totalItems - 1].inx = t.column4[2].inx,
                            t.containerColumn4.y = 0
                        }
                    })
                }
            }),
            TweenMax.to(t.containerColumn5, t.timeTween, {
                y: t.spinTo + t.pointNext,
                delay: 4 * t.delayFirst,
                data: "dancing",
                ease: Power0.easeNone,
                onComplete: function() {
                    TweenMax.to(t.containerColumn5, t.timeBack, {
                        y: t.spinTo + t.pointBack,
                        delay: t.timeDelay,
                        data: "dancing",
                        ease: Back.easeOut,
                        onComplete: function() {
                            t.column5[t.totalItems - 3].texture = t.column5[0].texture,
                            t.column5[t.totalItems - 3].inx = t.column5[0].inx,
                            t.column5[t.totalItems - 2].texture = t.column5[1].texture,
                            t.column5[t.totalItems - 2].inx = t.column5[1].inx,
                            t.column5[t.totalItems - 1].texture = t.column5[2].texture,
                            t.column5[t.totalItems - 1].inx = t.column5[2].inx,
                            t.containerColumn5.y = 0,
                            t.CompleteSpin()
                        }
                    })
                }
            })
        }
        ,
        m.prototype.CompleteSpin = function() {
            var t = this;
            r.Config.isSpin = !1,
            !r.Config.isFreeSpin && 0 < r.Config.slotWild.length ? TweenMax.to(this.iconsContainer, .5, {
                data: "dancing",
                y: 0,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    t.ShowGirl()
                }
            }) : t.ShowWin(t)
        }
        ,
        m.prototype.CheckAutoSpin = function() {
            if (r.Config.isAutoSpin) {
                var t = this;
                return r.Config.timeSpin = setTimeout(function() {
                    t.InitSpin(t)
                }, 1500),
                !0
            }
            return r.Config.isAutoSpin = !1,
            r.Config.autoSpinMode = 0,
            !1
        }
        ,
        m.prototype.ShowWin = function(t) {
            var e = this;
            if (e.iconsContainer.y = 0,
            r.Config.isAutoSpin && l.contents.EnableButton(e.btnQuick),
            r.Config.isTry || 1 !== r.Config.roomId || l.contents.GetTicket(e),
            0 === r.Config.numberDown && 15 === r.Config.slotData.length && (r.Config.isTry ? (this.trial.balance += (r.Config.isFreeSpin ? 0 : -2e5) + this.currentPlayer.SpinData.PayLinePrizeValue,
            e.txtBalanceTrial.text = Message.GetMessage("sl84") + ": " + s.Util.ParseMoney(this.trial.balance, void 0),
            l.contents.CountJackPot(e.txtJackpot, !0, !1, this.trial.jackPot + 2500, 1),
            this.trial.jackPot += 2500) : (this.balance = e.currentPlayer.Account.GoldBalance,
            l.contents.UpdateBalance(e, e.currentPlayer.Account.GoldBalance))),
            e.currentPlayer.SpinData.IsAccumulate && !r.Config.isTry && !r.Config.isFreeSpin)
                return c.accu.UpdateAccumulation(e),
                5 === e.currentPlayer.AccumulateGame.Items ? void (r.Config.timeSpin = setTimeout(function() {
                    c.accu.Effect(e)
                }, 500)) : void setTimeout(function() {
                    return e.NormalWinOrJackPotOrBigWin(e)
                }, 600);
            r.Config.isFreeSpin && t.free && (t.free.pinContainer.visible = !1,
            t.free.PinWild()),
            e.NormalWinOrJackPotOrBigWin(e)
        }
        ,
        m.prototype.destroyMoney = function() {
            try {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "money-fall-dancing" === t[e].data && t[e].kill();
                for (var n = 0; n < this.moneyArr.length; n++)
                    this.moneyArr[n].destroy({
                        children: !0
                    })
            } catch (t) {}
            this.moneyArr = []
        }
        ,
        m.prototype.random = function(t, e) {
            var n;
            return null == e && (e = t,
            t = 0),
            e < t && (n = t,
            t = e,
            e = n),
            t + (e - t) * Math.random()
        }
        ,
        m.prototype.effectMoney = function() {
            this.moneyArr = [];
            for (var t = 0; t < this.total; t++)
                this.moneyArr.push(new AnimatedSprite(this.framesCoins)),
                this.moneyArr[t].anchor.set(.5),
                this.moneyArr[t].animationSpeed = .3,
                this.moneyArr[t].scale.set(this.random(.5, 1.4)),
                this.moneyContainer.addChild(this.moneyArr[t]),
                this.moneyArr[t].play(),
                this.moneyArr[t].position.set(this.random(0, this.size[0]), this.random(-200, -150)),
                TweenMax.to(this.moneyArr[t], this.random(1, 8), {
                    data: "money-fall-dancing",
                    y: this.size[1] + 200,
                    ease: Linear.easeNone,
                    repeat: -1,
                    delay: -15
                })
        }
        ,
        m.prototype.Effect = function(t) {
            var e;
            switch (t) {
            case 1:
                e = TextureCache["txt-jackpot-en.png"];
                break;
            case 2:
                e = null != TextureCache["txt-bigwin-" + r.Config.lang + ".png"] ? TextureCache["txt-bigwin-" + r.Config.lang + ".png"] : TextureCache["txt-bigwin-en.png"];
                break;
            case 3:
                e = TextureCache["txt-bonus.png"];
                break;
            case 4:
                e = null != TextureCache["txt-freespin-" + r.Config.lang + ".png"] ? TextureCache["txt-freespin-" + r.Config.lang + ".png"] : TextureCache["txt-free-en.png"]
            }
            var n = new Sprite(e);
            n.anchor.set(.5),
            n.position.set(0, 0),
            n.scale.set(.01),
            this.effectContainer.addChild(n),
            3 !== t && 4 !== t && this.effectMoney(),
            TweenMax.to(n.scale, .5, {
                x: 1,
                y: 1,
                data: "dancing"
            }),
            TweenMax.to(n.scale, .5, {
                x: 1.04,
                y: 1.04,
                repeat: 7,
                yoyo: !0,
                delay: .5,
                yoyoEase: Power1.easeInOut,
                data: "dancing"
            })
        }
        ,
        m.prototype.NormalWinOrJackPotOrBigWin = function(t) {
            var e = t;
            if (e.DestroyEffect(),
            e.EnableMainIcons(),
            r.Config.countMoney = null,
            r.Config.countMoneyJw = null,
            0 < e.currentPlayer.SpinData.PayLinePrizeValue) {
                e.boxMoney.visible = !0;
                for (var n = 0; n < r.Config.linesWin.length; n++)
                    r.Config.linesWin[n] - 1 < 26 && (e.linesArr[r.Config.linesWin[n] - 1].visible = !0,
                    e.txtLinesArr[r.Config.linesWin[n] - 1].visible = !0);
                if (0 === r.Config.numberDown && e.showInLobby(e.currentPlayer.SpinData.PayLinePrizeValue),
                r.Config.isJackpot) {
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                    if (e.Effect(1),
                    r.Config.sound)
                        try {
                            e.jackpotSound.play()
                        } catch (t) {}
                    l.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {}),
                    0 === r.Config.numberDown && (e.isCount = !0,
                    l.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 8, function() {
                        0 !== r.Config.numberDown || r.Config.isBonus || r.Config.isFreeSpin || r.Config.isWinFree || r.Config.isAutoSpin || l.contents.EnableButtons(e)
                    })),
                    r.Config.isAutoSpin && l.contents.StopAutoSpin(e),
                    r.Config.timeBonusOrFree = setTimeout(function() {
                        return e.FreeOrBonus(e)
                    }, 16e3)
                } else if (r.Config.isBigWin) {
                    try {
                        e.bgSound.pause()
                    } catch (t) {}
                    var i = 4 * e.currentPlayer.SpinData.PayLinePrizeValue / (100 * e.currentPlayer.BetValue);
                    if (r.Config.sound)
                        try {
                            e.countSound.play()
                        } catch (t) {}
                    l.contents.CountMoney(e.txtMoney, !0, !1, 0, 100 * e.currentPlayer.BetValue, 0, 4, function() {
                        if (r.Config.sound)
                            try {
                                PIXI.sound.play("countEndSound")
                            } catch (t) {}
                        0 !== r.Config.numberDown || r.Config.isBonus || r.Config.isFreeSpin || r.Config.isWinFree || r.Config.isAutoSpin || l.contents.EnableButtons(e),
                        e.Effect(2),
                        l.contents.CountMoney(e.txtMoney, !0, !1, 100 * e.currentPlayer.BetValue, e.currentPlayer.SpinData.PayLinePrizeValue, 0, i - 4, function() {
                            try {
                                e.countSound.stop()
                            } catch (t) {}
                            if (r.Config.sound)
                                try {
                                    e.bigWinSound.play()
                                } catch (t) {}
                        })
                    }),
                    0 === r.Config.numberDown && (l.contents.CountMoney(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, i, function() {}, !0),
                    e.isCount = !0),
                    r.Config.timeBonusOrFree = setTimeout(function() {
                        return e.FreeOrBonus(e)
                    }, 1e3 * (8 + i))
                } else
                    l.contents.CountNumber(e.txtMoney, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1),
                    0 === r.Config.numberDown && l.contents.CountNumber(e.txtJustWon, !0, !1, 0, e.currentPlayer.SpinData.PayLinePrizeValue, 0, 1, function() {}),
                    r.Config.timeBonusOrFree = setTimeout(function() {
                        return e.FreeOrBonus(e)
                    }, 1500)
            } else
                r.Config.timeBonusOrFree = setTimeout(function() {
                    return e.FreeOrBonus(e)
                }, 0),
                e.txtJustWon.text = s.Util.ParseMoney(e.currentPlayer.SpinData.PayLinePrizeValue, void 0)
        }
        ,
        m.prototype.FreeOrBonus = function(t) {
            var e = this;
            t.DestroyEffect(),
            t.destroyMoney(),
            t.DisableLines();
            try {
                r.Config.countMoney.reset(),
                r.Config.countMoneyJw.reset()
            } catch (t) {}
            e.isCount = !1;
            try {
                e.bigWinSound.stop()
            } catch (t) {}
            try {
                e.jackpotSound.stop()
            } catch (t) {}
            try {
                e.countSound.stop()
            } catch (t) {}
            if (r.Config.sound)
                try {
                    e.bgSound.resume()
                } catch (t) {}
            if (0 === r.Config.numberDown && (e.txtJustWon.text = s.Util.ParseMoney(e.currentPlayer.SpinData.PayLinePrizeValue, void 0)),
            t.boxMoney.visible = !1,
            r.Config.numberDown++,
            r.Config.isFreeSpin && (l.contents.UpdateFreeSpin(e),
            l.contents.UpdateTotalPrizeFreeSpin(e)),
            r.Config.isBonus)
                e.SetupBonus();
            else if (r.Config.isWinFree)
                e.SetupFreeSpin();
            else {
                if (r.Config.isFreeSpin)
                    return void (0 === r.Config.freeSpinCount ? r.Config.timeSpin = setTimeout(function() {
                        return e.free.FinishFree()
                    }, 1 === r.Config.autoSpinMode ? 500 : 1500) : 1 !== r.Config.autoSpinMode && (r.Config.timeSpin = setTimeout(function() {
                        return e.InitSpin(e)
                    }, 500)));
                e.CheckAutoSpin() || (l.contents.EnableButtons(e),
                0 < e.currentPlayer.SpinData.PayLinePrizeValue && e.ShowEachLine())
            }
        }
        ,
        m.prototype.SetupBonus = function() {
            this.DestroyEffect(),
            this.Effect(3);
            try {
                t.bgSound.pause()
            } catch (t) {}
            if (r.Config.sound)
                try {
                    PIXI.sound.play("pingSound")
                } catch (t) {}
            setTimeout(function() {
                if (r.Config.sound)
                    try {
                        PIXI.sound.play("bonusSound")
                    } catch (t) {}
            }, 2e3),
            this.bonus = new o.bonus(this);
            var t = this;
            r.Config.timeSpin = setTimeout(function() {
                t.bonus.Init()
            }, 5e3)
        }
        ,
        m.prototype.SetupFreeSpin = function() {
            if (r.Config.sound)
                try {
                    PIXI.sound.play("bonusSound")
                } catch (t) {}
            var t = this.currentPlayer.SlotInfo.FreeSpins;
            if (r.Config.isFreeSpin || (r.Config.freeSpinCount = r.Config.totalFreeSpin = r.Config.totalFreePrize = 0),
            r.Config.isFreeSpin = !0,
            r.Config.totalFreeSpin = 8,
            r.Config.freeSpinCount = t,
            r.Config.slotData && 15 === r.Config.slotData.length) {
                r.Config.slotDataMain = r.Config.slotData;
                for (var e = 0, n = 0; n < r.Config.slotData.length; n++)
                    2 === parseInt(r.Config.slotData[n]) && e++;
                this.currentPlayer.SpinData.FreeSpinMultiplier = this.currentPlayer.SlotInfo.FreeSpinMultiplier = 3 === e ? 1 : 4 === e ? 2 : 3
            }
            this.Effect(4),
            this.boxFree.visible = !0,
            this.txtFreeTurn.text = r.Config.freeSpinCount + " " + Message.GetMessage("dc20") + " x " + (this.currentPlayer.SlotsData && this.currentPlayer.SpinData.FreeSpinMultiplier ? this.currentPlayer.SpinData.FreeSpinMultiplier : this.currentPlayer.SlotInfo.FreeSpinMultiplier),
            l.contents.UpdateTotalPrizeFreeSpin(this);
            var i = this;
            i.free = new p.free(i),
            r.Config.timeSpin = setTimeout(function() {
                i.InitSpin(i)
            }, 3e3)
        }
        ,
        m.prototype.FinishFreeSpin = function(t) {
            var e = t;
            e.boxPopupWin.getChildAt(3).text = Message.GetMessage("sl82").replace("{0}", r.Config.totalFreeSpin),
            e.boxPopupWin.visible = !0,
            l.contents.CountNumber(e.boxPopupWin.getChildAt(2), !0, !1, 0, r.Config.totalFreePrize, 0, 1, function() {}),
            e.txtJustWon.text = s.Util.ParseMoney(r.Config.totalFreePrize, void 0),
            r.Config.totalFreeSpin = r.Config.totalFreePrize = r.Config.freeSpinCount = 0,
            e.ChangeSlots(),
            r.Config.isFreeSpin = !1,
            e.boxFree.visible = !1,
            r.Config.isTry && (e.trial.index = -1,
            e.trial.turn = 0),
            r.Config.timeSpin = setTimeout(function() {
                e.boxPopupWin.visible = !1,
                e.CheckAutoSpin() || l.contents.EnableButtons(e)
            }, 3500)
        }
        ,
        m.prototype.FinishBonus = function(t) {}
        ,
        m.prototype.ShowEachLine = function() {
            var t, e, n = this, i = r.Config.linesWin.length;
            r.Config.isSpin || i <= 0 ? s.Util.ClearTimeInterval(r.Config.timeIntEachLine) : (e = t = 0,
            r.Config.numbShowEachLine++,
            r.Config.timeIntEachLine = setInterval(function() {
                if (r.Config.isSpin || i <= 0)
                    s.Util.ClearTimeInterval(r.Config.timeIntEachLine);
                else if (n.DestroyEffect(),
                n.DisableLines(),
                n.EnableMainIcons(),
                n.EachLineEffect(r.Config.itemsWinAr[t], r.Config.linesWin[t], e),
                e++,
                ++t === i) {
                    if (s.Util.ClearTimeInterval(r.Config.timeIntEachLine),
                    2 === r.Config.numbShowEachLine)
                        return s.Util.ClearTimeInterval(r.Config.timeIntEachLine),
                        void (r.Config.timeSpin = setTimeout(function() {
                            n.DestroyEffect(),
                            n.DisableLines(),
                            n.EnableMainIcons()
                        }, 1100));
                    r.Config.timeOutEachLine = setTimeout(function() {
                        n.NormalWinOrJackPotOrBigWin(n)
                    }, 1e3)
                }
            }, 1e3))
        }
        ,
        m.prototype.EachLineEffect = function(t, e, n) {
            if (!(t.length <= 0)) {
                for (var i = 0; i < t.length; i++) {
                    this.itemsMainGame[parseInt(t[i]) - 1].visible = !1;
                    var o = new AnimatedSprite(this.framesIconAnimation[parseInt(r.Config.slotData[t[i] - 1]) - 1]);
                    o.position.set(this.itemsMainGame[parseInt(t[i]) - 1].x, this.itemsMainGame[parseInt(t[i]) - 1].y),
                    o.anchor.set(.5),
                    this.iconsContainer.addChild(o),
                    o.animationSpeed = 1,
                    o.loop = !1,
                    o.play()
                }
                e <= 25 && (this.linesArr[e - 1].visible = !0,
                this.txtLinesArr[e - 1].visible = !0)
            }
        }
        ,
        m.prototype.EnableMainIcons = function() {
            for (var t = 0; t < this.itemsMainGame.length; t++)
                this.itemsMainGame[t].visible = !0
        }
        ,
        m.prototype.Delete = function() {
            l.contents.DeleteTimer(),
            l.contents.DeleteTweens();
            try {
                PIXI.sound.stopAll(),
                PIXI.sound.removeAll()
            } catch (t) {}
            window.removeEventListener("resize", this.resizeFunc);
            try {
                this.loader.destroy()
            } catch (t) {}
            this.bonus && delete this.bonus,
            r.Config.isAutoSpin = r.Config.isSpin = r.Config.inRoom = r.Config.isBonus = r.Config.isWinFree = r.Config.isFreeSpin = !1,
            r.Config.isLogin = !1,
            l.contents.DeleteTimer(),
            r.Config.countJp = null;
            try {
                this.loader && delete this.loader
            } catch (t) {}
            try {
                document.URL.indexOf("slot") < 0 ? this.application.destroy(!0) : this.application.destroy(!1)
            } catch (t) {}
            try {
                this.hubs.connection.stop()
            } catch (t) {}
        }
        ,
        m.prototype.StopAuto = function() {
            this.isAuto = !1,
            $("#rolling-" + this.storage).removeClass("active"),
            $("#list-jp-icon-" + r.Config.gameId + "-play").length && $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
            $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).length && $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).removeClass("button-playing").addClass("button-play"),
            $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().removeClass("playing"),
            $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId + "-playing").html(""),
            $("#list-jp-icon-" + r.Config.gameId + "-playing").html("");
            try {
                this.silent.setSession()
            } catch (t) {}
            try {
                this.silent && window.App.gameSlots && "dancing" === window.App.gameSlots.game.storage && window.App.gameSlots.game.StopAuto(),
                l.contents.StopAutoSpin(this)
            } catch (t) {}
        }
        ,
        m.prototype.StartAuto = function() {
            var t = this;
            if (0 < this.silent.autoSpin) {
                this.isAuto = !0,
                $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
                $("#list-jp-icon-" + r.Config.gameId + "-play").length && $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).length && $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().addClass("playing");
                try {
                    if (this.silent && window.App.gameSlots && "dancing" === window.App.gameSlots.game.storage)
                        return void window.App.gameSlots.game.BtnAutoDown()
                } catch (t) {}
                return this.silent.setSession(),
                setTimeout(function() {
                    return t.silent.initSpin(t.silent)
                }, 500),
                !0
            }
            return this.silent.removeSession(),
            !1
        }
        ,
        m.prototype.CheckAuto = function() {
            return this.isAuto
        }
        ,
        m.prototype.SetSilent = function() {
            r.Config.isAutoSpin && 0 < r.Config.autoSpinCount && sessionStorage.setItem("Auto-" + this.storage, r.Config.roomId + ";" + r.Config.autoSpinCount + ";true;" + r.Config.totalLines)
        }
        ,
        m.prototype.RestartAuto = function(t, e, n) {
            var i = this;
            this.isAuto = !0,
            $("#rolling-" + this.storage).length && $("#rolling-" + this.storage).addClass("active"),
            $("#list-jp-icon-" + r.Config.gameId + "-play").length && $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            this.silent.autoSpin = n,
            t != r.Config.roomId ? (this.line = e,
            r.Config.roomId = t,
            this.silent.setSession(),
            1 === this.hubs.connection.connection.connectionState ? this.JoinGame(r.Config.roomId) : this.InitHubs()) : (r.Config.totalLines = e,
            1 === this.hubs.connection.connection.connectionState ? setTimeout(function() {
                return i.silent.initSpin(i.silent)
            }, 200) : this.InitHubs()),
            $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).length && $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().addClass("playing")
        }
        ,
        m.prototype.getRoomId = function() {
            return console.log("Config.roomId", r.Config.roomId),
            r.Config.roomId
        }
        ,
        m.prototype.showInLobby = function(t) {
            var e;
            r.Config.isAutoSpin && ($("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + r.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + r.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#rolling-" + this.storage).hasClass("active") || $("#rolling-" + this.storage).addClass("active"),
            $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().hasClass("playing") || $("#ljp-" + r.Config.gameId + "-room-" + r.Config.roomId).parent().addClass("playing"),
            $("#mn-lobby-rolling-dancing").length && ($("#mn-lobby-rolling-dancing").append('<span class="rolling-win">+' + s.Util.ParseMoney(t) + "</span>"),
            TweenMax.to($("#mn-lobby-rolling-dancing .rolling-win"), 2, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })),
            (e = $("#list-jp-icon-" + r.Config.gameId + "-room-" + r.Config.roomId)).length && (e.parent().append('<span class="win active">+' + s.Util.ParseMoney(t) + "</span>"),
            TweenMax.to(e.parent().find("span.win"), 1, {
                css: {
                    opacity: "0",
                    top: "0px"
                }
            })))
        }
        ,
        m.prototype.InitNotSilent = function(t) {
            this.isSilent = !1,
            this.size = t.size,
            this.target = t.target,
            this.loader = new PIXI.loaders.Loader,
            this.his = t.getHistory,
            this.trans = t.getStatistic,
            r.Config.ready = !1,
            this.GetAutoSpin(),
            this.CreateCanvas()
        }
        ,
        m.prototype.CreateCanvas = function() {
            PIXI.utils.skipHello(),
            this.application = new PIXI.Application(this.size[0],this.size[1],{
                transparent: !0,
                antialias: !0,
                view: this.target
            });
            var t = this;
            this.application.ticker.add(function() {
                t.Update(t)
            }),
            this.InitContainer();
            for (var e = 0; e < this.assets.length; e++)
                "" !== this.assets[e].id ? this.loader.add(this.assets[e].id, this.assets[e].src) : this.loader.add(this.assets[e].src);
            this.loader.onProgress.add(function() {
                return t.Loading(t)
            }),
            this.loader.load(function() {
                t.isLoad = !0,
                t.InitGame(),
                t.CheckGame(t),
                $("#divLoading").hide()
            })
        }
        ,
        m);
        function m(t) {
            this.assets = [{
                id: "BonusCrazy",
                src: "/slots/dancing/json/BonusCrazy.json"
            }, {
                id: "items",
                src: "/slots/dancing/json/items.json"
            }, {
                id: "itemsAnimation",
                src: "/slots/dancing/json/items-animation.json"
            }, {
                id: "freesAnimation",
                src: "/slots/dancing/json/frees-animation.json"
            }, {
                id: "girl",
                src: "/slots/dancing/json/girl.json"
            }, {
                id: "light",
                src: "/slots/dancing/json/light.json"
            }, {
                id: "lightBg",
                src: "/slots/dancing/json/lightBg.json"
            }, {
                id: "starLight",
                src: "/slots/dancing/json/star-light.json"
            }, {
                id: "assets",
                src: "/slots/dancing/json/assets.json"
            }, {
                id: "guide0",
                src: "/slots/dancing/json/guide-0.json"
            }, {
                id: "guide1",
                src: "/slots/dancing/json/guide-1.json"
            }, {
                id: "guide2",
                src: "/slots/dancing/json/guide-2.json"
            }, {
                id: "guide3",
                src: "/slots/dancing/json/guide-3.json"
            }, {
                id: "event",
                src: "/slots/dancing/json/event.json"
            }, {
                id: "quick",
                src: "/slots/dancing/json/quick.json"
            }, {
                id: "fxJackpot",
                src: "/slots/dancing/json/fxJackpot.json"
            }, {
                id: "hide",
                src: "/slots/dancing/json/hide.json"
            }, {
                id: "bgDancing",
                src: "/slots/dancing/assets/images/bg.jpg"
            }, {
                id: "lines",
                src: "/slots/dancing/assets/images/lines.png"
            }, {
                id: "girl-1",
                src: "/slots/dancing/assets/images/dancer-1.png"
            }, {
                id: "girl-2",
                src: "/slots/dancing/assets/images/dancer-2.png"
            }, {
                id: "girl-3",
                src: "/slots/dancing/assets/images/dancer-3.png"
            }, {
                id: "coinDancing",
                src: "/slots/dancing/assets/images/coin.png"
            }, {
                id: "dotInActive",
                src: "/slots/dancing/assets/images/dot-in-active.png"
            }, {
                id: "dotActive",
                src: "/slots/dancing/assets/images/dot-active.png"
            }, {
                id: "bgSound_1",
                src: "/slots/dancing/assets/sounds/bg1.mp3"
            }, {
                id: "bgSound_2",
                src: "/slots/dancing/assets/sounds/bg2.mp3"
            }, {
                id: "bgSound_3",
                src: "/slots/dancing/assets/sounds/bg3.mp3"
            }, {
                id: "bgSound_4",
                src: "/slots/dancing/assets/sounds/bg4.mp3"
            }, {
                id: "spinSound",
                src: "/slots/dancing/assets/sounds/spin.mp3"
            }, {
                id: "bonusSound",
                src: "/slots/dancing/assets/sounds/bonus.mp3"
            }, {
                id: "crazySound",
                src: "/slots/dancing/assets/sounds/crazy.mp3"
            }, {
                id: "jackpotSound",
                src: "/slots/dancing/assets/sounds/jackpot.mp3"
            }, {
                id: "freespinSound",
                src: "/slots/dancing/assets/sounds/freespins.mp3"
            }, {
                id: "bigwinSound",
                src: "/slots/dancing/assets/sounds/thanglon.mp3"
            }, {
                id: "expandSound",
                src: "/slots/dancing/assets/sounds/expandwild.mp3"
            }, {
                id: "ballonSound",
                src: "/slots/dancing/assets/sounds/ballon.mp3"
            }, {
                id: "pingSound",
                src: "/slots/dancing/assets/sounds/ping.mp3"
            }, {
                id: "countSound",
                src: "/slots/dancing/assets/sounds/count.mp3"
            }, {
                id: "countEndSound",
                src: "/slots/dancing/assets/sounds/count_end.mp3"
            }, {
                id: "popupSound",
                src: "/slots/dancing/assets/sounds/popup.mp3"
            }],
            this.isLoad = !1,
            this.column1 = {},
            this.column2 = {},
            this.column3 = {},
            this.column4 = {},
            this.column5 = {},
            this.ready = !1,
            this.totalItems = 30,
            this.timeTween = 1.2,
            this.isCount = !1,
            this.isSilent = !1,
            this.isAuto = !1,
            this.line = null,
            this.arrBox = [],
            this.crazyPos = [[475, -140], [475, -70], [475, 0], [475, 70], [475, 140]],
            this.crazyChar = ["c", "r", "a", "z", "y"],
            this.linesPos = [[-50, 1], [-50, -133], [-50, 168.5], [46, -7], [56, 0], [54, -71], [-54, 61], [-50, -10], [-49, 1], [51, 12], [-50, -2], [53, -68], [56, 82], [-56, -61], [-50, 75], [49, -71], [-48, 51], [48, -20], [50, 7], [-53, -26], [-54, 30], [-58, -1], [50, 12], [47, 17], [49, 14]],
            this.dotLinesPos = [[-392, 1], [-392, -133], [-392, 168.5], [392, -166.5], [392, 135], [392, -66], [-392, -32.5], [-392, -166.5], [-392, 135], [392, 34.5], [-392, 34.5], [392, -133], [392, 101.5], [-392, -99.5], [-392, 101.5], [392, 1], [-392, -66], [392, -200], [392, 68], [-392, -200], [-392, 202], [-392, 68], [392, -32.5], [392, -99.5], [392, 168.5]],
            this.balance = 0,
            this.autoClientArr = [10, 50, 200, 1e3, 5e3],
            this.inxGuide = 1,
            this.pointNext = -122,
            this.timeBack = .2,
            this.pointBack = -142,
            this.girlWildPos = [[0, 0], [-150, 0], [0, 0], [150, 0], [0, 0]],
            this.lightBgPos = [[0, 0], [-150, 0], [0, 0], [150, 0], [0, 0]],
            this.lightPos = [[0, 0], [-150, 5], [0, 5], [150, 5], [0, 0]],
            this.animationSpeed = 1,
            this.spinTo = 0,
            this.delayFirst = 0,
            this.total = 100,
            this.timerCount = 1,
            this.token = t.token,
            r.Config.hubUrl = t.hubUrl,
            r.Config.apiUrl = t.apiUrl,
            r.Config.api = t.api,
            r.Config.lang = Language.GetLanguageCode(),
            t.currencyID ? r.Config.currencyId = t.currencyID : r.Config.currencyId = "undefined" != typeof App ? App.account.currencyID : 1,
            t.storage && (this.storage = t.storage),
            t.isSilent && (this.isSilent = t.isSilent),
            this.isSilent ? (this.ready = !0,
            r.Config.ready = !0,
            this.isAuto = !0,
            this.ResetTweenTab(),
            this.silent = new h.silent(this)) : (this.size = t.size,
            this.target = t.target,
            this.loader = new PIXI.loaders.Loader,
            this.his = t.getHistory,
            this.trans = t.getStatistic,
            this.ready = !1,
            r.Config.ready = !1,
            this.GetAutoSpin(),
            this.Init())
        }
        e.games = g
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var i = n(2)
          , o = n(4)
          , a = (s.prototype.Init = function() {
            var e = this;
            this.connection = (new i.HubConnectionBuilder).withUrl(this.url, {
                accessTokenFactory: function() {
                    return e.token
                },
                skipNegotiation: !0,
                transport: i.HttpTransportType.WebSockets
            }).build(),
            this.connection.serverTimeoutInMilliseconds = 1e5,
            this.connection.start().then(function() {
                o.Config.isLogin = !0,
                console.log("connected"),
                e.connection.invoke("PlayNow", {
                    RoomID: o.Config.roomId,
                    CurrencyID: o.Config.currencyId
                })
            }).catch(function(t) {
                return console.error(t)
            }),
            this.connection.on("JoinGame", function(t) {
                e.game.isSilent ? e.game.silent.joinRoom(t) : e.game.JoinRoom(t)
            }),
            this.connection.on("ResultSpin", function(t) {
                e.game.isSilent ? e.game.silent.startSpin(t) : e.game.StartSpin(t)
            }),
            this.connection.on("MessageError", function(t) {
                e.game.isSilent || e.game.ShowError(t)
            }),
            this.connection.on("ResultBonusGame", function(t) {
                e.game.isSilent || e.game.bonus.ResultBonus(t)
            }),
            this.connection.on("resultAccumulateGame", function(t) {
                e.game.isSilent ? e.game.silent.finishCrazy(t) : e.game.crazy.ResultAccumulateGame(t)
            }),
            this.connection.on("ResultX2Game", function(t) {
                e.game.isSilent || e.game.x2.ShowResult(t)
            }),
            this.connection.on("UpdateJackpot", function(t) {
                e.game.isSilent || e.game.UpdateJackpot(t)
            })
        }
        ,
        s);
        function s(t, e, n) {
            this.url = t,
            this.token = e,
            this.game = n,
            this.Init()
        }
        e.default = a
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.bonus = void 0;
        var s = n(0)
          , r = n(4)
          , a = n(12);
        n(1);
        var i = (o.prototype.Init = function() {
            if (a.contents.ClearTimer(),
            this.game.DestroyEffect(),
            this.game.DisableLines(),
            this.currentStep !== this.game.currentPlayer.BonusGame.TotalTurn - 1) {
                this.CreateBonus(),
                this.CreateBallon(),
                this.ballonContainer.y = 400;
                var t = this;
                if (r.Config.sound)
                    try {
                        this.game.bgSound.resume()
                    } catch (t) {}
                TweenMax.to(this.ballonContainer, 1.5, {
                    data: "dancing",
                    y: 0,
                    delay: 0,
                    ease: Power0.easeNone,
                    onComplete: function() {
                        t.EffectBallons(t),
                        null != t.selectedItems && 0 < t.selectedItems.length && t.SetBallonSelected(t)
                    }
                }),
                0 !== this.currentStep || r.Config.isTry ? this.txtTimer.visible = !1 : r.Config.timeBonus = setTimeout(function() {
                    return t.CountBonus(t)
                }, 1e3)
            } else
                this.CreateMultiplier(this)
        }
        ,
        o.prototype.CountBonus = function(t) {
            var e = t;
            if (s.Util.ClearTimeOut(r.Config.timeBonus),
            e.timer--,
            t.txtTimer.text = (t.timer < 10 ? "0" : "") + t.timer,
            e.timer <= 0) {
                if (t.txtTimer.visible = !1,
                r.Config.isTry)
                    return void e.FinishBonus(e);
                e.game.hubs.connection.invoke("PlayBonusGameAll", {
                    RoomID: r.Config.roomId,
                    CurrencyID: r.Config.currencyId
                }).then(function(t) {
                    0 <= t.c && e.FinishBonus(e)
                })
            } else
                r.Config.timeBonus = setTimeout(function() {
                    e.CountBonus(e)
                }, 1e3)
        }
        ,
        o.prototype.CreateBonus = function() {
            var t = new Sprite(TextureCache["bonus-1-bg.png"]);
            t.position.set(0, 0),
            t.anchor.set(.5),
            t.scale.set(.997, .99);
            var e = new Sprite(TextureCache["text-ballon-" + r.Config.lang + ".png"]);
            e.position.set(0, -190),
            e.anchor.set(.5);
            var n = new PIXI.Text(Message.GetMessage("sl5").toUpperCase(),{
                fontFamily: "KT",
                fontSize: 18,
                fill: "yellow",
                align: "center"
            });
            n.anchor.set(1, .5),
            n.position.set(220, -190),
            this.txtTimer = new PIXI.Text("00:15",{
                fontFamily: "KT",
                fontSize: 20,
                fill: "yellow",
                align: "center"
            }),
            this.txtTimer.anchor.set(0, .5),
            this.txtTimer.position.set(-350, -190),
            this.txtMoney = new PIXI.Text(s.Util.ParseMoney(this.game.currentPlayer.BonusGame.AwardedPrizeValue, void 0),{
                fontFamily: "KT",
                fontSize: 25,
                fill: "white",
                align: "center"
            }),
            this.txtMoney.anchor.set(0, .5),
            this.txtMoney.position.set(230, -190),
            t.addChild(e, n, this.txtTimer, this.txtMoney),
            this.bonusContainer.addChild(t)
        }
        ,
        o.prototype.CreateBallon = function() {
            for (var t = this, e = 11; 0 <= e; e--)
                t.ballonArr[e] = new Sprite(TextureCache[t.ballonLocation[e][0] + ".png"]),
                t.ballonArr[e].position.set(t.ballonLocation[e][1], t.ballonLocation[e][2]),
                t.ballonArr[e].name = e,
                t.ballonArr[e].anchor.set(.5),
                t.ballonContainer.addChild(t.ballonArr[e]),
                t.ballonArr[e].interactive = !0,
                t.ballonArr[e].buttonMode = !0,
                t.ballonArr[e].on("pointerdown", t.BallonDown.bind(t.ballonArr[e], t))
        }
        ,
        o.prototype.EffectBallons = function(t) {
            var e = t
              , n = [];
            if (null != e.selectedItems && 0 < e.selectedItems.length)
                for (var i = 0; i < e.selectedItems.length; i++)
                    n.push(e.selectedItems[i] - 1);
            $.each(e.ballonArr, function(t) {
                $.inArray(t, n) < 0 && (TweenMax.to(e.ballonArr[t], .55, {
                    data: "dancing",
                    y: e.ballonArr[t] - 3,
                    yoyo: !0,
                    repeat: -1,
                    delay: 0,
                    ease: Sine.easeInOut,
                    onComplete: function() {}
                }),
                TweenMax.to(e.ballonArr[t].scale, .55, {
                    data: "dancing",
                    x: .98,
                    y: 1.01,
                    delay: 0,
                    yoyo: !0,
                    repeat: -1,
                    ease: Sine.easeInOut,
                    onComplete: function() {}
                }))
            })
        }
        ,
        o.prototype.SetBallonSelected = function(t) {
            var i = t;
            $.each(i.selectedItems, function(t, e) {
                try {
                    i.ballonArr[e - 1].interactive = !1,
                    i.ballonArr[e - 1].buttonMode = !1,
                    i.ballonArr[e - 1].alpha = .6;
                    var n = new PIXI.Text(s.Util.ParseMoney(i.game.currentPlayer.BonusGame.BonusItemsData[t].PrizeValue, void 0),{
                        fontFamily: "KT",
                        fontSize: 18,
                        fill: "white",
                        align: "center"
                    });
                    n.position.set(i.ballonArr[e - 1].x, i.ballonArr[e - 1].y + 30),
                    n.anchor.set(.5),
                    i.bonusContainer.addChild(n)
                } catch (t) {}
            })
        }
        ,
        o.prototype.DisableBallons = function() {
            for (var t = 0; t < 12; t++)
                this.ballonArr[t].interactive = !1,
                this.ballonArr[t].buttonMode = !1
        }
        ,
        o.prototype.EnableBallons = function() {
            for (var t = 0; t < 12; t++)
                -1 === $.inArray(t + 1, this.selectedItems) && (this.ballonArr[t].interactive = !0,
                this.ballonArr[t].buttonMode = !0)
        }
        ,
        o.prototype.BallonDown = function(t) {
            var e = t;
            s.Util.ClearTimeOut(r.Config.timeBonus),
            e.DisableBallons(),
            e.txtTimer.visible = !1,
            e.currentPos = parseInt(this.name),
            e.currentStep >= e.game.currentPlayer.BonusGame.TotalTurn - 1 || (r.Config.isTry ? e.PlayStep() : e.game.hubs.connection.invoke("PlayBonusGame", {
                RoomID: r.Config.roomId,
                CurrencyID: r.Config.currencyId,
                ItemID: e.currentPos + 1
            }).then(function(t) {
                console.log(t),
                t.c < 0 && e.EnableBallons()
            }).catch(function(t) {
                console.log(t),
                e.EnableBallons()
            }))
        }
        ,
        o.prototype.ResultBonus = function(t) {
            console.log(t),
            t.CurrentTurn < t.TotalTurn && 0 !== t.CurrentTurn ? this.PlayStep(t) : 0 < t.BonusPrizeID && (this.bonusPrizeId = t.BonusPrizeID)
        }
        ,
        o.prototype.PlayStep = function(t) {
            var e = this;
            if (e.ballonArr[e.currentPos].visible = !1,
            r.Config.sound)
                try {
                    PIXI.sound.play("ballonSound")
                } catch (t) {}
            e.ballonEffect = new AnimatedSprite(e.framesBallonEffect),
            e.ballonEffect.anchor.set(.5),
            e.ballonEffect.position.set(e.ballonArr[e.currentPos].x, e.ballonArr[e.currentPos].y),
            e.ballonEffect.animationSpeed = .8,
            e.ballonContainer.addChild(e.ballonEffect),
            e.ballonEffect.loop = !1,
            e.ballonEffect.play(),
            e.ballonEffect.onComplete = function() {
                e.ballonEffect.destroy(),
                e.ballonEffect = null,
                e.currentStep++,
                null == e.selectedItems && (e.selectedItems = []),
                e.selectedItems.push(e.currentPos + 1);
                var t = new PIXI.Text(s.Util.ParseMoney(e.game.currentPlayer.BonusGame.BonusItemsData[e.currentStep - 1].PrizeValue, void 0),{
                    fontFamily: "KT",
                    fontSize: 18,
                    fill: "white",
                    align: "center"
                });
                t.position.set(e.ballonArr[e.currentPos].x, e.ballonArr[e.currentPos].y + 30),
                t.anchor.set(.5),
                e.ballonContainer.addChild(t),
                TweenMax.to(t, .3, {
                    data: "dancing",
                    y: e.txtMoney.y,
                    x: e.txtMoney.x,
                    delay: 0,
                    ease: Power0.easeNone,
                    onComplete: function() {
                        t.visible = !1,
                        a.contents.CountNumber(e.txtMoney, !0, !1, e.GetMoneyBonus(e.currentStep - 1), e.GetMoneyBonus(e.currentStep), 0, .5),
                        console.log(e.currentStep, e.game.currentPlayer.BonusGame.TotalTurn - 1),
                        e.currentStep === e.game.currentPlayer.BonusGame.TotalTurn - 1 ? setTimeout(function() {
                            return e.CreateMultiplier(e)
                        }, 2e3) : e.EnableBallons()
                    }
                })
            }
        }
        ,
        o.prototype.GetMoneyBonus = function(t) {
            var e = 0;
            if (null != this.game.currentPlayer.BonusGame)
                for (var n = 0; n < t; n++)
                    e += this.game.currentPlayer.BonusGame.BonusItemsData[n].PrizeValue;
            return e
        }
        ,
        o.prototype.CreateMultiplier = function(t) {
            var e = t;
            try {
                e.bonusContainer.removeChildren(),
                e.ballonContainer.removeChildren()
            } catch (t) {}
            e.hatArr = [],
            e.starArr = [];
            var n = new Sprite(TextureCache["bonus-2-bg.png"]);
            n.anchor.set(.5),
            n.position.set(0, 0),
            n.scale.set(.997, .99);
            var i = new Sprite(TextureCache["text-hat-" + r.Config.lang + ".png"]);
            i.position.set(0, -190),
            i.anchor.set(.5),
            n.addChild(i),
            e.bonusContainer.addChild(n);
            for (var o = 2; 0 <= o; o--)
                e.hatArr[o] = new Sprite(TextureCache[e.hatLocation[o][0] + ".png"]),
                e.hatArr[o].position.set(e.hatLocation[o][1], e.hatLocation[o][2]),
                e.hatArr[o].anchor.set(.5),
                e.hatArr[o].inx = o,
                e.bonusContainer.addChild(e.hatArr[o]),
                e.hatArr[o].interactive = !0,
                e.hatArr[o].buttonMode = !0,
                e.hatArr[o].on("pointerover", e.hatOver.bind(e.hatArr[o], e)).on("pointerout", e.hatOut.bind(e.hatArr[o], e)).on("pointerdown", e.hatDown.bind(e.hatArr[o], e));
            var a = new Graphics;
            a.beginFill(0, .6),
            a.drawRect(-110, 146, 220, 50),
            e.txtMoney = new PIXI.Text(s.Util.ParseMoney(e.GetMoneyBonus(e.game.currentPlayer.BonusGame.TotalTurn - 1), void 0),{
                fontFamily: "KT",
                fontSize: 40,
                fill: "white",
                align: "center"
            }),
            e.txtMoney.position.set(0, 173),
            e.txtMoney.anchor.set(.5),
            e.bonusContainer.addChild(a, e.txtMoney),
            e.CreateStar(),
            e.TweenStar()
        }
        ,
        o.prototype.CreateStar = function() {
            for (var t = this, e = 0; e < 3; e++)
                t.starArr.push(new Sprite(TextureCache["star" + e + ".png"])),
                t.starArr[t.starArr.length - 1].position.set(0 === e ? 100 : 1 === e ? 30 : 170, 0 === e ? -70 : 1 === e ? -40 : -20),
                t.ballonContainer.addChild(t.starArr[t.starArr.length - 1])
        }
        ,
        o.prototype.TweenStar = function() {
            for (var t = 0; t < 3; t++)
                TweenMax.to(this.starArr[t], 0 === t ? .3 : 2 === t ? .4 : .5, {
                    data: "dancing",
                    alpha: 0,
                    yoyo: !0,
                    repeat: -1,
                    delay: 0,
                    ease: Power0.easeNone,
                    onComplete: function() {}
                });
            this.ballonContainer.visible = !1
        }
        ,
        o.prototype.hatOver = function(t) {
            var e = this.inx;
            t.ballonContainer.position.set(0 === e ? -400 : 1 === e ? -150 : 100, -40),
            t.ballonContainer.visible = !0
        }
        ,
        o.prototype.hatOut = function(t) {
            t.ballonContainer.visible = !1
        }
        ,
        o.prototype.hatDown = function(t) {
            var e = t;
            e.ballonContainer.visible = !1,
            e.currentPos = this.inx,
            e.DisabeHats(),
            r.Config.isTry ? e.hatResult() : e.game.hubs.connection.invoke("PlayBonusGame", {
                RoomID: r.Config.roomId,
                CurrencyID: r.Config.currencyId,
                ItemID: 0
            }).then(function(t) {
                console.log(t),
                t.c < 0 ? e.EnableHats() : e.hatResult()
            }).catch(function(t) {
                console.log(t),
                e.EnableHats()
            })
        }
        ,
        o.prototype.DisabeHats = function() {
            for (var t = 0; t < 3; t++)
                this.hatArr[t].interactive = !1,
                this.hatArr[t].buttonMode = !1
        }
        ,
        o.prototype.EnableHats = function() {
            for (var t = 0; t < 3; t++)
                this.hatArr[t].interactive = !0,
                this.hatArr[t].buttonMode = !0
        }
        ,
        o.prototype.GetRandom = function(t, e) {
            var n = new Array
              , i = [1, 2, 3, 4, 5];
            switch (e) {
            case 25:
                i = [3, 4, 5];
                break;
            case 26:
                i = [2, 3, 4];
                break;
            case 27:
                i = [1, 2, 3]
            }
            for (var o = 0; o < i.length; o++)
                if (i[o] === t) {
                    i.splice(o, 1);
                    break
                }
            var a = Math.round(Math.random())
              , s = i[1 - a]
              , r = i[a];
            return n.push(s),
            n.push(r),
            n
        }
        ,
        o.prototype.SetPrizeId = function(t) {
            0 < t.BonusPrizeID && (this.bonusPrizeId = t.BonusPrizeID),
            0 !== t.CurrentTurn && 0 !== t.TotalTurn && (t.CurrentTurn,
            t.TotalTurn)
        }
        ,
        o.prototype.hatResult = function() {
            var i, o = this, t = new PIXI.Text("X" + o.game.currentPlayer.BonusGame.BonusItemsData[o.game.currentPlayer.BonusGame.TotalTurn - 1].Multiplier,{
                fontFamily: "KT",
                fontSize: 80,
                fill: ["yellow", "white", "orange"],
                align: "center"
            });
            t.anchor.set(.5),
            t.position.set(o.hatArr[o.currentPos].x, o.hatArr[o.currentPos].y),
            o.bonusContainer.addChildAt(t, 1),
            TweenMax.to(t, .8, {
                data: "dancing",
                y: -80,
                delay: 0,
                ease: Power0.easeNone,
                onComplete: function() {}
            }),
            a.contents.CountNumber(o.txtMoney, !0, !1, o.GetMoneyBonus(o.game.currentPlayer.BonusGame.TotalTurn - 1), o.game.currentPlayer.BonusGame.BonusItemsData[o.game.currentPlayer.BonusGame.TotalTurn - 1].PrizeValue, 0, .5),
            setTimeout(function() {
                var t, e, n = o.GetRandom(o.game.currentPlayer.BonusGame.BonusItemsData[o.game.currentPlayer.BonusGame.TotalTurn - 1].Multiplier, o.bonusPrizeId);
                for (i = 0; i < 3; i++)
                    i !== o.currentPos && (t = n[0],
                    n.splice(0, 1),
                    (e = new PIXI.Text("X" + t,{
                        fontFamily: "KT",
                        fontSize: 80,
                        fill: ["yellow", "white", "orange"],
                        align: "center"
                    })).anchor.set(.5),
                    e.position.set(o.hatArr[i].x, o.hatArr[i].y),
                    e.alpha = .6,
                    o.bonusContainer.addChildAt(e, 1),
                    o.hatArr[i].alpha = .6,
                    TweenMax.to(e, .8, {
                        data: "dancing",
                        y: -80,
                        delay: 0,
                        ease: Power0.easeNone,
                        onComplete: function() {}
                    }));
                setTimeout(function() {
                    return o.FinishBonus(o)
                }, 1500)
            }, 2e3)
        }
        ,
        o.prototype.FinishBonus = function(t) {
            var e = t
              , n = e.game.currentPlayer.BonusGame.BonusItemsData[e.game.currentPlayer.BonusGame.TotalTurn - 1].PrizeValue;
            r.Config.isTry ? (e.game.trial.balance += n,
            e.game.txtBalanceTrial.text = Message.GetMessage("sl84") + ": " + s.Util.ParseMoney(e.game.trial.balance, void 0)) : (e.game.balance += n,
            a.contents.UpdateBalance(e.game, e.game.balance)),
            e.game.txtJustWon.text = s.Util.ParseMoney(n, void 0),
            r.Config.isBonus = !1,
            e.game.boxPopupWin.getChildAt(3).text = Message.GetMessage("sl83"),
            e.game.boxPopupWin.visible = !0,
            e.game.boxPopupWin.getChildAt(2).text = s.Util.ParseMoney(n, void 0);
            try {
                e.ballonContainer.destroy({
                    children: !0
                })
            } catch (t) {}
            try {
                e.bonusContainer.destroy({
                    children: !0
                })
            } catch (t) {}
            if (r.Config.sound)
                try {
                    e.game.bgSound.pause()
                } catch (t) {}
            if (r.Config.sound)
                try {
                    PIXI.sound.play("popupSound")
                } catch (t) {}
            r.Config.isTry ? e.game.currentPlayer.BonusGame.SelectedItemIDs = [] : e.game.currentPlayer.BonusGame.BonusItemsData = null,
            setTimeout(function() {
                if (r.Config.sound)
                    try {
                        PIXI.sound.stop("popupSound")
                    } catch (t) {}
                if (r.Config.sound)
                    try {
                        e.game.bgSound.resume()
                    } catch (t) {}
                e.game.CheckAutoSpin() || (a.contents.EnableButtons(e.game),
                e.game.currentPlayer.SpinData && 0 < e.game.currentPlayer.SpinData.PayLinePrizeValue && e.game.ShowEachLine()),
                delete e.game.bonus
            }, 2500)
        }
        ,
        o);
        function o(t) {
            this.selectedItems = [],
            this.currentStep = 0,
            this.bonusPrizeId = 0,
            this.ballonArr = {},
            this.framesBallonEffect = [],
            this.ballonEffect = null,
            this.currentPos = -1,
            this.ballonLocation = [["ballon_green", -274, -98], ["ballon_yellow", -114, -98], ["ballon_orange", 50, -98], ["ballon_blue", 222, -98], ["ballon_green", -188, 24], ["ballon_yellow", -40, 24], ["ballon_orange", 138, 24], ["ballon_blue", 300, 24], ["ballon_green", -274, 140], ["ballon_yellow", -114, 140], ["ballon_orange", 50, 140], ["ballon_blue", 222, 140]],
            this.hatLocation = [["hat_yellow", -240, 40], ["hat_purple", 0, 40], ["hat_green", 240, 40]],
            this.multiLocation = [[125, 250], [360, 250], [590, 250]],
            this.timer = 15,
            this.game = t,
            a.contents.DisableButtons(t),
            this.currentStep = this.game.currentPlayer.BonusGame.CurrentTurn,
            this.selectedItems = this.game.currentPlayer.BonusGame.SelectedItemIDs,
            this.ballonArr = {},
            this.bonusContainer = new Container,
            this.ballonContainer = new Container,
            this.ballonContainer.position.set(0, 0),
            t.columnContainer.addChild(this.bonusContainer, this.ballonContainer),
            this.framesBallonEffect = [],
            this.timer = 15;
            for (var e = 1; e < 17; e++)
                this.framesBallonEffect.push(TextureCache["ballon_touch_" + e + ".png"])
        }
        e.bonus = i
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.trial = void 0;
        function i(t) {
            this.player = {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 0,
                    LastPrizeValue: 2880300,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 0
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: null,
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 56970395,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            },
            this.balance = 5e7,
            this.jackPot = 5e7,
            this.data = [{
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 5015e4,
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 15,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 1
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 13,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0,
                    BonusItemsData: [{
                        Step: 1,
                        PrizeID: 209,
                        Multiplier: 1.2,
                        PrizeValue: 3e5
                    }, {
                        Step: 2,
                        PrizeID: 206,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 3,
                        PrizeID: 208,
                        Multiplier: .9,
                        PrizeValue: 225e3
                    }, {
                        Step: 4,
                        PrizeID: 208,
                        Multiplier: .9,
                        PrizeValue: 225e3
                    }, {
                        Step: 5,
                        PrizeID: 206,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 6,
                        PrizeID: 206,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 7,
                        PrizeID: 208,
                        Multiplier: .9,
                        PrizeValue: 225e3
                    }, {
                        Step: 8,
                        PrizeID: 209,
                        Multiplier: 1.2,
                        PrizeValue: 3e5
                    }, {
                        Step: 9,
                        PrizeID: 207,
                        Multiplier: .6,
                        PrizeValue: 15e4
                    }, {
                        Step: 10,
                        PrizeID: 208,
                        Multiplier: .9,
                        PrizeValue: 225e3
                    }, {
                        Step: 11,
                        PrizeID: 206,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 12,
                        PrizeID: 206,
                        Multiplier: .3,
                        PrizeValue: 75e3
                    }, {
                        Step: 13,
                        PrizeID: 202,
                        Multiplier: 2,
                        PrizeValue: 405e4
                    }]
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 3,
                    SpinID: 323,
                    SlotsData: "3,3,3,8,9,5,6,7,8,9,5,6,7,8,9",
                    PrizesData: "2000,27,0",
                    PositionData: "1,2,3",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 5015e4,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "1,209,1.20,300000;2,206,0.30,75000;3,208,0.90,225000;4,208,0.90,225000;5,206,0.30,75000;6,206,0.30,75000;7,208,0.90,225000;8,209,1.20,300000;9,207,0.60,150000;10,208,0.90,225000;11,206,0.30,75000;12,206,0.30,75000;13,202,2,4050000",
                    PayLinePrizeValue: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 58293868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50037500,
                    LastPrizeValue: 33e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 0,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 0
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 854,
                    SlotsData: "10,4,4,5,10,11,11,11,7,11,4,7,7,10,5",
                    PrizesData: "1,24,30000;21,3,300000",
                    PositionData: "6,7,8;11,2,3",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50037500,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 33e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "suzuki",
                    Avatar: null,
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 56360395,
                    CoinBalance: 107e5,
                    CurrencyID: 1
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50152500,
                    LastPrizeValue: 33e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 15,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 1
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 324,
                    SlotsData: "10,1,10,9,8,3,9,5,11,2,11,10,11,1,9",
                    PrizesData: "2,20,60000;3,23,50000;14,20,60000;15,23,50000;24,20,60000;25,23,50000",
                    PositionData: "1,2,3,4;11,12,13,14;1,7,3,9;11,7,13,9;1,12,3,14;11,2,13,4",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50152500,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 33e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 64448868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50162500,
                    LastPrizeValue: 127e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 15,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 2
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 328,
                    SlotsData: "9,11,9,11,8,2,1,1,1,2,10,10,11,9,9",
                    PrizesData: "2,17,70000;3,20,60000;4,17,70000;5,20,60000;8,16,300000;9,20,60000;12,17,70000;13,20,60000;14,17,70000;15,20,60000;18,17,70000;19,20,60000;20,17,70000;21,20,60000;24,17,70000;25,20,60000",
                    PositionData: "1,2,3,4;11,12,13,14;1,7,13,9;11,7,3,9;1,2,8,14,15;11,12,8,4;1,7,8,9;11,7,8,9;1,7,3,9;11,7,13,9;1,2,13,4;11,12,3,14;1,12,13,14;11,2,3,4;1,12,3,14;11,2,13,4",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50162500,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 127e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 64768868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 5018e4,
                    LastPrizeValue: 72e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 15,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 4
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !0,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 335,
                    SlotsData: "9,10,8,4,11,10,1,10,8,4,5,9,5,3,9",
                    PrizesData: "1,21,40000;3,6,200000;10,21,40000;11,21,40000;15,6,200000;25,6,200000",
                    PositionData: "6,7,8;11,12,13;6,12,8;6,2,8;11,7,13;11,2,13",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 5018e4,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 72e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 64038868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50182500,
                    LastPrizeValue: 27e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 15,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 4
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 336,
                    SlotsData: "11,9,5,5,4,9,1,11,7,9,11,11,9,10,11",
                    PrizesData: "7,18,50000;8,24,30000;9,24,30000;12,24,30000;13,24,30000;17,18,50000;23,18,50000",
                    PositionData: "6,12,13;1,2,8;11,12,8;1,7,8;11,7,8;6,7,13;6,2,13",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50182500,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 27e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 64058868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50185e3,
                    LastPrizeValue: 24e5,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 15,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 4
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 337,
                    SlotsData: "9,10,9,9,11,10,1,1,4,5,5,9,11,8,10",
                    PrizesData: "1,21,40000;2,17,70000;3,6,200000;4,18,50000;5,6,200000;6,21,40000;7,21,40000;8,18,50000;9,6,200000;10,21,40000;11,21,40000;12,18,50000;13,6,200000;14,18,50000;15,6,200000;16,21,40000;17,21,40000;18,17,70000;19,6,200000;20,18,50000;21,6,200000;22,21,40000;23,21,40000;24,18,50000;25,6,200000",
                    PositionData: "6,7,8;1,2,3,4;11,12,13;1,7,13;11,7,3;6,2,3;6,12,13;1,2,8;11,12,8;6,12,8;6,2,8;1,7,8;11,7,8;1,7,3;11,7,13;6,7,3;6,7,13;1,2,13,4;11,12,3;1,12,13;11,2,3;6,12,3;6,2,13;1,12,3;11,2,13",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50185e3,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 24e5
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 66208868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 5019e4,
                    LastPrizeValue: 28e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 15,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 4
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 339,
                    SlotsData: "9,9,8,4,9,8,1,9,10,11,11,11,4,7,8",
                    PrizesData: "6,15,60000;8,18,50000;12,18,50000;16,15,60000;22,15,60000",
                    PositionData: "6,2,3;1,2,8;1,7,8;6,7,3;6,12,3",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 5019e4,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 28e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 65988868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50195e3,
                    LastPrizeValue: 75e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: null,
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 341,
                    SlotsData: "8,1,9,2,11,11,9,1,6,8,4,10,11,4,2",
                    PrizesData: "1,24,30000;2,15,60000;4,15,60000;6,24,30000;7,24,30000;8,15,60000;10,24,30000;11,24,30000;12,15,60000;14,15,60000;16,24,30000;17,24,30000;18,15,60000;20,15,60000;22,24,30000;23,24,30000;24,15,60000",
                    PositionData: "6,7,8;1,2,3;1,7,13;6,2,3;6,12,13;1,2,8;6,12,8;6,2,8;1,7,8;1,7,3;6,7,3;6,7,13;1,2,13;1,12,13;6,12,3;6,2,13;1,12,3",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50195e3,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 75e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 66476868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50197500,
                    LastPrizeValue: 49e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: null,
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 342,
                    SlotsData: "5,11,10,4,2,11,1,5,8,9,9,10,11,3,10",
                    PrizesData: "7,24,30000;8,6,200000;12,6,200000;17,24,30000;23,24,30000",
                    PositionData: "6,12,13;1,2,8;1,7,8;6,7,13;6,2,13",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50197500,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 49e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 66716868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50207500,
                    LastPrizeValue: 21e5,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 16,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 1
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 346,
                    SlotsData: "11,1,1,11,10,6,9,10,2,11,10,10,11,6,5",
                    PrizesData: "1,9,100000;2,23,50000;3,21,40000;4,24,30000;5,21,40000;6,9,100000;7,8,300000;8,24,30000;9,21,40000;10,9,100000;11,8,300000;12,24,30000;13,21,40000;14,24,30000;15,21,40000;16,9,100000;17,9,100000;18,23,50000;19,21,40000;20,24,30000;21,21,40000;22,8,300000;23,9,100000;24,24,30000;25,21,40000",
                    PositionData: "6,7,8;1,2,3,4;11,12,13;1,7,13;11,7,3;6,2,3;6,12,13,14;1,2,8;11,12,8;6,12,8;6,2,8,14;1,7,8;11,7,8;1,7,3;11,7,13;6,7,3;6,7,13;1,2,13,4;11,12,3;1,12,13;11,2,3;6,12,3,14;6,2,13;1,12,3;11,2,13",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50207500,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 21e5
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 67916868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 5021e4,
                    LastPrizeValue: 233e4,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 16,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 1
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 347,
                    SlotsData: "5,11,11,10,4,11,1,9,11,9,9,10,1,2,11",
                    PrizesData: "1,23,50000;2,6,200000;3,18,50000;4,6,200000;5,18,50000;6,24,30000;7,24,30000;8,6,200000;9,18,50000;10,24,30000;11,24,30000;12,6,200000;13,18,50000;14,6,200000;15,18,50000;16,23,50000;17,23,50000;18,6,200000;19,18,50000;20,6,200000;21,18,50000;22,24,30000;23,24,30000;24,6,200000;25,18,50000",
                    PositionData: "6,7,8,9;1,2,3;11,12,13;1,7,13;11,7,3;6,2,3;6,12,13;1,2,8;11,12,8;6,12,8;6,2,8;1,7,8;11,7,8;1,7,3;11,7,13;6,7,3,9;6,7,13,9;1,2,13;11,12,3;1,12,13;11,2,3;6,12,3;6,2,13;1,12,3;11,2,13",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 5021e4,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 233e4
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 69996868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 100,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50212500,
                    LastPrizeValue: 0,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 405e4
                },
                AccumulateGame: {
                    GameSessionID: 16,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 1
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 13,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0,
                    BonusItemsData: null
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 3,
                    SpinID: 348,
                    SlotsData: "3,10,9,3,11,11,11,4,9,8,7,1,10,11,3",
                    PrizesData: "2000,27,0",
                    PositionData: "1,4,15",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50212500,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "1,206,0.30,75000;2,206,0.30,75000;3,208,0.90,225000;4,206,0.30,75000;5,206,0.30,75000;6,209,1.20,300000;7,206,0.30,75000;8,206,0.30,75000;9,207,0.60,150000;10,208,0.90,225000;11,206,0.30,75000;12,206,0.30,75000;13,201,1,1500000",
                    PayLinePrizeValue: 0
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 69746868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }, {
                SlotInfo: {
                    GameStatus: 1,
                    BetValue: 1e4,
                    LastLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    FreeSpins: 0,
                    Jackpot: 50235e3,
                    LastPrizeValue: 6e5,
                    ResponseStatus: 0,
                    IsFreeSpin: !1,
                    IsLastFreeSpin: !1,
                    CountFreeSpinWin: 0,
                    TotalFreeSpinPrizeValue: 0
                },
                AccumulateGame: {
                    GameSessionID: 16,
                    CurrentStep: 0,
                    TotalStep: 10,
                    PrizeID: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    StepValue: 0,
                    TotalStepValue: 0,
                    IsCrazy: 0,
                    TotalPrizeValue: 0,
                    Items: 4
                },
                BonusGame: {
                    ItemID: 0,
                    BonusSpinID: 0,
                    BetValue: 0,
                    Multiplier: 0,
                    TotalMultiplier: 0,
                    TotalTurn: 0,
                    CurrentTurn: 0,
                    BonusPrizeID: 0,
                    SelectedItemIDs: [],
                    PrizeID: 0,
                    PrizeValue: 0,
                    AwardedPrizeValue: 0,
                    TotalPrizeValue: 0
                },
                SpinData: {
                    TotalLines: 25,
                    FreeSpinMultiplier: 0,
                    FreeSpinPrizeValue: 0,
                    IsAccumulate: !1,
                    AccumulateItems: 0,
                    AccumulateData: "",
                    TicketBalance: 0,
                    ResponseStatus: 0,
                    GameStatus: 1,
                    SpinID: 357,
                    SlotsData: "6,9,9,11,11,10,10,6,1,5,11,1,2,9,10",
                    PrizesData: "8,8,300000;12,8,300000",
                    PositionData: "1,2,8,14;1,7,8,9",
                    TotalBetValue: 25e4,
                    IsJackpot: !1,
                    Jackpot: 50235e3,
                    JackpotNum: 0,
                    IsFreeSpin: !1,
                    TotalFreeSpin: 0,
                    StartBonus: 0,
                    BonusGameData: "",
                    PayLinePrizeValue: 6e5
                },
                Account: {
                    AccountID: 53,
                    Username: "test03",
                    Nickname: "[G1]suzuki",
                    Avatar: "1",
                    SourceID: 1,
                    PortalID: 1,
                    GoldBalance: 71551868,
                    CoinBalance: 14972e3,
                    CurrencyID: 1,
                    OriginNickname: "suzuki"
                },
                PortalID: 1,
                CurrencyID: 1,
                AccountID: 53,
                AutoSpin: !1,
                TotalAutoSpin: 0,
                TotalLine: 25,
                BetValue: 1e4,
                AutoRoomId: 0,
                moneyType: 1,
                Lines: "",
                Turbo: !1,
                RoomID: 3
            }],
            this.index = -1,
            this.dataFree = [[], []],
            this.turn = 0;
            var e = t;
            if (e.currentPlayer && (e.currentPlayerMain = e.currentPlayer),
            e.currentPlayer = this.player,
            o.Config.isTry = !0,
            o.Config.inRoom = !0,
            o.Config.countJp)
                try {
                    o.Config.countJp.reset()
                } catch (t) {}
            a.Util.ClearTimeOut(o.Config.timeJackpot),
            this.balance = 5e7,
            this.jackPot = 5e7,
            this.index = -1,
            this.turn = 0,
            s.contents.ClearTimer(),
            t.DestroyEffect(),
            t.DisableLines(),
            e.txtBalanceTrial.text = Message.GetMessage("sl84") + ": " + a.Util.ParseMoney(this.balance, void 0),
            e.txtBalanceTrial.visible = !0,
            e.txtJackpot.text = a.Util.ParseMoney(this.jackPot, void 0),
            e.txtJustWon.text = "0",
            e.txtBetValue.text = "10.000",
            e.txtTotalBet.text = "250.000",
            e.txtLines.text = "25",
            s.contents.EnableButtons(e)
        }
        var o = n(4)
          , a = n(0)
          , s = n(12);
        e.trial = i
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.free = void 0;
        var o = n(4)
          , i = n(0)
          , a = (s.prototype.ChangeSlots = function() {
            for (var t, e = this.game, n = e.totalItems - 4; 0 <= n; n--)
                t = i.Util.RandomFrom(105, 111, !1),
                e.column1[n].texture = TextureCache[t + (n < e.totalItems - 3 ? "-blur" : "") + ".png"],
                t = i.Util.RandomFrom(105, 111, !1),
                e.column2[n].texture = TextureCache[t + (n < e.totalItems - 3 ? "-blur" : "") + ".png"],
                t = i.Util.RandomFrom(105, 111, !1),
                e.column3[n].texture = TextureCache[t + (n < e.totalItems - 3 ? "-blur" : "") + ".png"],
                t = i.Util.RandomFrom(105, 111, !1),
                e.column4[n].texture = TextureCache[t + (n < e.totalItems - 3 ? "-blur" : "") + ".png"],
                t = i.Util.RandomFrom(105, 111, !1),
                e.column5[n].texture = TextureCache[t + (n < e.totalItems - 3 ? "-blur" : "") + ".png"]
        }
        ,
        s.prototype.InitSpin = function(t) {}
        ,
        s.prototype.PinWild = function() {
            var i = this;
            i.wildIndex = [],
            $.each(o.Config.slotData, function(t, e) {
                var n;
                101 === parseInt(e) && $.inArray(t, i.wildIndex) < 0 && (i.wildIndex.push(t),
                (n = new Sprite(TextureCache["101.png"])).anchor.set(.5),
                n.position.set(i.game.itemsMainGame[t].x, i.game.itemsMainGame[t].y),
                i.pinContainer.addChild(n))
            })
        }
        ,
        s.prototype.FinishFree = function() {
            this.pinContainer.destroy({
                children: !0
            }),
            this.game.FinishFreeSpin(this.game)
        }
        ,
        s);
        function s(t) {
            var e;
            this.itemsIndex = [101, 104, 105, 106, 107, 108, 109, 110, 111],
            this.wildIndex = [],
            this.freeIndex = 0,
            this.freeTurn = 0,
            this.indexData = -1,
            this.game = t,
            this.pinContainer = new Container,
            t.columnContainer.addChild(this.pinContainer),
            this.freeIndex = 0,
            this.freeTurn = 0,
            this.indexData = -1;
            for (var n = t.totalItems - 1; 0 <= n; n--)
                e = i.Util.RandomFrom(105, 111, !1),
                t.column1[n].texture = TextureCache[e + (n < t.totalItems - 3 ? "-blur" : "") + ".png"],
                e = i.Util.RandomFrom(105, 111, !1),
                t.column2[n].texture = TextureCache[e + (n < t.totalItems - 3 ? "-blur" : "") + ".png"],
                e = i.Util.RandomFrom(105, 111, !1),
                t.column3[n].texture = TextureCache[e + (n < t.totalItems - 3 ? "-blur" : "") + ".png"],
                e = i.Util.RandomFrom(105, 111, !1),
                t.column4[n].texture = TextureCache[e + (n < t.totalItems - 3 ? "-blur" : "") + ".png"],
                e = i.Util.RandomFrom(105, 111, !1),
                t.column5[n].texture = TextureCache[e + (n < t.totalItems - 3 ? "-blur" : "") + ".png"]
        }
        e.free = a
    }
    , function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.silent = void 0;
        var o = n(0)
          , a = n(4)
          , i = (s.prototype.getAutoSpin = function() {
            var t = sessionStorage.getItem("Auto-" + this.game.storage);
            if (t) {
                var e = t.split(";");
                if (this.autoSpin = parseInt(e[1]),
                -1 === this.autoSpin || 0 < this.autoSpin)
                    return a.Config.roomId = parseInt(e[0]),
                    e[3] && (this.game.line = e[3]),
                    !0
            }
            return !1
        }
        ,
        s.prototype.setAutoSpin = function() {
            0 < this.autoSpin ? (this.autoSpin--,
            this.setSession(),
            0 === this.autoSpin && (this.game.isAuto = !1,
            this.removeSession())) : 0 === this.autoSpin && (this.game.isAuto = !1,
            this.removeSession(),
            $("#rolling-" + this.game.storage).removeClass("active")),
            $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId + "-playing").length && $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId + "-playing").html(0 < this.autoSpin ? o.Util.ParseMoney(this.autoSpin) : ""),
            $("#list-jp-icon-" + a.Config.gameId + "-playing").length && $("#list-jp-icon-" + a.Config.gameId + "-playing").html(0 < this.autoSpin ? o.Util.ParseMoney(this.autoSpin) : "")
        }
        ,
        s.prototype.setSession = function() {
            sessionStorage.setItem("Auto-" + this.game.storage, a.Config.roomId + ";" + this.autoSpin + ";" + this.game.isAuto + ";" + a.Config.totalLines)
        }
        ,
        s.prototype.removeSession = function() {
            sessionStorage.removeItem("Auto-" + this.game.storage)
        }
        ,
        s.prototype.joinRoom = function(t) {
            this.game.accountId = t.AccountID,
            this.game.currentPlayer = t,
            this.game.balance = t.Account.GoldBalance,
            a.Config.roomId = t.RoomID,
            a.Config.totalLines = this.game.line ? this.game.line : t.TotalLine,
            a.Config.betValue = t.BetValue,
            a.Config.inRoom = !0,
            a.Config.moneyType = t.moneyType,
            this.game.line = null,
            $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-play").addClass("button-playing"),
            $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
            $("#rolling-" + this.game.storage).addClass("active"),
            $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().addClass("playing"),
            this.checkGame()
        }
        ,
        s.prototype.checkGame = function() {
            var t = this;
            4 === this.game.currentPlayer.SlotInfo.GameStatus && null != this.game.currentPlayer.AccumulateGame && null != this.game.currentPlayer.AccumulateGame.AccumulateItemsData && (a.Config.isCrazy = !0),
            (3 === this.game.currentPlayer.SlotInfo.GameStatus || null != this.game.currentPlayer.BonusGame && null != this.game.currentPlayer.BonusGame.BonusItemsData) && (a.Config.isBonus = !0),
            0 < this.game.currentPlayer.SlotInfo.FreeSpins && (a.Config.isFreeSpin = !0,
            a.Config.freeSpinCount = this.game.currentPlayer.SlotInfo.FreeSpins),
            a.Config.isCrazy ? this.callCrazy() : a.Config.isBonus ? this.callBonus() : setTimeout(function() {
                return t.initSpin(t)
            }, 1500)
        }
        ,
        s.prototype.initSpin = function(t) {
            var e = t;
            a.Config.isSpin || e.game.isAuto && e.game.isSilent && ($("#mn-lobby-rolling-dancing .rolling-win").remove(),
            a.Config.isBonus = a.Config.isCrazy = a.Config.isWinFree = !1,
            a.Config.isSpin = !0,
            e.game.hubs.connection.invoke("Spin", {
                MerchantID: 0,
                RoomID: a.Config.roomId,
                CurrencyID: a.Config.currencyId,
                TotalLine: a.Config.totalLines
            }).then(function(t) {
                t.c < 0 && (a.Config.isSpin = !1,
                setTimeout(function() {
                    return e.initSpin(e)
                }, 4e3))
            }).catch(function() {
                a.Config.isSpin = !1,
                setTimeout(function() {
                    return e.initSpin(e)
                }, 4e3)
            }))
        }
        ,
        s.prototype.startSpin = function(t) {
            var i;
            this.game.currentPlayer = t,
            a.Config.slotData = [],
            a.Config.slotData = t.SpinData.SlotsData.split(","),
            o.Util.ClearTimeOut(a.Config.timeSpin),
            0 < (null != this.game.currentPlayer.SpinData.PrizesData ? Object.keys(this.game.currentPlayer.SpinData.PrizesData).length : 0) && (i = this.game.currentPlayer.SpinData.PrizesData.split(";"),
            $.each(this.game.currentPlayer.SpinData.PositionData.split(";"), function(t, e) {
                $.map(e.split(","), function(t) {
                    return parseInt(t)
                });
                var n = parseInt(i[t].split(",")[1]);
                a.Config.isJackpot || 1 !== n || (this.autoSpin = 0),
                !a.Config.isFreeSpin && 0 <= $.inArray(n, [28, 29, 30]) && (a.Config.isWinFree = !0),
                !a.Config.isBonus && 0 <= $.inArray(n, [25, 26, 27]) && (a.Config.isBonus = !0)
            })),
            t.SpinData.IsJackpot && (this.autoSpin = 0),
            null !== this.game.currentPlayer.AccumulateGame && 5 === this.game.currentPlayer.AccumulateGame.Items && this.game.currentPlayer.SpinData.IsAccumulate && null != this.game.currentPlayer.AccumulateGame.AccumulateItemsData && (a.Config.isCrazy = !0),
            t.SlotInfo.CanPlayBonusGame && null !== t.BonusGame.BonusItemsData && 0 < t.BonusGame.BonusItemsData.length && (a.Config.isBonus = !0),
            t.SlotInfo.IsFreeSpin && (a.Config.isWinFree = !0),
            a.Config.isFreeSpin || this.setAutoSpin(),
            this.showWin()
        }
        ,
        s.prototype.showMoney = function(t, e) {
            var n, i = this;
            try {
                $("#mn-lobby-rolling-dancing").length && ($("#mn-lobby-rolling-dancing").append('<span class="rolling-win">+' + o.Util.ParseMoney(t) + "</span>"),
                TweenMax.to($("#mn-lobby-rolling-dancing .rolling-win"), 2, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                })),
                $("#rolling-" + this.game.storage).hasClass("active") || $("#rolling-" + this.game.storage).addClass("active"),
                $("#popupJackpot").hasClass("show") && ($("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).hasClass("button-playing") || $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-play").addClass("button-playing"),
                $("#list-jp-icon-" + a.Config.gameId + "-play").hasClass("button-playing") || $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-play").addClass("button-playing"),
                $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().hasClass("playing") || $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().addClass("playing"),
                (n = $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId)).length && (n.parent().append('<span class="win active">+' + o.Util.ParseMoney(t) + "</span>"),
                TweenMax.to(n.parent().find("span.win"), 1, {
                    css: {
                        opacity: "0",
                        top: "0px"
                    }
                }))),
                setTimeout(function() {
                    e(i)
                }, 2100)
            } catch (t) {
                e(i)
            }
        }
        ,
        s.prototype.updateBalance = function(t) {
            0 < $(".tien1 .spanMoney").length && $(".tien1 .spanMoney").text(o.Util.ParseMoney(t)),
            0 < $("#divHeader .money-1 .text").length && $("#divHeader .money-1 .text").text(o.Util.ParseMoney(t))
        }
        ,
        s.prototype.increaseBalance = function(t) {
            var e;
            0 != t && (0 < $("#divHeader .money-1 .text").length ? (e = o.Util.unParseMoney($("#divHeader .money-1 .text").text()),
            e += t,
            $("#divHeader .money-1 .text").text(o.Util.ParseMoney(e))) : 0 < $(".tien1 .spanMoney").length && (e = o.Util.unParseMoney($(".tien1 .spanMoney").text()),
            e += t,
            $(".tien1 .spanMoney").text(o.Util.ParseMoney(e))))
        }
        ,
        s.prototype.updateFreeSpin = function() {
            a.Config.freeSpinCount--
        }
        ,
        s.prototype.showWin = function() {
            this.updateBalance(this.game.currentPlayer.Account.GoldBalance),
            0 < this.game.currentPlayer.SpinData.PayLinePrizeValue ? this.showMoney(this.game.currentPlayer.SpinData.PayLinePrizeValue, this.crazy) : this.crazy(this)
        }
        ,
        s.prototype.crazy = function(t) {
            a.Config.isCrazy ? t.callCrazy() : t.bonusOrFree(t)
        }
        ,
        s.prototype.bonusOrFree = function(t) {
            a.Config.isFreeSpin && t.updateFreeSpin(),
            a.Config.isBonus ? t.callBonus() : (a.Config.isWinFree = !0,
            a.Config.freeSpinCount = t.game.currentPlayer.SlotInfo.FreeSpins,
            a.Config.isWinFree = !1,
            a.Config.isFreeSpin && 0 === a.Config.freeSpinCount && (a.Config.isFreeSpin = !1),
            t.checkAutoSpin(t))
        }
        ,
        s.prototype.callCrazy = function() {
            var t = this;
            this.game.hubs.connection.invoke("PlayCrazyBonusAll", {
                RoomID: a.Config.roomId,
                CurrencyID: a.Config.currencyId
            }).then(function(t) {}).catch(function() {
                t.callCrazy()
            })
        }
        ,
        s.prototype.finishCrazy = function(t) {
            a.Config.isCrazy = !1,
            this.increaseBalance(t.TotalPrizeValue),
            this.showMoney(t.TotalPrizeValue, this.bonusOrFree)
        }
        ,
        s.prototype.callBonus = function() {
            var e = this;
            this.game.hubs.connection.invoke("PlayBonusGameAll", {
                RoomID: a.Config.roomId,
                CurrencyID: a.Config.currencyId
            }).then(function(t) {
                0 <= t.c && e.finishBonus()
            }).catch(function() {
                e.callBonus()
            })
        }
        ,
        s.prototype.finishBonus = function() {
            a.Config.isBonus = !1;
            var t = this.game.currentPlayer.BonusGame.BonusItemsData[this.game.currentPlayer.BonusGame.TotalTurn - 1].PrizeValue;
            this.increaseBalance(t),
            this.showMoney(t, this.checkAutoSpin)
        }
        ,
        s.prototype.checkAutoSpin = function(t) {
            a.Config.isSpin = !1,
            -1 === t.autoSpin || 0 < t.autoSpin ? setTimeout(function() {
                return t.initSpin(t)
            }, 4500) : (t.game.isAuto = !1,
            t.removeSession(),
            $("#rolling-" + t.game.storage).removeClass("active"),
            $("#list-jp-icon-" + a.Config.gameId + "-room-" + a.Config.roomId).removeClass("button-playing").addClass("button-play"),
            $("#list-jp-icon-" + a.Config.gameId + "-play").removeClass("button-playing").addClass("button-play"),
            $("#ljp-" + a.Config.gameId + "-room-" + a.Config.roomId).parent().removeClass("playing"))
        }
        ,
        s);
        function s(t) {
            this.autoSpin = -1,
            this.game = t,
            this.getAutoSpin() && this.game.InitHubs()
        }
        e.silent = i
    }
    ],
    s.c = l,
    s.d = function(t, e, n) {
        s.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }
    ,
    s.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    s.t = function(e, t) {
        if (1 & t && (e = s(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var n = Object.create(null);
        if (s.r(n),
        Object.defineProperty(n, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                s.d(n, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return n
    }
    ,
    s.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return s.d(e, "a", e),
        e
    }
    ,
    s.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    s.p = "/",
    s(s.s = 43);
    function s(t) {
        if (l[t])
            return l[t].exports;
        var e = l[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return r[t].call(e.exports, e, e.exports, s),
        e.l = !0,
        e.exports
    }
    var r, l
});

!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("WebFont"), require("pixi-filters")) : "function" == typeof define && define.amd ? define("poker", ["libs", "WebFont", "pixi-filters"], e) : "object" == typeof exports ? exports.poker = e(require("libs"), require("WebFont"), require("pixi-filters")) : t.poker = e(t.libs, t.WebFont, t["pixi-filters"])
}(window, function(n, i, o) {
    return r = {},
    a.m = s = {
        0: function(t, e) {
            t.exports = n
        },
        1: function(t, e) {
            t.exports = i
        },
        2: function(t, e) {
            t.exports = o
        },
        41: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.game = void 0;
            var i = n(42)
              , o = n(1)
              , a = (s.prototype.delete = function() {
                this.game.Delete()
            }
            ,
            s.prototype.load = function(t) {
                console.log("load", t),
                this.game.Load(t)
            }
            ,
            s.prototype.join = function(t, e, n, i) {
                console.log("joib", t, e, n, i),
                this.game.Join(t, e, n, i)
            }
            ,
            s.prototype.lobby = function(t) {
                console.log("EnterLobby", t)
            }
            ,
            s.prototype.stop = function() {
                this.game.Stop()
            }
            ,
            s);
            function s(t) {
                o.load({
                    custom: {
                        families: ["Roboto-Black", "Roboto-Bold", "Roboto-Medium", "Roboto-Regular", "Roboto-Light", "RobotoCondensed-Bold", "RobotoCondensed-Italic", "RobotoCondensed-Light", "RobotoCondensed-Regular", "UTM American Sans", "UTM Swiss Condensed", "UTM Swiss CondensedBold"]
                    },
                    fontactive: function() {}
                }),
                this.game = new i.games(t)
            }
            e.game = a
        },
        42: function(t, e, n) {
            "use strict";
            var i, o = this && this.__extends || (i = function(t, e) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function n() {
                    this.constructor = t
                }
                i(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.games = void 0;
            var a = n(43)
              , s = n(44)
              , p = n(0)
              , r = n(45);
            n(2);
            var h, d = n(46), l = n(47), c = (h = d.variable,
            o(u, h),
            u.prototype.Load = function(t) {
                var e = this;
                e.loader.load(null, function() {
                    e.isLoad = !0,
                    e.InitHub(t)
                })
            }
            ,
            u.prototype.InitHub = function(t) {
                this.hub = new a.default(pokerUrl + "hub",this.token,this),
                this.hub.Connect(this.currencyId, t)
            }
            ,
            u.prototype.Join = function(t, e, n, i) {
                console.log("joibn", t, e, n, i),
                this.hub.PlayNowPoker(t, e, n, i)
            }
            ,
            u.prototype.Stop = function() {
                this.hub.connection.stop()
            }
            ,
            u.prototype.JoinGame = function(t, e) {
                console.log("JoinGame", t, e),
                t && (this.roomModel = t,
                this.ready || this.Init(),
                this.InVisibleButtons(),
                this.GetCurrentPlayer(),
                this.RenderPlayers(this.roomModel.Players),
                this.ChangeOwner(this.roomModel.OwnerId),
                this.CheckGame(t, e),
                (window.pokerGame = this).updateChip())
            }
            ,
            u.prototype.ChangeOwner = function(t) {
                var e = this.GetPlayerByAccountId(t);
                if (e) {
                    this.icDeal.visible = !0;
                    try {
                        TweenMax.to(this.icDeal, .5, {
                            data: "poker",
                            x: e.avatar.x + 30,
                            y: e.avatar.y - e.avatar.height / 2 + 10
                        })
                    } catch (t) {}
                }
            }
            ,
            u.prototype.GetPlayerByAccountId = function(t) {
                for (var e, n = 0; n < this.players.length; n++)
                    if (this.players[n] && this.players[n].accountId === t) {
                        e = this.players[n];
                        break
                    }
                return e
            }
            ,
            u.prototype.GetPlayerByPosition = function(t) {
                for (var e, n = 0; n < this.players.length; n++)
                    if (this.players[n] && this.players[n].pos === t) {
                        e = this.players[n];
                        break
                    }
                return e
            }
            ,
            u.prototype.GetCurrentPlayer = function() {
                var t = App.account.portalID
                  , e = App.account.accountID;
                if (this.roomModel && this.roomModel.Players)
                    for (var n in this.roomModel.Players)
                        this.roomModel.Players[n].AccountID === e + ":" + t && (this.currentPlayer = this.roomModel.Players[n])
            }
            ,
            u.prototype.PlayerOtherDevice = function() {
                try {
                    App.showPopupMessage({
                        content: Message.GetMessage("ca-20024"),
                        textDone: "OK"
                    }),
                    this.Delete(),
                    App.exitGame()
                } catch (t) {}
            }
            ,
            u.prototype.PlayerLeave = function(t, e) {
                var n, i;
                t === this.currentPlayer.AccountID ? (this.currentPlayer && t == this.currentPlayer.AccountID && e && "object" == typeof e && this.hub.ShowMessage(e),
                this.Delete(),
                App.handleBack()) : ((n = this.GetPlayerByAccountId(t)) && (n.accountId === this.roomModel.OwnerId && (this.icDeal.visible = !1),
                n.Reset(),
                i = n.pos,
                n.destroy({
                    children: !0
                }),
                delete this.players[i],
                this.players[i] = null),
                this.CheckPlayer())
            }
            ,
            u.prototype.CheckPlayer = function() {
                for (var t, e = 0, n = 0; n < this.players.length; n++)
                    this.players[n] && (e++,
                    t = this.players[n]);
                1 === e && (this.RemoveTimer(),
                t.Reset(),
                this.ChangeOwner(t.accountId))
            }
            ,
            u.prototype.PlayerJoin = function(t) {
                console.log("playerJoin", t),
                this.RenderPlayer(t)
            }
            ,
            u.prototype.RenderPlayer = function(t) {
                var e = t.Position - this.currentPlayer.Position;
                e < 0 && (e += this.roomModel.MaxPlayer);
                try {
                    this.players[e].destroy({
                        children: !0
                    })
                } catch (t) {}
                this.players[e] = new r.default({
                    position: e,
                    player: t,
                    xy: this.playerPos[e],
                    w: t.AccountID === this.currentPlayer.AccountID ? 140 : 120,
                    h: t.AccountID === this.currentPlayer.AccountID ? 140 : 120,
                    b: t.AccountID === this.currentPlayer.AccountID ? 95 : 75,
                    game: this
                }),
                this.players[e].UpdateBalance(t.Chips),
                this.playerContainer.addChild(this.players[e])
            }
            ,
            u.prototype.RenderPlayers = function(t) {
                for (var e = 0; e < this.players.length; e++) {
                    try {
                        this.players[e].destroy({
                            children: !0
                        })
                    } catch (t) {}
                    this.players[e] = null
                }
                this.players = [null, null, null, null, null, null];
                var n = t[this.currentPlayer.AccountID].Position;
                for (var e in t) {
                    var i = t[e]
                      , o = i.Position - n;
                    o < 0 && (o += this.roomModel.MaxAllow),
                    this.virtualPos[i.AccountID] = o,
                    this.RenderPlayer(i)
                }
            }
            ,
            u.prototype.Init = function() {
                PIXI.utils.skipHello(),
                this.size = [window.innerWidth, window.innerHeight],
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    transparent: !0,
                    resolution: 1,
                    autoResize: !0
                }),
                document.getElementById(this.target).appendChild(this.application.renderer.view),
                this.InitContainer(),
                this.InitFrames(),
                this.InitBg(),
                this.InitChipBg(),
                this.InitTableInfo(),
                this.InitButton(),
                this.Resize(this),
                this.ResetTab();
                var t = this;
                this.application.ticker.add(function() {
                    return t.Update(t)
                }),
                this.resizeFunc = function() {
                    return t.Resize(t)
                }
                ,
                window.addEventListener("resize", this.resizeFunc),
                this.ready = !0
            }
            ,
            u.prototype.ResetTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            u.prototype.Update = function(t) {
                t.timer && t.timer.tick()
            }
            ,
            u.prototype.InitContainer = function() {
                this.bgContainer = new Container,
                this.infoContainer = new Container,
                this.playerContainer = new Container,
                this.chipContainer = new Container,
                this.cardContainer = new Container,
                this.drawCardsContainer = new Container,
                this.cardContainer.addChild(this.drawCardsContainer),
                this.messageContainer = new Container,
                this.effectContainer = new Container,
                this.messageContainer.addChild(this.effectContainer),
                this.buttonContainer = new Container,
                this.resultContainer = new Container,
                this.application.stage.addChild(this.bgContainer)
            }
            ,
            u.prototype.InitFrames = function() {
                var t;
                for (this.framesDealerChiaBai = [],
                this.framesDealerClick = [],
                this.framesDealerPlay = [],
                this.framesDealerNormal = [],
                this.framesWin = [],
                this.framesWin = framesFromTilesetImage("win.effect", 230, 230),
                t = 1; t < 15; t++)
                    this.framesDealerChiaBai.push(TextureCache["dealer-chia-bai-" + t + ".png"]);
                for (t = 1; t < 25; t++)
                    this.framesDealerClick.push(TextureCache["dealer-rung-nguc-" + t + ".png"]),
                    this.framesDealerPlay.push(TextureCache["dealer-moi-choi-" + t + ".png"]);
                for (t = 1; t < 49; t++)
                    this.framesDealerNormal.push(TextureCache["dealer-normal-" + t + ".png"])
            }
            ,
            u.prototype.InitBg = function() {
                this.mainContainer = new Sprite(TextureCache["table-" + this.roomModel.MoneyType]),
                this.mainContainer.anchor.set(.5),
                this.mainContainer.position.set(this.size[0] / 2, this.size[1] / 2),
                this.mainContainer.addChild(this.infoContainer),
                this.bgContainer.addChild(this.mainContainer);
                var t = new PIXI.Text("POKER",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 60,
                    fill: "#000"
                });
                t.alpha = .1,
                t.anchor.set(.5),
                t.y = -30,
                this.mainContainer.addChild(t),
                this.dealer = new AnimatedSprite(this.framesDealerNormal),
                this.dealer.anchor.set(.5),
                this.dealer.position.set(0, -253),
                this.dealer.animationSpeed = .2,
                this.dealer.interactive = !0,
                this.dealer.buttonMode = !0,
                this.dealer.on("pointerdown", this.DealerDown.bind(this.dealer, this)),
                this.dealer.play(),
                this.mainContainer.addChild(this.dealer);
                for (var e = 0; e < this.playerPos.length; e++) {
                    var n = new Sprite(TextureCache["ic-ad-user.png"]);
                    n.anchor.set(.5),
                    n.position.set(this.playerPos[e][0], this.playerPos[e][1]),
                    this.mainContainer.addChild(n)
                }
                this.txtNotify = new Sprite(TextureCache["big-bg-notify.png"]),
                this.txtNotify.anchor.set(.5),
                this.txtNotify.position.set(0, -102),
                this.txtNotify.addChild(new PIXI.Text(Message.GetMessage("me7"),{
                    fontFamily: this.fontFaceBold,
                    fontSize: 18,
                    fill: "white"
                })),
                this.txtNotify.children[0].anchor.set(.5),
                this.txtNotify.visible = !1,
                this.txtResult = new Sprite(TextureCache["big-bg-notify.png"]),
                this.txtResult.anchor.set(.5),
                this.txtResult.position.set(0, 50),
                this.txtResult.addChild(new PIXI.Text("",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 30,
                    fill: "white"
                })),
                this.txtResult.children[0].anchor.set(.5),
                this.txtResult.visible = !1,
                this.txtStatus = new Sprite(TextureCache["small-bg-notify.png"]),
                this.txtStatus.anchor.set(.5),
                this.txtStatus.position.set(0, 58),
                this.txtStatus.addChild(new PIXI.Text(Message.GetMessage("me7"),{
                    fontFamily: this.fontFaceBold,
                    fontSize: 12,
                    fill: "white"
                })),
                this.txtStatus.children[0].anchor.set(.5),
                this.txtStatus.visible = !1,
                this.mainContainer.addChild(this.playerContainer, this.txtNotify, this.txtStatus, this.cardContainer, this.messageContainer, this.buttonContainer, this.resultContainer, this.txtResult),
                this.icDeal = new Sprite(TextureCache["ic-dealer.png"]),
                this.icDeal.anchor.set(.5),
                this.icDeal.position.set(this.dealer.x, this.dealer.y),
                this.icDeal.visible = !1,
                this.mainContainer.addChild(this.icDeal),
                this.frameContainer = new Container,
                this.mainContainer.addChild(this.frameContainer)
            }
            ,
            u.prototype.InitChipBg = function() {
                this.arrChipBg = [];
                for (var t = 0; t < 6; t++) {
                    var e = new Sprite(TextureCache["bg-chip.png"]);
                    e.anchor.set(0, .5),
                    e.position.set(this.chipPos[t][0], this.chipPos[t][1]),
                    e.visible = !1,
                    e.addChild(new Sprite(TextureCache["chip-in-game.png"])),
                    e.children[0].anchor.set(0, .5),
                    e.children[0].scale.set(.6),
                    e.children[0].x = 5,
                    e.addChild(new PIXI.Text("",{
                        fontFamily: "Roboto-Bold",
                        fontSize: 14,
                        fill: [1 === this.roomModel.MoneyType ? "yellow" : "white"]
                    })),
                    e.children[1].x = 30,
                    e.children[1].anchor.set(0, .5),
                    this.chipContainer.addChild(e),
                    this.arrChipBg.push(e)
                }
                this.mainContainer.addChild(this.chipContainer)
            }
            ,
            u.prototype.BtnBackOver = function() {
                this.texture = TextureCache["btn-def-h.png"]
            }
            ,
            u.prototype.BtnBackOut = function() {
                this.texture = TextureCache["btn-def.png"]
            }
            ,
            u.prototype.BtnBackDown = function(t) {
                var e = t.players[0];
                e.isLeave ? (t.hub.UnregisterLeaveRoom(),
                e.isUnLeave = !0) : (t.hub.LeaveGame(),
                e.isUnLeave = !1)
            }
            ,
            u.prototype.initBar = function(t, e) {
                void 0 === e && (e = !0);
                try {
                    this.barContainer && (this.mainContainer.removeChild(this.barContainer),
                    this.barContainer = null);
                    for (var n = this.roomModel, i = n.Players, o = n.GameLoop.TempPot, a = 0, s = i; a < s.length; a++)
                        o += s[a].BetInRoundl;
                    this.barContainer = new l.default({
                        min: this.betMin,
                        max: this.betMax,
                        step: this.betMin,
                        game: this,
                        pot: o,
                        type: t
                    }),
                    this.barContainer.position.set(300, 200),
                    this.mainContainer.addChild(this.barContainer)
                } catch (t) {
                    console.log(t)
                }
            }
            ,
            u.prototype.InitTableInfo = function() {
                var t = this.roomModel;
                this.btnBack = new Sprite(TextureCache["btn-def.png"]),
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(-520, -340),
                this.btnBack.addChild(new Sprite(TextureCache["ic-back.png"])),
                this.btnBack.children[0].anchor.set(.5),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.BtnBackOver).on("pointerout", this.BtnBackOut).on("pointerdown", this.BtnBackDown.bind(this.btnBack, this));
                var e = new PIXI.Text(Message.GetMessage(0 === t.MoneyType ? "tb113" : "tb112") + ": " + p.Util.NumberToString(t.Name, 3),{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                e.anchor.set(0, .5),
                e.position.set(-480, -360);
                var n = new PIXI.Text(Message.GetMessage("ca81").toUpperCase() + p.Util.ParseMoney(t.MinBet) + " " + Config.MoneyText[t.MoneyType],{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                n.anchor.set(0, .5),
                n.position.set(-480, -340),
                this.lblSession = new PIXI.Text(Message.GetMessage("ca95").toUpperCase() + " #",{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                }),
                this.lblSession.anchor.set(0, .5),
                this.lblSession.position.set(-480, -320),
                this.infoContainer.addChild(this.btnBack, e, n, this.lblSession)
            }
            ,
            u.prototype.BtnHover = function() {
                this.texture = TextureCache[this.name.replace("normal", "hover")]
            }
            ,
            u.prototype.BtnOut = function() {
                this.texture = TextureCache[this.name]
            }
            ,
            u.prototype.BtnDown = function() {
                this.texture = TextureCache[this.name.replace("normal", "click")]
            }
            ,
            u.prototype.ShowStatus = function(t, e) {
                var n = this;
                p.Util.ClearTimeOut(this.timeStatus),
                this.txtStatus.scale.set(.01),
                this.txtStatus.visible = !0,
                this.txtStatus.children[0].text = t;
                try {
                    TweenMax.to(this.txtStatus.scale, .4, {
                        data: "poker",
                        x: 1,
                        y: 1
                    })
                } catch (t) {}
                var i = this;
                e && (this.timeStatus = setTimeout(function() {
                    try {
                        TweenMax.to(n.txtStatus.scale, .2, {
                            data: "poker",
                            x: .01,
                            y: .01
                        })
                    } catch (t) {}
                    setTimeout(function() {
                        i.txtStatus.visible = !1
                    }, 300)
                }, e))
            }
            ,
            u.prototype.BtnHitClick = function(e) {
                var n = this;
                e.selectedCards.length <= 0 || (e.DisableButton(this),
                e.hub.connection.invoke("DanhBai", e.selectedCards).then(function(t) {
                    console.log("DanhBai", t),
                    t < 0 && e.EnableButton(n)
                }))
            }
            ,
            u.prototype.BtnSortClick = function(e) {
                var t = this;
                e.DisableButton(this),
                e.hub.connection.invoke("SortHandCards").then(function(t) {
                    t && 0 < t.length && e.SortHandCards(t)
                }).catch(function() {
                    e.EnableButton(t)
                })
            }
            ,
            u.prototype.BtnCancelClick = function(t) {
                var e = this.GetPlayerByAccountId(App.account.accountID);
                t.DisableButton(this),
                t.DisableButton(t.btnHit);
                for (var n = 0; n < e.handCards.length; n++)
                    if (e.handCards[n].isSeleted) {
                        e.handCards[n].isSeleted = !1;
                        try {
                            TweenMax.to(e.handCards[n], .3, {
                                data: "poker",
                                y: e.handCards[n].posY
                            })
                        } catch (t) {}
                        e.handCards[n].filters = null
                    }
                t.selectedCards = []
            }
            ,
            u.prototype.BtnSkipClick = function(t) {
                t.DisableButton(this),
                t.hub.BoLuot()
            }
            ,
            u.prototype.InitButton = function() {
                this.btnFlip = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnFlip.name = "btn-game-normal.png",
                this.btnFlip.anchor.set(.5),
                this.btnFlip.position.set(480, 300),
                this.btnFlip.addChild(new PIXI.Text(Message.GetMessage("ca80").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnFlip.getChildAt(0).anchor.set(.5),
                this.btnFlip.getChildAt(0).position.set(0, 0),
                this.btnFlip.interactive = !0,
                this.btnFlip.buttonMode = !0,
                this.btnFlip.id = "btnFlip",
                this.btnFlip.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnFlip, this.btnFlip, this)),
                this.btnAllIn = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnAllIn.name = "btn-game-normal.png",
                this.btnAllIn.id = "btnAllIn",
                this.btnAllIn.anchor.set(.5),
                this.btnAllIn.position.set(480, 300),
                this.btnAllIn.addChild(new PIXI.Text(Message.GetMessage("ca05").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnAllIn.getChildAt(0).anchor.set(.5),
                this.btnAllIn.getChildAt(0).position.set(0, 0),
                this.btnAllIn.interactive = !0,
                this.btnAllIn.buttonMode = !0,
                this.btnAllIn.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnAllIn, this.btnAllIn, this)),
                this.btnRaise = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnRaise.name = "btn-game-normal.png",
                this.btnRaise.anchor.set(.5),
                this.btnRaise.position.set(340, 300),
                this.btnRaise.addChild(new PIXI.Text(Message.GetMessage("ca01").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnRaise.getChildAt(0).anchor.set(.5),
                this.btnRaise.getChildAt(0).position.set(0, 0),
                this.btnRaise.interactive = !0,
                this.btnRaise.buttonMode = !0,
                this.btnRaise.id = "btnRaise",
                this.btnRaise.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnRaise, this.btnRaise, this)),
                this.btnBet = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnBet.name = "btn-game-normal.png",
                this.btnBet.anchor.set(.5),
                this.btnBet.position.set(340, 300),
                this.btnBet.addChild(new PIXI.Text(Message.GetMessage("ca04").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnBet.getChildAt(0).anchor.set(.5),
                this.btnBet.getChildAt(0).position.set(0, 0),
                this.btnBet.interactive = !0,
                this.btnBet.buttonMode = !0,
                this.btnBet.id = "btnBet",
                this.btnBet.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnBet, this.btnBet, this)),
                this.btnConfirm = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnConfirm.name = "btn-game-normal.png",
                this.btnConfirm.anchor.set(.5),
                this.btnConfirm.position.set(340, 300),
                this.btnConfirm.addChild(new PIXI.Text(Message.GetMessage("ca54").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnConfirm.getChildAt(0).anchor.set(.5),
                this.btnConfirm.getChildAt(0).position.set(0, -15),
                this.btnConfirm.addChild(new PIXI.Text("",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 22,
                    fontWeight: "bold",
                    fill: ["#E7B70B"],
                    padding: 10,
                    align: "center"
                })),
                this.btnConfirm.getChildAt(1).anchor.set(.5),
                this.btnConfirm.getChildAt(1).position.set(0, 15),
                this.btnConfirm.interactive = !0,
                this.btnConfirm.buttonMode = !0,
                this.btnConfirm.id = "btnConfirm",
                this.btnConfirm.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnConfirm, this.btnConfirm, this)),
                this.btnView = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnView.name = "btn-game-normal.png",
                this.btnView.id = "btnView",
                this.btnView.anchor.set(.5),
                this.btnView.position.set(200, 300),
                this.btnView.addChild(new PIXI.Text(Message.GetMessage("ca06").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnView.getChildAt(0).anchor.set(.5),
                this.btnView.getChildAt(0).position.set(0, 0),
                this.btnView.interactive = !0,
                this.btnView.buttonMode = !0,
                this.btnView.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnView, this.btnView, this)),
                this.btnFollow = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnFollow.name = "btn-game-normal.png",
                this.btnFollow.anchor.set(.5),
                this.btnFollow.position.set(200, 300),
                this.btnFollow.addChild(new PIXI.Text(Message.GetMessage("ca02").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnFollow.getChildAt(0).anchor.set(.5),
                this.btnFollow.getChildAt(0).position.set(0, -15),
                this.btnFollow.addChild(new PIXI.Text("",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 22,
                    fontWeight: "bold",
                    fill: ["#E7B70B"],
                    padding: 10,
                    align: "center"
                })),
                this.btnFollow.getChildAt(1).anchor.set(.5),
                this.btnFollow.getChildAt(1).position.set(0, 15),
                this.btnFollow.interactive = !0,
                this.btnFollow.buttonMode = !0,
                this.btnFollow.id = "btnFollow",
                this.btnFollow.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnFollow, this.btnFollow, this)),
                this.btnFold = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnFold.name = "btn-game-normal.png",
                this.btnFold.anchor.set(.5),
                this.btnFold.position.set(60, 300),
                this.btnFold.addChild(new PIXI.Text(Message.GetMessage("ca03").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnFold.getChildAt(0).anchor.set(.5),
                this.btnFold.getChildAt(0).position.set(0, 0),
                this.btnFold.interactive = !0,
                this.btnFold.buttonMode = !0,
                this.btnFold.id = "btnFold",
                this.btnFold.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnFold, this.btnFold, this)),
                this.btnBuyin = new Sprite(TextureCache["btn-def.png"]),
                this.btnBuyin.position.set(-460, 300),
                this.btnBuyin.anchor.set(.5);
                var t = new Sprite(TextureCache["ic-topup.png"]);
                t.anchor.set(.5),
                this.btnBuyin.addChild(t),
                this.btnBuyin.interactive = !0,
                this.btnBuyin.buttonMode = !0,
                this.btnBuyin.id = "btnBuyin",
                this.btnBuyin.on("pointerup", this.onButtonClick.bind(this.btnBuyin, this.btnBuyin, this)),
                this.buttonContainer.addChild(this.btnFold, this.btnView, this.btnAllIn, this.btnBet, this.btnRaise, this.btnFollow, this.btnConfirm, this.btnFlip, this.btnBuyin),
                this.InVisibleButtons(),
                this.InitAutoButton()
            }
            ,
            u.prototype.InitAutoButton = function() {
                this.btnAutoFold = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnAutoFold.name = "btn-game-normal.png",
                this.btnAutoFold.anchor.set(.5),
                this.btnAutoFold.position.set(200, 300),
                this.btnAutoFold.addChild(new PIXI.Text(Message.GetMessage("ca03").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                }));
                var t = new Sprite(TextureCache["poker.checkbox"]);
                t.name = "check",
                t.anchor.set(.5),
                t.position.set(-40, 0);
                var e = new Sprite(TextureCache["poker.tick"]);
                e.name = "check",
                e.anchor.set(.5),
                e.position.set(-40, 0),
                e.visible = !0,
                this.btnAutoFold.addChild(t, e),
                this.btnAutoFold.getChildAt(0).anchor.set(.5),
                this.btnAutoFold.getChildAt(0).position.set(10, 0),
                this.btnAutoFold.interactive = !0,
                this.btnAutoFold.buttonMode = !0,
                this.btnAutoFold.id = "btnAutoFold",
                this.btnAutoFold.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnAutoFold, this.btnAutoFold, this)),
                this.btnAutoCheck = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnAutoCheck.name = "btn-game-normal.png",
                this.btnAutoCheck.anchor.set(.5),
                this.btnAutoCheck.position.set(340, 300),
                this.btnAutoCheck.addChild(new PIXI.Text(Message.GetMessage("ca06").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                }));
                var n = new Sprite(TextureCache["poker.checkbox"]);
                n.name = "check",
                n.anchor.set(.5),
                n.position.set(-40, 0);
                var i = new Sprite(TextureCache["poker.tick"]);
                i.name = "check",
                i.anchor.set(.5),
                i.position.set(-40, 0),
                i.visible = !0,
                this.btnAutoCheck.addChild(n, i),
                this.btnAutoCheck.getChildAt(0).anchor.set(.5),
                this.btnAutoCheck.getChildAt(0).position.set(10, 0),
                this.btnAutoCheck.interactive = !0,
                this.btnAutoCheck.buttonMode = !0,
                this.btnAutoCheck.id = "btnAutoCheck",
                this.btnAutoCheck.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnAutoCheck, this.btnAutoCheck, this)),
                this.btnAutoCall = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnAutoCall.name = "btn-game-normal.png",
                this.btnAutoCall.anchor.set(.5),
                this.btnAutoCall.position.set(340, 300),
                this.btnAutoCall.addChild(new PIXI.Text(Message.GetMessage("ca02").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                }));
                var o = new Sprite(TextureCache["poker.checkbox"]);
                o.name = "check",
                o.anchor.set(.5),
                o.position.set(-40, 0);
                var a = new Sprite(TextureCache["poker.tick"]);
                a.name = "check",
                a.anchor.set(.5),
                a.position.set(-40, 0),
                a.visible = !0,
                this.btnAutoCall.addChild(o, a),
                this.btnAutoCall.addChild(new PIXI.Text("",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 22,
                    fontWeight: "bold",
                    fill: ["#E7B70B"],
                    padding: 10,
                    align: "center"
                })),
                this.btnAutoCall.getChildAt(0).anchor.set(.5),
                this.btnAutoCall.getChildAt(0).position.set(10, -15),
                this.btnAutoCall.getChildAt(3).anchor.set(.5),
                this.btnAutoCall.getChildAt(3).position.set(10, 15),
                this.btnAutoCall.interactive = !0,
                this.btnAutoCall.buttonMode = !0,
                this.btnAutoCall.id = "btnAutoCall",
                this.btnAutoCall.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.onButtonClick.bind(this.btnAutoCall, this.btnAutoCall, this)),
                this.autoButtonContainer = new Container,
                this.autoButtonContainer.addChild(this.btnAutoFold, this.btnAutoCheck, this.btnAutoCall),
                this.buttonContainer.addChild(this.autoButtonContainer),
                this.autoButtonContainer.visible = !1
            }
            ,
            u.prototype.DisableButton = function(t) {
                t && (t.interactive = !1,
                t.buttonMode = !1,
                t.name && (t.texture = TextureCache[t.name.replace("normal", "disable")]))
            }
            ,
            u.prototype.InVisibleButtons = function(t) {
                void 0 === t && (t = !1),
                this.InVisibleButton(this.btnFold),
                this.InVisibleButton(this.btnView),
                this.InVisibleButton(this.btnAllIn),
                this.InVisibleButton(this.btnBet),
                this.InVisibleButton(this.btnRaise),
                this.InVisibleButton(this.btnFollow),
                this.InVisibleButton(this.btnConfirm),
                t || this.InVisibleButton(this.btnFlip)
            }
            ,
            u.prototype.InVisibleButton = function(t) {
                t && (t.visible = !1)
            }
            ,
            u.prototype.EnableButton = function(t) {
                t && (t.interactive = !0,
                t.buttonMode = !0,
                t.texture = TextureCache[t.name],
                t.visible = !0)
            }
            ,
            u.prototype.onButtonClick = function(t, e) {
                var n = t.id;
                if (n)
                    switch (e.toggleBar(!1),
                    n) {
                    case "btnView":
                        e.hub.Bet(0, d.EPokerActionName.Check);
                        break;
                    case "btnFold":
                        e.hub.Bet(0, d.EPokerActionName.Fold);
                        break;
                    case "btnFollow":
                        e.hub.Bet(0, d.EPokerActionName.Call);
                        break;
                    case "btnAllIn":
                        e.hub.Bet(0, d.EPokerActionName.AllIn);
                        break;
                    case "btnBet":
                        e.onBetEvent();
                        break;
                    case "btnRaise":
                        e.onRaiseEvent();
                        break;
                    case "btnConfirm":
                        e.onConfirmEvent();
                        break;
                    case "btnFlip":
                        e.hub.flipCards();
                        break;
                    case "btnAutoFold":
                        e.btnAutoClick(t, d.EPokerAutoAction.FOLD);
                        break;
                    case "btnAutoCheck":
                        e.btnAutoClick(t, d.EPokerAutoAction.CHECK);
                        break;
                    case "btnAutoCall":
                        e.btnAutoClick(t, d.EPokerAutoAction.CALL);
                        break;
                    case "btnBuyin":
                        e.handleBuyin()
                    }
            }
            ,
            u.prototype.UpdateAccount = function(t, e, n) {
                var i = this.GetPlayerByAccountId(t.AccountID);
                if (i)
                    try {
                        i.player.Account = t,
                        i.UpdateBalance(e),
                        i.ShowMoney(n),
                        this.roomModel.Players[t.AccountID].Chips = e
                    } catch (t) {
                        console.log(t)
                    }
            }
            ,
            u.prototype.onBetEvent = function() {
                this.btnConfirm.visible = !0,
                this.initBar(d.EPokerActionName.Bet)
            }
            ,
            u.prototype.onRaiseEvent = function() {
                this.btnConfirm.visible = !0,
                this.initBar(d.EPokerActionName.Raise)
            }
            ,
            u.prototype.onConfirmEvent = function() {
                var t = this.betRaise
                  , e = this.barContainer.type;
                !t || t < 0 || !e || this.hub.Bet(t, e)
            }
            ,
            u.prototype.updateBetOrRaise = function(t, e) {
                null == e || void 0 === t || isNaN(t) || (this.betRaise = t,
                this.btnConfirm.getChildAt(1).text = this.formatNumber(t))
            }
            ,
            u.prototype.toggleBar = function(t) {
                void 0 === t && (t = !0),
                this.barContainer && (this.barContainer.visible = t)
            }
            ,
            u.prototype.DealerDown = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerClick,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            u.prototype.Delete = function() {
                window.removeEventListener("resize", this.resizeFunc);
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "poker" === t[e].data && t[e].kill();
                try {
                    this.application.view.remove(),
                    this.application.destroy(!0)
                } catch (t) {}
            }
            ,
            u.prototype.CheckGame = function(r, h) {
                var l = this;
                this.roomModel.CountPlayers < 2 ? this.ShowNotify(Message.GetMessage("me7")) : this.roomModel.IsPlaying ? setTimeout(function() {
                    var t, e = r.GameLoop, n = e.Phrase, i = e.CommunityCards, o = e.CurrentState, a = o.Account, s = o.Actions;
                    n >= d.EPokerPhrases.Showdown && (0 === r.ClientElapsed || r.ClientElapsed < 5) || (t = h.time,
                    l.startTimer(a, s, t),
                    n > d.EPokerPhrases.PreFlop && l.dealPreFlop(!0),
                    l.renderCardInJoin(i, n),
                    l.checkGamePhrase())
                }, 300) : this.ShowNotify(Message.GetMessage("me6"))
            }
            ,
            u.prototype.ShowNotify = function(t, e) {
                var n, i = this;
                this.txtNotify.scale.set(.01),
                this.txtNotify.visible = !0,
                this.txtNotify.children[0].text = t,
                TweenMax.to(this.txtNotify.scale, .4, {
                    data: "poker",
                    x: 1,
                    y: 1
                }),
                e && (n = this,
                setTimeout(function() {
                    TweenMax.to(i.txtNotify.scale, .2, {
                        data: "poker",
                        x: .01,
                        y: .01
                    }),
                    setTimeout(function() {
                        n.txtNotify.visible = !1
                    }, 300)
                }, e))
            }
            ,
            u.prototype.UpdateConnectionStatus = function(t, e) {
                var n = this.GetPlayerByAccountId(t);
                n && n.UpdateStatus(e)
            }
            ,
            u.prototype.notifyChangePhrase = function(t, e) {
                console.log("notifyChangePhrase", this.roomModel, t, e),
                this.roomModel = t,
                this.GetCurrentPlayer(),
                this.checkGamePhrase()
            }
            ,
            u.prototype.notifyStartActions = function(t, e) {
                this.startTimer(t.Account, t.Actions, e)
            }
            ,
            u.prototype.checkGamePhrase = function(t) {
                void 0 === t && (t = !1);
                var e = this.roomModel.GameLoop.Phrase;
                switch (this.updateTableInfo(),
                this.hideButton(this.btnBuyin),
                this.showBuyIn(-1),
                e) {
                case d.EPokerPhrases.Waiting:
                    this.onWaiting(),
                    this.hideButton(this.btnBuyin, !0),
                    this.RenderPlayers(this.roomModel.Players);
                    break;
                case d.EPokerPhrases.PreFlop:
                    this.onPreFlop();
                    break;
                case d.EPokerPhrases.Flop:
                    this.onFlop();
                    break;
                case d.EPokerPhrases.Turn:
                    this.onTurn();
                    break;
                case d.EPokerPhrases.River:
                    this.onRiver();
                    break;
                case d.EPokerPhrases.Showdown:
                    this.onShowdown();
                    break;
                case d.EPokerPhrases.AfterShowdow:
                    this.onAfterShowdow()
                }
            }
            ,
            u.prototype.onWaiting = function() {
                var t = this.roomModel;
                this.updateTableStatus(Message.GetMessage("ca111")),
                this.clearForNewGame(t)
            }
            ,
            u.prototype.onPreFlop = function() {
                var t = this.roomModel
                  , e = t.GameLoop
                  , n = t.Players
                  , i = e.TempPot;
                for (var o in this.updateTableStatus(),
                this.endPhraseAnimation(i, n, d.EPokerPhrases.PreFlop, t),
                this.clearForNewPhrase(t),
                this.HideEffect(),
                this.showBetChip(),
                this.dealPreFlop(),
                this.ChangeOwner(this.roomModel.OwnerId),
                n) {
                    var a = this.GetPlayerByAccountId(o);
                    a && (a.ChipInPhrase = n[o].Chips)
                }
            }
            ,
            u.prototype.onFlop = function() {
                var t = this
                  , e = this.roomModel
                  , n = e.GameLoop
                  , i = e.Players
                  , o = n.TempPot;
                this.updateTableStatus(),
                setTimeout(function() {
                    t.flipCardInFlop(n.CommunityCards)
                }, 1e3),
                this.endPhraseAnimation(o, i, d.EPokerPhrases.Flop, e),
                this.clearForNewPhrase(e)
            }
            ,
            u.prototype.onTurn = function() {
                var t = this
                  , e = this.roomModel
                  , n = e.GameLoop
                  , i = e.Players
                  , o = n.TempPot;
                setTimeout(function() {
                    t.drawCardInRow(n.CommunityCards[3].OrdinalValue, 3)
                }, 1e3),
                this.endPhraseAnimation(o, i, d.EPokerPhrases.Turn, e)
            }
            ,
            u.prototype.onRiver = function() {
                var t = this
                  , e = this.roomModel
                  , n = e.GameLoop
                  , i = e.Players
                  , o = n.TempPot;
                setTimeout(function() {
                    t.drawCardInRow(n.CommunityCards[4].OrdinalValue, 4)
                }, 1e3),
                this.endPhraseAnimation(o, i, d.EPokerPhrases.River, e)
            }
            ,
            u.prototype.onShowdown = function() {
                var t = this.roomModel
                  , e = t.GameLoop
                  , n = t.Players
                  , i = e.TempPot;
                this.endPhraseAnimation(i, n, d.EPokerPhrases.Showdown, t),
                this.renderPublicCard(e.CommunityCards),
                this.InVisibleButtons(!0),
                this.autoButtonContainer.visible = !1,
                this.btnAutoFold.visible = !1,
                this.btnAutoCall.visible = !1,
                this.btnAutoCheck.visible = !1;
                var o = this.roomModel.Players;
                for (var a in o) {
                    var s = o[a].AccountID;
                    this.GetPlayerByAccountId(s).showAction()
                }
            }
            ,
            u.prototype.onAfterShowdow = function() {
                var t = this.roomModel;
                console.log("onAfterShowdow", t),
                this.clearForNewGame(t, !0)
            }
            ,
            u.prototype.showBetChip = function() {
                console.log("showBetChip", this.roomModel);
                var t = this.roomModel.Players;
                for (var e in t) {
                    var n, i = t[e], o = i.AccountID, a = i.BetInRound, s = i.Chips;
                    0 !== a && (n = this.GetPlayerByAccountId(o)) && (n.UpdateBetting(a),
                    n.UpdateBalance(s))
                }
            }
            ,
            u.prototype.clearForNewPhrase = function(t, e) {
                void 0 === e && (e = !1);
                var n, i = t.Players;
                for (var o in t.GameLoop.Phrase,
                this.resetAutoButtons(),
                this.frameSpecialResult && this.frameSpecialResult.removeChildren(),
                i)
                    (n = this.GetPlayerByAccountId(o)) && (i[o].IsAllIn || n.showAction()),
                    o == this.currentPlayer.AccountID && (this.displayCheckAuto(i[o].AutoList),
                    this.changeCheckAuto(i[o].Auto))
            }
            ,
            u.prototype.displayCheckAuto = function(t) {
                this.resetAutoButtons();
                var e = this;
                (t[1].Valid || t[2].Valid || t[3].Valid || t[4].Valid) && (t[2].Valid && (e.DisableButton(e.btnAutoCheck),
                e.EnableButton(e.btnAutoCall),
                e.btnAutoCall.getChildAt(3).text = p.Util.ParseMoney(t[2].Value)),
                t[3].Valid && (e.DisableButton(e.btnAutoCall),
                e.EnableButton(e.btnAutoCheck)),
                t[4].Valid && e.EnableButton(e.btnAutoFold))
            }
            ,
            u.prototype.resetAutoButtons = function(t) {
                void 0 === t && (t = !0),
                this.InVisibleButtons(),
                this.autoButtonContainer.visible = t,
                this.btnAutoFold.visible = !1,
                this.btnAutoCall.visible = !1,
                this.btnAutoCheck.visible = !1
            }
            ,
            u.prototype.disableAutoTicks = function() {
                this.btnAutoFold.getChildAt(2).visible = !1,
                this.btnAutoCall.getChildAt(2).visible = !1,
                this.btnAutoCheck.getChildAt(2).visible = !1
            }
            ,
            u.prototype.changeCheckAuto = function(t) {
                this.disableAutoTicks(),
                console.log("changeCheckAuto", t),
                1 == t ? console.log("action", 1) : 2 == t ? this.btnAutoCall.getChildAt(2).visible = !0 : 3 == t ? this.btnAutoCheck.getChildAt(2).visible = !0 : 4 == t && (this.btnAutoFold.getChildAt(2).visible = !0)
            }
            ,
            u.prototype.updateTableStatus = function(t) {
                t ? (this.txtNotify.visible = !0,
                this.txtNotify.getChildAt(0).text = t) : this.txtNotify.visible = !1
            }
            ,
            u.prototype.endPhraseAnimation = function(t, e, n, i) {
                var o = this;
                if (console.log("endPhraseAnimation", t, e, n, i),
                0 !== t)
                    for (var a in e) {
                        var s = e[a].AccountID
                          , r = o.GetPlayerByAccountId(s);
                        e[a].IsAllIn || r.showAction(),
                        !r || r.betMoney <= 0 || r.ChiptoDealer(function() {
                            o.updatePot(t)
                        })
                    }
                else
                    this.updatePot(0)
            }
            ,
            u.prototype.notifyFinishActions = function(e, t, n, i) {
                console.log("notifyFinishActions", e, t, n, i.chips);
                var o = this
                  , a = t.action
                  , s = t.amount
                  , r = t.betInRound;
                i.chips,
                o.RemoveTimer(),
                o.toggleBar(!1),
                e === o.currentPlayer.AccountID && o.InVisibleButtons();
                var h = o.GetPlayerByAccountId(e);
                if (h) {
                    if (0 < s && h.UpdateBetting(r),
                    a == d.EPokerActionName.Bet || a == d.EPokerActionName.Call || a == d.EPokerActionName.Raise || a == d.EPokerActionName.AllIn)
                        h.ChipInPhrase -= s,
                        h.UpdateBalance(h.ChipInPhrase),
                        h.BetInRound = r;
                    else if (a == d.EPokerActionName.Fold) {
                        h.fold();
                        var l = o.drawCardsContainer.children.filter(function(t) {
                            return t.accountID == e
                        });
                        if (l && 0 < l.length)
                            for (var c = 0; c < l.length; c++) {
                                var u = l[c];
                                u.texture = TextureCache["joker.png"],
                                o.drawCardsContainer.addChild(u),
                                TweenMax.to(u.scale, 1, {
                                    data: "poker",
                                    x: 0,
                                    y: 0
                                }),
                                TweenMax.to(u, 1, {
                                    data: "poker",
                                    x: o.dealer.x,
                                    y: o.dealer.y,
                                    alpha: 0
                                })
                            }
                    }
                    this.currentPlayer.AccountID == e && (this.displayCheckAuto(i.autoList),
                    this.changeCheckAuto(i.auto)),
                    h.showAction(this.actionResult[a])
                }
            }
            ,
            u.prototype.RemoveDrawCard = function() {
                this.drawCardsContainer.removeChildren(),
                this.drawCardsContainer.visible = !0
            }
            ,
            u.prototype.dealPreFlop = function(t) {
                void 0 === t && (t = !1),
                this.RemoveDrawCard(),
                this.arrDraw = [];
                var e = []
                  , n = this.GetPlayerByAccountId(this.roomModel.OwnerId);
                e.push(n.pos);
                for (var i = n.pos + 1; i < 6; i++)
                    (o = this.GetPlayerByPosition(i)) && 0 < this.roomModel.Players[o.accountId].Status && e.push(i);
                for (var o, i = 0; i < n.pos; i++)
                    (o = this.GetPlayerByPosition(i)) && 0 < this.roomModel.Players[o.accountId].Status && e.push(i);
                for (var a = this, s = 0, r = a.currentPlayer, i = 0; i < 2; i++)
                    for (var h = 0; h < e.length; h++) {
                        var l = new Sprite(TextureCache["joker.png"])
                          , c = this.GetPlayerByPosition(e[h]).accountId;
                        l.anchor.set(.5),
                        l.position.set(this.dealer.x, this.dealer.y),
                        l.scale.set(.01),
                        l.rot = 10 * (2 * i - 1) * Math.PI / 180,
                        l.rotation = 2 * Math.PI,
                        l.i = i,
                        l.pos = this.cardPos[e[h]],
                        l.p = e[h],
                        l.obj = c === this.currentPlayer.AccountID ? this.cardOwn : this.cardOther;
                        var u = c === this.currentPlayer.AccountID;
                        (l.isOwner = u) && (l.value = r.Cards[i].OrdinalValue),
                        l.accountID = c,
                        l.zIndex = 10,
                        this.arrDraw.push(l),
                        this.drawCardsContainer.addChild(l)
                    }
                for (i = 0; i < this.arrDraw.length; i++)
                    !function(t) {
                        TweenMax.to(a.arrDraw[t], .3, {
                            data: "poker",
                            delay: .075 * t,
                            x: a.arrDraw[t].pos[0] + (a.arrDraw[t].i - 1) * (0 === a.arrDraw[t].p ? 35 : 20),
                            y: a.arrDraw[t].pos[1] + (1 !== a.arrDraw[t].i && 0 === a.arrDraw[t].p ? -1 : 0),
                            rotation: a.arrDraw[t].rot
                        }),
                        TweenMax.to(a.arrDraw[t].scale, .3, {
                            data: "poker",
                            delay: .075 * t,
                            x: a.arrDraw[t].obj.width / a.cardOri.width,
                            y: a.arrDraw[t].obj.height / a.cardOri.height,
                            onComplete: function() {
                                a.arrDraw[t].isOwner && 0 < r.Cards.length && (a.arrDraw[t].s = 1.4,
                                a.arrDraw[t].value = r.Cards[s++].OrdinalValue,
                                a.Flip(a.arrDraw[t]))
                            }
                        })
                    }(i)
            }
            ,
            u.prototype.startTimer = function(t, e, n) {
                var i = this;
                if (console.log("startTimer", t, e),
                t && e) {
                    var o = t === this.currentPlayer.AccountID
                      , a = o ? 138 : 118
                      , s = o ? 138 : 118;
                    this.RemoveTimer(),
                    this.timer = new p.Timer({
                        width: a,
                        height: s,
                        lineWidth: 4
                    }),
                    this.timer.startTimer(n, n);
                    var r = this.GetPlayerByAccountId(t);
                    try {
                        if (this.toggleBar(!1),
                        this.timer.position.set(r.avatar.x - (o ? 70 : 60), r.avatar.y - (o ? 70 : 60)),
                        this.playerContainer.addChild(this.timer),
                        t !== i.currentPlayer.AccountID)
                            return;
                        this.resetAutoButtons();
                        for (var h = 0; h < e.length; h++) {
                            var l = e[h]
                              , c = l.Action
                              , u = l.Min;
                            c == d.EPokerActionName.Check ? i.EnableButton(this.btnView) : c == d.EPokerActionName.Bet ? (i.EnableButton(this.btnBet),
                            i.betMin = l.Min,
                            i.betMax = l.Max) : c == d.EPokerActionName.Call ? (i.EnableButton(this.btnFollow),
                            this.btnFollow.getChildAt(1).text = p.Util.ParseMoney(u)) : c == d.EPokerActionName.Raise ? (i.EnableButton(this.btnRaise),
                            i.betMin = l.Min,
                            i.betMax = l.Max) : c == d.EPokerActionName.Fold ? i.EnableButton(this.btnFold) : c == d.EPokerActionName.AllIn ? i.EnableButton(this.btnAllIn) : c == d.EPokerActionName.Flip && i.EnableButton(this.btnFlip)
                        }
                    } catch (t) {}
                }
            }
            ,
            u.prototype.RemoveTimer = function() {
                if (this.timer)
                    try {
                        this.timer.clearTimer(),
                        this.timer = null
                    } catch (t) {}
            }
            ,
            u.prototype.flipCardInFlop = function(t, e) {
                void 0 === e && (e = {}),
                console.log("flipCardInFlop", t);
                var n = t.length;
                if (!(n < 3)) {
                    this.arrCardDealer = [];
                    for (var i = 0; i < n; i++) {
                        var o = new Sprite(TextureCache["joker.png"]);
                        o.anchor.set(.5),
                        o.scale.set(.01),
                        o.rotation = 2 * Math.PI,
                        o.position.set(this.dealer.x, this.dealer.y),
                        o.value = t[i].OrdinalValue,
                        o.posX = this.cardDealerPos.x + 85 * i,
                        o.posY = this.cardDealerPos.y,
                        o.s = this.cardDealerPos.s,
                        o.type = "public",
                        this.arrCardDealer.push(o),
                        this.drawCardsContainer.addChild(o)
                    }
                    var a = this.arrCardDealer.length;
                    if (0 !== a)
                        for (i = 0; i < a; i++)
                            this.Draw(this.arrCardDealer[i], .6 * i)
                }
            }
            ,
            u.prototype.Draw = function(t, e, n) {
                var i = this;
                TweenMax.to(t, .5, {
                    x: t.posX,
                    y: t.posY,
                    rotation: 0,
                    data: "poker",
                    delay: e
                }),
                TweenMax.to(t.scale, .5, {
                    x: t.s,
                    y: t.s,
                    rotation: 0,
                    data: "poker",
                    delay: e,
                    onComplete: function() {
                        0 <= t.value && i.Flip(t),
                        "function" == typeof n && n()
                    }
                })
            }
            ,
            u.prototype.Flip = function(t) {
                var e = this;
                if (t)
                    try {
                        TweenMax.to(t.scale, .3, {
                            data: "poker",
                            x: .01,
                            onComplete: function() {
                                t.texture = TextureCache[e.cardsMap[t.value]];
                                try {
                                    TweenMax.to(t.scale, .3, {
                                        data: "poker",
                                        x: t.s
                                    })
                                } catch (t) {}
                            }
                        })
                    } catch (t) {}
            }
            ,
            u.prototype.HideEffect = function() {
                try {
                    this.frameSpecialResult.removeChildren()
                } catch (t) {}
                this.txtResult.visible = !1
            }
            ,
            u.prototype.formatNumber = function(t) {
                return void 0 === t && (t = 0),
                t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".")
            }
            ,
            u);
            function u(t) {
                var f = h.call(this) || this;
                return f.updateChip = function(t) {
                    var e = -1;
                    (!t || t <= 0) && (t = f.currentPlayer.AccountID);
                    var n = f.GetPlayerByAccountId(t);
                    if (n) {
                        var i = f.roomModel.Players;
                        for (var o in i)
                            t == o && (e = i[o].Chips);
                        0 <= e && n.UpdateBalance(e)
                    }
                }
                ,
                f.Resize = function(t) {
                    try {
                        var e;
                        t.size = [$(window).width(), $(window).height()],
                        t.application.renderer.resize($(window).width(), $(window).height()),
                        t.size[0] < 1280 || t.size[1] < 720 ? (e = Math.min(t.size[0] / 1280, t.size[1] / 720),
                        t.mainContainer.scale.set(e)) : t.mainContainer.scale.set(1),
                        t.mainContainer.anchor.set(.5),
                        t.mainContainer.position.set(t.size[0] / 2, t.size[1] / 2)
                    } catch (t) {}
                }
                ,
                f.handleBuyin = function() {
                    var t, n, i, e, o, a = f, s = f.showBuyIn;
                    s && (t = f.roomModel,
                    n = t.MoneyType,
                    i = t.MinBet,
                    e = f.currentPlayer.Chips,
                    (o = 200 * i - e) <= 0 || s(n, i, i, o, function(t, e) {
                        a.hub.buyIn(i, n, t, !0)
                    }))
                }
                ,
                f.btnAutoClick = function(t, e) {
                    var n = f
                      , i = t.getChildAt(2).visible;
                    n.disableAutoTicks(),
                    i ? n.hub.Auto(d.EPokerAutoAction.NONE) : n.hub.Auto(e),
                    t.getChildAt(2).visible = !i
                }
                ,
                f.renderCardInJoin = function(t, e) {
                    var n = f
                      , i = 0;
                    e == d.EPokerPhrases.Turn ? i = 3 : e == d.EPokerPhrases.River && (i = 4);
                    for (var o = 0; o < i; o++)
                        n.drawCardInRow(t[o].OrdinalValue, o, function() {})
                }
                ,
                f.hideButton = function(t, e) {
                    if (void 0 === e && (e = !1),
                    e)
                        return t.interactive = !0,
                        t.buttonMode = !0,
                        void (t.alpha = 1);
                    t.interactive = !1,
                    t.buttonMode = !1,
                    t.alpha = .5
                }
                ,
                f.updateTableInfo = function() {
                    try {
                        var t = f.roomModel.CurrentGameLoopId;
                        f.lblSession.text = Message.GetMessage("ca95").toUpperCase() + (t <= 0 ? " #" : t)
                    } catch (t) {
                        console.log(t)
                    }
                }
                ,
                f.refund = function(t, e, n, i) {
                    console.log("refund to players", t, e, n, i);
                    var o = f;
                    o.updatePot(i);
                    var a = o.GetPlayerByAccountId(t);
                    !a || e <= 0 || a.ChipRefund(function() {
                        a.ShowMoney(e),
                        a.UpdateBalance(n)
                    })
                }
                ,
                f.flyChipToDealer = function(t) {
                    t && t.ChiptoDealer()
                }
                ,
                f.updatePot = function(t) {
                    void 0 === t && (t = -1);
                    var e = f;
                    if (t <= 0) {
                        if (!f.potChip)
                            return;
                        try {
                            f.chipContainer.removeChild(f.potChip),
                            f.potChip = null
                        } catch (t) {}
                    } else
                        f.potChip ? f.potChip.getChildAt(1).text = e.formatNumber(t) : (f.potChip = new Sprite(TextureCache["bg-chip.png"]),
                        f.potChip.anchor.set(0, .5),
                        f.potChip.position.set(f.dealerChipPos[0], f.dealerChipPos[1]),
                        f.potChip.visible = !1,
                        f.potChip.addChild(new Sprite(TextureCache["chip-in-game.png"])),
                        f.potChip.children[0].anchor.set(0, .5),
                        f.potChip.children[0].scale.set(.6),
                        f.potChip.children[0].x = 5,
                        f.potChip.addChild(new PIXI.Text(e.formatNumber(t),{
                            fontFamily: "Roboto-Bold",
                            fontSize: 14,
                            fill: [1 === f.roomModel.MoneyType ? "yellow" : "white"]
                        })),
                        f.potChip.children[1].x = 30,
                        f.potChip.children[1].anchor.set(0, .5),
                        f.chipContainer.addChild(f.potChip)),
                        f.potChip.visible = !0,
                        f.potChip.Chips = t
                }
                ,
                f.GetPlayerActive = function() {
                    var t = f.roomModel.Players;
                    return null == t || Object.keys(t).length <= 0 ? null : f.roomModel.Players.filter(function(t) {
                        return t.PlayerStatus == d.EPlayerStatus.Playing
                    })
                }
                ,
                f.cardDealerPos = {
                    x: -200,
                    y: -50,
                    s: 1.2
                },
                f.drawCardInRow = function(t, e, n) {
                    var i = new Sprite(TextureCache["joker.png"]);
                    i.anchor.set(.5),
                    i.scale.set(.01),
                    i.rotation = 2 * Math.PI,
                    i.position.set(f.dealer.x, f.dealer.y),
                    i.value = t,
                    i.posX = f.cardDealerPos.x + 85 * e,
                    i.posY = f.cardDealerPos.y,
                    i.s = f.cardDealerPos.s,
                    i.type = "public",
                    f.drawCardsContainer.addChild(i),
                    f.Draw(i, 0, n)
                }
                ,
                f.renderPublicCard = function(e, n) {
                    void 0 === n && (n = !0),
                    console.log("renderPublicCard", e, f.roomModel.Players);
                    try {
                        var l = f
                          , i = e.length
                          , t = l.drawCardsContainer.children.filter(function(t) {
                            return "public" == t.type
                        }).length;
                        if ((i == t || 0 == i && n) && l.showResult(),
                        t < i)
                            for (var o = t; o < i; o++)
                                !function(t) {
                                    l.drawCardInRow(e[t].OrdinalValue, t, function() {
                                        t == i - 1 && n && l.showResult()
                                    })
                                }(o);
                        if (5 == i) {
                            var c = l.roomModel.Players;
                            for (var a in c)
                                !function(t) {
                                    if (t == l.currentPlayer.AccountID)
                                        return;
                                    var e = c[t]
                                      , n = e.AccountID
                                      , i = e.Status
                                      , o = e.Cards
                                      , a = e.BestHandInfo.Name;
                                    if (0 < i && 0 < a) {
                                        var s = l.drawCardsContainer.children.filter(function(t) {
                                            return t.accountID == n
                                        });
                                        console.log("render player card", s, e);
                                        for (var r = 0; r < 2; r++) {
                                            var h = s[r];
                                            h.s = h.scale.x,
                                            h.value = o[r].OrdinalValue,
                                            l.Flip(h)
                                        }
                                    }
                                }(a)
                        }
                    } catch (t) {}
                }
                ,
                f.showResult = function(i) {
                    void 0 === i && (i = !1);
                    var u = f
                      , p = f.roomModel
                      , s = p.Players
                      , r = p.GameLoop.ListWinnerIDs
                      , d = 0;
                    console.log("showResult", p, s, r);
                    for (var t in s)
                        !function(t) {
                            var e = s[t];
                            if (e.Status <= 0)
                                return;
                            e.IsFold && d++;
                            var n = u.GetPlayerByAccountId(t);
                            n && (i ? n.Reset() : 0 < e.Result.Revenue && TweenMax.to(n, 2, {
                                onComplete: function() {
                                    n.ShowWin()
                                }
                            }))
                        }(t);
                    for (var h = 0, e = 0; e < u.drawCardsContainer.children.length; e++)
                        u.drawCardsContainer.getChildAt(e).tint = 10066329;
                    for (var n in r)
                        !function(t) {
                            var l = r[t]
                              , e = u.GetPlayerByAccountId(l);
                            if (!e)
                                return;
                            var c = s[l]
                              , n = c.Result.Refund
                              , i = c.Chips
                              , o = Number((3e3 + 4e3 * h) / 1e3);
                            TweenMax.to(e, o, {
                                onComplete: function() {
                                    try {
                                        var t = c.BestHandInfo
                                          , e = c.BestHandInfo.Name
                                          , i = c.Cards
                                          , o = t.CardValues[0]
                                          , n = t.CardValues[1]
                                          , a = u.drawCardsContainer.children.filter(function(t) {
                                            return t.accountID == l
                                        })
                                          , s = u.drawCardsContainer.children.filter(function(t) {
                                            return "public" == t.type
                                        });
                                        console.log("that.drawCardsContainer", u.drawCardsContainer.children, a, s),
                                        0 < e && 0 < n.length && d < p.CountActivePlayer - 1 && u.showSpecialResult(e);
                                        for (var r = 0; r < u.drawCardsContainer.children.length; r++)
                                            u.drawCardsContainer.getChildAt(r).tint = 10066329;
                                        if (0 == o.length && 0 == n.length)
                                            for (r = 0; r < u.drawCardsContainer.children.length; r++) {
                                                var h = u.drawCardsContainer.getChildAt(r);
                                                h && h.accountID && h.accountID == l && (h.tint = 16777215)
                                            }
                                        else {
                                            for (r = 0; r < o.length; r++)
                                                !function(e) {
                                                    var t, n = i.find(function(t) {
                                                        return t.OrdinalValue == o[e]
                                                    });
                                                    n && (t = i.indexOf(n),
                                                    a[t].tint = 16777215)
                                                }(r);
                                            for (r = 0; r < n.length; r++)
                                                !function(e) {
                                                    var t = s.find(function(t) {
                                                        return t.value == n[e]
                                                    });
                                                    t && (t.tint = 16777215)
                                                }(r)
                                        }
                                    } catch (t) {}
                                }
                            });
                            var a = Number((2600 + 4e3 * h) / 1e3);
                            e.ChipToPlayer(a, function() {
                                e.ShowMoney(n),
                                e.UpdateBalance(i),
                                u.updatePot()
                            }),
                            h++
                        }(n)
                }
                ,
                f.clearForNewGame = function(t, e) {
                    void 0 === e && (e = !1);
                    t.ClientTotalTime;
                    var n = t.Players;
                    f.showResult(!0),
                    f.updatePot(-1),
                    f.RemoveDrawCard(),
                    f.DeleteTween(),
                    f.CheckPlayer(),
                    f.showSpecialResult(),
                    f.btnFlip.visible = !1;
                    try {
                        f.frameSpecialResult.removeChildren()
                    } catch (t) {}
                    if (f.txtResult.visible = !1,
                    f.barContainer && f.barContainer.clearDragging(),
                    f.chipContainer) {
                        try {
                            f.chipContainer.destroy({
                                children: !0
                            })
                        } catch (t) {}
                        f.chipContainer = new Container,
                        f.InitChipBg()
                    }
                    for (var i in n) {
                        var o = f.GetPlayerByAccountId(i);
                        o && o.Reset()
                    }
                }
                ,
                f.DeleteTween = function() {
                    for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                        "poker" === t[e].data && t[e].kill()
                }
                ,
                f.showSpecialResult = function(t) {
                    if (f.txtResult.visible = !1,
                    f.frameSpecialResult && f.frameSpecialResult.removeChildren(),
                    t)
                        if (Number(t) < 5) {
                            var e = "";
                            switch (t) {
                            case 0:
                                e = "";
                                break;
                            case 1:
                                e = "ca30";
                                break;
                            case 2:
                                e = "ca14";
                                break;
                            case 3:
                                e = "ca15";
                                break;
                            case 4:
                                e = "ca16"
                            }
                            "" != e && (f.txtResult.getChildAt(0).text = Message.GetMessage(e),
                            f.txtResult.visible = !0)
                        } else {
                            var n, i, o;
                            switch (t) {
                            case 5:
                                n = "poker.sanh",
                                i = f.frameSanh[f.lang];
                                break;
                            case 6:
                                n = "poker.thung",
                                i = f.frameThung[f.lang];
                                break;
                            case 7:
                                n = "poker.culu",
                                i = f.frameCuLu[f.lang];
                                break;
                            case 8:
                                n = "poker.tuquy",
                                i = f.frameTuQuy[f.lang];
                                break;
                            default:
                                n = "poker.thungPS",
                                i = f.frameThungPhaSanh[f.lang]
                            }
                            "" != n && (o = "vi" === f.lang ? framesFromTilesetImage(n, 560, 60) : i.map(function(t) {
                                return frame(TextureCache[n], t[0], t[1], t[2], t[3])
                            }),
                            f.frameSpecialResult = new AnimatedSprite(o),
                            f.frameSpecialResult.play(),
                            f.frameSpecialResult.animationSpeed = .5,
                            f.frameSpecialResult.anchor.set(.5),
                            f.frameSpecialResult.position.y = 50,
                            f.frameContainer.addChild(f.frameSpecialResult),
                            f.frameSpecialResult.visible = !0)
                        }
                    else
                        f.frameSpecialResult && (f.frameSpecialResult.visible = !1)
                }
                ,
                f.flipCard = function(e, t) {
                    f.btnFlip.visible = !1;
                    var n = f.GetPlayerByAccountId(e)
                      , i = f.currentPlayer.AccountID
                      , o = f.drawCardsContainer.children.filter(function(t) {
                        return t.accountID == e
                    });
                    if (n && i != e && o)
                        for (var a = 0; a < 2; a++) {
                            var s = o[a];
                            s.s = s.scale.x,
                            s.value = t[a].OrdinalValue || t[a].ordinalValue,
                            f.Flip(s)
                        }
                }
                ,
                f.size = t.size,
                f.target = t.target,
                f.token = t.token,
                f.showBuyIn = t.showBuyIn,
                f.loader = new s.default,
                f.currencyId = t.currencyID,
                f.lang = Message.GetLanguageCode(),
                f.ready = !1,
                f.isLoad = !1,
                f
            }
            e.games = c
        },
        43: function(t, e, n) {
            "use strict";
            var i, o = this && this.__extends || (i = function(t, e) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function n() {
                    this.constructor = t
                }
                i(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var a, s = n(0), r = (a = s.Hub,
            o(h, a),
            h.prototype.Listen = function() {
                a.prototype.Listen.call(this);
                var h = this
                  , t = h.connection;
                t.on("acceptToJoin", function(t, e, n, i) {
                    console.log("acceptToJoin", t, e, n, i)
                }),
                t.on("notifyChangePhrase", function(t, e) {
                    h.game && h.game.notifyChangePhrase(t, e)
                }),
                t.on("notifyStartActions", function(t, e, n) {
                    if (console.log("notifyStartActions", t, e, n),
                    h.game) {
                        var i = e.account
                          , o = e.actions;
                        if (i) {
                            e.Account = i,
                            e.Actions = o;
                            for (var a = 0, s = e.Actions; a < s.length; a++) {
                                var r = s[a];
                                r.Action = r.action,
                                r.Min = r.min,
                                r.Max = r.max
                            }
                        }
                        h.game.notifyStartActions(e, t)
                    }
                }),
                t.on("notifyFinishActions", function(t, e, n, i) {
                    h.game && h.game.notifyFinishActions(t, e, n, i)
                }),
                t.on("refund", function(t, e, n, i) {
                    h.game && h.game.refund(t, e, n, i)
                }),
                t.on("playerFlipCards", function(t, e) {
                    console.log("playerFlipCards", t, e),
                    h.game && h.game.flipCard(t, e)
                }),
                t.on("playerCheckAuto", function(t) {
                    console.log("playerCheckAuto", t),
                    h.game && h.game.changeCheckAuto(t)
                }),
                h.connection.on("updateAccount", function(t, e, n) {
                    console.log("updateAccount", t, e, n),
                    h.game && h.game.UpdateAccount(t, e, n)
                }),
                h.connection.on("changeOwner", function(t) {
                    h.game && h.game.ChangeOwner(t)
                })
            }
            ,
            h.prototype.PlayNowPoker = function(t, e, n, i) {
                this.connection.invoke("PlayNow", t, e, n, i).then(function(t) {
                    console.log("PlayNowPoker", t)
                })
            }
            ,
            h);
            function h(t, e, n) {
                var i = a.call(this, t, e, n) || this;
                return i.Bet = function(t, e) {
                    this.connection.invoke("Bet", t, e).then(function(t) {
                        console.log("Bet", t)
                    })
                }
                ,
                i.Auto = function(e) {
                    this.connection.invoke("RegisterAuto", e).then(function(t) {
                        console.log("Auto", e, t)
                    })
                }
                ,
                i.flipCards = function() {
                    console.log("user flipCards"),
                    this.connection.invoke("FlipCards").then(function(t) {
                        console.log("FlipCards", t)
                    })
                }
                ,
                i.buyIn = function(t, e, n, i) {
                    this.connection.invoke("BuyIn", t, e, n, i).then(function(t) {})
                }
                ,
                i
            }
            e.default = r
        },
        44: function(t, e, n) {
            "use strict";
            var i, o = this && this.__extends || (i = function(t, e) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function n() {
                    this.constructor = t
                }
                i(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }
            ), r = this && this.__spreadArrays || function() {
                for (var t = 0, e = 0, n = arguments.length; e < n; e++)
                    t += arguments[e].length;
                for (var i = Array(t), o = 0, e = 0; e < n; e++)
                    for (var a = arguments[e], s = 0, r = a.length; s < r; s++,
                    o++)
                        i[o] = a[s];
                return i
            }
            ;
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var a, s = n(0), h = (a = s.Assets,
            o(l, a),
            l);
            function l() {
                var s = a.call(this) || this;
                return s.assets = [{
                    id: "",
                    src: "/assets/images/common/bai.json"
                }, {
                    id: "",
                    src: "/assets/images/common/betbar.json"
                }, {
                    id: "",
                    src: "/assets/images/common/common.json"
                }, {
                    id: "",
                    src: "/assets/images/common/dealer.json"
                }, {
                    id: "",
                    src: "/assets/images/common/firework.json"
                }, {
                    id: "win.effect",
                    src: "/assets/images/common/win.png"
                }, {
                    id: "table-1",
                    src: "/assets/images/common/table-vip.png"
                }, {
                    id: "table-0",
                    src: "/assets/images/common/table-normal.png"
                }, {
                    id: "poker.checkbox",
                    src: "/assets/images/poker/checkbox.png"
                }, {
                    id: "poker.tick",
                    src: "/assets/images/poker/tick.png"
                }],
                s.loadAssets = function() {
                    var t = Message.GetLanguageCode();
                    if (t) {
                        try {
                            var e = {
                                id: "poker.culu",
                                src: "/assets/images/poker/cu-lu-" + t + ".png"
                            }
                              , n = {
                                id: "poker.sanh",
                                src: "/assets/images/poker/sanh-" + t + ".png"
                            }
                              , i = {
                                id: "poker.thung",
                                src: "/assets/images/poker/thung-" + t + ".png"
                            }
                              , o = {
                                id: "poker.thungPS",
                                src: "/assets/images/poker/thung-pha-sanh-" + t + ".png"
                            }
                              , a = {
                                id: "poker.tuquy",
                                src: "/assets/images/poker/tu-quy-" + t + ".png"
                            };
                            s.assets = r(s.assets, [a, e, n, i, o])
                        } catch (t) {
                            console.error(t)
                        }
                        s.add(s.assets)
                    } else
                        s.add(s.assets)
                }
                ,
                s.loadAssets(),
                s
            }
            e.default = h
        },
        45: function(t, e, n) {
            "use strict";
            var i, o = this && this.__extends || (i = function(t, e) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function n() {
                    this.constructor = t
                }
                i(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var a, s = n(0), r = (a = s.Player,
            o(h, a),
            h.prototype.UpdateStatus = function(t) {
                1 === t ? this.isUnLeave || this.isLeave ? (this.isUnLeave = !1,
                this.leaveStatus.visible = !1,
                this.isLeave = !1,
                this.accountId === this.game.currentPlayer.AccountID && this.game.ShowStatus(Message.GetMessage("me9"), 2e3)) : this.disStatus.visible = !1 : 2 === t ? (this.isLeave = !0,
                this.leaveStatus.visible = !0,
                this.accountId === this.game.currentPlayer.AccountID && this.game.ShowStatus(Message.GetMessage("me8"), 2e3)) : 0 === t && (this.disStatus.visible = !0)
            }
            ,
            h.prototype.UpdateBetting = function(t) {
                var e = new Sprite(TextureCache["chip-in-game.png"])
                  , n = this.game.chipPos[this.pos]
                  , i = this;
                if (!t || t <= 0)
                    return this.betMoney = 0,
                    this.chipContainer.removeChildren(),
                    void (i.game.arrChipBg[i.pos].visible = !1);
                e.anchor.set(0, .5),
                e.scale.set(.01),
                e.position.set(this.avatar.x, this.avatar.y),
                this.chipContainer.addChild(e),
                this.chipContainer.visible = !0,
                0 < t && (TweenMax.to(e, .5, {
                    data: "poker",
                    x: n[0] + 5,
                    y: n[1]
                }),
                TweenMax.to(e.scale, .5, {
                    data: "poker",
                    x: .6,
                    y: .6
                }),
                setTimeout(function() {
                    e.visible = !1,
                    i.game.arrChipBg[i.pos].visible = !0,
                    i.game.arrChipBg[i.pos].children[1].text = s.Util.ParseMoney(t)
                }, 500)),
                this.betMoney = t
            }
            ,
            h.prototype.ShowMoney = function(t) {
                var e = new PIXI.Text((0 < t ? "+" : "") + s.Util.ParseMoney(t),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 20,
                    fill: "yellow"
                });
                e.anchor.set(.5),
                e.position.set(this.avatar.x, this.avatar.y),
                this.effectContainer.addChild(e),
                TweenMax.to(e, 2, {
                    data: "poker",
                    y: e.y - 100,
                    alpha: 0
                })
            }
            ,
            h);
            function h(t) {
                var s = a.call(this, t) || this;
                return s.isUnLeave = !1,
                s.isLeave = !1,
                s.betMoney = 0,
                s.isFold = !1,
                s.chipEffect = 15,
                s.BetInRound = 0,
                s.ChipInPhrase = 0,
                s.ActionColor = {
                    act_check: "bg-green-effect",
                    act_bet: "bg-violet-effect",
                    act_call: "bg-blue-effect",
                    act_raise: "bg-violet-effect",
                    act_fold: "bg-magenta-effect",
                    act_allin: "bg-orange-effect"
                },
                s.ActionLang = {
                    act_check: "ca06",
                    act_bet: "ca04",
                    act_call: "ca02",
                    act_raise: "ca01",
                    act_fold: "ca03",
                    act_allin: "ca05"
                },
                s.ShowWin = function() {
                    var t = new AnimatedSprite(s.game.framesWin);
                    t.anchor.set(.5),
                    0 == s.pos ? (t.scale.set(1.18),
                    t.y += 10) : (t.scale.set(1.05),
                    t.y += 8),
                    t.position.set(s.avatar.x, s.avatar.y + 10),
                    t.animationSpeed = .5,
                    t.play(),
                    s.effectContainer.addChild(t);
                    var e = new Sprite(TextureCache["thang-" + s.game.lang + ".png"]);
                    e.anchor.set(.5),
                    e.scale.set(0 === s.pos ? .9 : .8),
                    e.position.set(s.avatar.x, s.avatar.y + s.avatar.height / 2 - e.height / 2),
                    s.effectContainer.addChild(e)
                }
                ,
                s.ShowLose = function() {
                    var t = new Sprite(TextureCache["bg-black-effect.png"]);
                    t.anchor.set(.5);
                    var e = new Sprite(TextureCache["thua-" + s.game.lang + ".png"]);
                    e.anchor.set(.5),
                    t.addChild(e),
                    t.scale.set(0 === s.pos ? .9 : .8),
                    t.position.set(s.avatar.x, s.avatar.y + s.avatar.height / 2 - t.height / 2),
                    s.effectContainer.addChild(t)
                }
                ,
                s.Reset = function() {
                    if (s.effectContainer)
                        try {
                            s.effectContainer.destroy({
                                children: !0
                            })
                        } catch (t) {}
                    if (s.actionContainer)
                        try {
                            s.actionContainer.destroy({
                                children: !0
                            })
                        } catch (t) {}
                    if (s.chipContainer)
                        try {
                            s.chipContainer.destroy({
                                children: !0
                            })
                        } catch (t) {}
                    s.effectContainer = new Container,
                    s.actionContainer = new Container,
                    s.chipContainer = new Container,
                    s.game.resultContainer.addChild(s.chipContainer, s.actionContainer, s.effectContainer),
                    s.betMoney = 0,
                    s.isFold = !1,
                    s.updateAvatarFold(!1),
                    s.BetInRound = 0,
                    s.ChipInPhrase = 0
                }
                ,
                s.fold = function() {
                    s.isFold = !0,
                    s.updateAvatarFold(!0)
                }
                ,
                s.updateAvatarFold = function(t) {
                    void 0 === t && (t = !1),
                    s.avatar.tint = t ? 10066329 : 16777215
                }
                ,
                s.showAction = function(t) {
                    var e, n, i, o;
                    t ? (s.actionContainer.visible = !0,
                    s.actionContainer.removeChildren(),
                    e = s.ActionColor[t] + ".png",
                    (n = new Sprite(TextureCache[e])).anchor.set(.5),
                    n.scale.set(0 === s.pos ? .9 : .8),
                    n.position.set(s.avatar.x, s.avatar.y + s.avatar.height / 2 - n.height / 2),
                    i = Message.GetMessage(s.ActionLang[t]),
                    (o = new PIXI.Text(i.toUpperCase(),{
                        fontFamily: s.game.fontFace,
                        fontSize: 20,
                        fill: "#fff",
                        fontStyle: "italic"
                    })).anchor.set(.5),
                    o.position.set(s.avatar.x, s.avatar.y + s.avatar.height / 2 - n.height / 2),
                    s.actionContainer.addChild(n, o)) : s.actionContainer.visible = !1
                }
                ,
                s.ChiptoDealer = function(n) {
                    var i = s
                      , o = s.game.chipPos[s.pos];
                    s.chipContainer.visible = !0;
                    var a = s.game.dealerChipPos;
                    try {
                        i.betMoney = 0,
                        i.UpdateBetting(0);
                        for (var t = 0; t < i.chipEffect; t++)
                            !function(t) {
                                var e = new Sprite(TextureCache["chip-in-game.png"]);
                                e.anchor.set(.5),
                                e.scale.set(.6),
                                e.position.set(o[0] + 5, o[1]),
                                s.chipContainer.addChild(e),
                                TweenMax.to(e.scale, 1, {
                                    data: "poker",
                                    x: 1,
                                    y: 1,
                                    delay: .05 * t,
                                    alpha: 0
                                }),
                                TweenMax.to(e, 1, {
                                    data: "poker",
                                    x: a[0] + 50,
                                    y: a[1],
                                    delay: .05 * t,
                                    alpha: 0,
                                    onComplete: function() {
                                        e.visible = !1,
                                        t == i.chipEffect - 7 && "function" == typeof n && (i.game.arrChipBg[i.pos].visible = !1,
                                        n())
                                    }
                                })
                            }(t)
                    } catch (t) {}
                }
                ,
                s.ChipRefund = function(n) {
                    var i = s
                      , o = s.game.chipPos[s.pos];
                    s.chipContainer.visible = !0;
                    s.game.dealerChipPos;
                    try {
                        for (var t = 0; t < i.chipEffect; t++)
                            !function(t) {
                                var e = new Sprite(TextureCache["chip-in-game.png"]);
                                e.anchor.set(.5),
                                e.scale.set(.6),
                                e.position.set(o[0] + 5, o[1]),
                                s.chipContainer.addChild(e),
                                TweenMax.to(e, 0, {
                                    onComplete: function() {
                                        TweenMax.to(e.scale, 1, {
                                            data: "poker",
                                            x: 1,
                                            y: 1,
                                            delay: .05 * t,
                                            alpha: 0
                                        }),
                                        TweenMax.to(e, 1, {
                                            data: "poker",
                                            x: s.avatar.x,
                                            y: s.avatar.y,
                                            delay: .05 * t,
                                            alpha: 0,
                                            onComplete: function() {
                                                t == i.chipEffect - 7 && "function" == typeof n && n()
                                            }
                                        })
                                    }
                                })
                            }(t)
                    } catch (t) {
                        console.error(t)
                    }
                }
                ,
                s.ChipToPlayer = function(n, i) {
                    void 0 === n && (n = 0);
                    var o = s;
                    s.game.chipPos[s.pos];
                    s.chipContainer.visible = !0;
                    var a = s.game.dealerChipPos;
                    try {
                        for (var t = 0; t < o.chipEffect; t++)
                            !function(t) {
                                var e = new Sprite(TextureCache["chip-in-game.png"]);
                                e.anchor.set(.5),
                                e.scale.set(.6),
                                e.position.set(a[0] + 50, a[1]),
                                s.chipContainer.addChild(e),
                                TweenMax.to(e, n, {
                                    onComplete: function() {
                                        TweenMax.to(e.scale, 1, {
                                            data: "poker",
                                            x: 1,
                                            y: 1,
                                            delay: .05 * t,
                                            alpha: 0
                                        }),
                                        TweenMax.to(e, 1, {
                                            data: "poker",
                                            x: s.avatar.x,
                                            y: s.avatar.y,
                                            delay: .05 * t,
                                            alpha: 0,
                                            onComplete: function() {
                                                t == o.chipEffect - 7 && "function" == typeof i && i()
                                            }
                                        })
                                    }
                                })
                            }(t)
                    } catch (t) {
                        console.error(t)
                    }
                }
                ,
                s.chipContainer = new Container,
                s.effectContainer = new Container,
                s.actionContainer = new Container,
                s.Reset(),
                s
            }
            e.default = r
        },
        46: function(t, e, n) {
            "use strict";
            var i, o, a, s;
            Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            e.variable = e.EPokerAutoAction = e.EPokerPhrases = e.EPlayerStatus = e.EPokerActionName = void 0,
            (i = e.EPokerActionName || (e.EPokerActionName = {}))[i.Waiting = -1] = "Waiting",
            i[i.StartGame = 1e3] = "StartGame",
            i[i.Check = 1] = "Check",
            i[i.Bet = 2] = "Bet",
            i[i.Call = 3] = "Call",
            i[i.Raise = 4] = "Raise",
            i[i.Fold = 5] = "Fold",
            i[i.AllIn = 6] = "AllIn",
            i[i.Flip = 7] = "Flip",
            (o = e.EPlayerStatus || (e.EPlayerStatus = {}))[o.Registered = 0] = "Registered",
            o[o.Waiting = 1] = "Waiting",
            o[o.Playing = 2] = "Playing",
            o[o.OutGame = 3] = "OutGame",
            (a = e.EPokerPhrases || (e.EPokerPhrases = {}))[a.Waiting = 1] = "Waiting",
            a[a.PreFlop = 2] = "PreFlop",
            a[a.Flop = 3] = "Flop",
            a[a.Turn = 4] = "Turn",
            a[a.River = 5] = "River",
            a[a.Showdown = 6] = "Showdown",
            a[a.AfterShowdow = 7] = "AfterShowdow",
            (s = e.EPokerAutoAction || (e.EPokerAutoAction = {}))[s.NONE = 0] = "NONE",
            s[s.CHECKORFOLD = 1] = "CHECKORFOLD",
            s[s.CALL = 2] = "CALL",
            s[s.CHECK = 3] = "CHECK",
            s[s.FOLD = 4] = "FOLD";
            function r() {
                this.fontRobotoCondensedRegular = "RobotoCondensed-Regular",
                this.fontRobotoCondensedBold = "RobotoCondensed-Bold",
                this.fontFaceBold = "Roboto-Bold",
                this.fontFace = "Roboto-Light",
                this.cardsMap = ["2bich.png", "3bich.png", "4bich.png", "5bich.png", "6bich.png", "7bich.png", "8bich.png", "9bich.png", "10bich.png", "11bich.png", "12bich.png", "13bich.png", "1bich.png", "2tep.png", "3tep.png", "4tep.png", "5tep.png", "6tep.png", "7tep.png", "8tep.png", "9tep.png", "10tep.png", "11tep.png", "12tep.png", "13tep.png", "1tep.png", "2do.png", "3do.png", "4do.png", "5do.png", "6do.png", "7do.png", "8do.png", "9do.png", "10do.png", "11do.png", "12do.png", "13do.png", "1do.png", "2co.png", "3co.png", "4co.png", "5co.png", "6co.png", "7co.png", "8co.png", "9co.png", "10co.png", "11co.png", "12co.png", "13co.png", "1co.png", "joker.png"],
                this.accountId = 0,
                this.ready = !1,
                this.playerPos = [[-250, 150], [200, 150], [500, -45], [250, -240], [-260, -240], [-500, -45]],
                this.players = [null, null, null, null, null, null],
                this.chipPos = [[-190, 75], [50, 75], [330, -50], [70, -145], [-180, -145], [-435, -50]],
                this.moneyText = ["COIN", "GAM"],
                this.virtualPos = [],
                this.cardOri = {
                    width: 68,
                    height: 92,
                    rotation: 10
                },
                this.cardOwn = {
                    width: 96,
                    height: 130
                },
                this.cardOther = {
                    width: 46,
                    height: 63
                },
                this.cardPos = [[-85, 170], [90, 150], [390, 0], [150, -200], [-150, -200], [-395, 0]],
                this.dealerChipPos = [-50, -150],
                this.actionResult = ["", "act_check", "act_bet", "act_call", "act_raise", "act_fold", "act_allin"],
                this.framesThungVi = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesThungEn = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesThungZh = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesThungKm = [[1, 1, 557, 72, 0, 0, 0], [1, 75, 557, 72, 0, 0, 0], [560, 1, 557, 72, 0, 0, 0], [1119, 1, 557, 72, 0, 0, 0], [1, 149, 557, 72, 0, 0, 0], [560, 75, 557, 72, 0, 0, 0], [1119, 75, 557, 72, 0, 0, 0], [1, 223, 557, 72, 0, 0, 0], [560, 149, 557, 72, 0, 0, 0], [1119, 149, 557, 72, 0, 0, 0], [1, 297, 557, 72, 0, 0, 0], [560, 223, 557, 72, 0, 0, 0], [1119, 223, 557, 72, 0, 0, 0], [1, 371, 557, 72, 0, 0, 0], [560, 297, 557, 72, 0, 0, 0], [1119, 297, 557, 72, 0, 0, 0], [1, 445, 557, 71, 0, 0, -1], [560, 371, 557, 70, 0, 0, -2], [1119, 371, 557, 67, 0, 0, -5], [1119, 440, 557, 66, 0, 0, -6], [560, 443, 557, 64, 0, 0, -8], [1119, 508, 557, 64, 0, 0, -8], [560, 509, 557, 63, 0, 0, -8], [1, 518, 557, 64, 0, 0, -8], [1, 584, 557, 64, 0, 0, -8], [560, 574, 557, 64, 0, 0, -8], [1119, 574, 557, 64, 0, 0, -8], [1, 650, 557, 64, 0, 0, -8], [560, 640, 557, 64, 0, 0, -8], [1119, 640, 557, 64, 0, 0, -8], [1, 716, 557, 64, 0, 0, -8], [560, 706, 557, 64, 0, 0, -8], [1119, 706, 557, 64, 0, 0, -8], [1, 782, 557, 64, 0, 0, -8], [560, 772, 557, 64, 0, 0, -8], [1119, 772, 557, 64, 0, 0, -8], [1, 848, 557, 64, 0, 0, -8], [560, 838, 557, 64, 0, 0, -8], [1119, 838, 557, 64, 0, 0, -8], [1, 914, 557, 64, 0, 0, -8], [560, 904, 557, 64, 0, 0, -8], [1119, 904, 557, 64, 0, 0, -8], [1, 980, 557, 64, 0, 0, -8], [560, 970, 557, 64, 0, 0, -8], [560, 1036, 557, 64, 0, 0, -8], [1119, 970, 557, 64, 0, 0, -8], [1119, 1036, 551, 63, 0, -2, -8], [1, 1046, 3, 3, 0, 0, 0]],
                this.framesThungFr = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.frameThung = {
                    vi: this.framesThungVi,
                    en: this.framesThungEn,
                    zh: this.framesThungZh,
                    km: this.framesThungKm,
                    fr: this.framesThungFr
                },
                this.framesSanhVi = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesSanhEn = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesSanhZh = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesSanhKm = [[1, 1, 557, 73, 0, 0, 0], [1, 76, 557, 73, 0, 0, 0], [560, 1, 557, 73, 0, 0, 0], [1119, 1, 557, 73, 0, 0, 0], [1, 151, 557, 73, 0, 0, 0], [560, 76, 557, 73, 0, 0, 0], [1119, 76, 557, 73, 0, 0, 0], [1, 226, 557, 73, 0, 0, 0], [560, 151, 557, 73, 0, 0, 0], [1119, 151, 557, 73, 0, 0, 0], [1, 301, 557, 73, 0, 0, 0], [560, 226, 557, 73, 0, 0, 0], [1119, 226, 557, 73, 0, 0, 0], [1, 376, 557, 73, 0, 0, 0], [560, 301, 557, 73, 0, 0, 0], [1119, 301, 557, 73, 0, 0, 0], [1, 451, 557, 72, 0, 0, -1], [560, 376, 557, 71, 0, 0, -2], [1119, 376, 557, 68, 0, 0, -5], [1119, 446, 557, 67, 0, 0, -6], [560, 449, 557, 65, 0, 0, -8], [1119, 515, 557, 65, 0, 0, -8], [560, 516, 557, 65, 0, 0, -8], [1, 525, 557, 65, 0, 0, -8], [1119, 582, 557, 65, 0, 0, -8], [560, 583, 557, 65, 0, 0, -8], [1, 592, 557, 65, 0, 0, -8], [1119, 649, 557, 65, 0, 0, -8], [560, 650, 557, 65, 0, 0, -8], [1, 659, 557, 65, 0, 0, -8], [1119, 716, 557, 65, 0, 0, -8], [560, 717, 557, 65, 0, 0, -8], [1, 726, 557, 65, 0, 0, -8], [1119, 783, 557, 65, 0, 0, -8], [560, 784, 557, 65, 0, 0, -8], [1, 793, 557, 65, 0, 0, -8], [1119, 850, 557, 65, 0, 0, -8], [560, 851, 557, 65, 0, 0, -8], [1, 860, 557, 65, 0, 0, -8], [1119, 917, 557, 65, 0, 0, -8], [560, 918, 557, 65, 0, 0, -8], [1, 927, 557, 65, 0, 0, -8], [1119, 984, 557, 65, 0, 0, -8], [560, 985, 557, 65, 0, 0, -8], [1, 994, 557, 65, 0, 0, -8], [560, 1052, 557, 63, 0, 0, -8], [1119, 1051, 551, 63, 0, -2, -8], [1, 1061, 3, 3, 0, 0, 0]],
                this.framesSanhFr = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.frameSanh = {
                    vi: this.framesSanhVi,
                    en: this.framesSanhEn,
                    zh: this.framesSanhZh,
                    km: this.framesSanhKm,
                    fr: this.framesSanhFr
                },
                this.framesTuQuyVi = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesTuQuyEn = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesTuQuyZh = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesTuQuyKm = [[1, 1, 557, 71, 0, 0, 0], [1, 74, 557, 71, 0, 0, 0], [560, 1, 557, 71, 0, 0, 0], [1119, 1, 557, 71, 0, 0, 0], [1, 147, 557, 71, 0, 0, 0], [560, 74, 557, 71, 0, 0, 0], [1119, 74, 557, 71, 0, 0, 0], [1, 220, 557, 71, 0, 0, 0], [560, 147, 557, 71, 0, 0, 0], [1119, 147, 557, 71, 0, 0, 0], [1, 293, 557, 71, 0, 0, 0], [560, 220, 557, 71, 0, 0, 0], [1119, 220, 557, 71, 0, 0, 0], [1, 366, 557, 71, 0, 0, 0], [560, 293, 557, 71, 0, 0, 0], [1119, 293, 557, 71, 0, 0, 0], [1, 439, 557, 70, 0, 0, -1], [560, 366, 557, 69, 0, 0, -2], [1119, 366, 557, 66, 0, 0, -5], [1119, 434, 557, 65, 0, 0, -6], [560, 437, 557, 63, 0, 0, -8], [1119, 501, 557, 63, 0, 0, -8], [560, 502, 557, 63, 0, 0, -8], [1, 511, 557, 63, 0, 0, -8], [1119, 566, 557, 63, 0, 0, -8], [560, 567, 557, 63, 0, 0, -8], [1, 576, 557, 63, 0, 0, -8], [1119, 631, 557, 63, 0, 0, -8], [560, 632, 557, 63, 0, 0, -8], [1, 641, 557, 63, 0, 0, -8], [1119, 696, 557, 63, 0, 0, -8], [560, 697, 557, 63, 0, 0, -8], [1, 706, 557, 63, 0, 0, -8], [1119, 761, 557, 63, 0, 0, -8], [560, 762, 557, 63, 0, 0, -8], [1, 771, 557, 63, 0, 0, -8], [1119, 826, 557, 63, 0, 0, -8], [560, 827, 557, 63, 0, 0, -8], [1, 836, 557, 63, 0, 0, -8], [1119, 891, 557, 63, 0, 0, -8], [560, 892, 557, 63, 0, 0, -8], [1, 901, 557, 63, 0, 0, -8], [1119, 956, 557, 63, 0, 0, -8], [560, 957, 557, 63, 0, 0, -8], [1, 966, 557, 63, 0, 0, -8], [1119, 1021, 557, 63, 0, 0, -8], [560, 1022, 551, 63, 0, -2, -8], [1, 1031, 3, 3, 0, 0, 0]],
                this.framesTuQuyFr = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.frameTuQuy = {
                    vi: this.framesTuQuyVi,
                    en: this.framesTuQuyEn,
                    zh: this.framesTuQuyZh,
                    km: this.framesTuQuyKm,
                    fr: this.framesTuQuyFr
                },
                this.framesCuLuVi = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesCuLuEn = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesCuLuZh = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesCuLuKm = [[1, 1, 557, 80, 0, 0, 0], [1, 83, 557, 80, 0, 0, 0], [1, 165, 557, 80, 0, 0, 0], [1, 247, 557, 80, 0, 0, 0], [1, 329, 557, 80, 0, 0, 0], [1, 411, 557, 80, 0, 0, 0], [1, 493, 557, 80, 0, 0, 0], [1, 575, 557, 80, 0, 0, 0], [1, 657, 557, 80, 0, 0, 0], [1, 739, 557, 80, 0, 0, 0], [1, 821, 557, 80, 0, 0, 0], [1, 903, 557, 80, 0, 0, 0], [1, 985, 557, 80, 0, 0, 0], [1, 1067, 557, 80, 0, 0, 0], [1, 1149, 557, 63, 0, 0, -8], [560, 1, 557, 80, 0, 0, 0], [560, 83, 557, 80, 0, 0, 0], [560, 165, 557, 79, 0, 0, -1], [560, 246, 557, 78, 0, 0, -2], [560, 326, 557, 75, 0, 0, -5], [560, 403, 557, 74, 0, 0, -6], [560, 479, 557, 72, 0, 0, -8], [560, 553, 557, 72, 0, 0, -8], [560, 627, 557, 72, 0, 0, -8], [560, 701, 557, 72, 0, 0, -8], [560, 775, 557, 72, 0, 0, -8], [560, 849, 557, 72, 0, 0, -8], [560, 923, 557, 72, 0, 0, -8], [560, 997, 557, 72, 0, 0, -8], [560, 1071, 557, 72, 0, 0, -8], [560, 1145, 551, 63, 0, -2, -8], [1113, 1145, 3, 3, 0, 0, 0], [1119, 1, 557, 72, 0, 0, -8], [1119, 75, 557, 72, 0, 0, -8], [1119, 149, 557, 72, 0, 0, -8], [1119, 223, 557, 72, 0, 0, -8], [1119, 297, 557, 72, 0, 0, -8], [1119, 371, 557, 72, 0, 0, -8], [1119, 445, 557, 72, 0, 0, -8], [1119, 519, 557, 72, 0, 0, -8], [1119, 593, 557, 72, 0, 0, -8], [1119, 667, 557, 72, 0, 0, -8], [1119, 741, 557, 72, 0, 0, -8], [1119, 815, 557, 72, 0, 0, -8], [1119, 889, 557, 72, 0, 0, -8], [1119, 963, 557, 72, 0, 0, -8], [1119, 1037, 557, 72, 0, 0, -8], [1119, 1111, 557, 72, 0, 0, -8]],
                this.framesCuLuFr = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.frameCuLu = {
                    vi: this.framesCuLuVi,
                    en: this.framesCuLuEn,
                    zh: this.framesCuLuZh,
                    km: this.framesCuLuKm,
                    fr: this.framesCuLuFr
                },
                this.framesThungPhaSanhVi = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesThungPhaSanhEn = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesThungPhaSanhZh = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.framesThungPhaSanhKm = [[1, 1, 557, 72, 0, 0, 0], [1, 75, 557, 72, 0, 0, 0], [560, 1, 557, 72, 0, 0, 0], [1119, 1, 557, 72, 0, 0, 0], [1, 149, 557, 72, 0, 0, 0], [560, 75, 557, 72, 0, 0, 0], [1119, 75, 557, 72, 0, 0, 0], [1, 223, 557, 72, 0, 0, 0], [560, 149, 557, 72, 0, 0, 0], [1119, 149, 557, 72, 0, 0, 0], [1, 297, 557, 72, 0, 0, 0], [560, 223, 557, 72, 0, 0, 0], [1119, 223, 557, 72, 0, 0, 0], [1, 371, 557, 72, 0, 0, 0], [560, 297, 557, 72, 0, 0, 0], [1119, 297, 557, 72, 0, 0, 0], [1, 445, 557, 71, 0, 0, -1], [560, 371, 557, 70, 0, 0, -2], [1119, 371, 557, 67, 0, 0, -5], [1119, 440, 557, 66, 0, 0, -6], [560, 443, 557, 64, 0, 0, -8], [1119, 508, 557, 64, 0, 0, -8], [560, 509, 557, 63, 0, 0, -8], [1, 518, 557, 64, 0, 0, -8], [1, 584, 557, 64, 0, 0, -8], [560, 574, 557, 64, 0, 0, -8], [1119, 574, 557, 64, 0, 0, -8], [1, 650, 557, 64, 0, 0, -8], [560, 640, 557, 64, 0, 0, -8], [1119, 640, 557, 64, 0, 0, -8], [1, 716, 557, 64, 0, 0, -8], [560, 706, 557, 64, 0, 0, -8], [1119, 706, 557, 64, 0, 0, -8], [1, 782, 557, 64, 0, 0, -8], [560, 772, 557, 64, 0, 0, -8], [1119, 772, 557, 64, 0, 0, -8], [1, 848, 557, 64, 0, 0, -8], [560, 838, 557, 64, 0, 0, -8], [1119, 838, 557, 64, 0, 0, -8], [1, 914, 557, 64, 0, 0, -8], [560, 904, 557, 64, 0, 0, -8], [1119, 904, 557, 64, 0, 0, -8], [1, 980, 557, 64, 0, 0, -8], [560, 970, 557, 64, 0, 0, -8], [560, 1036, 557, 64, 0, 0, -8], [1119, 970, 557, 64, 0, 0, -8], [1119, 1036, 551, 63, 0, -2, -8], [1, 1046, 3, 3, 0, 0, 0]],
                this.framesThungPhaSanhFr = [[1, 1, 3, 3, 0, 0, 0], [6, 1, 551, 60, 0, -2, 0], [559, 1, 557, 60, 0, 0, 0], [1118, 1, 557, 60, 0, 0, 0], [1, 63, 557, 60, 0, 0, 0], [560, 63, 557, 60, 0, 0, 0], [1119, 63, 557, 60, 0, 0, 0], [1, 125, 557, 60, 0, 0, 0], [560, 125, 557, 60, 0, 0, 0], [1119, 125, 557, 60, 0, 0, 0], [1, 187, 557, 60, 0, 0, 0], [560, 187, 557, 60, 0, 0, 0], [1119, 187, 557, 60, 0, 0, 0], [1, 249, 557, 60, 0, 0, 0], [560, 249, 557, 60, 0, 0, 0], [1119, 249, 557, 60, 0, 0, 0], [1, 311, 557, 60, 0, 0, 0], [560, 311, 557, 60, 0, 0, 0], [1119, 311, 557, 60, 0, 0, 0], [1, 373, 557, 60, 0, 0, 0], [560, 373, 557, 60, 0, 0, 0], [1119, 373, 557, 60, 0, 0, 0], [1, 435, 557, 60, 0, 0, 0], [560, 435, 557, 60, 0, 0, 0], [1119, 435, 557, 60, 0, 0, 0], [1, 497, 557, 60, 0, 0, 0], [560, 497, 557, 60, 0, 0, 0], [1119, 497, 557, 60, 0, 0, 0], [1, 559, 557, 60, 0, 0, 0], [560, 559, 557, 60, 0, 0, 0], [1119, 559, 557, 60, 0, 0, 0], [1, 621, 557, 60, 0, 0, 0], [560, 621, 557, 60, 0, 0, 0], [1119, 621, 557, 60, 0, 0, 0], [1, 683, 557, 60, 0, 0, 0], [560, 683, 557, 60, 0, 0, 0], [1119, 683, 557, 60, 0, 0, 0], [1, 745, 557, 60, 0, 0, 0], [560, 745, 557, 60, 0, 0, 0], [1119, 745, 557, 60, 0, 0, 0], [1, 807, 557, 60, 0, 0, 0], [560, 807, 557, 60, 0, 0, 0], [1119, 807, 557, 60, 0, 0, 0], [1, 869, 557, 60, 0, 0, 0], [560, 869, 557, 60, 0, 0, 0], [1119, 869, 557, 60, 0, 0, 0], [1, 931, 557, 60, 0, 0, 0], [560, 931, 557, 60, 0, 0, 0]],
                this.frameThungPhaSanh = {
                    vi: this.framesThungPhaSanhVi,
                    en: this.framesThungPhaSanhEn,
                    zh: this.framesThungPhaSanhZh,
                    km: this.framesThungPhaSanhKm,
                    fr: this.framesThungPhaSanhFr
                }
            }
            e.variable = r
        },
        47: function(t, e, n) {
            "use strict";
            var i, o = this && this.__extends || (i = function(t, e) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function n() {
                    this.constructor = t
                }
                i(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var a, s = n(0), r = (a = PIXI.Container,
            o(h, a),
            h.prototype.Init = function() {
                var t = this.pot;
                this.bg = new Sprite(TextureCache["bet-bar.png"]),
                this.txtMoney = new PIXI.Text(s.Util.ParseMoney(this.min),{
                    fontFamily: this.game.fontRobotoCondensedBold,
                    fontSize: 18,
                    fill: ["white"]
                }),
                this.txtMoney.anchor.set(.5),
                this.txtMoney.position.set(55, 18),
                this.btnSlider = new Sprite(TextureCache["btn-control.png"]),
                this.btnSlider.anchor.set(0, .5),
                this.btnSlider.position.set(155, 18.5),
                this.btnSlider.buttonMode = !0,
                this.btnSlider.interactive = !0,
                this.btnSlider.on("pointerdown", this.BtnSliderDown).on("pointermove", this.BtnSliderMove.bind(this.btnSlider, this)).on("pointerup", this.BtnSliderUp).on("pointeroutside", this.BtnSliderUp),
                this.btnMinus = new Sprite(TextureCache["btn-control-dn-normal.png"]),
                this.btnMinus.name = "btn-control-dn-normal.png",
                this.btnMinus.anchor.set(0, .5),
                this.btnMinus.position.set(110, 18.5),
                this.btnMinus.buttonMode = !0,
                this.btnMinus.interactive = !0,
                this.btnMinus.on("pointerover", this.game.BtnHover).on("pointerout", this.game.BtnOut).on("pointerdown", this.BtnMinusDown.bind(this.btnMinus, this)),
                this.btnPlus = new Sprite(TextureCache["btn-control-up-normal.png"]),
                this.btnPlus.name = "btn-control-up-normal.png",
                this.btnPlus.anchor.set(0, .5),
                this.btnPlus.position.set(350, 18.5),
                this.btnPlus.buttonMode = !0,
                this.btnPlus.interactive = !0,
                this.btnPlus.on("pointerover", this.game.BtnHover).on("pointerout", this.game.BtnOut).on("pointerdown", this.BtnPlusDown.bind(this.btnPlus, this)),
                this.btnMin = new Sprite(TextureCache["btn min.png"]),
                this.btnMin.id = "btnMin",
                this.btnMin.anchor.set(0, .5),
                this.btnMin.position.set(110, -20),
                this.btnMin.buttonMode = !0,
                this.btnMin.interactive = !0,
                this.btnMin.on("pointerdown", this.btnMinClick.bind(this.btnMin, this)),
                this.btn12Pot = new Sprite(0 == t ? TextureCache["btn 1_2 disable.png"] : TextureCache["btn 1_2.png"]),
                this.btn12Pot.id = "btn12Pot",
                this.btn12Pot.anchor.set(0, .5),
                this.btn12Pot.position.set(180, -20),
                this.btn12Pot.buttonMode = !0,
                this.btn12Pot.interactive = !0,
                0 < t && this.btn12Pot.on("pointerdown", this.btn12PotClick.bind(this.btn12Pot, this)),
                this.btn34Pot = new Sprite(0 == t ? TextureCache["btn 3_4 disable.png"] : TextureCache["btn 3_4.png"]),
                this.btn34Pot.id = "btn34Pot",
                this.btn34Pot.anchor.set(0, .5),
                this.btn34Pot.position.set(250, -20),
                this.btn34Pot.buttonMode = !0,
                this.btn34Pot.interactive = !0,
                0 < t && this.btn34Pot.on("pointerdown", this.btn34PotClick.bind(this.btn34Pot, this)),
                this.btnPot = new Sprite(0 == t ? TextureCache["btn pot disable.png"] : TextureCache["btn pot.png"]),
                this.btnPot.id = "btnPot",
                this.btnPot.anchor.set(0, .5),
                this.btnPot.position.set(320, -20),
                this.btnPot.buttonMode = !0,
                this.btnPot.interactive = !0,
                0 < t && this.btnPot.on("pointerdown", this.btnPotClick.bind(this.btnPot, this)),
                this.bg.addChild(this.txtMoney, this.btnSlider, this.btnMinus, this.btnPlus, this.btnMin, this.btn12Pot, this.btn34Pot, this.btnPot),
                this.addChild(this.bg)
            }
            ,
            h.prototype.DisableBtn = function(t) {
                t.buttonMode = !1,
                t.interactive = !1,
                t.texture = TextureCache[t.name.replace("normal", "disable")]
            }
            ,
            h.prototype.EnableBtn = function(t) {
                t.buttonMode = !0,
                t.interactive = !0,
                t.texture = TextureCache[t.name]
            }
            ,
            h.prototype.btn34PotClick = function(t) {
                var e = t.pot
                  , n = Number(.75 * e);
                t.updateChip(n, t)
            }
            ,
            h.prototype.btnMinClick = function(t) {
                var e = t.min;
                t.updateChip(e, t)
            }
            ,
            h.prototype.btn12PotClick = function(t) {
                var e = t.pot
                  , n = Number(.5 * e);
                t.updateChip(n, t)
            }
            ,
            h.prototype.btnPotClick = function(t) {
                var e = t.pot;
                t.updateChip(e, t)
            }
            ,
            h.prototype.updateChip = function(t, e) {
                t < 0 || this.game.updateBetOrRaise(t, e.type)
            }
            ,
            h.prototype.BtnMinusDown = function(t) {
                var e = (e = t.betValue - t.step) < t.min ? t.min : e;
                t.UpdateBetBar(e)
            }
            ,
            h.prototype.BtnPlusDown = function(t) {
                var e = (e = t.betValue + t.step) > this.max ? t.max : e;
                t.UpdateBetBar(e)
            }
            ,
            h.prototype.BtnSliderDown = function(t) {
                this.data = t.data,
                this.alpha = .9,
                this.dragging = !0
            }
            ,
            h.prototype.BtnSliderUp = function() {
                this.data = null,
                this.alpha = 1,
                this.dragging = !1
            }
            ,
            h.prototype.BtnSliderMove = function(t) {
                var e, n, i = this;
                i.dragging && (i.dragging && (e = i.data.getLocalPosition(i.parent),
                i.x = e.x,
                i.y = e.y),
                i.x < 155 && (i.x = 155),
                315 < i.x && (i.x = 315),
                18.5 !== i.y && (i.y = 18.5),
                n = Math.round((i.x - t.minX) / (t.maxX - t.minX) * (t.max - t.min) + t.min),
                t.UpdateBetBar(n))
            }
            ,
            h.prototype.UpdateBetBar = function(t) {
                t > this.min && t < this.max && (t = Math.floor(t / this.step) * this.step),
                t = t < this.min ? this.min : t > this.max ? this.max : t,
                this.betValue = t,
                this.txtMoney.text = s.Util.ParseMoney(t),
                this.game.updateBetOrRaise(t, this.type),
                this.betValue === this.min ? this.DisableBtn(this.btnMinus) : this.EnableBtn(this.btnMinus),
                this.betValue === this.max ? this.DisableBtn(this.btnPlus) : this.EnableBtn(this.btnPlus);
                var e = Math.round((t - this.min) * (this.maxX - this.minX) / (this.max - this.min)) + this.minX;
                t === this.max && (e = 315),
                e <= 315 && (this.btnSlider.x = e),
                console.log("UpdateBetBar", t)
            }
            ,
            h.prototype.Show = function() {
                this.visible = !0;
                var t = this.betValue > this.max ? this.max : this.betValue;
                (t = this.GetMaxBet(t, this.min, this.max, this.step)) != this.betValue && (this.betValue = t),
                this.game.updateBetOrRaise(t, this.type)
            }
            ,
            h.prototype.Hide = function() {
                this.visible = !1
            }
            ,
            h);
            function h(t) {
                var e = a.call(this) || this;
                return e.min = 0,
                e.max = 0,
                e.step = 0,
                e.minX = 155,
                e.maxX = 315,
                e.pot = 0,
                e.clearDragging = function() {
                    e.btnSlider.data = null,
                    e.btnSlider.alpha = 1,
                    e.btnSlider.dragging = !1
                }
                ,
                e.GetMaxBet = function(t, e, n, i) {
                    var o = n
                      , a = this.game.GetPlayerByAccountId(this.accountId);
                    return a && a.player && a.player.Account && (1 === this.game.roomModel.MoneyType ? o = a.player.Account.GoldBalance : 0 === this.game.roomModel.MoneyType && (o = a.player.Account.CoinBalance),
                    0 === this.game.roomModel.Rule ? o = Math.floor(o / 2) : 1 === this.game.roomModel.Rule ? o = Math.floor(o / 3) : 2 !== this.game.roomModel.Rule && 3 !== this.game.roomModel.Rule || (o = Math.floor(o / 4)),
                    o < t && (t = Math.floor((o - e) / i) * i + e)),
                    t
                }
                ,
                e.game = t.game,
                e.min = t.min,
                e.max = t.max,
                e.step = t.step,
                e.pot = t.pot,
                e.type = t.type,
                e.Init(),
                e.betValue = t.min,
                e.game.updateBetOrRaise(e.min, e.type),
                e
            }
            e.default = r
        }
    },
    a.c = r,
    a.d = function(t, e, n) {
        a.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }
    ,
    a.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    a.t = function(e, t) {
        if (1 & t && (e = a(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var n = Object.create(null);
        if (a.r(n),
        Object.defineProperty(n, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                a.d(n, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return n
    }
    ,
    a.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return a.d(e, "a", e),
        e
    }
    ,
    a.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    a.p = "/",
    a(a.s = 41);
    function a(t) {
        if (r[t])
            return r[t].exports;
        var e = r[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return s[t].call(e.exports, e, e.exports, a),
        e.l = !0,
        e.exports
    }
    var s, r
});

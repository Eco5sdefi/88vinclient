!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("WebFont"), require("pixi-filters")) : "function" == typeof define && define.amd ? define("samloc_solo", ["libs", "WebFont", "pixi-filters"], e) : "object" == typeof exports ? exports.samloc_solo = e(require("libs"), require("WebFont"), require("pixi-filters")) : t.samloc_solo = e(t.libs, t.WebFont, t["pixi-filters"])
}(window, function(n, i, a) {
    return r = {},
    o.m = s = {
        0: function(t, e) {
            t.exports = n
        },
        1: function(t, e) {
            t.exports = i
        },
        2: function(t, e) {
            t.exports = a
        },
        25: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = n(26)
              , a = n(1)
              , o = (s.prototype.delete = function() {
                this.game.Delete()
            }
            ,
            s.prototype.load = function(t) {
                this.game.Load(t)
            }
            ,
            s.prototype.join = function(t, e) {
                this.game.Join(t, e)
            }
            ,
            s.prototype.lobby = function() {
                this.game.EnterLobby()
            }
            ,
            s.prototype.stop = function() {
                this.game.Stop()
            }
            ,
            s);
            function s(t) {
                a.load({
                    custom: {
                        families: ["Roboto-Black", "Roboto-Bold", "Roboto-Medium", "Roboto-Regular", "Roboto-Light", "RobotoCondensed-Bold", "RobotoCondensed-Italic", "RobotoCondensed-Light", "RobotoCondensed-Regular", "UTM American Sans", "UTM Swiss Condensed", "UTM Swiss CondensedBold"]
                    },
                    fontactive: function() {}
                }),
                this.game = new i.games(t)
            }
            e.game = o
        },
        26: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = n(27)
              , a = n(28)
              , p = n(0)
              , o = n(29);
            n(2);
            var s = (r.prototype.Overlay = function(t) {
                t.tint = 5592405
            }
            ,
            r.prototype.UnOverlay = function(t) {
                t.tint = 16777215
            }
            ,
            r.prototype.CloseCard = function(t) {
                try {
                    TweenMax.to(t.scale, .3, {
                        data: "samloc",
                        x: .01,
                        onComplete: function() {
                            t.texture = TextureCache["joker.png"],
                            TweenMax.to(t.scale, .3, {
                                data: "samloc",
                                x: t.s
                            })
                        }
                    })
                } catch (t) {}
            }
            ,
            r.prototype.Load = function(t) {
                var e = this;
                e.loader.load(function() {
                    return e.Loading(e)
                }, function() {
                    $("#divLoading").hide(),
                    e.isLoad = !0,
                    e.InitHub(t)
                })
            }
            ,
            r.prototype.Loading = function(t) {
                $("#divLoading").show(),
                $("#loading-progress span").css("width", parseInt(t.loader.loader.progress) + "%"),
                $("#loading-progress-txt").html(parseInt(t.loader.loader.progress) + "%")
            }
            ,
            r.prototype.InitHub = function(t) {
                this.hub = new a.default(locSoloUrl + "hub",this.token,this),
                this.hub.Connect(this.currencyId, t)
            }
            ,
            r.prototype.Join = function(t, e) {
                this.hub.PlayNow(t, e)
            }
            ,
            r.prototype.GetPlayerByAccountId = function(t) {
                for (var e, n = 0; n < this.players.length; n++)
                    if (this.players[n] && this.players[n].accountId === t) {
                        e = this.players[n];
                        break
                    }
                return e
            }
            ,
            r.prototype.GetPlayerByPosition = function(t) {
                for (var e, n = 0; n < this.players.length; n++)
                    if (this.players[n] && this.players[n].pos === t) {
                        e = this.players[n];
                        break
                    }
                return e
            }
            ,
            r.prototype.GetCurrentPlayer = function() {
                if (this.roomModel && this.roomModel.Players)
                    for (var t in this.roomModel.Players)
                        this.roomModel.Players[t].AccountID === App.account.accountID + ":" + App.account.portalID && (this.currentPlayer = this.roomModel.Players[t])
            }
            ,
            r.prototype.UpdateAccount = function(t, e) {
                var n = this.GetPlayerByAccountId(t.AccountID);
                n && (n.player.Account = t,
                n.UpdateBalance(1 === this.roomModel.MoneyType ? t.GoldBalance : t.CoinBalance),
                n.ShowMoney(e),
                setTimeout(function() {
                    return n.ShowMoney(e)
                }, 100 * this.numb[n.pos]),
                this.numb[n.pos]++)
            }
            ,
            r.prototype.PlayerLeave = function(t, e) {
                if (t === this.currentPlayer.AccountID)
                    this.currentPlayer && t == this.currentPlayer.AccountID && e && "object" == typeof e && this.hub.ShowMessage(e),
                    this.Delete(),
                    App.handleBack();
                else {
                    var n = this.GetPlayerByAccountId(t);
                    if (n) {
                        var i = n.pos;
                        n.destroy({
                            children: !0
                        }),
                        delete this.players[i],
                        this.players[i] = null
                    }
                }
            }
            ,
            r.prototype.PlayerJoin = function(t) {
                this.RenderPlayer(t)
            }
            ,
            r.prototype.PlayerOtherDevice = function() {
                App.showPopupMessage({
                    content: Message.GetMessage("ca-20024"),
                    textDone: "OK"
                }),
                this.Delete(),
                App.exitGame()
            }
            ,
            r.prototype.RenderPlayer = function(t) {
                var e = t.Position - this.currentPlayer.Position;
                e < 0 && (e += this.roomModel.MaxPlayer),
                this.players[e] = new o.default({
                    position: e,
                    player: t,
                    xy: this.playerPos[e],
                    w: t.AccountID === this.currentPlayer.AccountID ? 140 : 120,
                    h: t.AccountID === this.currentPlayer.AccountID ? 140 : 120,
                    b: t.AccountID === this.currentPlayer.AccountID ? 95 : 75,
                    game: this
                }),
                this.playerContainer.addChild(this.players[e])
            }
            ,
            r.prototype.RenderPlayers = function(t) {
                for (var e in t)
                    this.RenderPlayer(t[e])
            }
            ,
            r.prototype.JoinGame = function(t, e) {
                console.log("JoinGame", t, e),
                this.isJoin || (this.isJoin || (this.isJoin = !0),
                t && (this.roomModel = t,
                App.joinGame({
                    value: this.roomModel.MinBet,
                    type: this.roomModel.MoneyType
                }),
                this.ready || this.Init(),
                this.DisableButtons(),
                this.GetCurrentPlayer(),
                this.RenderPlayers(this.roomModel.Players),
                this.ChangeOwner(this.roomModel.OwnerId),
                this.CheckGame(e)))
            }
            ,
            r.prototype.Init = function() {
                PIXI.utils.skipHello(),
                this.size = [window.innerWidth, window.innerHeight],
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    transparent: !0,
                    resolution: 1,
                    autoResize: !0
                }),
                document.getElementById(this.target).appendChild(this.application.renderer.view),
                this.InitContainer(),
                this.InitFrames(),
                this.InitBg(),
                this.InitTableInfo(),
                this.InitButton(),
                this.Resize(this);
                var t = this;
                this.application.ticker.add(function() {
                    return t.Update(t)
                }),
                this.ready = !0,
                this.resizeFunc = function() {
                    return t.Resize(t)
                }
                ,
                window.addEventListener("resize", this.resizeFunc),
                this.ResetTab()
            }
            ,
            r.prototype.Resize = function(t) {
                if (t.size = [$(window).width(), $(window).height()],
                t.application.renderer.resize($(window).width(), $(window).height()),
                t.size[0] < 1280 || t.size[1] < 720) {
                    var e = Math.min(t.size[0] / 1280, t.size[1] / 720);
                    t.mainContainer.scale.set(e)
                } else
                    t.mainContainer.scale.set(1);
                t.mainContainer.anchor.set(.5),
                t.mainContainer.position.set(t.size[0] / 2, t.size[1] / 2)
            }
            ,
            r.prototype.ResetTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            r.prototype.Update = function(t) {
                t.timer && t.timer.tick()
            }
            ,
            r.prototype.InitContainer = function() {
                this.bgContainer = new Container,
                this.buttonContainer = new Container,
                this.playerContainer = new Container,
                this.cardContainer = new Container,
                this.messageContainer = new Container,
                this.effectContainer = new Container,
                this.messageContainer.addChild(this.effectContainer),
                this.handCardsContainer = new Container,
                this.draftCardsContainer = new Container,
                this.divideContainer = new Container,
                this.cardContainer.addChild(this.draftCardsContainer, this.divideContainer, this.handCardsContainer),
                this.infoContainer = new Container,
                this.application.stage.addChild(this.bgContainer)
            }
            ,
            r.prototype.InitFrames = function() {
                var t;
                for (this.framesDealerChiaBai = [],
                this.framesDealerClick = [],
                this.framesDealerPlay = [],
                this.framesDealerNormal = [],
                this.framesFireWork = [],
                this.framesWin = framesFromTilesetImage("win.effect", 230, 230),
                t = 1; t < 31; t++)
                    this.framesFireWork.push(TextureCache["fire-work-" + t + ".png"]);
                for (t = 1; t < 15; t++)
                    this.framesDealerChiaBai.push(TextureCache["dealer-chia-bai-" + t + ".png"]);
                for (t = 1; t < 25; t++)
                    this.framesDealerClick.push(TextureCache["dealer-rung-nguc-" + t + ".png"]),
                    this.framesDealerPlay.push(TextureCache["dealer-moi-choi-" + t + ".png"]);
                for (t = 1; t < 49; t++)
                    this.framesDealerNormal.push(TextureCache["dealer-normal-" + t + ".png"])
            }
            ,
            r.prototype.InitBg = function() {
                this.mainContainer = new Sprite(TextureCache["table-" + this.roomModel.MoneyType]),
                this.mainContainer.anchor.set(.5),
                this.mainContainer.position.set(this.size[0] / 2, this.size[1] / 2),
                this.bgContainer.addChild(this.mainContainer);
                var t = new PIXI.Text(Message.GetMessage("na6"),{
                    fontFamily: this.fontFaceBold,
                    fontSize: 50,
                    fill: "#000"
                });
                t.alpha = .1,
                t.anchor.set(.5),
                t.y = -30,
                this.mainContainer.addChild(t),
                this.dealer = new AnimatedSprite(this.framesDealerNormal),
                this.dealer.anchor.set(.5),
                this.dealer.position.set(0, -253),
                this.dealer.animationSpeed = .2,
                this.dealer.interactive = !0,
                this.dealer.buttonMode = !0,
                this.dealer.on("pointerdown", this.DealerDown.bind(this.dealer, this)),
                this.dealer.play(),
                this.mainContainer.addChild(this.dealer);
                for (var e = 0; e < this.playerPos.length; e++) {
                    var n = new Sprite(TextureCache["ic-ad-user.png"]);
                    n.anchor.set(.5),
                    n.position.set(this.playerPos[e][0], this.playerPos[e][1]),
                    this.mainContainer.addChild(n)
                }
                this.txtNotify = new Sprite(TextureCache["big-bg-notify.png"]),
                this.txtNotify.anchor.set(.5),
                this.txtNotify.position.set(0, -102),
                this.txtNotify.addChild(new PIXI.Text("CHỜ NGƯỜI CHƠI",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 18,
                    fill: "white"
                })),
                this.txtNotify.children[0].anchor.set(.5),
                this.txtNotify.visible = !1,
                this.txtStatus = new Sprite(TextureCache["small-bg-notify.png"]),
                this.txtStatus.anchor.set(.5),
                this.txtStatus.position.set(0, 68),
                this.txtStatus.addChild(new PIXI.Text("CHỜ NGƯỜI CHƠI",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 12,
                    fill: "white"
                })),
                this.txtStatus.children[0].anchor.set(.5),
                this.txtStatus.visible = !1,
                this.mainContainer.addChild(this.playerContainer, this.txtNotify, this.txtStatus, this.divideContainer, this.cardContainer, this.messageContainer, this.buttonContainer),
                this.icDeal = new Sprite(TextureCache["ic-dealer.png"]),
                this.icDeal.anchor.set(.5),
                this.icDeal.position.set(this.dealer.x, this.dealer.y),
                this.icDeal.visible = !1,
                this.mainContainer.addChild(this.icDeal)
            }
            ,
            r.prototype.DealerChia = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerChiaBai,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            r.prototype.DealerDown = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerClick,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            r.prototype.DealerNormal = function() {
                var t = this.dealer;
                t.stop(),
                t.interactive = !0,
                t.buttonMode = !0,
                t.loop = !0,
                t.textures = this.framesDealerNormal,
                t.gotoAndPlay(0)
            }
            ,
            r.prototype.InitTableInfo = function() {
                var t = this.roomModel;
                this.btnBack = new Sprite(TextureCache["btn-def.png"]),
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(-520, -340),
                this.btnBack.addChild(new Sprite(TextureCache["ic-back.png"])),
                this.btnBack.children[0].anchor.set(.5),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.BtnBackOver).on("pointerout", this.BtnBackOut).on("pointerdown", this.BtnBackDown.bind(this.btnBack, this));
                var e = new PIXI.Text(Message.GetMessage(0 === t.MoneyType ? "tb113" : "tb112") + ": " + p.Util.NumberToString(t.Name, 3),{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                e.anchor.set(0, .5),
                e.position.set(-480, -360);
                var n = new PIXI.Text(Message.GetMessage("ca81").toUpperCase() + p.Util.ParseMoney(t.MinBet) + " " + Config.MoneyText[t.MoneyType],{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                n.anchor.set(0, .5),
                n.position.set(-480, -340),
                this.lblSession = new PIXI.Text(Message.GetMessage("ca95").toUpperCase() + " #",{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                }),
                this.lblSession.anchor.set(0, .5),
                this.lblSession.position.set(-480, -320),
                this.infoContainer.addChild(this.btnBack, e, n, this.lblSession),
                this.mainContainer.addChild(this.infoContainer)
            }
            ,
            r.prototype.BtnBackOver = function() {
                this.texture = TextureCache["btn-def-h.png"]
            }
            ,
            r.prototype.BtnBackOut = function() {
                this.texture = TextureCache["btn-def.png"]
            }
            ,
            r.prototype.BtnBackDown = function(t) {
                var e = t.players[0];
                e.isLeave ? (t.hub.UnregisterLeaveRoom(),
                e.isUnLeave = !0) : (t.hub.LeaveGame(),
                e.isUnLeave = !1)
            }
            ,
            r.prototype.InitButton = function() {
                this.btnHit = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnHit.name = "btn-game-normal.png",
                this.btnHit.anchor.set(.5),
                this.btnHit.position.set(480, 300),
                this.btnHit.addChild(new PIXI.Text(Message.GetMessage("ca70").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnHit.getChildAt(0).anchor.set(.5),
                this.btnHit.getChildAt(0).position.set(0, 0),
                this.btnHit.interactive = !0,
                this.btnHit.buttonMode = !0,
                this.btnHit.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnHitClick.bind(this.btnHit, this)),
                this.btnSort = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnSort.name = "btn-game-normal.png",
                this.btnSort.anchor.set(.5),
                this.btnSort.position.set(340, 300),
                this.btnSort.addChild(new PIXI.Text(Message.GetMessage("ca73").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnSort.getChildAt(0).anchor.set(.5),
                this.btnSort.getChildAt(0).position.set(0, 0),
                this.btnSort.interactive = !0,
                this.btnSort.buttonMode = !0,
                this.btnSort.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnSortClick.bind(this.btnSort, this)),
                this.btnCancel = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnCancel.name = "btn-game-normal.png",
                this.btnCancel.anchor.set(.5),
                this.btnCancel.position.set(200, 300),
                this.btnCancel.addChild(new PIXI.Text(Message.GetMessage("ca72").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnCancel.getChildAt(0).anchor.set(.5),
                this.btnCancel.getChildAt(0).position.set(0, 0),
                this.btnCancel.interactive = !0,
                this.btnCancel.buttonMode = !0,
                this.btnCancel.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnCancelClick.bind(this.btnCancel, this)),
                this.btnSkip = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnSkip.name = "btn-game-normal.png",
                this.btnSkip.anchor.set(.5),
                this.btnSkip.position.set(60, 300),
                this.btnSkip.addChild(new PIXI.Text(Message.GetMessage("ca71").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnSkip.getChildAt(0).anchor.set(.5),
                this.btnSkip.getChildAt(0).position.set(0, 0),
                this.btnSkip.interactive = !0,
                this.btnSkip.buttonMode = !0,
                this.btnSkip.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnSkipClick.bind(this.btnSkip, this)),
                this.btnXinSam = new Sprite(TextureCache["btn-sam-normal.png"]),
                this.btnXinSam.name = "btn-sam-normal.png",
                this.btnXinSam.anchor.set(.5),
                this.btnXinSam.position.set(70, 40),
                this.btnXinSam.addChild(new PIXI.Text(Message.GetMessage("ca75").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnXinSam.getChildAt(0).anchor.set(.5),
                this.btnXinSam.getChildAt(0).position.set(0, 0),
                this.btnXinSam.interactive = !0,
                this.btnXinSam.buttonMode = !0,
                this.btnXinSam.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnXinSamClick.bind(this.btnXinSam, this)),
                this.btnXinSam.visible = !1,
                this.btnBoSam = new Sprite(TextureCache["btn-sam-normal.png"]),
                this.btnBoSam.name = "btn-sam-normal.png",
                this.btnBoSam.anchor.set(.5),
                this.btnBoSam.position.set(-70, 40),
                this.btnBoSam.addChild(new PIXI.Text(Message.GetMessage("ca74").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnBoSam.getChildAt(0).anchor.set(.5),
                this.btnBoSam.getChildAt(0).position.set(0, 0),
                this.btnBoSam.interactive = !0,
                this.btnBoSam.buttonMode = !0,
                this.btnBoSam.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnBoSamClick.bind(this.btnBoSam, this)),
                this.btnBoSam.visible = !1,
                this.buttonContainer.addChild(this.btnHit, this.btnSort, this.btnCancel, this.btnSkip, this.btnXinSam, this.btnBoSam)
            }
            ,
            r.prototype.DisableButton = function(t) {
                t.interactive = !1,
                t.buttonMode = !1,
                t.texture = TextureCache[t.name.replace("normal", "disable")]
            }
            ,
            r.prototype.EnableButton = function(t) {
                t.interactive = !0,
                t.buttonMode = !0,
                t.texture = TextureCache[t.name],
                t.visible = !0
            }
            ,
            r.prototype.DisableButtons = function() {
                this.DisableButton(this.btnHit),
                this.DisableButton(this.btnSkip),
                this.DisableButton(this.btnSort),
                this.DisableButton(this.btnCancel)
            }
            ,
            r.prototype.BtnHover = function() {
                this.texture = TextureCache[this.name.replace("normal", "hover")]
            }
            ,
            r.prototype.BtnOut = function() {
                this.texture = TextureCache[this.name]
            }
            ,
            r.prototype.BtnDown = function() {
                this.texture = TextureCache[this.name.replace("normal", "click")]
            }
            ,
            r.prototype.BtnHitClick = function(e) {
                var n = this;
                if (e.selectedCards.length <= 0)
                    e.ShowStatus(Message.GetMessage("ca-10020"));
                else {
                    e.DisableButton(this);
                    var t = e.GetPlayerByAccountId(e.currentPlayer.AccountID);
                    e.selectedCards = [];
                    for (var i = 0; i < t.handCards.length; i++)
                        t.handCards[i].isSeleted && e.selectedCards.push(t.handCards[i].OrdinalValue);
                    e.hub.connection.invoke("DanhBai", e.selectedCards).then(function(t) {
                        t || (e.ShowStatus(Message.GetMessage("ca-27000")),
                        e.EnableButton(n))
                    })
                }
            }
            ,
            r.prototype.BtnSortClick = function(e) {
                var t = this;
                e.DisableButton(this),
                e.hub.connection.invoke("SortHandCards").then(function(t) {
                    t && 0 < t.length && e.SortHandCards(t)
                }).catch(function() {
                    e.EnableButton(t)
                })
            }
            ,
            r.prototype.BtnCancelClick = function(t) {
                var e = t.GetPlayerByAccountId(t.currentPlayer.AccountID);
                t.DisableButton(this),
                t.DisableButton(t.btnHit);
                for (var n = 0; n < e.handCards.length; n++)
                    if (e.handCards[n].isSeleted) {
                        e.handCards[n].isSeleted = !1;
                        try {
                            TweenMax.to(e.handCards[n], .3, {
                                data: "samloc",
                                y: e.handCards[n].posY
                            })
                        } catch (t) {}
                        e.handCards[n].filters = null
                    }
                t.selectedCards = []
            }
            ,
            r.prototype.BtnSkipClick = function(t) {
                t.DisableButton(this),
                t.hub.BoLuot()
            }
            ,
            r.prototype.BtnXinSamClick = function(t) {
                t.hub.connection.invoke("BaoSam", !0).then(function(t) {})
            }
            ,
            r.prototype.BtnBoSamClick = function(t) {
                t.hub.connection.invoke("BaoSam", !1).then(function(t) {}),
                t.btnBoSam.visible = t.btnXinSam.visible = !1
            }
            ,
            r.prototype.ChangeOwner = function(t) {
                var e = this.GetPlayerByAccountId(t);
                e && (this.icDeal.visible = !1,
                TweenMax.to(this.icDeal, .5, {
                    data: "samloc",
                    x: e.avatar.x + 30,
                    y: e.avatar.y - e.avatar.height / 2 + 10
                }))
            }
            ,
            r.prototype.ShowNotify = function(t, e) {
                var n = this;
                if (this.txtNotify.scale.set(.01),
                this.txtNotify.visible = !0,
                this.txtNotify.children[0].text = t,
                TweenMax.to(this.txtNotify.scale, .4, {
                    data: "samloc",
                    x: 1,
                    y: 1
                }),
                e) {
                    var i = this;
                    setTimeout(function() {
                        TweenMax.to(n.txtNotify.scale, .2, {
                            data: "samloc",
                            x: .01,
                            y: .01
                        }),
                        setTimeout(function() {
                            i.txtNotify.visible = !1
                        }, 300)
                    }, e)
                }
            }
            ,
            r.prototype.ShowStatus = function(t, e) {
                var n = this;
                p.Util.ClearTimeOut(this.timeStatus),
                this.txtStatus.scale.set(.01),
                this.txtStatus.visible = !0,
                this.txtStatus.children[0].text = t,
                TweenMax.to(this.txtStatus.scale, .4, {
                    data: "samloc",
                    x: 1,
                    y: 1
                });
                var i = this;
                this.timeStatus = setTimeout(function() {
                    TweenMax.to(n.txtStatus.scale, .2, {
                        data: "samloc",
                        x: .01,
                        y: .01
                    }),
                    setTimeout(function() {
                        i.txtStatus.visible = !1
                    }, 300)
                }, e || 2e3)
            }
            ,
            r.prototype.UpdateGameLoopId = function() {
                this.lblSession.text = Message.GetMessage("ca95").toUpperCase() + (this.roomModel.CurrentGameLoopId <= 0 ? " #" : this.roomModel.CurrentGameLoopId)
            }
            ,
            r.prototype.UpdateSession = function() {
                for (var t in this.roomModel.Players) {
                    var e = this.GetPlayerByAccountId(t);
                    e && (e.player = this.roomModel.Players[t],
                    e.UpdateBalance(0 === this.roomModel.MoneyType ? e.player.Account.CoinBalance : e.player.Account.GoldBalance))
                }
                this.currentPlayer = this.roomModel.Players[App.account.accountID + ":" + App.account.portalID]
            }
            ,
            r.prototype.CheckGame = function(t) {
                var e = this;
                this.roomModel.CountPlayers < 2 ? this.ShowNotify(Message.GetMessage("me7")) : this.roomModel.IsPlaying ? setTimeout(function() {
                    e.GenerateCards(e),
                    e.DrawDraftCards(),
                    e.DrawCurrentCards(e.roomModel.GameLoop.CurrTurnCards),
                    e.CheckCurrentTurn(t),
                    e.CheckSkipTurn(),
                    e.roomModel.GameLoop.GameState.AccountBaoSam && e.PlayerBaoSam(e.roomModel.GameLoop.GameState.AccountBaoSam)
                }, 300) : this.ShowNotify(Message.GetMessage("me6"))
            }
            ,
            r.prototype.CheckCurrentTurn = function(t) {
                this.StartActions(t.state.accountId, t.state.allowedActions, t.time, t.totalTime)
            }
            ,
            r.prototype.CheckSkipTurn = function() {
                for (var t = this.roomModel.GameLoop.GameState.State, e = 0; e < t.length; e++)
                    t[e].InTurn || this.GetPlayerByAccountId(t[e].AccountId) && this.BoLuot(t[e].AccountId)
            }
            ,
            r.prototype.RemoveDraftCards = function() {
                this.draftCardsContainer && this.draftCardsContainer.destroy({
                    children: !0
                }),
                this.draftCardsContainer = new Container,
                this.cardContainer.addChildAt(this.draftCardsContainer, 0)
            }
            ,
            r.prototype.ResetGame = function() {
                this.RemoveDraftCards(),
                this.handCards = [],
                this.currentCards = [],
                this.selectedCards = [],
                this.isFinish = !1,
                this.numb = [0, 0, 0, 0];
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && this.players[t].Reset()
            }
            ,
            r.prototype.StartGame = function(t) {
                this.ResetGame(),
                this.roomModel = t,
                this.ChangeOwner(this.roomModel.OwnerId),
                this.UpdateGameLoopId();
                var e = this;
                1 < t.CountActivePlayer ? setTimeout(function() {
                    e.DivideCards()
                }, 500) : this.roomModel.CountPlayers < 2 ? this.ShowNotify(Message.GetMessage("me7")) : this.ShowNotify(Message.GetMessage("me6"))
            }
            ,
            r.prototype.DivideCards = function() {
                this.txtNotify.visible = !1,
                this.RemoveDraftCards();
                var t = this.roomModel.Players;
                for (var e in t) {
                    var n = this.GetPlayerByAccountId(t[e].AccountID);
                    10 === t[e].HandCards.length && n && n.Divide()
                }
                var i = this;
                setTimeout(function() {
                    return i.GenerateCards(i)
                }, 1480)
            }
            ,
            r.prototype.HideDivide = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && this.players[t].HideDivide()
            }
            ,
            r.prototype.GenerateCards = function(t) {
                var e;
                t.HideDivide();
                var n = t.roomModel.Players;
                for (e in n)
                    if (0 < n[e].HandCards.length) {
                        var i = t.GetPlayerByAccountId(n[e].AccountID);
                        if (null == i || void 0 === i)
                            return;
                        n[e].AccountID === t.currentPlayer.AccountID ? (i.GenerateHandCards(n[e].HandCards),
                        t.handCards = n[e].HandCards) : (i.numbCards = n[e].HandCards.length,
                        i.UpdateCards(i.numbCards))
                    }
            }
            ,
            r.prototype.DrawDraftCards = function() {
                this.RemoveDraftCards();
                var t, e = 0, n = this.roomModel.Players;
                for (t in n)
                    0 < n[t].Status && (e += 10 - n[t].HandCards.length);
                for (t = 0; t < e; t++) {
                    var i = 160 * (.5 - Math.random())
                      , a = 80 * (.5 - Math.random()) - 10
                      , o = 15 - 30 * Math.random()
                      , s = new Sprite(TextureCache["joker.png"]);
                    s.anchor.set(.5),
                    s.scale.set(.8),
                    s.position.set(i, a),
                    s.rotation = p.Util.DegreeToRadian(o),
                    this.draftCardsContainer.addChild(s)
                }
            }
            ,
            r.prototype.DrawCurrentCards = function(t) {
                this.currentCards = [];
                for (var e = t.length; e--; ) {
                    var n = t[e].Value.Cards
                      , i = 160 * (.5 - Math.random()) - 10 * n.length
                      , a = 80 * (.5 - Math.random()) - 10
                      , o = 15 - 30 * Math.random()
                      , s = new Container;
                    this.draftCardsContainer.addChild(s),
                    this.currentCards.push(s);
                    for (var r = 0, h = n.length; r < h; r++) {
                        var c = new Sprite(TextureCache[this.cardsMap[n[r]]]);
                        s.addChild(c),
                        c.anchor.set(.5),
                        c.scale.set(.8),
                        c.s = .8,
                        c.position.set(i + 20 * r, a),
                        c.rotation = p.Util.DegreeToRadian(o)
                    }
                }
                for (var l = 0; l < this.currentCards.length - 1; l++)
                    for (var d = 0; d < this.currentCards[l].children.length; d++)
                        this.Overlay(this.currentCards[l].children[d])
            }
            ,
            r.prototype.AskBaoSam = function(t) {
                var e = this
                  , n = this.GetPlayerByAccountId(this.currentPlayer.AccountID);
                this.RemoveTimer(),
                this.timer = new p.Timer({
                    width: 138,
                    height: 138,
                    lineWidth: 4
                }),
                this.timer.startTimer(t, t);
                try {
                    this.timer.position.set(n.avatar.x - 70, n.avatar.y - 70),
                    this.playerContainer.addChild(this.timer)
                } catch (t) {}
                setTimeout(function() {
                    e.ShowNotify(Message.GetMessage("ca62"), 2e3),
                    e.btnBoSam.visible = !0,
                    e.btnXinSam.visible = !0
                }, 2e3)
            }
            ,
            r.prototype.HideSam = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && (this.players[t].icSam.visible = !1)
            }
            ,
            r.prototype.PlayerBaoSam = function(t) {
                this.btnBoSam.visible = !1,
                this.btnXinSam.visible = !1;
                var e = this.GetPlayerByAccountId(t);
                e && (e.icSam.visible = !0)
            }
            ,
            r.prototype.RemoveTimer = function() {
                if (this.timer)
                    try {
                        if (this.tTimer)
                            try {
                                this.tTimer.kill()
                            } catch (t) {}
                        p.Util.ClearTimeOut(this.timeAction),
                        this.timer.clearTimer(),
                        this.timer = null
                    } catch (t) {}
            }
            ,
            r.prototype.RemoveEffect = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && this.players[t].RemoveEffect()
            }
            ,
            r.prototype.DestroyEffect = function() {
                this.effect && this.effect.destroy({
                    children: !0
                }),
                this.effect = new Container,
                this.effectContainer.addChild(this.effect)
            }
            ,
            r.prototype.CheckTime = function(t, e) {
                clearTimeout(t.timeAction),
                --e <= 4 && (t.tTimer = TweenMax.to(t.timer, .5, {
                    data: "samloc",
                    alpha: .2,
                    yoyo: !0,
                    repeat: -1
                })),
                0 < e && (t.timeAction = setTimeout(function() {
                    return t.CheckTime(t, e)
                }, 1e3))
            }
            ,
            r.prototype.StartActions = function(t, e, n, i) {
                this.btnBoSam.visible = this.btnXinSam.visible = !1,
                console.log("start actions", t, e, n, i),
                this.RemoveTimer(),
                0 === this.currentCards.length && this.RemoveEffect();
                try {
                    var a = t === this.currentPlayer.AccountID ? 138 : 118
                      , o = t === this.currentPlayer.AccountID ? 138 : 118
                      , s = void 0;
                    if (this.HideDivide(),
                    this.timer)
                        try {
                            this.timer.clearTimer()
                        } catch (t) {}
                    this.timer = new p.Timer({
                        width: a,
                        height: o,
                        lineWidth: 4
                    }),
                    this.timer.startTimer(i || n, n);
                    var r = this.GetPlayerByAccountId(t);
                    if (this.timer.position.set(r.avatar.x - (t === this.currentPlayer.AccountID ? 70 : 60), r.avatar.y - (t === this.currentPlayer.AccountID ? 70 : 60)),
                    this.playerContainer.addChild(this.timer),
                    -1 === e[0])
                        return this.ChangeOwner(t),
                        void this.ShowNotify(Message.GetMessage("me7"));
                    if (1e3 === e[0])
                        return void this.ShowNotify(Message.GetMessage("me6"));
                    if (t === this.currentPlayer.AccountID)
                        for (this.isPlaying = !0,
                        this.CheckTime(this, n),
                        s = 0; s < e.length; s++) {
                            var h = e[s];
                            h === this.locActionName.DANH_BAI ? 0 < this.selectedCards.length ? (this.EnableButton(this.btnHit),
                            this.EnableButton(this.btnCancel)) : (this.DisableButton(this.btnHit),
                            this.DisableButton(this.btnCancel)) : h === this.locActionName.BO_LUOT && (this.DisableButton(this.btnHit),
                            this.EnableButton(this.btnSkip),
                            0 < this.selectedCards.length ? (this.EnableButton(this.btnCancel),
                            this.EnableButton(this.btnHit)) : (this.DisableButton(this.btnCancel),
                            this.DisableButton(this.btnHit)))
                        }
                    else
                        this.isPlaying = !1,
                        this.DisableButtons(),
                        0 < this.selectedCards.length ? this.EnableButton(this.btnCancel) : this.DisableButton(this.btnCancel),
                        1 < this.handCards.length && this.EnableButton(this.btnSort)
                } catch (t) {
                    console.log("Start action err", t)
                }
            }
            ,
            r.prototype.StopTimer = function() {
                this.RemoveTimer()
            }
            ,
            r.prototype.GetTexture = function(t) {
                return void 0 !== TextureCache[t + this.lang + ".png"] ? TextureCache[t + this.lang + ".png"] : TextureCache[t + "en.png"]
            }
            ,
            r.prototype.CardDown = function(t) {
                if (this.isSeleted) {
                    this.isSeleted = !1,
                    this.filters = null;
                    try {
                        TweenMax.to(this, .3, {
                            data: "samloc",
                            y: this.posY
                        })
                    } catch (t) {}
                    t.selectedCards.splice(t.selectedCards.indexOf(this.OrdinalValue), 1)
                } else {
                    this.isSeleted = !0,
                    this.filters = [t.filterCard];
                    try {
                        TweenMax.to(this, .3, {
                            data: "samloc",
                            y: this.posY - 10
                        })
                    } catch (t) {}
                    t.selectedCards.push(this.OrdinalValue)
                }
                0 < t.selectedCards.length ? (t.isPlaying && t.EnableButton(t.btnHit),
                t.EnableButton(t.btnCancel)) : (t.DisableButton(t.btnHit),
                t.DisableButton(t.btnCancel))
            }
            ,
            r.prototype.BoLuot = function(t) {
                var e = this.GetPlayerByAccountId(t);
                if (null != e && void 0 !== e) {
                    var n = new Sprite(TextureCache["bg-black-effect.png"]);
                    n.name = "bolượt",
                    n.anchor.set(.5),
                    n.position.set(e.avatar.x, e.avatar.y + e.avatar.height / 2 - n.height / 2);
                    var i = new Sprite(this.GetTexture("TextBoLuot-"));
                    i.anchor.set(.5),
                    n.addChild(i),
                    e.effectContainer.addChild(n)
                }
            }
            ,
            r.prototype.EndRound = function() {
                this.isFinish || this.RemoveEffect();
                for (var t = 0; t < this.currentCards.length; t++)
                    for (var e = 0; e < this.currentCards[t].children.length; e++)
                        this.UnOverlay(this.currentCards[t].children[e]),
                        this.CloseCard(this.currentCards[t].children[e]);
                this.currentCards = []
            }
            ,
            r.prototype.ShowEffect = function(t) {
                this.DestroyEffect();
                var e = new Sprite(TextureCache["OpticalFlare.png"]);
                e.anchor.set(.5),
                e.y = -150,
                e.x = -600;
                var n = new Sprite(this.GetTexture(t));
                n.anchor.set(.5),
                n.y = -110,
                n.x = -600;
                var i = new Sprite(TextureCache["OpticalFlare.png"]);
                i.anchor.set(.5),
                i.y = -80,
                i.x = 600,
                this.effect.addChild(e, n, i);
                try {
                    TweenMax.to(n, .3, {
                        data: "samloc",
                        x: 0,
                        onComplete: function() {
                            try {
                                TweenMax.to(n, .3, {
                                    data: "samloc",
                                    x: 600,
                                    alpha: .1,
                                    delay: 1,
                                    onComplete: function() {
                                        n.destroy()
                                    }
                                })
                            } catch (t) {}
                        }
                    })
                } catch (t) {}
                try {
                    TweenMax.to(e, .7, {
                        data: "samloc",
                        x: 0,
                        onComplete: function() {
                            TweenMax.to(e, .3, {
                                data: "samloc",
                                x: 600,
                                alpha: .1,
                                delay: .5,
                                onComplete: function() {
                                    e.destroy()
                                }
                            })
                        }
                    })
                } catch (t) {}
                try {
                    TweenMax.to(i, .7, {
                        data: "samloc",
                        x: 0,
                        onComplete: function() {
                            TweenMax.to(i, .3, {
                                data: "samloc",
                                x: -600,
                                alpha: .1,
                                delay: .5,
                                onComplete: function() {
                                    i.destroy()
                                }
                            })
                        }
                    })
                } catch (t) {}
            }
            ,
            r.prototype.DanhBai = function(t, e) {
                console.log("DanhBai", t, e);
                var n = this.GetPlayerByAccountId(t);
                if (null != n && void 0 !== n) {
                    var i, a = 0, o = 160 * (.5 - Math.random()) - 10 * e.length, s = 80 * (.5 - Math.random()) - 10, r = 15 - 30 * Math.random(), h = new Container;
                    this.draftCardsContainer.addChild(h),
                    this.currentCards.push(h);
                    var c = this.CheckHieuUng(this.GetCardNumber(e));
                    if ("" !== c && this.ShowEffect(c),
                    t === this.currentPlayer.AccountID) {
                        var l = []
                          , d = void 0;
                        if (null == n || void 0 === n)
                            return;
                        for (this.handCards = n.handCards,
                        i = 0; i < n.handCards.length; i++)
                            if (l.push(n.handCards[i].OrdinalValue),
                            0 <= (d = $.inArray(n.handCards[i].OrdinalValue, e))) {
                                n.handCards[i].s = .8,
                                n.handCards[i].filters = null,
                                n.handCards[i].interactive = !1,
                                n.handCards[i].buttonMode = !1;
                                try {
                                    TweenMax.to(n.handCards[i], .5, {
                                        data: "samloc",
                                        x: o + 20 * a,
                                        y: s,
                                        rotation: p.Util.DegreeToRadian(r)
                                    })
                                } catch (t) {}
                                try {
                                    TweenMax.to(n.handCards[i].scale, .5, {
                                        data: "samloc",
                                        x: .8,
                                        y: .8
                                    })
                                } catch (t) {}
                                h.addChild(n.handCards[i]),
                                a++
                            }
                        for (i = 0; i < e.length; i++)
                            0 <= (d = $.inArray(e[i], l)) && (l.splice(d, 1),
                            n.handCards.splice(d, 1));
                        for (i = 0; i < n.handCards.length; i++)
                            TweenMax.to(n.handCards[i], .2, {
                                data: "samloc",
                                x: this.handCardsPos[n.pos].x + 65 * i,
                                onComplete: function() {}
                            });
                        this.selectedCards = [],
                        this.DisableButton(this.btnCancel)
                    } else {
                        for (i = 0; i < e.length; i++) {
                            var u = new Sprite(TextureCache[this.cardsMap[e[i]]]);
                            u.anchor.set(.5),
                            u.scale.set(.01),
                            u.s = .8,
                            u.position.set(n.jokCard.x, n.jokCard.y),
                            h.addChild(u);
                            try {
                                TweenMax.to(u, .5, {
                                    data: "samloc",
                                    x: o + 20 * i,
                                    y: s,
                                    rotation: p.Util.DegreeToRadian(r)
                                })
                            } catch (t) {}
                            try {
                                TweenMax.to(u.scale, .5, {
                                    data: "samloc",
                                    x: .8,
                                    y: .8
                                })
                            } catch (t) {}
                        }
                        n.numbCards = n.numbCards - e.length,
                        n.UpdateCards(n.numbCards)
                    }
                    this.OverlayOtherCurrentCard()
                }
            }
            ,
            r.prototype.SortHandCards = function(t) {
                this.roomModel.Players[this.currentPlayer.AccountID].HandCards = t,
                this.GetPlayerByAccountId(this.currentPlayer.AccountID).GenerateHandCards(t),
                this.selectedCards = []
            }
            ,
            r.prototype.AllowChanNgay = function(t) {}
            ,
            r.prototype.CancelChanNgay = function(t) {}
            ,
            r.prototype.GetTxtResult = function(t) {
                var e = "";
                switch (t) {
                case -1:
                    e = "ca86";
                    break;
                case 5:
                    e = "ca67";
                    break;
                case 6:
                    e = "ca36";
                    break;
                case 7:
                    e = "ca63";
                    break;
                case 8:
                    e = "ca64";
                    break;
                case 9:
                    e = "ca66"
                }
                return Message.GetMessage(e)
            }
            ,
            r.prototype.UpdateConnectionStatus = function(t, e) {
                var n = this.GetPlayerByAccountId(t);
                n && n.UpdateStatus(e)
            }
            ,
            r.prototype.EnterLobby = function() {
                this.hub.EnterLobby(this.currencyId)
            }
            ,
            r.prototype.ExitLobby = function() {
                this.hub.ExitLobby()
            }
            ,
            r.prototype.Stop = function() {
                this.ExitLobby(),
                this.hub.connection.stop()
            }
            ,
            r.prototype.Delete = function() {
                this.isJoin = !1,
                this.ready = !1,
                p.Util.ClearTimeOut(this.timeStatus),
                window.removeEventListener("resize", this.resizeFunc);
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "samloc" === t[e].data && t[e].kill();
                try {
                    this.application.view.remove(),
                    this.application.destroy(!0)
                } catch (t) {}
            }
            ,
            r);
            function r(t) {
                this.accountId = 0,
                this.ready = !1,
                this.isLoad = !1,
                this.isJoin = !1,
                this.locResultFamily = {
                    DEN_SAM: -2,
                    CONG_VA_THOI: -1,
                    CONG: 0,
                    THOI_BAI: 1,
                    BET: 2,
                    NORMAL: 3,
                    NHAT: 4,
                    TOI_TRANG: 5,
                    CHAN_SAM: 6,
                    AN_CA_LANG: 7
                },
                this.players = [null, null],
                this.fontRobotoCondensedRegular = "RobotoCondensed-Regular",
                this.fontRobotoCondensedBold = "RobotoCondensed-Bold",
                this.fontFaceBold = "Roboto-Bold",
                this.fontFace = "Roboto-Light",
                this.cardsMap = ["3bich.png", "3tep.png", "3do.png", "3co.png", "4bich.png", "4tep.png", "4do.png", "4co.png", "5bich.png", "5tep.png", "5do.png", "5co.png", "6bich.png", "6tep.png", "6do.png", "6co.png", "7bich.png", "7tep.png", "7do.png", "7co.png", "8bich.png", "8tep.png", "8do.png", "8co.png", "9bich.png", "9tep.png", "9do.png", "9co.png", "10bich.png", "10tep.png", "10do.png", "10co.png", "11bich.png", "11tep.png", "11do.png", "11co.png", "12bich.png", "12tep.png", "12do.png", "12co.png", "13bich.png", "13tep.png", "13do.png", "13co.png", "1bich.png", "1tep.png", "1do.png", "1co.png", "2bich.png", "2tep.png", "2do.png", "2co.png", "joker.png"],
                this.locToiTrangType = {
                    SanhRong: 9,
                    TuQuyHai: 8,
                    HaiTuQuy: 7,
                    MuoiLaDongMau: 6,
                    NamDoiBatKy: 5,
                    None: -1
                },
                this.locActionName = {
                    START_GAME: 1e3,
                    WAIT: -1,
                    DANH_BAI: 1,
                    BO_LUOT: 2,
                    BAO_SAM: 3,
                    THANG_THUA: 4
                },
                this.handCards = [],
                this.currentCards = [],
                this.isPlaying = !1,
                this.numb = [0, 0, 0, 0],
                this.playerPos = [[-500, 86], [360, -270]],
                this.handCardsPos = [{
                    x: -360,
                    y: 186,
                    scale: 1.5
                }, {
                    x: 260,
                    y: -228,
                    scale: 1
                }],
                this.selectedCards = [],
                this.moneyText = ["XU", "GAM"],
                this.FlipCard = function(t) {
                    var e = this;
                    if (t)
                        try {
                            TweenMax.to(t.scale, .3, {
                                data: "samloc",
                                x: .01,
                                onComplete: function() {
                                    t.texture = TextureCache[e.cardsMap[t.OrdinalValue]];
                                    try {
                                        TweenMax.to(t.scale, .3, {
                                            data: "samloc",
                                            x: t.s
                                        })
                                    } catch (t) {}
                                }
                            })
                        } catch (t) {}
                }
                ,
                this.filterCard = new PIXI.filters.OutlineFilter(3,15572500),
                this.OverlayOtherCurrentCard = function() {
                    for (var t = 0; t < this.currentCards.length - 1; t++)
                        for (var e = 0; e < this.currentCards[t].children.length; e++)
                            this.Overlay(this.currentCards[t].children[e])
                }
                ,
                this.CheckHieuUng = function(t) {
                    return 4 === t.length && t[1].CardNumber === t[0].CardNumber && t[2].CardNumber === t[3].CardNumber && t[1].CardNumber === t[3].CardNumber ? "tu-quy-" : 6 === t.length && t[1].CardNumber === t[0].CardNumber ? "3-doi-thong-" : 8 === t.length && t[1].CardNumber === t[0].CardNumber ? "4-doi-thong-" : ""
                }
                ,
                this.GetCardNumber = function(t) {
                    var e = [];
                    for (var n in t) {
                        var i = {
                            CardSuite: t[n] % 4 * 13,
                            CardNumber: (t[n] - t[n] % 4) / 4 + 3,
                            OrdinalValue: t[n],
                            IsDraggable: !1,
                            Flip: !0
                        };
                        e.push(i)
                    }
                    return e
                }
                ,
                this.isFinish = !1,
                this.ShowResult = function(t) {
                    var e, n, i = this;
                    for (this.isFinish = !0,
                    this.DisableButtons(),
                    this.HideSam(),
                    this.RemoveTimer(),
                    e = 0; e < this.currentCards.length; e++)
                        for (n = 0; n < this.currentCards[e].children.length; n++)
                            this.UnOverlay(this.currentCards[e].children[n]),
                            this.CloseCard(this.currentCards[e].children[n]);
                    if (this.RemoveEffect(),
                    i.currentCards = [],
                    t) {
                        var a;
                        for (e in (this.roomModel = t).Players) {
                            var o = t.Players[e];
                            if (-1 !== o.Position) {
                                a = i.GetPlayerByAccountId(o.AccountID);
                                var s = [];
                                for (n = 0; n < t.GameLoop.SessionResult.ResultList.length; n++)
                                    if (t.GameLoop.SessionResult.ResultList[n].AccountId === o.AccountID) {
                                        s = t.GameLoop.SessionResult.ResultList[n].BaiThoi;
                                        break
                                    }
                                if (o.AccountID !== this.currentPlayer.AccountID) {
                                    var r = t.GameLoop.SessionResult.ResultList.find(function(t) {
                                        return t.AccountId == o.AccountID
                                    });
                                    a.jokCard.visible = !1,
                                    0 < o.HandCards.length && a.ShowCards(o.HandCards, s, r.ResultFamily)
                                }
                            }
                        }
                        for (e in t.GameLoop.SessionResult.ResultList) {
                            var h = t.GameLoop.SessionResult.ResultList[e]
                              , c = h.Money;
                            a = this.GetPlayerByAccountId(h.AccountId);
                            var l = t.Players[h.AccountId];
                            if (h.ResultFamily === this.locResultFamily.AN_CA_LANG)
                                (d = new AnimatedSprite(i.framesFireWork)).anchor.set(.5),
                                d.animationSpeed = .5,
                                d.play(),
                                (u = new Sprite(TextureCache["thang-sam-" + this.lang + ".png"])).anchor.set(.5),
                                a.effectContainer.addChild(d, u),
                                h.AccountId === this.currentPlayer.AccountID ? (u.position.set(0, -30),
                                d.position.set(0, 0),
                                d.scale.set(1.5)) : (u.scale.set(.4),
                                u.position.set(a.avatar.x, a.avatar.y + a.avatar.height / 2 - u.height / 2),
                                d.scale.set(.7),
                                d.position.set(a.avatar.x, a.avatar.y));
                            else if (h.ResultFamily === this.locResultFamily.CHAN_SAM) {
                                (d = new AnimatedSprite(i.framesFireWork)).anchor.set(.5),
                                d.animationSpeed = .5,
                                d.play(),
                                (u = new Sprite(TextureCache["chan-sam-" + this.lang + ".png"])).anchor.set(.5),
                                a.effectContainer.addChild(d, u),
                                h.AccountId === this.currentPlayer.AccountID ? (u.position.set(0, -30),
                                d.position.set(0, 0),
                                d.scale.set(1.5)) : (u.scale.set(.4),
                                u.position.set(a.avatar.x, a.avatar.y + a.avatar.height / 2 - u.height / 2),
                                d.scale.set(.7),
                                d.position.set(a.avatar.x, a.avatar.y))
                            } else if (5 === h.ResultFamily) {
                                var d, u;
                                (d = new AnimatedSprite(i.framesFireWork)).anchor.set(.5),
                                d.animationSpeed = .5,
                                d.play(),
                                (u = new Sprite(TextureCache["ribbon.png"])).anchor.set(.5);
                                var p, f = new Sprite(this.GetTexture("toi-trang-"));
                                if (f.anchor.set(.5),
                                f.position.set(0, 22),
                                u.addChild(f),
                                a.effectContainer.addChild(d, u),
                                0 <= h.WinType) {
                                    p = new PIXI.Text(this.GetTxtResult(h.WinType).toUpperCase(),{
                                        fontFamily: this.fontFaceBold,
                                        fontSize: h.AccountId === this.currentPlayer.AccountID ? 30 : 16,
                                        fill: ["white"],
                                        padding: 10,
                                        align: "center"
                                    }),
                                    h.AccountId === this.currentPlayer.AccountID ? (p.anchor.set(.5),
                                    p.position.set(-120, this.handCardsPos[0] - 100)) : (3 === a.pos ? p.anchor.set(0, .5) : p.anchor.set(1, .5),
                                    p.position.set(i.handCardsPos[a.pos].x, i.handCardsPos[a.pos].y + 46 + p.height / 2)),
                                    a.effectContainer.addChild(p);
                                    var C = l.HandCards;
                                    $.each(C, function(t, e) {
                                        i.UnOverlay(e)
                                    })
                                }
                                h.AccountId === this.currentPlayer.AccountID ? (u.position.set(0, -30),
                                d.position.set(0, 0),
                                d.scale.set(1.5)) : (u.scale.set(.4),
                                u.position.set(a.avatar.x, a.avatar.y + a.avatar.height / 2 - u.height / 2),
                                d.scale.set(.7),
                                d.position.set(a.avatar.x, a.avatar.y))
                            } else {
                                var m;
                                switch (h.ResultFamily) {
                                case -2:
                                    m = "den-sam-";
                                    break;
                                case -1:
                                case 0:
                                    m = "cong-";
                                    break;
                                case 1:
                                    m = "ung-";
                                    break;
                                case 2:
                                    m = "thua-";
                                    break;
                                case 4:
                                    m = "thang-"
                                }
                                if (0 < c) {
                                    var y = new AnimatedSprite(i.framesWin);
                                    y.anchor.set(.5),
                                    y.position.set(a.avatar.x, a.avatar.y),
                                    y.animationSpeed = .5,
                                    y.play(),
                                    a.effectContainer.addChild(y),
                                    h.AccountId === this.currentPlayer.AccountID ? (y.scale.set(1.18),
                                    y.y += 10) : (y.scale.set(1.05),
                                    y.y += 8),
                                    (g = new Sprite(this.GetTexture(m))).anchor.set(.5),
                                    g.position.set(a.avatar.x, a.avatar.y + a.avatar.height / 2 - g.height / 2),
                                    a.effectContainer.addChild(g)
                                } else {
                                    var g;
                                    (g = new Sprite(this.GetTexture(m))).anchor.set(.5);
                                    var b = new Sprite(TextureCache["bg-black-effect.png"]);
                                    b.anchor.set(.5),
                                    b.position.set(a.avatar.x, a.avatar.y + a.avatar.height / 2 - b.height / 2),
                                    b.addChild(g),
                                    a.effectContainer.addChild(b)
                                }
                            }
                            a.UpdateMoney(this.roomModel.Players[a.accountId].Account, c)
                        }
                        setTimeout(function() {
                            return i.ResetGame()
                        }, 5e3)
                    }
                }
                ,
                this.size = t.size,
                this.target = t.target,
                this.token = t.token,
                this.loader = new i.default,
                this.currencyId = t.currencyID,
                this.lang = Message.GetLanguageCode(),
                this.isLoad = !1,
                this.isJoin = !1,
                this.ready = !1,
                this.players = [null, null, null, null]
            }
            e.games = s
        },
        27: function(t, e, n) {
            "use strict";
            var i, a = this && this.__extends || (i = function(t, e) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function n() {
                    this.constructor = t
                }
                i(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var o, s = n(0), r = (o = s.Assets,
            a(h, o),
            h);
            function h() {
                var t = o.call(this) || this;
                return t.assets = [{
                    id: "",
                    src: "/assets/images/common/bai.json"
                }, {
                    id: "",
                    src: "/assets/images/common/common.json"
                }, {
                    id: "",
                    src: "/assets/images/common/dealer.json"
                }, {
                    id: "",
                    src: "/assets/images/common/firework.json"
                }, {
                    id: "win.effect",
                    src: "/assets/images/common/win.png"
                }, {
                    id: "table-1",
                    src: "/assets/images/common/table-vip.png"
                }, {
                    id: "table-0",
                    src: "/assets/images/common/table-normal.png"
                }, {
                    id: "",
                    src: "/assets/images/samloc/samloc.json"
                }, {
                    id: "",
                    src: "/assets/images/tlmn/tlmn.json"
                }],
                t.add(t.assets),
                t
            }
            e.default = r
        },
        28: function(t, e, n) {
            "use strict";
            var i, a = this && this.__extends || (i = function(t, e) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function n() {
                    this.constructor = t
                }
                i(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var o, s = n(0), r = (o = s.Hub,
            a(h, o),
            h.prototype.Listen = function() {
                o.prototype.Listen.call(this);
                var i = this;
                i.connection.on("danhBai", function(t, e, n) {
                    i.game && i.game.DanhBai(t, e, n)
                }),
                i.connection.on("boLuot", function(t) {
                    i.game && i.game.BoLuot(t)
                }),
                i.connection.on("allowChanNgay", function(t) {
                    i.game && i.game.AllowChanNgay(t)
                }),
                i.connection.on("cancelChanNgay", function() {
                    i.game && i.game.CancelChanNgay()
                }),
                i.connection.on("endRound", function() {
                    i.game && i.game.EndRound()
                }),
                i.connection.on("sortHandCards", function(t) {
                    i.game && i.game.SortHandCards(t)
                }),
                i.connection.on("showResult", function(t) {
                    i.game && i.game.ShowResult(t)
                }),
                i.connection.on("startActionTimer", function(t, e, n) {
                    i.game && i.game.StartActions(t, n, e)
                }),
                i.connection.on("stopActionTimer", function() {
                    i.game && i.game.StopTimer()
                }),
                i.connection.on("updateAccount", function(t, e) {
                    console.log("updateAccount", t, e),
                    i.game && i.game.UpdateAccount(t, e)
                }),
                i.connection.on("askBaoSam", function(t) {
                    console.log("ask bao sam", t),
                    i.game && i.game.AskBaoSam(t)
                }),
                i.connection.on("playerBaoSam", function(t) {
                    console.log("playerBaoSam", t),
                    i.game && i.game.PlayerBaoSam(t)
                })
            }
            ,
            h);
            function h(t, e, n) {
                var i = o.call(this, t, e, n) || this;
                return i.DanhBai = function(t) {
                    this.connection.invoke("DanhBai", t).then(function(t) {
                        console.log("DanhBai", t)
                    })
                }
                ,
                i.BoLuot = function() {
                    this.connection.invoke("BoLuot").then(function(t) {
                        console.log("BoLuot", t)
                    })
                }
                ,
                i.SortHandCards = function() {
                    this.connection.invoke("SortHandCards").then(function(t) {
                        console.log("SortHandCards", t)
                    })
                }
                ,
                i
            }
            e.default = r
        },
        29: function(t, e, n) {
            "use strict";
            var i, a = this && this.__extends || (i = function(t, e) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function n() {
                    this.constructor = t
                }
                i(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var o, s = n(0), r = (o = s.Player,
            a(h, o),
            h.prototype.RemoveHandCards = function() {
                this.handContainer && this.handContainer.destroy({
                    children: !0
                }),
                this.handContainer = new Container,
                this.addChild(this.handContainer)
            }
            ,
            h.prototype.GenerateHandCards = function(t) {
                var e;
                this.RemoveHandCards(),
                this.handCards = [];
                var n = this.game
                  , i = this;
                for (e = 0; e < t.length; e++) {
                    var a = new Sprite(TextureCache["joker.png"]);
                    a.anchor.set(.5),
                    a.OrdinalValue = void 0 !== t[e].OrdinalValue ? t[e].OrdinalValue : t[e].ordinalValue,
                    a.s = n.handCardsPos[this.pos].scale,
                    a.posY = n.handCardsPos[this.pos].y,
                    a.scale.set(a.s),
                    a.position.set(n.handCardsPos[this.pos].x, n.handCardsPos[this.pos].y),
                    a.isSeleted = !1,
                    a.on("pointerdown", n.CardDown.bind(a, n)),
                    this.handCards.push(a),
                    this.handContainer.addChild(a)
                }
                for (e = this.handCards.length - 1; 0 <= e; e--)
                    this.handCards[e] && this.FlipHand(this.handCards[e], e);
                setTimeout(function() {
                    i.EnableCards(),
                    n.EnableButton(n.btnSort)
                }, 1e3)
            }
            ,
            h.prototype.FlipHand = function(t, e) {
                try {
                    TweenMax.to(t, .4, {
                        data: "samloc",
                        x: this.game.handCardsPos[0].x + 65 * e
                    })
                } catch (t) {}
                setTimeout(this.game.FlipCard(t), 400)
            }
            ,
            h.prototype.EnableCards = function() {
                for (var t = this.handCards.length - 1; 0 <= t; t--)
                    this.handCards[t].interactive = !0,
                    this.handCards[t].buttonMode = !0
            }
            ,
            h.prototype.DisableCards = function() {
                for (var t = this.handCards.length - 1; 0 <= t; t--)
                    this.handCards[t].interactive = !1,
                    this.handCards[t].buttonMode = !1
            }
            ,
            h.prototype.UpdateCards = function(t) {
                this.numbCards = t,
                this.txtCards.text = t,
                this.jokCard.visible = 0 < this.numbCards
            }
            ,
            h.prototype.UpdateMoney = function(t, e) {
                null == t ? 1 === this.game.roomModel.MoneyType ? this.player.Account.GoldBalance += e : this.player.Account.CoinBalance += e : this.player && t && (this.player.Account = t,
                this.txtMoney.text = s.Util.ParseMoney(1 === this.game.roomModel.MoneyType ? this.player.Account.GoldBalance : this.player.Account.CoinBalance))
            }
            ,
            h.prototype.ShowMoney = function(t) {
                var e = new PIXI.Text((0 < t ? "+" : "") + s.Util.ParseMoney(t),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 20,
                    fill: "yellow"
                });
                e.anchor.set(.5),
                e.position.set(this.avatar.x, this.avatar.y),
                this.game.cardContainer.addChild(e),
                TweenMax.to(e, 2, {
                    data: "samloc",
                    y: e.y - 100,
                    alpha: 0
                })
            }
            ,
            h.prototype.UpdateStatus = function(t) {
                1 === t ? this.isUnLeave || this.isLeave ? (this.isUnLeave = !1,
                this.leaveStatus.visible = !1,
                this.isLeave = !1,
                this.accountId === this.game.currentPlayer.AccountID && this.game.ShowStatus(Message.GetMessage("me9"))) : this.disStatus.visible = !1 : 2 === t ? (this.isLeave = !0,
                this.leaveStatus.visible = !0,
                this.accountId === this.game.currentPlayer.AccountID && this.game.ShowStatus(Message.GetMessage("me8"))) : 0 === t && (this.disStatus.visible = !0)
            }
            ,
            h.prototype.RemoveDivideCards = function() {
                if (this.divideContainer)
                    try {
                        this.divideContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.divideContainer = new Container,
                this.divideContainer.visible = !0,
                this.game.divideContainer.addChild(this.divideContainer)
            }
            ,
            h.prototype.RemoveEffect = function() {
                if (this.effectContainer)
                    try {
                        this.effectContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.effectContainer = new Container,
                this.effectContainer.visible = !0,
                this.game.effectContainer.addChild(this.effectContainer)
            }
            ,
            h.prototype.Divide = function() {
                var t;
                for (this.RemoveDivideCards(),
                t = 0; t < 13; t++) {
                    var e = new Sprite(TextureCache["joker.png"]);
                    e.anchor.set(.5),
                    this.divideContainer.addChild(e),
                    e.scale.set(.01),
                    e.position.set(this.game.dealer.x, this.game.dealer.y);
                    try {
                        TweenMax.to(e.scale, .5, {
                            data: "samloc",
                            x: this.game.handCardsPos[this.pos].scale,
                            y: this.game.handCardsPos[this.pos].scale,
                            delay: .07 * t
                        })
                    } catch (t) {}
                    try {
                        TweenMax.to(e, .5, {
                            data: "samloc",
                            x: this.game.handCardsPos[this.pos].x,
                            y: this.game.handCardsPos[this.pos].y,
                            delay: .07 * t
                        })
                    } catch (t) {}
                }
            }
            ,
            h.prototype.HideDivide = function() {
                this.divideContainer && (this.divideContainer.visible = !1)
            }
            ,
            h.prototype.ShowCards = function(t, e, n) {
                this.RemoveHandCards();
                for (var i = 0; i < t.length; i++) {
                    var a = new Sprite(TextureCache[this.game.cardsMap[t[i].OrdinalValue]]);
                    a.anchor.set(.5),
                    a.position.set(this.game.handCardsPos[this.pos].x, this.game.handCardsPos[this.pos].y),
                    3 === this.pos ? this.handContainer.addChild(a) : this.handContainer.addChildAt(a, 0);
                    try {
                        TweenMax.to(a, .5, {
                            data: "samloc",
                            x: a.x + 30 * i * (3 === this.pos ? 1 : -1)
                        })
                    } catch (t) {}
                    $.inArray(t[i].OrdinalValue, e) < 0 && 5 !== n && this.game.Overlay(a)
                }
            }
            ,
            h.prototype.Reset = function() {
                this.RemoveHandCards(),
                this.RemoveDivideCards(),
                this.RemoveEffect(),
                this.numbCards = 0,
                this.jokCard.visible = !1,
                this.icSam.visible = !1,
                this.selectedCards = []
            }
            ,
            h);
            function h(t) {
                var e = o.call(this, t) || this;
                e.handCards = [],
                e.numbCards = 0,
                e.selectedCards = [],
                e.isUnLeave = !1,
                e.isLeave = !1,
                e.handCards = [],
                e.numbCards = 0,
                e.selectedCards = [],
                e.handContainer = new Container,
                e.addChild(e.handContainer),
                e.jokCard = new Sprite(TextureCache["joker.png"]),
                e.jokCard.anchor.set(.5),
                e.jokCard.position.set(e.game.handCardsPos[e.pos].x, e.game.handCardsPos[e.pos].y),
                e.txtCards = new PIXI.Text("0",{
                    fontFamily: e.game.fontFaceBold,
                    fontSize: 30,
                    fill: ["#fff"]
                }),
                e.txtCards.anchor.set(.5),
                e.jokCard.addChild(e.txtCards),
                e.jokCard.visible = 0 < e.numbCards,
                e.icSam = new Sprite(TextureCache["bg-blue-effect.png"]),
                e.icSam.anchor.set(.5),
                e.icSam.position.set(e.avatar.x, e.avatar.y + e.avatar.height / 2 - e.icSam.height / 2);
                var n = new Sprite(e.game.GetTexture("xin-sam-txt-"));
                return n.anchor.set(.5),
                e.icSam.addChild(n),
                e.icSam.visible = !1,
                e.addChild(e.jokCard, e.icSam),
                e
            }
            e.default = r
        }
    },
    o.c = r,
    o.d = function(t, e, n) {
        o.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }
    ,
    o.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    o.t = function(e, t) {
        if (1 & t && (e = o(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var n = Object.create(null);
        if (o.r(n),
        Object.defineProperty(n, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                o.d(n, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return n
    }
    ,
    o.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return o.d(e, "a", e),
        e
    }
    ,
    o.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    o.p = "/",
    o(o.s = 25);
    function o(t) {
        if (r[t])
            return r[t].exports;
        var e = r[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return s[t].call(e.exports, e, e.exports, o),
        e.l = !0,
        e.exports
    }
    var s, r
});

!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("WebFont"), require("pixi-filters"), require("signalR")) : "function" == typeof define && define.amd ? define("catte", ["libs", "WebFont", "pixi-filters", "signalR"], e) : "object" == typeof exports ? exports.catte = e(require("libs"), require("WebFont"), require("pixi-filters"), require("signalR")) : t.catte = e(t.libs, t.WebFont, t["pixi-filters"], t.signalR)
}(window, function(o, n, a, i) {
    return h = {},
    s.m = r = {
        0: function(t, e) {
            t.exports = o
        },
        1: function(t, e) {
            t.exports = n
        },
        2: function(t, e) {
            t.exports = a
        },
        30: function(t, e, o) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var n = o(31)
              , a = o(1)
              , i = (s.prototype.delete = function() {
                this.game.Delete()
            }
            ,
            s.prototype.load = function(t) {
                this.game.Load(t)
            }
            ,
            s.prototype.join = function(t, e) {
                this.game.Join(t, e)
            }
            ,
            s.prototype.lobby = function() {
                this.game.EnterLobby()
            }
            ,
            s.prototype.stop = function() {
                this.game.Stop()
            }
            ,
            s);
            function s(t) {
                a.load({
                    custom: {
                        families: ["Roboto-Black", "Roboto-Bold", "Roboto-Medium", "Roboto-Regular", "Roboto-Light", "RobotoCondensed-Bold", "RobotoCondensed-Italic", "RobotoCondensed-Light", "RobotoCondensed-Regular", "UTM American Sans", "UTM Swiss Condensed", "UTM Swiss CondensedBold"]
                    },
                    fontactive: function() {}
                }),
                this.game = new n.games(t)
            }
            e.game = i
        },
        31: function(t, e, o) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var n = o(32)
              , a = o(33)
              , i = o(0)
              , s = o(35);
            o(2);
            var r = (h.prototype.Overlay = function(t) {
                t.tint = 5592405
            }
            ,
            h.prototype.UnOverlay = function(t) {
                t.tint = 16777215
            }
            ,
            h.prototype.CloseCard = function(t) {
                try {
                    TweenMax.to(t.scale, .3, {
                        data: "catte",
                        x: .01,
                        onComplete: function() {
                            t.texture = TextureCache["joker.png"];
                            try {
                                TweenMax.to(t.scale, .3, {
                                    data: "catte",
                                    x: t.s
                                })
                            } catch (t) {}
                        }
                    })
                } catch (t) {}
            }
            ,
            h.prototype.Load = function(t) {
                var e = this;
                e.loader.load(null, function() {
                    e.isLoad = !0,
                    e.InitHub(t)
                })
            }
            ,
            h.prototype.InitHub = function(t) {
                this.hub = new a.default(catteUrl + "hub",this.token,this),
                this.hub.Connect(this.currencyId, t)
            }
            ,
            h.prototype.Join = function(t, e) {
                this.hub.EnterRoom(t, e)
            }
            ,
            h.prototype.EnterGame = function(t) {
                this.JoinGame(t)
            }
            ,
            h.prototype.EnterRoom = function(t) {
                if (t.c < 0)
                    return App.showPopupMessage({
                        content: Message.GetMessage("ca" + t.c),
                        textDone: "OK"
                    }),
                    this.Delete(),
                    void App.handleBack();
                this.roomModel = t.r,
                App.joinGame({
                    value: this.roomModel.Value,
                    type: this.roomModel.Currency
                }),
                this.ready || (this.ready || this.Init(),
                this.GetCurrentPlayer(),
                this.RenderPlayers(this.roomModel.Players),
                this.ResetGame(),
                this.DisableButtons(),
                t.r.Session ? this.CheckGame(t.r.Session.Timeout) : this.ShowNotify(Message.GetMessage(1 < this.roomModel.Players.length ? "me6" : "me7")))
            }
            ,
            h.prototype.GetCurrentPlayer = function() {
                if (this.roomModel && this.roomModel.Players)
                    for (var t = 0; t < this.roomModel.Players.length; t++)
                        if (this.roomModel.Players[t].AccountId === App.account.accountID + ":" + App.account.portalID) {
                            this.currentPlayer = this.roomModel.Players[t];
                            break
                        }
            }
            ,
            h.prototype.GetPlayerByAccountId = function(t) {
                for (var e, o = 0; o < this.players.length; o++)
                    if (this.players[o] && this.players[o].accountId === t) {
                        e = this.players[o];
                        break
                    }
                return e
            }
            ,
            h.prototype.GetPlayerByPosition = function(t) {
                for (var e, o = 0; o < this.players.length; o++)
                    if (this.players[o] && this.players[o].pos === t) {
                        e = this.players[o];
                        break
                    }
                return e
            }
            ,
            h.prototype.UpdateAccount = function(t, e) {
                var o = this.GetPlayerByAccountId(t.AccountID);
                o && (o.player.Account = t,
                o.UpdateBalance(1 === this.roomModel.MoneyType ? t.GoldBalance : t.CoinBalance),
                o.ShowMoney(e))
            }
            ,
            h.prototype.PlayerJoin = function(t) {
                for (var e in console.log("playerJoin", t),
                (this.roomModel = t).Players) {
                    for (var o = t.Players[e], n = !0, a = 0; a < this.players.length; a++)
                        if (null !== this.players[a] && this.players[a].accountId === o.AccountId) {
                            n = !1;
                            break
                        }
                    n && this.RenderPlayer(o)
                }
                0 === t.SessionId && this.ShowNotify(1 === t.Players.length ? Message.GetMessage("me7") : Message.GetMessage("me6"))
            }
            ,
            h.prototype.PlayerLeave = function(t) {
                console.log(t);
                for (var e = 0; e < t.length; e++)
                    if (t[e].id === this.currentPlayer.AccountId)
                        t[e].reason && App.showPopupMessage({
                            content: Message.GetMessage("ca" + t[e].reason),
                            textDone: "OK"
                        }),
                        this.Delete(),
                        App.handleBack();
                    else {
                        var o = this.GetPlayerByAccountId(t[e].id);
                        if (o) {
                            var n = o.pos;
                            o.Reset(),
                            o.destroy({
                                children: !0
                            }),
                            delete this.players[n],
                            this.players[n] = null
                        }
                    }
            }
            ,
            h.prototype.PlayerOtherDevice = function() {
                App.showPopupMessage({
                    content: Message.GetMessage("ca-20024"),
                    textDone: "OK"
                }),
                this.Delete(),
                App.exitGame()
            }
            ,
            h.prototype.RenderPlayer = function(t) {
                var e = t.Position - this.currentPlayer.Position;
                e < 0 && (e += this.roomModel.MaxPlayer);
                try {
                    this.players[e].destroy({
                        children: !0
                    })
                } catch (t) {}
                this.players[e] = new s.default({
                    position: e,
                    player: t,
                    xy: this.playerPos[e],
                    w: t.AccountId === this.currentPlayer.AccountId ? 130 : 110,
                    h: t.AccountId === this.currentPlayer.AccountId ? 130 : 110,
                    b: t.AccountId === this.currentPlayer.AccountId ? 90 : 70,
                    game: this
                }),
                this.playerContainer.addChild(this.players[e])
            }
            ,
            h.prototype.RenderPlayers = function(t) {
                for (var e = 0; e < this.players.length; e++) {
                    if (this.players[e])
                        try {
                            this.players[e].destroy({
                                children: !0
                            })
                        } catch (t) {}
                    this.players[e] = null
                }
                for (var e in this.players = [null, null, null, null],
                t)
                    this.RenderPlayer(t[e])
            }
            ,
            h.prototype.RegisterLeave = function(t) {
                var e = t.id ? t.id : t.Id
                  , o = t.status ? t.status : t.Status
                  , n = this.GetPlayerByAccountId(e);
                n && (n.leaveStatus.visible = o),
                e === this.currentPlayer.AccountId && this.ShowStatus(Message.GetMessage(o ? "me8" : "me9"))
            }
            ,
            h.prototype.JoinGame = function(t) {
                if (console.log("JoinGame", t),
                t && (this.roomModel = t.r,
                this.ready || this.EnterRoom(t),
                t.r.Session))
                    switch (1 !== t.r.Session.Phrase && this.ShowTimer(),
                    0 !== t.r.SessionId && this.UpdateGameLoopId(),
                    t.r.Session.Phrase) {
                    case 1:
                        this.StartGame(t.r);
                        break;
                    case 2:
                        this.ShowCard();
                        break;
                    case 3:
                        this.ChooseCard();
                        break;
                    case 4:
                        this.Finish()
                    }
            }
            ,
            h.prototype.Init = function() {
                PIXI.utils.skipHello(),
                this.size = [window.innerWidth, window.innerHeight],
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    transparent: !0,
                    resolution: 1,
                    autoResize: !0
                }),
                document.getElementById(this.target).appendChild(this.application.renderer.view),
                this.InitContainer(),
                this.InitFrames(),
                this.InitBg(),
                this.InitTableInfo(),
                this.InitButton(),
                this.Resize(this);
                var t = this;
                this.application.ticker.add(function() {
                    return t.Update(t)
                }),
                this.ready = !0,
                this.resizeFunc = function() {
                    return t.Resize(t)
                }
                ,
                window.addEventListener("resize", this.resizeFunc),
                this.ResetTab()
            }
            ,
            h.prototype.Resize = function(t) {
                if (t.size = [$(window).width(), $(window).height()],
                t.application.renderer.resize($(window).width(), $(window).height()),
                t.size[0] < 1280 || t.size[1] < 720) {
                    var e = Math.min(t.size[0] / 1280, t.size[1] / 720);
                    t.mainContainer.scale.set(e)
                } else
                    t.mainContainer.scale.set(1);
                t.mainContainer.anchor.set(.5),
                t.mainContainer.position.set(t.size[0] / 2, t.size[1] / 2)
            }
            ,
            h.prototype.ResetTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            h.prototype.Update = function(t) {
                t.timer && t.timer.tick()
            }
            ,
            h.prototype.InitContainer = function() {
                this.bgContainer = new Container,
                this.buttonContainer = new Container,
                this.playerContainer = new Container,
                this.cardContainer = new Container,
                this.messageContainer = new Container,
                this.effectContainer = new Container,
                this.messageContainer.addChild(this.effectContainer),
                this.handCardsContainer = new Container,
                this.draftCardsContainer = new Container,
                this.divideContainer = new Container,
                this.cardContainer.addChild(this.draftCardsContainer, this.divideContainer, this.handCardsContainer),
                this.infoContainer = new Container,
                this.application.stage.addChild(this.bgContainer)
            }
            ,
            h.prototype.InitFrames = function() {
                var t;
                for (this.framesDealerChiaBai = [],
                this.framesDealerClick = [],
                this.framesDealerPlay = [],
                this.framesDealerNormal = [],
                this.framesFireWork = [],
                this.framesWin = framesFromTilesetImage("win.effect", 230, 230),
                t = 1; t < 31; t++)
                    this.framesFireWork.push(TextureCache["fire-work-" + t + ".png"]);
                for (t = 1; t < 15; t++)
                    this.framesDealerChiaBai.push(TextureCache["dealer-chia-bai-" + t + ".png"]);
                for (t = 1; t < 25; t++)
                    this.framesDealerClick.push(TextureCache["dealer-rung-nguc-" + t + ".png"]),
                    this.framesDealerPlay.push(TextureCache["dealer-moi-choi-" + t + ".png"]);
                for (t = 1; t < 49; t++)
                    this.framesDealerNormal.push(TextureCache["dealer-normal-" + t + ".png"])
            }
            ,
            h.prototype.InitBg = function() {
                this.mainContainer = new Sprite(TextureCache["table-" + this.roomModel.Currency]),
                this.mainContainer.anchor.set(.5),
                this.mainContainer.position.set(this.size[0] / 2, this.size[1] / 2),
                this.bgContainer.addChild(this.mainContainer);
                var t = new PIXI.Text(Message.GetMessage("na30"),{
                    fontFamily: this.fontFaceBold,
                    fontSize: 60,
                    fill: "#000"
                });
                t.alpha = .1,
                t.anchor.set(.5),
                t.y = -30,
                this.mainContainer.addChild(t),
                this.dealer = new AnimatedSprite(this.framesDealerNormal),
                this.dealer.anchor.set(.5),
                this.dealer.position.set(0, -253),
                this.dealer.animationSpeed = .2,
                this.dealer.interactive = !0,
                this.dealer.buttonMode = !0,
                this.dealer.on("pointerdown", this.DealerDown.bind(this.dealer, this)),
                this.dealer.play(),
                this.mainContainer.addChild(this.dealer);
                for (var e = 0; e < this.playerPos.length; e++) {
                    var o = new Sprite(TextureCache["ic-ad-user.png"]);
                    o.anchor.set(.5),
                    o.position.set(this.playerPos[e][0], this.playerPos[e][1]),
                    this.mainContainer.addChild(o)
                }
                this.txtNotify = new Sprite(TextureCache["big-bg-notify.png"]),
                this.txtNotify.anchor.set(.5),
                this.txtNotify.position.set(0, -102),
                this.txtNotify.addChild(new PIXI.Text("CHỜ NGƯỜI CHƠI",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 18,
                    fill: "white"
                })),
                this.txtNotify.children[0].anchor.set(.5),
                this.txtNotify.visible = !1,
                this.txtStatus = new Sprite(TextureCache["small-bg-notify.png"]),
                this.txtStatus.anchor.set(.5),
                this.txtStatus.position.set(0, 68),
                this.txtStatus.addChild(new PIXI.Text("CHỜ NGƯỜI CHƠI",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 12,
                    fill: "white"
                })),
                this.txtStatus.children[0].anchor.set(.5),
                this.txtStatus.visible = !1,
                this.mainContainer.addChild(this.playerContainer, this.txtNotify, this.txtStatus, this.divideContainer, this.cardContainer, this.messageContainer, this.buttonContainer)
            }
            ,
            h.prototype.DealerChia = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerChiaBai,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            h.prototype.DealerDown = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerClick,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            h.prototype.DealerNormal = function() {
                var t = this.dealer;
                t.stop(),
                t.interactive = !0,
                t.buttonMode = !0,
                t.loop = !0,
                t.textures = this.framesDealerNormal,
                t.gotoAndPlay(0)
            }
            ,
            h.prototype.InitTableInfo = function() {
                var t = this.roomModel;
                this.btnBack = new Sprite(TextureCache["btn-def.png"]),
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(-520, -340),
                this.btnBack.addChild(new Sprite(TextureCache["ic-back.png"])),
                this.btnBack.children[0].anchor.set(.5),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.BtnBackOver).on("pointerout", this.BtnBackOut).on("pointerdown", this.BtnBackDown.bind(this.btnBack, this));
                var e = new PIXI.Text(Message.GetMessage(0 === t.Currency ? "tb113" : "tb112") + ": " + i.Util.NumberToString(t.Id, 3),{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                e.anchor.set(0, .5),
                e.position.set(-480, -360);
                var o = new PIXI.Text(Message.GetMessage("ca81").toUpperCase() + i.Util.ParseMoney(t.Value) + " " + Config.MoneyText[t.Currency],{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                o.anchor.set(0, .5),
                o.position.set(-480, -340),
                this.lblSession = new PIXI.Text(Message.GetMessage("ca95").toUpperCase() + " #",{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                }),
                this.lblSession.anchor.set(0, .5),
                this.lblSession.position.set(-480, -320),
                this.infoContainer.addChild(this.btnBack, e, o, this.lblSession),
                this.mainContainer.addChild(this.infoContainer)
            }
            ,
            h.prototype.BtnBackOver = function() {
                this.texture = TextureCache["btn-def-h.png"]
            }
            ,
            h.prototype.BtnBackOut = function() {
                this.texture = TextureCache["btn-def.png"]
            }
            ,
            h.prototype.BtnBackDown = function(e) {
                e.hub.connection.invoke("ExitRoom").then(function(t) {
                    console.log("ExitRoom", t),
                    0 === t.c ? (e.Delete(),
                    App.handleBack()) : e.RegisterLeave(t.r)
                })
            }
            ,
            h.prototype.InitButton = function() {
                this.btnHit = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnHit.name = "btn-game-normal.png",
                this.btnHit.anchor.set(.5),
                this.btnHit.position.set(480, 300),
                this.btnHit.addChild(new PIXI.Text(Message.GetMessage("ca70").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnHit.getChildAt(0).anchor.set(.5),
                this.btnHit.getChildAt(0).position.set(0, 0),
                this.btnHit.interactive = !0,
                this.btnHit.buttonMode = !0,
                this.btnHit.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnHitClick.bind(this.btnHit, this)),
                this.btnUp = new Sprite(TextureCache["btn-game-normal.png"]),
                this.btnUp.name = "btn-game-normal.png",
                this.btnUp.anchor.set(.5),
                this.btnUp.position.set(340, 300),
                this.btnUp.addChild(new PIXI.Text(Message.GetMessage("ca03_1").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnUp.getChildAt(0).anchor.set(.5),
                this.btnUp.getChildAt(0).position.set(0, 0),
                this.btnUp.interactive = !0,
                this.btnUp.buttonMode = !0,
                this.btnUp.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnUpClick.bind(this.btnUp, this)),
                this.buttonContainer.addChild(this.btnHit, this.btnUp)
            }
            ,
            h.prototype.DisableButton = function(t) {
                t.interactive = !1,
                t.buttonMode = !1,
                t.texture = TextureCache[t.name.replace("normal", "disable")]
            }
            ,
            h.prototype.EnableButton = function(t) {
                t.interactive = !0,
                t.buttonMode = !0,
                t.texture = TextureCache[t.name],
                t.visible = !0
            }
            ,
            h.prototype.DisableButtons = function() {
                this.DisableButton(this.btnHit),
                this.DisableButton(this.btnUp)
            }
            ,
            h.prototype.BtnHover = function() {
                this.texture = TextureCache[this.name.replace("normal", "hover")]
            }
            ,
            h.prototype.BtnOut = function() {
                this.texture = TextureCache[this.name]
            }
            ,
            h.prototype.BtnDown = function() {
                this.texture = TextureCache[this.name.replace("normal", "click")]
            }
            ,
            h.prototype.BtnHitClick = function(e) {
                var o = this;
                null !== e.selectedCards ? (e.DisableButton(this),
                e.GetCurrentPlayer(),
                e.isPlay = !0,
                e.hub.connection.invoke("ShowCard", e.selectedCards.OrdinalValue, !1).then(function(t) {
                    console.log("DanhBai", t),
                    t.c < 0 ? (e.ShowStatus(Message.GetMessage("ca" + t.c)),
                    e.EnableButton(o)) : (e.isTurn = !1,
                    e.DisplayCard(t))
                })) : e.ShowStatus(Message.GetMessage("ca-10020"))
            }
            ,
            h.prototype.BtnUpClick = function(e) {
                var o = this;
                e.DisableButton(this),
                null !== e.selectedCards ? (e.GetCurrentPlayer(),
                e.isPlay = !0,
                e.hub.connection.invoke("ShowCard", e.selectedCards.OrdinalValue, !0).then(function(t) {
                    console.log("UpBai", t),
                    t.c < 0 ? (e.ShowStatus(Message.GetMessage("ca" + t.c)),
                    e.EnableButton(o)) : (e.isTurn = !1,
                    e.DisplayCard(t))
                })) : e.ShowStatus(Message.GetMessage("ca-10020"))
            }
            ,
            h.prototype.FlipCard = function(t) {
                var e = this;
                if (t)
                    try {
                        TweenMax.to(t.scale, .3, {
                            data: "catte",
                            x: .01,
                            onComplete: function() {
                                t.texture = TextureCache[e.cardsMap[t.OrdinalValue]];
                                try {
                                    TweenMax.to(t.scale, .3, {
                                        data: "catte",
                                        x: t.s
                                    })
                                } catch (t) {}
                            }
                        })
                    } catch (t) {}
            }
            ,
            h.prototype.ShowNotify = function(t, e) {
                var o = this;
                this.txtNotify.scale.set(.01),
                this.txtNotify.visible = !0,
                this.txtNotify.children[0].text = t;
                try {
                    TweenMax.to(this.txtNotify.scale, .4, {
                        data: "catte",
                        x: 1,
                        y: 1
                    })
                } catch (t) {}
                if (e) {
                    var n = this;
                    setTimeout(function() {
                        try {
                            TweenMax.to(o.txtNotify.scale, .2, {
                                data: "catte",
                                x: .01,
                                y: .01
                            })
                        } catch (t) {}
                        setTimeout(function() {
                            n.txtNotify.visible = !1
                        }, 300)
                    }, e)
                }
            }
            ,
            h.prototype.ShowStatus = function(t, e) {
                var o = this;
                i.Util.ClearTimeOut(this.timerOut),
                this.txtStatus.scale.set(.01),
                this.txtStatus.visible = !0,
                this.txtStatus.children[0].text = t;
                try {
                    TweenMax.to(this.txtStatus.scale, .4, {
                        data: "catte",
                        x: 1,
                        y: 1
                    })
                } catch (t) {}
                var n = this;
                this.timerOut = setTimeout(function() {
                    try {
                        TweenMax.to(o.txtStatus.scale, .2, {
                            data: "catte",
                            x: .01,
                            y: .01
                        })
                    } catch (t) {}
                    setTimeout(function() {
                        n.txtStatus.visible = !1
                    }, 300)
                }, e || 2e3)
            }
            ,
            h.prototype.UpdateGameLoopId = function() {
                this.lblSession.text = Message.GetMessage("ca95").toUpperCase() + (this.roomModel.SessionId <= 0 ? "#" : this.roomModel.SessionId)
            }
            ,
            h.prototype.UpdateSession = function() {
                for (var t in this.roomModel.Players) {
                    var e = this.GetPlayerByAccountId(t);
                    e && (e.player = this.roomModel.Players[t],
                    e.UpdateBalance(0 === this.roomModel.MoneyType ? e.player.Account.CoinBalance : e.player.Account.GoldBalance))
                }
                this.currentPlayer = this.roomModel.Players[App.account.accountID + ":" + App.account.portalID]
            }
            ,
            h.prototype.UpdateBalance = function() {
                for (var t = 0; t < this.roomModel.Players.length; t++) {
                    var e = this.GetPlayerByAccountId(this.roomModel.Players[t].AccountId);
                    e && (e.player = this.roomModel.Players[t],
                    e.UpdateBalance(this.roomModel.Players[t].Balance))
                }
            }
            ,
            h.prototype.ShowTimer = function() {
                var t;
                switch (this.roomModel.Session.Phrase) {
                case 1:
                    t = 3 * this.players.length;
                    break;
                case 2:
                    t = 5;
                    break;
                case 3:
                    t = 10;
                    break;
                case 4:
                default:
                    t = 6
                }
                this.RemoveTimer();
                var e = this.roomModel.Session.Role
                  , o = e === this.currentPlayer.AccountId ? 130 : 110
                  , n = e === this.currentPlayer.AccountId ? 130 : 110;
                this.timer = new i.Timer({
                    width: o,
                    height: n,
                    lineWidth: 2
                }),
                this.timer.startTimer(this.roomModel.Session.Timeout, t);
                var a = this.GetPlayerByAccountId(e);
                try {
                    this.timer.position.set(a.avatar.x - (e === this.currentPlayer.AccountId ? 65 : 55), a.avatar.y - (e === this.currentPlayer.AccountId ? 65 : 55)),
                    this.playerContainer.addChild(this.timer)
                } catch (t) {}
            }
            ,
            h.prototype.CheckGame = function(t) {
                var e = this;
                this.roomModel.Count < 2 ? this.ShowNotify(Message.GetMessage("me7")) : this.roomModel.Session ? setTimeout(function() {
                    e.GenerateCards(e),
                    e.ShowTimer()
                }, 300) : this.ShowNotify(Message.GetMessage("me6"))
            }
            ,
            h.prototype.CheckCurrentTurn = function(t) {
                t.state.accountId
            }
            ,
            h.prototype.RemoveDraftCards = function() {
                this.draftCardsContainer && this.draftCardsContainer.destroy({
                    children: !0
                }),
                this.draftCardsContainer = new Container,
                this.cardContainer.addChildAt(this.draftCardsContainer, 0)
            }
            ,
            h.prototype.ResetGame = function() {
                i.Util.ClearTimeOut(this.timerOut),
                this.DeleteTween(),
                this.RemoveDraftCards(),
                this.DestroyEffect(),
                this.handCards = [],
                this.currentCards = [],
                this.isFirst = !0,
                this.isFull = !1,
                this.isPlay = !1,
                this.isTurn = !1,
                this.isTung = !1,
                this.selectedCards = null;
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && this.players[t].Reset()
            }
            ,
            h.prototype.StartGame = function(t) {
                console.log("startgame", t),
                this.ResetGame(),
                this.roomModel = t,
                this.UpdateGameLoopId(),
                this.UpdateBalance();
                var e = this;
                1 < t.Count ? setTimeout(function() {
                    e.DivideCards()
                }, 500) : this.ShowNotify(Message.GetMessage("me6"))
            }
            ,
            h.prototype.DivideCards = function() {
                this.txtNotify.visible = !1,
                this.RemoveDraftCards();
                var t = this.roomModel.Players;
                for (var e in t) {
                    var o = this.GetPlayerByAccountId(t[e].AccountId);
                    t[e].Hand && (console.log("players[i].Hand.HandCards", t[e].Hand.HandCards),
                    6 === t[e].Hand.HandCards.length && o && o.Divide())
                }
                var n = this;
                setTimeout(function() {
                    return n.GenerateCards(n)
                }, 990)
            }
            ,
            h.prototype.HideDivide = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && this.players[t].HideDivide()
            }
            ,
            h.prototype.GenShowCards = function() {
                var t = this.roomModel.Players;
                for (var e in t) {
                    var o = this.GetPlayerByAccountId(t[e].AccountId);
                    if (null == o || void 0 === o)
                        return;
                    if (o.RemoveShowCards(),
                    t[e].Hand && t[e].Hand.ShownCards && 0 < t[e].Hand.ShownCards.length)
                        for (var n = t[e].Hand.ShownCards, a = 0; a < n.length; a++) {
                            var i = new Sprite(TextureCache[-1 === n[a].OrdinalValue ? "joker.png" : this.cardsMap[n[a].OrdinalValue]]);
                            i.anchor.set(.5),
                            i.scale.set(6 === n.length ? 1 : this.drawCardsPos[o.pos].scale),
                            i.position.set(this.drawCardsPos[o.pos].x + a * this.drawCardsPos[o.pos].pos * 30, this.drawCardsPos[o.pos].y),
                            o.shownCards.push(i),
                            1 === o.pos || 2 === o.pos ? o.showContainer.addChildAt(i, 0) : o.showContainer.addChild(i),
                            2 !== n[a].Status && 3 !== n[a].Status || (i.tint = 5592405)
                        }
                }
            }
            ,
            h.prototype.GenerateCards = function(t) {
                var e;
                t.HideDivide();
                var o = t.roomModel.Players;
                for (e in o) {
                    var n = t.GetPlayerByAccountId(o[e].AccountId);
                    if (null == n || void 0 === n)
                        return;
                    console.log(o[e]),
                    o[e].Hand && 0 < o[e].Hand.HandCards.length && (o[e].AccountId === this.currentPlayer.AccountId ? n.GenerateHandCards(o[e].Hand.HandCards) : (n.numbCards = o[e].Hand.HandCards.length,
                    n.UpdateCards(n.numbCards)))
                }
                t.GenShowCards()
            }
            ,
            h.prototype.CardDown = function(t) {
                if (null !== t.selectedCards) {
                    try {
                        TweenMax.to(t.selectedCards, .3, {
                            y: t.selectedCards.posY,
                            data: "catte"
                        })
                    } catch (t) {}
                    t.selectedCards.filters = null
                }
                if (t.selectedCards && t.selectedCards.OrdinalValue === this.OrdinalValue)
                    t.selectedCards = null,
                    t.DisableButtons();
                else {
                    t.selectedCards = this,
                    t.selectedCards.filters = [t.filterCard];
                    try {
                        TweenMax.to(this, .3, {
                            y: this.posY - 10,
                            data: "catte"
                        })
                    } catch (t) {}
                }
                t.isTurn && null !== t.selectedCards && (t.EnableButton(t.btnHit),
                1 < t.actions.length && t.EnableButton(t.btnUp))
            }
            ,
            h.prototype.ShowCard = function() {
                var t, e;
                for (this.isFull = !0,
                this.RemoveTimer(),
                t = 0; t < this.roomModel.Players.length; t++)
                    if ((e = this.GetPlayerByAccountId(this.roomModel.Players[t].AccountId)) && (e.handCards = [],
                    e.shownCards = [],
                    e.specialCards = null,
                    this.roomModel.Players[t].Hand && null !== this.roomModel.Players[t].Hand && this.roomModel.Players[t].Hand.SpecialHand && null !== this.roomModel.Players[t].Hand.SpecialHand)) {
                        var o = this.roomModel.Players[t].Hand.SpecialHand;
                        this.ShowNotify(Message.GetMessage(this.GetMessageType(e.specialCards.Type)).toUpperCase());
                        for (var n = 0; n < o.Cards.length; n++) {
                            var a = new Sprite(TextureCache[this.cardsMap[o.Cards[n]]]);
                            a.anchor.set(.5),
                            a.position.set(this.drawCardsPos[e.pos].x + n * this.drawCardsPos[e.pos].pos * 30, this.drawCardsPos[e.pos].y),
                            a.scale.set(this.drawCardsPos[e.pos].scale),
                            1 === e.pos || 2 === e.pos ? e.handContainer.addChildAt(a, 0) : e.handContainer.addChild(a)
                        }
                    }
            }
            ,
            h.prototype.DisplayCard = function(t) {
                var e = this;
                if (this.isFirst && (this.isFirst = !1),
                this.RemoveTimer(),
                0 <= t.c) {
                    this.DisableButton(this.btnHit),
                    this.DisableButton(this.btnUp);
                    var o = this.GetPlayerByAccountId(t.r.id);
                    if (t.r.id === this.currentPlayer.AccountId) {
                        for (var n = null, a = 0; a < o.handCards.length; a++)
                            if (o.handCards[a].OrdinalValue == t.r.card) {
                                n = o.handCards[a],
                                o.handCards.splice(a, 1);
                                break
                            }
                        if (null === n)
                            return;
                        t.r.faceDown && (n.texture = TextureCache["joker.png"]),
                        n.filters = null;
                        try {
                            TweenMax.to(n.scale, .5, {
                                data: "catte",
                                x: this.drawCardsPos[o.pos].scale,
                                y: this.drawCardsPos[o.pos].scale
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(n, .5, {
                                data: "catte",
                                x: this.drawCardsPos[o.pos].x + o.shownCards.length * this.drawCardsPos[o.pos].pos * 30,
                                y: this.drawCardsPos[o.pos].y
                            })
                        } catch (t) {}
                        for (o.shownCards.push(n),
                        1 === o.pos || 2 === o.pos ? o.showContainer.addChildAt(n, 0) : o.showContainer.addChild(n),
                        a = 0; a < o.handCards.length; a++)
                            try {
                                TweenMax.to(o.handCards[a], .5, {
                                    data: "catte",
                                    x: e.handCardsPos[o.pos].x + 65 * a
                                })
                            } catch (t) {}
                        e.isPlay = !1,
                        e.selectedCards && e.selectedCards.OrdinalValue === t.r.card && (e.selectedCards = null)
                    } else {
                        var i = new Sprite(TextureCache[t.r.faceDown ? "joker.png" : this.cardsMap[t.r.card]]);
                        i.anchor.set(.5),
                        i.scale.set(.01),
                        i.position.set(this.handCardsPos[o.pos].x, this.handCardsPos[o.pos].y),
                        1 === o.pos || 2 === o.pos ? o.showContainer.addChildAt(i, 0) : o.showContainer.addChild(i);
                        try {
                            TweenMax.to(i, .5, {
                                data: "catte",
                                x: this.drawCardsPos[o.pos].x + this.drawCardsPos[o.pos].pos * o.shownCards.length * 30,
                                y: this.drawCardsPos[o.pos].y
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(i.scale, .5, {
                                data: "catte",
                                x: this.drawCardsPos[o.pos].scale,
                                y: this.drawCardsPos[o.pos].scale
                            })
                        } catch (t) {}
                        o.shownCards.push(i),
                        o.numbCards--,
                        o.UpdateCards(o.numbCards),
                        o.EnableCards()
                    }
                } else
                    this.ShowStatus(Message.GetMessage("ca" + t.c)),
                    this.isPlay = !1
            }
            ,
            h.prototype.GetMessageType = function(t) {
                var e;
                switch (t) {
                case 1:
                    e = "ca267";
                    break;
                case 2:
                    e = "ca268";
                    break;
                case 3:
                    e = "ca20"
                }
                return e
            }
            ,
            h.prototype.LoseTung = function() {
                for (var t = 0; t < this.roomModel.Players.length; t++) {
                    var e = this.GetPlayerByAccountId(this.roomModel.Players[t].AccountId);
                    if (this.roomModel.Players[t].Hand && 1 === this.roomModel.Players[t].Hand.Status && !this.arrLose[e.pos]) {
                        this.arrLose[e.pos] = !0;
                        var o = new Sprite(TextureCache["bg-black-effect.png"]);
                        o.anchor.set(.5),
                        o.position.set(e.avatar.x, e.avatar.y + e.avatar.height / 2 - o.height / 2);
                        var n = new Sprite(this.GetTexture("thua-tung-"));
                        n.scale.set(.6),
                        n.anchor.set(.5),
                        o.addChild(n),
                        e.showContainer.addChild(o)
                    }
                }
            }
            ,
            h.prototype.ChooseCard = function() {
                this.LoseTung(),
                this.GenShowCards(),
                this.roomModel.Session.Role === this.currentPlayer.AccountId ? (this.actions = this.roomModel.Session.Actions,
                this.isTurn = !0,
                null !== this.selectedCards && (this.EnableButton(this.btnHit),
                1 < this.actions.length && this.EnableButton(this.btnUp))) : (this.actions = [],
                this.isTurn = !1,
                this.DisableButtons())
            }
            ,
            h.prototype.Finish = function() {
                this.RemoveTimer(),
                this.txtNotify.visible = !1,
                this.isFull ? this.ShowAll() : this.EndCards();
                var t = this.roomModel.Players;
                if (this.roomModel.Session.Prizes) {
                    for (var e = this.roomModel.Session.Prizes, o = 0; o < e.length; o++) {
                        var n = this.GetPlayerByAccountId(e[o].id);
                        if (0 < e[o].prize) {
                            var a = new AnimatedSprite(this.framesWin);
                            a.anchor.set(.5),
                            a.animationSpeed = .5,
                            a.scale.set(e[o].id === this.currentPlayer.AccountId ? 1.1 : 1),
                            a.position.set(n.avatar.x, n.avatar.y + (e[o].id === this.currentPlayer.AccountId ? 10 : 5)),
                            a.play(),
                            n.showContainer.addChildAt(a, 0)
                        }
                        n.ShowMoney(e[o].prize);
                        var i = !1;
                        if (!this.isTung) {
                            for (var s = 0; s < t.length; s++)
                                if (t[s].AccountId === e[o].id && t[s].Hand && 1 === t[s].Hand.Status) {
                                    i = !0;
                                    break
                                }
                            var r = 0 < e[o].prize ? "thang-" : i ? "thua-tung-" : "thua-";
                            if (i) {
                                var h = new Sprite(TextureCache["bg-black-effect.png"]);
                                h.anchor.set(.5),
                                h.position.set(n.avatar.x, n.avatar.y + n.avatar.height / 2 - h.height / 2),
                                (d = new Sprite(this.GetTexture(r))).anchor.set(.5),
                                d.scale.set(.6),
                                h.addChild(d);
                                try {
                                    TweenMax.to(h.scale, .5, {
                                        data: "catte",
                                        yoyo: !0,
                                        x: .8,
                                        y: .8,
                                        repeat: 3
                                    })
                                } catch (a) {}
                                n.showContainer.addChild(h)
                            } else {
                                var d;
                                (d = new Sprite(this.GetTexture(r))).anchor.set(.5),
                                d.position.set(n.avatar.x, n.avatar.y + n.avatar.height / 2 - d.height / 2);
                                try {
                                    TweenMax.to(d.scale, .5, {
                                        data: "catte",
                                        yoyo: !0,
                                        x: .8,
                                        y: .8,
                                        repeat: 3
                                    })
                                } catch (a) {}
                                n.showContainer.addChild(d)
                            }
                        }
                    }
                    this.UpdateBalance();
                    var l = this;
                    this.timerOut = setTimeout(function() {
                        l.ResetGame(),
                        l.ShowNotify(Message.GetMessage("me6"))
                    }, 1e4)
                }
            }
            ,
            h.prototype.RemoveHandCard = function() {
                for (var t = 0; t < this.players.length; t++)
                    null !== this.players[t] && this.players[t].RemoveHandCards()
            }
            ,
            h.prototype.RemoveCards = function() {
                for (var t = 0; t < this.players.length; t++)
                    null !== this.players[t] && this.players[t].RemoveCards()
            }
            ,
            h.prototype.ShowAll = function() {
                var t, e;
                this.RemoveTimer(),
                this.RemoveCards();
                var o = new AnimatedSprite(this.framesFireWork);
                o.animationSpeed = .2,
                o.loop = !0,
                o.anchor.set(.5),
                o.play();
                var n = new Sprite(this.GetTexture("catte-toitrang-"));
                for (n.anchor.set(.5),
                this.effectContainer.addChild(o, n),
                t = 0; t < this.roomModel.Players.length; t++)
                    if ((e = this.GetPlayerByAccountId(this.roomModel.Players[t].AccountId)) && (e.handCards = [],
                    e.shownCards = [],
                    e.specialCards = null,
                    this.roomModel.Players[t].Hand && null !== this.roomModel.Players[t].Hand)) {
                        if (this.roomModel.Players[t].Hand.HandCards && null !== this.roomModel.Players[t].Hand.HandCards)
                            for (var a = this.roomModel.Players[t].Hand.HandCards, i = 0; i < a.length; i++) {
                                var s = new Sprite(TextureCache[this.cardsMap[a[i]]]);
                                s.anchor.set(.5),
                                s.OrdinalValue = a[i],
                                s.tint = 5592405,
                                s.scale.set(this.drawCardsPos[e.pos].scale),
                                s.position.set(this.drawCardsPos[e.pos].x + i * this.drawCardsPos[e.pos].pos * 30, this.drawCardsPos[e.pos].y),
                                1 === e.pos || 2 === e.pos ? e.showContainer.addChildAt(s, 0) : e.showContainer.addChild(s)
                            }
                        if (this.roomModel.Players[t].Hand.SpecialHand && null !== this.roomModel.Players[t].Hand.SpecialHand) {
                            var r = this.roomModel.Players[t].Hand.SpecialHand;
                            for (i = 0; i < r.Cards.length; i++)
                                for (t = 0; t < e.showContainer.children.length; t++)
                                    r.Cards[i] === e.showContainer.children[t].OrdinalValue && (e.showContainer.children[t].tint = 16777215)
                        }
                    }
            }
            ,
            h.prototype.EndCards = function() {
                var t;
                this.isTung = !1;
                var e = 0
                  , o = 0;
                for (t = 0; t < this.roomModel.Players.length; t++)
                    this.roomModel.Players[t].Hand && o++,
                    this.roomModel.Players[t].Hand && 1 === this.roomModel.Players[t].Hand.Status && e++;
                if (e === o - 1 && (this.isTung = !0),
                this.isTung)
                    for (t = 0; t < this.roomModel.Players.length; t++) {
                        var n = this.GetPlayerByAccountId(this.roomModel.Players[t].AccountId);
                        if (this.roomModel.Players[t].Hand)
                            if (this.roomModel.Players[t].AccountId === this.currentPlayer.AccountId)
                                if (1 !== this.roomModel.Players[t].Hand.Status) {
                                    var a = new AnimatedSprite(this.framesFireWork);
                                    a.animationSpeed = .4,
                                    a.loop = !0,
                                    a.anchor.set(.5),
                                    a.play();
                                    var i = new Sprite(this.GetTexture("thang-tung-"));
                                    i.anchor.set(.5),
                                    n.showContainer.addChild(a, i)
                                } else {
                                    (r = new Sprite(TextureCache[1 === this.roomModel.Players[t].Hand.Status ? "bg-black-effect.png" : "bg-orange-effect.png"])).anchor.set(.5),
                                    r.position.set(n.avatar.x, n.avatar.y + n.avatar.height / 2 - r.height / 2);
                                    var s = 1 === this.roomModel.Players[t].Hand.Status ? "thua-tung-" : "thang-tung-";
                                    (h = new Sprite(this.GetTexture(s))).anchor.set(.5),
                                    1 !== this.roomModel.Players[t].Hand.Status ? h.scale.set(.3) : h.scale.set(.6),
                                    h.position.set(0, 0),
                                    r.addChild(h),
                                    n.showContainer.addChild(r)
                                }
                            else {
                                var r, h;
                                (r = new Sprite(TextureCache[1 === this.roomModel.Players[t].Hand.Status ? "bg-black-effect.png" : "bg-orange-effect.png"])).anchor.set(.5),
                                r.position.set(n.avatar.x, n.avatar.y + n.avatar.height / 2 - r.height / 2),
                                s = 1 === this.roomModel.Players[t].Hand.Status ? "thua-tung-" : "thang-tung-",
                                (h = new Sprite(this.GetTexture(s))).anchor.set(.5),
                                1 !== this.roomModel.Players[t].Hand.Status ? h.scale.set(.3) : h.scale.set(.6),
                                h.position.set(0, 0),
                                r.addChild(h),
                                n.showContainer.addChild(r)
                            }
                    }
                else
                    this.LastCards()
            }
            ,
            h.prototype.LastCards = function() {
                var t, e;
                for (t = 0; t < this.roomModel.Players.length; t++)
                    if (this.roomModel.Players[t].Hand && 0 === this.roomModel.Players[t].Hand.Status) {
                        var o = this.GetPlayerByAccountId(this.roomModel.Players[t].AccountId);
                        o.jokCard.visible = !1;
                        var n = void 0;
                        for (e = 0; e < this.roomModel.Players[t].Hand.HandCards.length; e++) {
                            this.roomModel.Players[t].AccountId === this.currentPlayer.AccountId && this.roomModel.Players[t].Hand.HandCards[0] === o.handCards[0].OrdinalValue ? ((n = o.handCards[0]).filter = null,
                            o.showContainer.addChild(n)) : ((n = new Sprite(TextureCache[this.cardsMap[this.roomModel.Players[t].Hand.HandCards[e]]])).anchor.set(.5),
                            n.position.set(this.handCardsPos[o.pos].x, this.handCardsPos[o.pos].y),
                            n.scale.set(.01),
                            1 === o.pos || 2 === o.pos ? o.showContainer.addChildAt(n, 0) : o.showContainer.addChild(n));
                            try {
                                TweenMax.to(n, .5, {
                                    data: "catte",
                                    x: this.drawCardsPos[o.pos].x + 5 * this.drawCardsPos[o.pos].pos * 32,
                                    y: this.drawCardsPos[o.pos].y - 9
                                }),
                                TweenMax.to(n.scale, .5, {
                                    data: "catte",
                                    x: 1,
                                    y: 1
                                })
                            } catch (t) {}
                        }
                    }
            }
            ,
            h.prototype.RemoveTimer = function() {
                if (this.timer)
                    try {
                        if (this.tTimer)
                            try {
                                this.tTimer.kill()
                            } catch (t) {}
                        i.Util.ClearTimeOut(this.timeAction),
                        this.timer.clearTimer(),
                        this.timer = null
                    } catch (t) {}
            }
            ,
            h.prototype.RemoveEffect = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && this.players[t].RemoveEffect()
            }
            ,
            h.prototype.DestroyEffect = function() {
                this.effectContainer && this.effectContainer.destroy({
                    children: !0
                }),
                this.effectContainer = new Container,
                this.messageContainer.addChild(this.effectContainer)
            }
            ,
            h.prototype.CheckTime = function(t, e) {
                if (clearTimeout(t.timeAction),
                --e <= 4)
                    try {
                        t.tTimer = TweenMax.to(t.timer, .5, {
                            data: "catte",
                            alpha: .2,
                            yoyo: !0,
                            repeat: -1
                        })
                    } catch (t) {}
                0 < e && (t.timeAction = setTimeout(function() {
                    return t.CheckTime(t, e)
                }, 1e3))
            }
            ,
            h.prototype.StopTimer = function() {
                this.RemoveTimer()
            }
            ,
            h.prototype.GetTexture = function(t) {
                return void 0 !== TextureCache[t + this.lang + ".png"] ? TextureCache[t + this.lang + ".png"] : TextureCache[t + "en.png"]
            }
            ,
            h.prototype.UpdateConnectionStatus = function(t, e) {
                var o = this.GetPlayerByAccountId(t);
                o && o.UpdateStatus(e)
            }
            ,
            h.prototype.EnterLobby = function() {
                this.hub.EnterGame(this.currencyId)
            }
            ,
            h.prototype.ExitLobby = function() {
                this.hub.ExitGame()
            }
            ,
            h.prototype.Stop = function() {
                this.ExitLobby(),
                this.hub.connection.stop()
            }
            ,
            h.prototype.DeleteTween = function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "catte" === t[e].data && t[e].kill()
            }
            ,
            h.prototype.Delete = function() {
                var t = TweenMax.getAllTweens();
                window.removeEventListener("resize", this.resizeFunc);
                for (var e = 0; e < t.length; e++)
                    "catte" === t[e].data && t[e].kill();
                try {
                    this.application.view.remove(),
                    this.application.destroy(!0)
                } catch (t) {}
            }
            ,
            h);
            function h(t) {
                this.accountId = 0,
                this.ready = !1,
                this.isLoad = !1,
                this.players = [null, null, null, null, null],
                this.fontRobotoCondensedRegular = "RobotoCondensed-Regular",
                this.fontRobotoCondensedBold = "RobotoCondensed-Bold",
                this.fontFaceBold = "Roboto-Bold",
                this.fontFace = "Roboto-Light",
                this.cardsMap = ["2tep.png", "3tep.png", "4tep.png", "5tep.png", "6tep.png", "7tep.png", "8tep.png", "9tep.png", "10tep.png", "11tep.png", "12tep.png", "13tep.png", "1tep.png", "2co.png", "3co.png", "4co.png", "5co.png", "6co.png", "7co.png", "8co.png", "9co.png", "10co.png", "11co.png", "12co.png", "13co.png", "1co.png", "2bich.png", "3bich.png", "4bich.png", "5bich.png", "6bich.png", "7bich.png", "8bich.png", "9bich.png", "10bich.png", "11bich.png", "12bich.png", "13bich.png", "1bich.png", "2do.png", "3do.png", "4do.png", "5do.png", "6do.png", "7do.png", "8do.png", "9do.png", "10do.png", "11do.png", "12do.png", "13do.png", "1do.png"],
                this.handCards = [],
                this.currentCards = [],
                this.isPlaying = !1,
                this.filterCard = new PIXI.filters.OutlineFilter(3,15572500),
                this.playerPos = [[-210, 150], [540, -25], [400, -240], [-400, -240], [-540, -25]],
                this.handCardsPos = [{
                    x: -85,
                    y: 186,
                    scale: 1.4
                }, {
                    x: 450,
                    y: -40,
                    scale: .8
                }, {
                    x: 310,
                    y: -255,
                    scale: .8
                }, {
                    x: -310,
                    y: -255,
                    scale: .8
                }, {
                    x: -450,
                    y: -40,
                    scale: .8
                }],
                this.drawCardsPos = [{
                    x: -104,
                    y: 66,
                    scale: .8,
                    pos: 1
                }, {
                    x: 430,
                    y: 45,
                    scale: .8,
                    pos: -1
                }, {
                    x: 290,
                    y: -170,
                    scale: .8,
                    pos: -1
                }, {
                    x: -290,
                    y: -170,
                    scale: .8,
                    pos: 1
                }, {
                    x: -430,
                    y: 45,
                    scale: .8,
                    pos: 1
                }],
                this.selectedCards = [],
                this.moneyText = ["XU", "GAM"],
                this.isFull = !1,
                this.isPlay = !1,
                this.arrLose = [!1, !1, !1, !1, !1],
                this.isTurn = !1,
                this.isTung = !1,
                this.size = t.size,
                this.target = t.target,
                this.token = t.token,
                this.loader = new n.default,
                this.currencyId = t.currencyID,
                this.lang = Message.GetLanguageCode(),
                this.ready = !1,
                this.isLoad = !1,
                this.roomModel = {},
                this.players = [null, null, null, null, null]
            }
            e.games = r
        },
        32: function(t, e, o) {
            "use strict";
            var n, a = this && this.__extends || (n = function(t, e) {
                return (n = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var o in e)
                        e.hasOwnProperty(o) && (t[o] = e[o])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function o() {
                    this.constructor = t
                }
                n(t, e),
                t.prototype = null === e ? Object.create(e) : (o.prototype = e.prototype,
                new o)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i, s = o(0), r = (i = s.Assets,
            a(h, i),
            h);
            function h() {
                var t = i.call(this) || this;
                return t.assets = [{
                    id: "",
                    src: "/assets/images/common/bai.json"
                }, {
                    id: "",
                    src: "/assets/images/common/common.json"
                }, {
                    id: "",
                    src: "/assets/images/common/dealer.json"
                }, {
                    id: "",
                    src: "/assets/images/common/firework.json"
                }, {
                    id: "win.effect",
                    src: "/assets/images/common/win.png"
                }, {
                    id: "table-1",
                    src: "/assets/images/common/table-vip.png"
                }, {
                    id: "table-0",
                    src: "/assets/images/common/table-normal.png"
                }, {
                    id: "",
                    src: "/assets/images/catte/catte.json"
                }],
                t.add(t.assets),
                t
            }
            e.default = r
        },
        33: function(t, e, o) {
            "use strict";
            var n, a = this && this.__extends || (n = function(t, e) {
                return (n = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var o in e)
                        e.hasOwnProperty(o) && (t[o] = e[o])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function o() {
                    this.constructor = t
                }
                n(t, e),
                t.prototype = null === e ? Object.create(e) : (o.prototype = e.prototype,
                new o)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i, s = o(0), r = o(34), h = (i = s.Hub,
            a(d, i),
            d.prototype.Connect = function(t, e) {
                var o = this;
                this.connection = (new r.HubConnectionBuilder).withUrl(this.url, {
                    accessTokenFactory: function() {
                        return o.token
                    },
                    skipNegotiation: !0,
                    transport: r.HttpTransportType.WebSockets
                }).build(),
                this.connection.serverTimeoutInMilliseconds = 1e5,
                this.connection.start().then(function() {
                    console.log("connected"),
                    o.EnterGame(t),
                    o.Listen(),
                    "function" == typeof e && e()
                }).catch(function(t) {
                    return console.error(t)
                })
            }
            ,
            d.prototype.Listen = function() {
                i.prototype.Listen.call(this);
                var e = this;
                e.connection.on("roomData", function(t) {
                    e.game && e.game.JoinGame(t)
                }),
                e.connection.on("joinRoom", function(t) {
                    console.log("joinRoom", t),
                    e.game && e.game.PlayerJoin(t.r)
                }),
                e.connection.on("leaveRoom", function(t) {
                    console.log("leaveRoom", t),
                    e.game && e.game.PlayerLeave(t.r)
                }),
                e.connection.on("registerLeavingRoom", function(t) {
                    console.log("registerLeavingRoom", t),
                    e.game && e.game.RegisterLeave(t.r)
                }),
                e.connection.on("connectionChanged", function(t) {
                    console.log("connectionChanged", t),
                    e.game && e.game.UpdateConnection(t.r)
                }),
                e.connection.on("playerOtherDevice", function(t) {
                    console.log("playerOtherDevice", t),
                    e.game && e.game.PlayerOtherDevice(t.r)
                }),
                e.connection.on("showCard", function(t) {
                    console.log("showCard", t),
                    e.game && e.game.DisplayCard(t)
                })
            }
            ,
            d.prototype.EnterGame = function(t) {
                var e = this;
                this.connection.invoke("EnterGame", t).then(function(t) {
                    if (console.log("EnterGame", t),
                    t.c < 0)
                        return -10004 === t.c && (t.c = 10014),
                        App.showPopupMessage({
                            content: Message.GetMessage((10014 === t.c ? "me" : "ca") + t.c),
                            textDone: "OK"
                        }),
                        void App.handleBack();
                    if (1 === t.c) {
                        if (!e.game)
                            return;
                        e.game.EnterGame(t)
                    }
                })
            }
            ,
            d.prototype.ExitGame = function() {
                this.connection.invoke("ExitGame").then(function(t) {
                    console.log("ExitGame", t)
                })
            }
            ,
            d.prototype.EnterRoom = function(t, e) {
                var o = this;
                this.connection.invoke("EnterRoom", t, e).then(function(t) {
                    console.log("EnterRoom", t),
                    o.game && o.game.EnterRoom(t)
                })
            }
            ,
            d.prototype.ExitRoom = function() {
                this.connection.invoke("ExitRoom").then(function(t) {
                    console.log("ExitRoom", t)
                })
            }
            ,
            d);
            function d(t, e, o) {
                return i.call(this, t, e, o) || this
            }
            e.default = h
        },
        34: function(t, e) {
            t.exports = i
        },
        35: function(t, e, o) {
            "use strict";
            var n, a = this && this.__extends || (n = function(t, e) {
                return (n = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(t, e) {
                    t.__proto__ = e
                }
                || function(t, e) {
                    for (var o in e)
                        e.hasOwnProperty(o) && (t[o] = e[o])
                }
                )(t, e)
            }
            ,
            function(t, e) {
                function o() {
                    this.constructor = t
                }
                n(t, e),
                t.prototype = null === e ? Object.create(e) : (o.prototype = e.prototype,
                new o)
            }
            );
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i, s = o(0), r = (i = s.PlayerC,
            a(h, i),
            h.prototype.RemoveHandCards = function() {
                this.handContainer && this.handContainer.destroy({
                    children: !0
                }),
                this.handContainer = new Container,
                this.addChild(this.handContainer)
            }
            ,
            h.prototype.RemoveShowCards = function() {
                this.showContainer && this.showContainer.destroy({
                    children: !0
                }),
                this.showContainer = new Container,
                this.addChild(this.showContainer),
                this.shownCards = []
            }
            ,
            h.prototype.RemoveCards = function() {
                this.handContainer && this.handContainer.destroy({
                    children: !0
                }),
                this.handContainer = new Container,
                this.addChild(this.handContainer),
                this.handCards = [],
                this.showContainer && this.showContainer.destroy({
                    children: !0
                }),
                this.showContainer = new Container,
                this.addChild(this.showContainer),
                this.shownCards = []
            }
            ,
            h.prototype.GenerateHandCards = function(t) {
                var e;
                this.RemoveHandCards(),
                this.handCards = [];
                var o = this.game
                  , n = this;
                for (e = 0; e < t.length; e++) {
                    var a = new Sprite(TextureCache["joker.png"]);
                    a.anchor.set(.5),
                    a.OrdinalValue = t[e],
                    a.s = o.handCardsPos[this.pos].scale,
                    a.posY = o.handCardsPos[this.pos].y,
                    a.scale.set(a.s),
                    a.position.set(o.handCardsPos[this.pos].x, o.handCardsPos[this.pos].y),
                    a.isSeleted = !1,
                    a.on("pointerdown", o.CardDown.bind(a, o)),
                    this.handCards.push(a),
                    this.handContainer.addChild(a)
                }
                for (e = this.handCards.length - 1; 0 <= e; e--)
                    this.handCards[e] && this.FlipHand(this.handCards[e], e);
                setTimeout(function() {
                    n.EnableCards()
                }, 1e3)
            }
            ,
            h.prototype.FlipHand = function(t, e) {
                try {
                    TweenMax.to(t, .4, {
                        data: "catte",
                        x: this.game.handCardsPos[0].x + 65 * e
                    })
                } catch (t) {}
                setTimeout(this.game.FlipCard(t), 400)
            }
            ,
            h.prototype.EnableCards = function() {
                for (var t = this.handCards.length - 1; 0 <= t; t--)
                    this.handCards[t].interactive = !0,
                    this.handCards[t].buttonMode = !0
            }
            ,
            h.prototype.DisableCards = function() {
                for (var t = this.handCards.length - 1; 0 <= t; t--)
                    this.handCards[t].interactive = !1,
                    this.handCards[t].buttonMode = !1
            }
            ,
            h.prototype.UpdateCards = function(t) {
                this.numbCards = t,
                this.txtCards.text = t,
                this.jokCard.visible = 0 < this.numbCards
            }
            ,
            h.prototype.UpdateMoney = function(t, e) {
                null == t ? 1 === this.game.roomModel.MoneyType ? this.player.Account.GoldBalance += e : this.player.Account.CoinBalance += e : this.player && t && (this.player.Account = t,
                this.txtMoney.text = s.Util.ParseMoney(1 === this.game.roomModel.MoneyType ? this.player.Account.GoldBalance : this.player.Account.CoinBalance))
            }
            ,
            h.prototype.ShowMoney = function(t) {
                var e = new PIXI.Text((0 < t ? "+" : "") + s.Util.ParseMoney(t),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 20,
                    fill: "yellow"
                });
                e.anchor.set(.5),
                e.position.set(this.avatar.x, this.avatar.y),
                this.handContainer.addChild(e);
                try {
                    TweenMax.to(e, 2, {
                        data: "catte",
                        y: e.y - 100,
                        alpha: 0
                    })
                } catch (t) {}
            }
            ,
            h.prototype.UpdateStatus = function(t) {
                1 === t ? this.isUnLeave ? (this.isUnLeave = !1,
                this.leaveStatus.visible = !1,
                this.isLeave = !1) : this.disStatus.visible = !1 : 2 === t ? (this.isLeave = !0,
                this.leaveStatus.visible = !0) : 0 === t && (this.disStatus.visible = !0)
            }
            ,
            h.prototype.RemoveDivideCards = function() {
                if (this.divideContainer)
                    try {
                        this.divideContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.divideContainer = new Container,
                this.divideContainer.visible = !0,
                this.game.divideContainer.addChild(this.divideContainer)
            }
            ,
            h.prototype.RemoveEffect = function() {
                if (this.effectContainer)
                    try {
                        this.effectContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.effectContainer = new Container,
                this.effectContainer.visible = !0,
                this.game.effectContainer.addChild(this.effectContainer)
            }
            ,
            h.prototype.Divide = function() {
                var t;
                for (this.RemoveDivideCards(),
                t = 0; t < 6; t++) {
                    var e = new Sprite(TextureCache["joker.png"]);
                    e.anchor.set(.5),
                    this.divideContainer.addChild(e),
                    e.scale.set(.01),
                    e.rotation = 2 * Math.PI,
                    e.position.set(this.game.dealer.x, this.game.dealer.y);
                    try {
                        TweenMax.to(e.scale, .5, {
                            data: "catte",
                            x: this.game.handCardsPos[this.pos].scale,
                            y: this.game.handCardsPos[this.pos].scale,
                            delay: .07 * t
                        })
                    } catch (t) {}
                    try {
                        TweenMax.to(e, .5, {
                            data: "catte",
                            x: this.game.handCardsPos[this.pos].x,
                            y: this.game.handCardsPos[this.pos].y,
                            rotation: 0,
                            delay: .07 * t
                        })
                    } catch (t) {}
                }
            }
            ,
            h.prototype.HideDivide = function() {
                this.divideContainer && (this.divideContainer.visible = !1)
            }
            ,
            h.prototype.ShowCards = function(t, e, o) {
                this.RemoveHandCards();
                for (var n = 0; n < t.length; n++) {
                    var a = new Sprite(TextureCache[this.game.cardsMap[t[n].OrdinalValue]]);
                    a.anchor.set(.5),
                    a.position.set(this.game.handCardsPos[this.pos].x, this.game.handCardsPos[this.pos].y),
                    3 === this.pos ? this.handContainer.addChild(a) : this.handContainer.addChildAt(a, 0);
                    try {
                        TweenMax.to(a, .5, {
                            data: "catte",
                            x: a.x + 30 * n * (3 === this.pos ? 1 : -1)
                        })
                    } catch (t) {}
                    $.inArray(t[n].OrdinalValue, e) < 0 && 5 !== o && this.game.Overlay(a)
                }
            }
            ,
            h.prototype.Reset = function() {
                this.RemoveCards(),
                this.RemoveDivideCards(),
                this.RemoveEffect(),
                this.numbCards = 0,
                this.jokCard.visible = !1,
                this.selectedCards = [],
                this.handCards = [],
                this.shownCards = []
            }
            ,
            h);
            function h(t) {
                var e = i.call(this, t) || this;
                return e.handCards = [],
                e.shownCards = [],
                e.numbCards = 0,
                e.selectedCards = [],
                e.handCards = [],
                e.numbCards = 0,
                e.selectedCards = [],
                e.handContainer = new Container,
                e.addChild(e.handContainer),
                e.jokCard = new Sprite(TextureCache["joker.png"]),
                e.jokCard.anchor.set(.5),
                e.jokCard.position.set(e.game.handCardsPos[e.pos].x, e.game.handCardsPos[e.pos].y),
                e.jokCard.scale.set(e.game.handCardsPos[e.pos].scale),
                e.txtCards = new PIXI.Text("0",{
                    fontFamily: e.game.fontFaceBold,
                    fontSize: 30,
                    fill: ["#fff"]
                }),
                e.txtCards.anchor.set(.5),
                e.jokCard.addChild(e.txtCards),
                e.jokCard.visible = 0 < e.numbCards,
                e.addChild(e.jokCard),
                e
            }
            e.default = r
        }
    },
    s.c = h,
    s.d = function(t, e, o) {
        s.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: o
        })
    }
    ,
    s.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    s.t = function(e, t) {
        if (1 & t && (e = s(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var o = Object.create(null);
        if (s.r(o),
        Object.defineProperty(o, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var n in e)
                s.d(o, n, function(t) {
                    return e[t]
                }
                .bind(null, n));
        return o
    }
    ,
    s.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return s.d(e, "a", e),
        e
    }
    ,
    s.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    s.p = "/",
    s(s.s = 30);
    function s(t) {
        if (h[t])
            return h[t].exports;
        var e = h[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return r[t].call(e.exports, e, e.exports, s),
        e.l = !0,
        e.exports
    }
    var r, h
});

!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("signalR"), require("pixi-filters"), require("WebFont")) : "function" == typeof define && define.amd ? define("sicbo", ["libs", "signalR", "pixi-filters", "WebFont"], e) : "object" == typeof exports ? exports.sicbo = e(require("libs"), require("signalR"), require("pixi-filters"), require("WebFont")) : t.sicbo = e(t.libs, t.signalR, t["pixi-filters"], t.WebFont)
}(window, function(i, o, n, a) {
    return function(i) {
        var o = {};
        function n(t) {
            if (o[t])
                return o[t].exports;
            var e = o[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return i[t].call(e.exports, e, e.exports, n),
            e.l = !0,
            e.exports
        }
        return n.m = i,
        n.c = o,
        n.d = function(t, e, i) {
            n.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: i
            })
        }
        ,
        n.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }),
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }
        ,
        n.t = function(e, t) {
            if (1 & t && (e = n(e)),
            8 & t)
                return e;
            if (4 & t && "object" == typeof e && e && e.__esModule)
                return e;
            var i = Object.create(null);
            if (n.r(i),
            Object.defineProperty(i, "default", {
                enumerable: !0,
                value: e
            }),
            2 & t && "string" != typeof e)
                for (var o in e)
                    n.d(i, o, function(t) {
                        return e[t]
                    }
                    .bind(null, o));
            return i
        }
        ,
        n.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default
            }
            : function() {
                return t
            }
            ;
            return n.d(e, "a", e),
            e
        }
        ,
        n.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        ,
        n.p = "/",
        n(n.s = 1)
    }([function(t, e) {
        t.exports = i
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = i(2)
          , n = i(9)
          , a = function() {
            function t(t) {
                n.load({
                    custom: {
                        families: ["Roboto-Black", "Roboto-Bold", "Roboto-Medium", "Roboto-Regular", "Roboto-Light", "RobotoCondensed-Bold", "RobotoCondensed-Italic", "RobotoCondensed-Light", "RobotoCondensed-Regular", "UTM American Sans", "UTM Swiss Condensed", "UTM Swiss CondensedBold"]
                    },
                    fontactive: function() {}
                }),
                this.game = new o.games(t)
            }
            return t.prototype.delete = function() {
                this.game.Delete()
            }
            ,
            t.prototype.load = function(t) {
                this.game.Load(t)
            }
            ,
            t.prototype.join = function(t, e) {
                this.game.Join(t, e)
            }
            ,
            t.prototype.stop = function() {
                this.game.Stop()
            }
            ,
            t
        }();
        e.game = a
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = i(3)
          , o = i(4)
          , n = i(5)
          , d = i(0)
          , a = i(7);
        i(8);
        var r = function() {
            function t(t) {
                this.accountId = 0,
                this.defaultLang = "en",
                this.gameName = "sicbo-",
                this.ready = !1,
                this.betValue = 0,
                this.isLoad = !1,
                this.players = [null, null, null, null, null, null, null],
                this.fontRobotoCondensedRegular = "RobotoCondensed-Regular",
                this.fontRobotoCondensedBold = "RobotoCondensed-Bold",
                this.fontRoboto = "Roboto",
                this.fontFaceBold = "Roboto-Bold",
                this.fontFace = "Roboto-Light",
                this.isX2 = !1,
                this.Phrase = {
                    None: 0,
                    Betting: 1,
                    Result: 2
                },
                this.playerPos = [[-30, 150], [-210, 150], [-390, 150], [-430, -260], [-290, -260], [-150, -260], [150, 150]],
                this.dicePos = [{
                    x: 351,
                    y: 6,
                    r: 0
                }, {
                    x: 323,
                    y: 53,
                    r: .9
                }, {
                    x: 380,
                    y: 52,
                    r: .3
                }],
                this.chipConfig = {
                    1: {
                        100: [{
                            number: "100",
                            value: 100,
                            img: "tien_2"
                        }, {
                            number: "500",
                            value: 500,
                            img: "tien_3"
                        }, {
                            number: "1K",
                            value: 1e3,
                            img: "tien_4"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_5"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_6"
                        }],
                        500: [{
                            number: "500",
                            value: 500,
                            img: "tien_2"
                        }, {
                            number: "1K",
                            value: 1e3,
                            img: "tien_3"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_4"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_5"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_6"
                        }],
                        1e3: [{
                            number: "1K",
                            value: 1e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        2e3: [{
                            number: "2K",
                            value: 2e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        5e3: [{
                            number: "5K",
                            value: 5e3,
                            img: "tien_2"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_3"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_4"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_5"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_6"
                        }],
                        1e4: [{
                            number: "10K",
                            value: 1e4,
                            img: "tien_2"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_3"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_4"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_5"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_6"
                        }]
                    },
                    0: {
                        1e3: [{
                            number: "1K",
                            value: 1e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        5e3: [{
                            number: "5K",
                            value: 5e3,
                            img: "tien_2"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_3"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_4"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_5"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_6"
                        }],
                        1e4: [{
                            number: "10K",
                            value: 1e4,
                            img: "tien_2"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_3"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_4"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_5"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_6"
                        }],
                        5e4: [{
                            number: "50K",
                            value: 5e4,
                            img: "tien_2"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_3"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_4"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_5"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_6"
                        }],
                        1e5: [{
                            number: "100K",
                            value: 1e5,
                            img: "tien_2"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_3"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_4"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_5"
                        }, {
                            number: "10M",
                            value: 1e7,
                            img: "tien_6"
                        }],
                        5e5: [{
                            number: "500K",
                            value: 5e5,
                            img: "tien_2"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_3"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_4"
                        }, {
                            number: "10M",
                            value: 1e7,
                            img: "tien_5"
                        }, {
                            number: "50M",
                            value: 5e6,
                            img: "tien_6"
                        }]
                    }
                },
                this.gates = [],
                this.gateConfig = [{
                    id: 1,
                    max_factor: 200,
                    fund_rate: 1,
                    texture: "sicbo-bg-bet-normal",
                    x: 165,
                    y: -119
                }, {
                    id: 2,
                    max_factor: 200,
                    fund_rate: 1,
                    texture: "sicbo-bg-bet-normal",
                    x: -404,
                    y: -119
                }, {
                    id: 3,
                    max_factor: 30,
                    fund_rate: 180,
                    texture: "sicbo-bg-bet3-normal",
                    x: -203,
                    y: -150
                }, {
                    id: 4,
                    max_factor: 30,
                    fund_rate: 180,
                    texture: "sicbo-bg-bet3-normal",
                    x: -203,
                    y: -118
                }, {
                    id: 5,
                    max_factor: 30,
                    fund_rate: 180,
                    texture: "sicbo-bg-bet3-normal",
                    x: -203,
                    y: -87
                }, {
                    id: 6,
                    max_factor: 30,
                    fund_rate: 180,
                    texture: "sicbo-bg-bet3-normal",
                    x: -37,
                    y: -150
                }, {
                    id: 7,
                    max_factor: 30,
                    fund_rate: 180,
                    texture: "sicbo-bg-bet3-normal",
                    x: -37,
                    y: -118
                }, {
                    id: 8,
                    max_factor: 30,
                    fund_rate: 180,
                    texture: "sicbo-bg-bet3-normal",
                    x: -37,
                    y: -87
                }, {
                    id: 9,
                    max_factor: 30,
                    fund_rate: 31,
                    texture: "sicbo-bg-bet4-normal",
                    x: -119,
                    y: -119
                }, {
                    id: 10,
                    max_factor: 100,
                    fund_rate: 11,
                    texture: "sicbo-bg-bet2-normal",
                    x: -341,
                    y: -119
                }, {
                    id: 11,
                    max_factor: 100,
                    fund_rate: 11,
                    texture: "sicbo-bg-bet2-normal",
                    x: -303,
                    y: -119
                }, {
                    id: 12,
                    max_factor: 100,
                    fund_rate: 11,
                    texture: "sicbo-bg-bet2-normal",
                    x: -265,
                    y: -119
                }, {
                    id: 13,
                    max_factor: 100,
                    fund_rate: 11,
                    texture: "sicbo-bg-bet2-normal",
                    x: 27,
                    y: -119
                }, {
                    id: 14,
                    max_factor: 100,
                    fund_rate: 11,
                    texture: "sicbo-bg-bet2-normal",
                    x: 65,
                    y: -119
                }, {
                    id: 15,
                    max_factor: 100,
                    fund_rate: 11,
                    texture: "sicbo-bg-bet2-normal",
                    x: 103,
                    y: -119
                }, {
                    id: 16,
                    max_factor: 50,
                    fund_rate: 62,
                    texture: "sicbo-bg-bet5-normal",
                    x: -424,
                    y: -39
                }, {
                    id: 17,
                    max_factor: 50,
                    fund_rate: 31,
                    texture: "sicbo-bg-bet5-normal",
                    x: -378,
                    y: -39
                }, {
                    id: 18,
                    max_factor: 50,
                    fund_rate: 18,
                    texture: "sicbo-bg-bet5-normal",
                    x: -331,
                    y: -39
                }, {
                    id: 19,
                    max_factor: 50,
                    fund_rate: 12,
                    texture: "sicbo-bg-bet5-normal",
                    x: -284,
                    y: -39
                }, {
                    id: 20,
                    max_factor: 50,
                    fund_rate: 8,
                    texture: "sicbo-bg-bet5-normal",
                    x: -237,
                    y: -39
                }, {
                    id: 21,
                    max_factor: 50,
                    fund_rate: 7,
                    texture: "sicbo-bg-bet5-normal",
                    x: -190,
                    y: -39
                }, {
                    id: 22,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet5-normal",
                    x: -143,
                    y: -39
                }, {
                    id: 23,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet5-normal",
                    x: -97,
                    y: -39
                }, {
                    id: 24,
                    max_factor: 50,
                    fund_rate: 7,
                    texture: "sicbo-bg-bet5-normal",
                    x: -49,
                    y: -39
                }, {
                    id: 25,
                    max_factor: 50,
                    fund_rate: 8,
                    texture: "sicbo-bg-bet5-normal",
                    x: -2,
                    y: -39
                }, {
                    id: 26,
                    max_factor: 50,
                    fund_rate: 12,
                    texture: "sicbo-bg-bet5-normal",
                    x: 44,
                    y: -39
                }, {
                    id: 27,
                    max_factor: 50,
                    fund_rate: 18,
                    texture: "sicbo-bg-bet5-normal",
                    x: 90,
                    y: -39
                }, {
                    id: 28,
                    max_factor: 50,
                    fund_rate: 31,
                    texture: "sicbo-bg-bet5-normal",
                    x: 137,
                    y: -39
                }, {
                    id: 29,
                    max_factor: 50,
                    fund_rate: 62,
                    texture: "sicbo-bg-bet5-normal",
                    x: 184,
                    y: -39
                }, {
                    id: 30,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -381,
                    y: 23
                }, {
                    id: 31,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -340,
                    y: 23
                }, {
                    id: 32,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -299,
                    y: 23
                }, {
                    id: 33,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -259,
                    y: 23
                }, {
                    id: 34,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -218,
                    y: 23
                }, {
                    id: 35,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -177,
                    y: 23
                }, {
                    id: 36,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -136,
                    y: 23
                }, {
                    id: 37,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -96,
                    y: 23
                }, {
                    id: 38,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -56,
                    y: 23
                }, {
                    id: 39,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: -15,
                    y: 23
                }, {
                    id: 40,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: 25,
                    y: 23
                }, {
                    id: 41,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: 66,
                    y: 23
                }, {
                    id: 42,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: 106,
                    y: 23
                }, {
                    id: 43,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: 147,
                    y: 23
                }, {
                    id: 44,
                    max_factor: 50,
                    fund_rate: 6,
                    texture: "sicbo-bg-bet6-normal",
                    x: 187,
                    y: 23
                }, {
                    id: 45,
                    max_factor: 100,
                    fund_rate: 1,
                    texture: "sicbo-bg-bet7-normal",
                    x: -394,
                    y: 75
                }, {
                    id: 46,
                    max_factor: 100,
                    fund_rate: 1,
                    texture: "sicbo-bg-bet7-normal",
                    x: -284,
                    y: 75
                }, {
                    id: 47,
                    max_factor: 100,
                    fund_rate: 1,
                    texture: "sicbo-bg-bet7-normal",
                    x: -174,
                    y: 75
                }, {
                    id: 48,
                    max_factor: 100,
                    fund_rate: 1,
                    texture: "sicbo-bg-bet7-normal",
                    x: -64,
                    y: 75
                }, {
                    id: 49,
                    max_factor: 100,
                    fund_rate: 1,
                    texture: "sicbo-bg-bet7-normal",
                    x: 44,
                    y: 75
                }, {
                    id: 50,
                    max_factor: 100,
                    fund_rate: 1,
                    texture: "sicbo-bg-bet7-normal",
                    x: 154,
                    y: 75
                }],
                this.gateTotalBet = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
                this.lastCurrentBet = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                this.indexTip = 0,
                this.moneyText = ["XU", "GAM"],
                this.arrBetPos = [{
                    x: 50,
                    y: 30,
                    s: .7
                }, {
                    x: 130,
                    y: 30,
                    s: .7
                }, {
                    x: 210,
                    y: 30,
                    s: .7
                }, {
                    x: 290,
                    y: 30,
                    s: .7
                }, {
                    x: 370,
                    y: 30,
                    s: .7
                }],
                this.auto = !1,
                this.size = t.size,
                this.target = t.target,
                this.token = t.token,
                this.loader = new o.default,
                this.currencyId = t.currencyID,
                this.lang = Message.GetLanguageCode(),
                this.ready = !1
            }
            return t.prototype.Load = function(t) {
                var e = this;
                e.loader.load(function() {
                    return e.Loading(e)
                }, function() {
                    e.isLoad = !0,
                    $("#divLoading").hide(),
                    e.InitHub(t)
                })
            }
            ,
            t.prototype.Loading = function(t) {
                $("#divLoading").show(),
                $("#loading-progress span").css("width", parseInt(t.loader.loader.progress) + "%"),
                $("#loading-progress-txt").html(parseInt(t.loader.loader.progress) + "%")
            }
            ,
            t.prototype.InitHub = function(t) {
                this.hub = new n.default(sicboUrl + "hub",this.token,this),
                this.hub.Connect(this.currencyId, t)
            }
            ,
            t.prototype.Join = function(t, e) {
                this.hub.EnterRoom(t, e)
            }
            ,
            t.prototype.EnterRoom = function(t) {
                this.roomModel = t.r,
                this.ready || this.Init(),
                this.GetCurrentPlayer(),
                this.RenderPlayers(this.roomModel.Players),
                this.ResetGame(),
                this.DisableButtons(),
                this.boxBet.visible = !1
            }
            ,
            t.prototype.GetCurrentPlayer = function() {
                if (this.roomModel && this.roomModel.Players)
                    for (var t = 0; t < this.roomModel.Players.length; t++)
                        if (this.roomModel.Players[t].AccountId === App.account.accountID + ":" + App.account.portalID) {
                            this.currentPlayer = this.roomModel.Players[t];
                            break
                        }
            }
            ,
            t.prototype.GetPlayerByAccountId = function(t) {
                for (var e, i = 0; i < this.players.length; i++)
                    if (this.players[i] && this.players[i].accountId === t) {
                        e = this.players[i];
                        break
                    }
                return e
            }
            ,
            t.prototype.GetPlayerByPosition = function(t) {
                for (var e, i = 0; i < this.players.length; i++)
                    if (this.players[i] && this.players[i].pos === t) {
                        e = this.players[i];
                        break
                    }
                return e
            }
            ,
            t.prototype.RenderPlayers = function(t) {
                for (var e = 0; e < this.players.length; e++)
                    try {
                        this.players[e].destroy({
                            children: !0
                        })
                    } catch (t) {}
                for (var e in this.players = [null, null, null, null, null, null, null],
                t)
                    this.RenderPlayer(t[e])
            }
            ,
            t.prototype.PlayerJoin = function(t) {
                console.log("playerJoin", t),
                this.RenderPlayer(t)
            }
            ,
            t.prototype.PlayerLeave = function(t) {
                for (var e = 0; e < t.length; e++)
                    if (t[e].id === this.currentPlayer.AccountId)
                        t[e].reason && App.showPopupMessage({
                            content: Message.GetMessage("ca" + t[e].reason),
                            textDone: "OK"
                        }),
                        this.Delete(),
                        App.handleBack();
                    else {
                        var i = this.GetPlayerByAccountId(t[e].id);
                        if (i) {
                            var o = i.pos;
                            i.destroy({
                                children: !0
                            }),
                            delete this.players[o],
                            this.players[o] = null
                        }
                    }
            }
            ,
            t.prototype.PlayerOtherDevice = function() {
                App.showPopupMessage({
                    content: Message.GetMessage("ca-20024"),
                    textDone: "OK"
                }),
                this.Delete(),
                App.exitGame()
            }
            ,
            t.prototype.RegisterLeave = function(t) {
                var e = t.id ? t.id : t.Id
                  , i = t.status ? t.status : t.Status
                  , o = this.GetPlayerByAccountId(e);
                o && (o.leaveStatus.visible = i),
                e === this.currentPlayer.AccountId && this.ShowStatus(Message.GetMessage(i ? "me8" : "me9"))
            }
            ,
            t.prototype.UpdateConnection = function(t) {
                try {
                    var e = t.id ? t.id : t.Id
                      , i = t.status ? t.status : t.Status
                      , o = this.GetPlayerByAccountId(e);
                    o && (o.disStatus.visible = i)
                } catch (t) {}
            }
            ,
            t.prototype.RenderPlayer = function(t) {
                var e = t.Position - this.currentPlayer.Position;
                e < 0 && (e += this.roomModel.MaxPlayer),
                null !== this.players[e] && this.players[e],
                this.players[e] = new a.default({
                    position: e,
                    player: t,
                    xy: this.playerPos[e],
                    w: 90,
                    h: 90,
                    b: 60,
                    game: this
                }),
                this.playerContainer.addChild(this.players[e]);
                var i = t.RegLeave;
                this.players[e].leaveStatus.visible = i
            }
            ,
            t.prototype.EnterGame = function(t) {
                this.JoinGame(t),
                t.r.Session && this.CheckBet()
            }
            ,
            t.prototype.JoinGame = function(t) {
                if (console.log("JoinGame", t),
                t) {
                    if (t.c < 0)
                        return App.showPopupMessage({
                            content: Message.GetMessage("ca" + t.c),
                            textDone: "ok"
                        }),
                        this.Delete(),
                        void App.handleBack();
                    if (this.roomModel = t.r,
                    d.Util.ClearTimeOut(this.timerOut),
                    this.RemoveTimer(),
                    !this.ready) {
                        try {
                            App.joinGame({
                                value: this.roomModel.Value,
                                type: this.roomModel.Currency
                            })
                        } catch (t) {}
                        this.EnterRoom(t)
                    }
                    if (this.UpdateGameLoopId(),
                    t.r.Session)
                        if (1 === t.r.Session.Phrase)
                            this.ResetGame(),
                            this.DisableButtons(),
                            this.ShowTipDealer(this),
                            this.StartBet();
                        else if (2 === t.r.Session.Phrase) {
                            if (this.timer.ClearTimer(),
                            this.HideReady(),
                            this.DisableGates(),
                            this.boxBet.visible = !1,
                            this.GetHistory(this.roomModel.Id),
                            this.DisableButtons(),
                            d.Util.ClearTimeOut(this.timerTip),
                            this.roomModel.Session.Timeout < 3)
                                return;
                            this.roomModel.Session.Timeout <= 5 ? this.ProcessResult() : this.CreateDice()
                        }
                }
            }
            ,
            t.prototype.UpdateGameLoopId = function() {
                this.lblSession.text = Message.GetMessage("ca95").toUpperCase() + (this.roomModel.SessionId <= 0 ? " #" : this.roomModel.SessionId)
            }
            ,
            t.prototype.Init = function() {
                d.Util.CheckCss("/assets/css/sicbo.css") || d.Util.LoadCss("/assets/css/sicbo.css"),
                this.InitHistory(),
                PIXI.utils.skipHello();
                var t = window.innerWidth < 1360 ? 1360 : window.innerWidth
                  , e = window.innerHeight < 720 ? 720 : window.innerHeight;
                this.size = [t, e],
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    transparent: !0,
                    resolution: 1,
                    autoResize: !0
                }),
                document.getElementById(this.target).appendChild(this.application.renderer.view),
                this.InitContainer(),
                this.InitFrames(),
                this.InitMachine(),
                this.InitTableInfo(),
                this.InitGates(),
                this.InitButton(),
                this.InitBet(),
                this.InitTip(),
                this.InitPopup(),
                this.Resize(this);
                var i = this;
                this.application.ticker.add(function() {
                    return i.Update(i)
                }),
                this.ready = !0,
                this.resizeFunc = function() {
                    return i.Resize(i)
                }
                ,
                window.addEventListener("resize", this.resizeFunc),
                this.ResetTab(),
                s.jackpot.GetJackpot(i)
            }
            ,
            t.prototype.Resize = function(t) {
                if (t.size = [$(window).width(), $(window).height()],
                t.application.renderer.resize($(window).width(), $(window).height()),
                t.size[0] < 1360 || t.size[1] < 720) {
                    var e = Math.min(t.size[0] / 1360, t.size[1] / 720);
                    t.mainContainer.scale.set(e)
                } else
                    t.mainContainer.scale.set(1);
                t.mainContainer.anchor.set(.5),
                t.mainContainer.position.set(t.size[0] / 2, t.size[1] / 2 + 20)
            }
            ,
            t.prototype.ResetTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            t.prototype.Update = function(t) {
                t.timer && t.timer.Tick(),
                t.timerUser && t.timerUser.tick()
            }
            ,
            t.prototype.RemoveTimer = function() {
                if (this.timerUser)
                    try {
                        this.timerUser.clearTimer(),
                        this.timerUser = null
                    } catch (t) {}
            }
            ,
            t.prototype.ShowTimer = function(t, e, i) {
                this.RemoveTimer(),
                this.timerUser = new d.Timer({
                    width: 88,
                    height: 88,
                    lineWidth: 2
                }),
                this.timerUser.position.set(t.avatar.x - 45, t.avatar.y - 45),
                this.playerContainer.addChild(this.timerUser),
                this.timerUser.startTimer(e, i)
            }
            ,
            t.prototype.ShowError = function(t) {
                this.ShowStatus(Message.GetMessage("ca" + t), 2e3)
            }
            ,
            t.prototype.ShowStatus = function(t, e) {
                var i = this;
                d.Util.ClearTimeOut(this.timerStatus),
                this.txtStatus.scale.set(.01),
                this.txtStatus.visible = !0,
                this.txtStatus.children[0].text = t,
                TweenMax.to(this.txtStatus.scale, .4, {
                    data: "sicbo",
                    x: 1,
                    y: 1
                });
                var o = this;
                this.timerStatus = setTimeout(function() {
                    TweenMax.to(i.txtStatus.scale, .2, {
                        data: "sicbo",
                        x: .01,
                        y: .01
                    }),
                    o.timerStatus = setTimeout(function() {
                        o.txtStatus.visible = !1
                    }, 300)
                }, e || 2e3)
            }
            ,
            t.prototype.InitContainer = function() {
                this.bgContainer = new Container,
                this.playerContainer = new Container,
                this.chipContainer = new Container,
                this.resultContainer = new Container,
                this.moneyContainer = new Container,
                this.buttonContainer = new Container,
                this.effectContainer = new Container
            }
            ,
            t.prototype.InitFrames = function() {
                var t;
                for (this.framesDealerChiaBai = [],
                this.framesDealerClick = [],
                this.framesDealerPlay = [],
                this.framesDealerNormal = [],
                this.framesFireWork = [],
                this.framesDice = [],
                t = 1; t < 31; t++)
                    this.framesFireWork.push(TextureCache["fire-work-" + t + ".png"]);
                for (t = 1; t < 15; t++)
                    this.framesDealerChiaBai.push(TextureCache["dealer-chia-bai-" + t + ".png"]);
                for (t = 1; t < 25; t++)
                    this.framesDealerClick.push(TextureCache["dealer-rung-nguc-" + t + ".png"]),
                    this.framesDealerPlay.push(TextureCache["dealer-moi-choi-" + t + ".png"]);
                for (t = 1; t < 49; t++)
                    this.framesDealerNormal.push(TextureCache["dealer-normal-" + t + ".png"]);
                for (t = 1; t < 40; t++)
                    this.framesDice.push(TextureCache["sicbo-dice-" + t])
            }
            ,
            t.prototype.GetTexture = function(t) {
                return void 0 !== TextureCache[this.gameName + t + this.lang] ? TextureCache[this.gameName + t + this.lang] : void 0 !== TextureCache[this.gameName + t + this.defaultLang] ? TextureCache[this.gameName + t + this.defaultLang] : TextureCache[this.gameName + t]
            }
            ,
            t.prototype.InitMachine = function() {
                this.mainContainer = new Sprite(TextureCache["sicbo-table-" + this.roomModel.Currency]),
                this.mainContainer.anchor.set(.5),
                this.mainContainer.position.set(this.size[0] / 2, this.size[1] / 2),
                this.application.stage.addChild(this.mainContainer),
                this.dealer = new AnimatedSprite(this.framesDealerNormal),
                this.dealer.anchor.set(.5),
                this.dealer.position.set(0, -243),
                this.dealer.animationSpeed = .2,
                this.dealer.interactive = !0,
                this.dealer.buttonMode = !0,
                this.dealer.on("pointerdown", this.DealerDown.bind(this.dealer, this)),
                this.dealer.play();
                var t = new Sprite(this.GetTexture("bg-game-"));
                t.anchor.set(.5),
                t.position.set(-120, -35),
                this.bgResult = new Sprite(this.GetTexture("bg-result")),
                this.bgResult.anchor.set(.5),
                this.bgResult.position.set(440, -30),
                this.bgResult.visible = !1,
                this.bgJackpot = new Sprite(this.GetTexture("bg-jackpot2")),
                this.bgJackpot.anchor.set(.5),
                this.bgJackpot.position.set(345, -170),
                this.bgJackpot.buttonMode = !0,
                this.bgJackpot.interactive = !0,
                this.bgJackpot.on("pointerdown", function() {
                    return s.jackpot.Show()
                });
                var e = new Sprite(this.GetTexture("light-jackpot"));
                e.anchor.set(.5),
                this.bgJackpot.addChild(e),
                this.bgJackPotUser = new Sprite(this.GetTexture("bg-jackpot")),
                this.bgJackPotUser.anchor.set(.5),
                this.bgJackPotUser.position.set(345, -142),
                this.bgJackPotUser.buttonMode = !0,
                this.bgJackPotUser.interactive = !0,
                this.bgJackPotUser.on("pointerdown", function() {
                    return s.jackpot.Show()
                }),
                this.txtPercent = new PIXI.Text("0%",{
                    fontFamily: this.fontRoboto,
                    fontSize: 12,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                }),
                this.txtPercent.anchor.set(.5),
                this.txtPercent.position.set(-40, -2),
                this.bgJackPotUser.addChild(this.txtPercent),
                this.txtJackpotFund = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 16,
                    fontWeight: "bold",
                    fill: ["white", "yellow"],
                    padding: 10
                }),
                this.txtJackpotFund.anchor.set(0, .5),
                this.txtJackpotFund.position.set(340, -170),
                this.txtJackpotFund.buttonMode = !0,
                this.txtJackpotFund.interactive = !0,
                this.txtJackpotFund.on("pointerdown", function() {
                    return s.jackpot.Show()
                }),
                this.txtJackpotValue = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 12,
                    fontWeight: "bold",
                    fill: ["white", "yellow"],
                    padding: 10
                }),
                this.txtJackpotValue.anchor.set(0, .5),
                this.txtJackpotValue.position.set(325, -144),
                this.txtJackpotValue.buttonMode = !0,
                this.txtJackpotValue.interactive = !0,
                this.txtJackpotValue.on("pointerdown", function() {
                    return s.jackpot.Show()
                });
                var i = new Sprite(this.GetTexture("total-bet"));
                i.anchor.set(.5),
                i.position.set(360, 155);
                var o = new PIXI.Text(Message.GetMessage("ca164"),{
                    fontFamily: this.fontRoboto,
                    fontSize: 12,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                o.anchor.set(1, .5),
                o.position.set(365, 155),
                this.totalBet = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 14,
                    fontWeight: "bold",
                    fill: ["white", "yellow"],
                    padding: 10
                }),
                this.totalBet.anchor.set(0, .5),
                this.totalBet.position.set(370, 155),
                this.bgContainer.addChild(t, this.dealer, this.bgResult, this.bgJackpot, this.bgJackPotUser, this.txtJackpotFund, this.txtJackpotValue, i, o, this.totalBet),
                this.txtStatus = new Sprite(TextureCache["small-bg-notify"]),
                this.txtStatus.anchor.set(.5),
                this.txtStatus.position.set(0, 68),
                this.txtStatus.addChild(new PIXI.Text("thông báo",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 12,
                    fill: "white"
                })),
                this.txtStatus.children[0].anchor.set(.5),
                this.txtStatus.visible = !1;
                for (var n = 0; n < this.playerPos.length; n++) {
                    var a = new Sprite(TextureCache["ic-ad-user"]);
                    a.anchor.set(.5),
                    a.position.set(this.playerPos[n][0], this.playerPos[n][1]),
                    this.bgContainer.addChild(a)
                }
                this.timer = new d.TimerC({
                    radius: 35,
                    bg: "time-green",
                    cir: "time-black",
                    fontSize: 26
                }),
                this.timer.position.set(360, 30),
                this.bgContainer.addChild(this.timer),
                this.mainContainer.addChild(this.bgContainer, this.playerContainer, this.chipContainer, this.moneyContainer, this.resultContainer, this.buttonContainer, this.effectContainer, this.txtStatus)
            }
            ,
            t.prototype.DealerChia = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerChiaBai,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            t.prototype.DealerDown = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerClick,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            t.prototype.DealerNormal = function() {
                var t = this.dealer;
                t.stop(),
                t.interactive = !0,
                t.buttonMode = !0,
                t.loop = !0,
                t.textures = this.framesDealerNormal,
                t.gotoAndPlay(0)
            }
            ,
            t.prototype.InitTip = function() {
                this.tipArr = [],
                this.tipArr.push(Message.GetMessage("ca157")),
                this.tipArr.push(Message.GetMessage("ca150") + " " + d.Util.ParseMoney(this.roomModel.Value) + " " + Config.MoneyText[this.roomModel.Currency] + " " + Message.GetMessage("ca151")),
                this.tipArr.push(Message.GetMessage("ca168"))
            }
            ,
            t.prototype.ShowBoxTip = function(t) {
                this.boxTip && this.boxTip.destroy({
                    children: !0
                });
                var e = new PIXI.Text(t,{
                    fontFamily: this.fontFace,
                    fontSize: 14,
                    fill: "white"
                });
                this.boxTip = new Graphics,
                this.boxTip.beginFill(0, .5),
                this.boxTip.drawRoundedRect(0, 0, e.width + 10, e.height + 10, e.height / 2),
                this.boxTip.addChild(e),
                e.position.set(5, 5),
                this.boxTip.position.set(80, -300),
                this.mainContainer.addChild(this.boxTip)
            }
            ,
            t.prototype.ShowTipDealer = function(t) {
                if (d.Util.ClearTimeOut(t.timerTip),
                t.ready) {
                    t.indexTip++,
                    2 < t.indexTip && (t.indexTip = 0);
                    var e = t.tipArr[t.indexTip].replace("{0}", d.Util.ParseMoney(t.roomModel.Value * (0 === t.indexTip ? 1 : 1 === t.indexTip ? 100 : 20)));
                    t.ShowBoxTip(e),
                    t.timerTip = setTimeout(function() {
                        return t.ShowTipDealer(t)
                    }, 2e3)
                }
            }
            ,
            t.prototype.InitTableInfo = function() {
                this.infoContainer = new Container,
                this.mainContainer.addChild(this.infoContainer);
                var t = this.roomModel;
                this.btnBack = new Sprite(TextureCache["btn-def"]),
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(-460, -this.size[1] / 2 + 25),
                this.btnBack.addChild(new Sprite(TextureCache["ic-back"])),
                this.btnBack.children[0].anchor.set(.5),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.BtnBackOver).on("pointerout", this.BtnBackOut).on("pointerdown", this.BtnBackDown.bind(this.btnBack, this));
                var e = new PIXI.Text(Message.GetMessage(0 === t.Currency ? "tb113" : "tb112") + ": " + d.Util.NumberToString(t.Id, 3),{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                e.anchor.set(0, .5),
                e.position.set(-420, -this.size[1] / 2 + 5);
                var i = new PIXI.Text(Message.GetMessage("ca81").toUpperCase() + d.Util.ParseMoney(t.Value) + " " + Config.MoneyText[t.Currency],{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                i.anchor.set(0, .5),
                i.position.set(-420, -this.size[1] / 2 + 25),
                this.lblSession = new PIXI.Text(Message.GetMessage("ca95").toUpperCase() + " #",{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                }),
                this.lblSession.anchor.set(0, .5),
                this.lblSession.position.set(-420, -this.size[1] / 2 + 45),
                this.infoContainer.addChild(this.btnBack, e, i, this.lblSession)
            }
            ,
            t.prototype.InitGates = function() {
                this.gates = [];
                for (var t = 0; t < this.gateConfig.length; t++)
                    this.gates.push(new Sprite(TextureCache[this.gateConfig[t].texture])),
                    this.gates[t].name = this.gateConfig[t].texture,
                    this.gates[t].anchor.set(.5),
                    this.gates[t].position.set(this.gateConfig[t].x, this.gateConfig[t].y),
                    this.gates[t].buttonMode = !0,
                    this.gates[t].interactive = !0,
                    this.gates[t].gate = this.gateConfig[t].id,
                    this.gates[t].inx = t,
                    this.gates[t].on("pointerover", this.GateOver.bind(this.gates[t], this)).on("pointerout", this.GateOut.bind(this.gates[t], this)).on("pointerdown", this.GateDown.bind(this.gates[t], this)),
                    this.buttonContainer.addChild(this.gates[t])
            }
            ,
            t.prototype.GateOver = function(t) {
                this.texture = TextureCache[this.name.replace("normal", "hover")],
                t.ShowToolTip(this.gate)
            }
            ,
            t.prototype.GateOut = function(t) {
                this.texture = TextureCache[this.name],
                t.toolTip.visible = !1
            }
            ,
            t.prototype.GateDown = function(e) {
                this.gate;
                e.hub.connection.invoke("Bet", e.betValue, this.gate).then(function(t) {
                    0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                }),
                e.toolTip.visible = !1
            }
            ,
            t.prototype.DisableGates = function() {
                for (var t = 0; t < this.gates.length; t++)
                    this.gates[t].interactive = !1,
                    this.gates[t].buttonMode = !1,
                    this.gates[t].texture = TextureCache[this.gates[t].name]
            }
            ,
            t.prototype.EnableGates = function() {
                for (var t = 0; t < this.gates.length; t++)
                    this.gates[t].interactive = !0,
                    this.gates[t].buttonMode = !0
            }
            ,
            t.prototype.BtnBackOver = function() {
                this.texture = TextureCache["btn-def-h"]
            }
            ,
            t.prototype.BtnBackOut = function() {
                this.texture = TextureCache["btn-def"]
            }
            ,
            t.prototype.BtnBackDown = function(e) {
                e.hub.connection.invoke("ExitRoom").then(function(t) {
                    console.log("ExitRoom", t),
                    0 === t.c ? (e.Delete(),
                    App.handleBack()) : e.RegisterLeave(t.r)
                })
            }
            ,
            t.prototype.InitButton = function() {
                this.buttonContainer = new Container,
                this.mainContainer.addChild(this.buttonContainer),
                this.btnReady = new Sprite(TextureCache["btn-game-normal"]),
                this.btnReady.name = "btn-game-normal",
                this.btnReady.anchor.set(.5),
                this.btnReady.position.set(450, 290),
                this.btnReady.addChild(new PIXI.Text(Message.GetMessage("ca153").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnReady.getChildAt(0).anchor.set(.5),
                this.btnReady.getChildAt(0).position.set(0, 0),
                this.btnReady.interactive = !0,
                this.btnReady.buttonMode = !0,
                this.btnReady.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnReadyClick.bind(this.btnReady, this)),
                this.btnX2 = new Sprite(TextureCache["btn-game-normal"]),
                this.btnX2.name = "btn-game-normal",
                this.btnX2.anchor.set(.5),
                this.btnX2.position.set(310, 290),
                this.btnX2.addChild(new PIXI.Text(Message.GetMessage("ca99").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnX2.getChildAt(0).anchor.set(.5),
                this.btnX2.getChildAt(0).position.set(0, 0),
                this.btnX2.interactive = !0,
                this.btnX2.buttonMode = !0,
                this.btnX2.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnX2Click.bind(this.btnX2, this)),
                this.btnReBet = new Sprite(TextureCache["btn-game-normal"]),
                this.btnReBet.name = "btn-game-normal",
                this.btnReBet.anchor.set(.5),
                this.btnReBet.position.set(170, 290),
                this.btnReBet.addChild(new PIXI.Text(Message.GetMessage("ca98").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnReBet.getChildAt(0).anchor.set(.5),
                this.btnReBet.getChildAt(0).position.set(0, 0),
                this.btnReBet.interactive = !0,
                this.btnReBet.buttonMode = !0,
                this.btnReBet.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnReBetClick.bind(this.btnReBet, this)),
                this.btnCancel = new Sprite(TextureCache["btn-game-normal"]),
                this.btnCancel.name = "btn-game-normal",
                this.btnCancel.anchor.set(.5),
                this.btnCancel.position.set(30, 290),
                this.btnCancel.addChild(new PIXI.Text(Message.GetMessage("ca154").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnCancel.getChildAt(0).anchor.set(.5),
                this.btnCancel.getChildAt(0).position.set(0, 0),
                this.btnCancel.interactive = !0,
                this.btnCancel.buttonMode = !0,
                this.btnCancel.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnCancelClick.bind(this.btnCancel, this)),
                this.buttonContainer.addChild(this.btnReady, this.btnX2, this.btnReBet, this.btnCancel)
            }
            ,
            t.prototype.DisableButton = function(t) {
                t.interactive = !1,
                t.buttonMode = !1,
                t.texture = TextureCache[t.name.replace("normal", "disable")]
            }
            ,
            t.prototype.EnableButton = function(t) {
                t.interactive = !0,
                t.buttonMode = !0,
                t.texture = TextureCache[t.name],
                t.visible = !0
            }
            ,
            t.prototype.DisableButtons = function() {
                this.DisableButton(this.btnReady),
                this.DisableButton(this.btnReBet),
                this.DisableButton(this.btnX2),
                this.DisableButton(this.btnCancel)
            }
            ,
            t.prototype.BtnHover = function() {
                this.texture = TextureCache[this.name.replace("normal", "hover")]
            }
            ,
            t.prototype.BtnOut = function() {
                this.texture = TextureCache[this.name]
            }
            ,
            t.prototype.BtnDown = function() {
                this.texture = TextureCache[this.name.replace("normal", "click")]
            }
            ,
            t.prototype.BtnReadyClick = function(e) {
                e.hub.connection.invoke("FinishBetting").then(function(t) {
                    console.log("FinishBetting", t),
                    0 <= t.c && e.ConfirmBet(t.r)
                })
            }
            ,
            t.prototype.BtnX2Click = function(e) {
                e.DisableButton(e.btnX2),
                e.DisableButton(e.btnReBet);
                for (var t = function(t) {
                    0 < e.lastCurrentBet[t] && setTimeout(function() {
                        e.hub.connection.invoke("Bet", 2 * e.lastCurrentBet[t], t + 1).then(function(t) {
                            0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                        })
                    }, 30 * t)
                }, i = 0; i < e.lastCurrentBet.length; i++)
                    t(i)
            }
            ,
            t.prototype.BtnCancelClick = function(e) {
                e.hub.connection.invoke("ClearBetting").then(function(t) {
                    console.log("ClearBetting", t),
                    0 <= t.c && e.ClearBet(t.r)
                })
            }
            ,
            t.prototype.BtnReBetClick = function(e) {
                e.DisableButton(e.btnX2),
                e.DisableButton(e.btnReBet);
                for (var t = function(t) {
                    0 < e.lastCurrentBet[t] && setTimeout(function() {
                        e.hub.connection.invoke("Bet", e.lastCurrentBet[t], t + 1).then(function(t) {
                            0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                        })
                    }, 30 * t)
                }, i = 0; i < e.lastCurrentBet.length; i++)
                    t(i)
            }
            ,
            t.prototype.InitBet = function() {
                this.boxBet = new Graphics,
                this.boxBet.beginFill(0),
                this.boxBet.drawRoundedRect(0, 0, 416, 72, 36),
                this.boxBet.position.set(-490, 251),
                this.buttonContainer.addChild(this.boxBet),
                this.arrBetChip = [],
                this.arrBetText = [];
                for (var t = this.chipConfig[this.roomModel.Currency][this.roomModel.Value], e = 0; e < t.length; e++) {
                    var i = new Sprite(TextureCache[t[e].img]);
                    i.anchor.set(.5),
                    i.position.set(this.arrBetPos[e].x, this.arrBetPos[e].y),
                    i.scale.set(this.arrBetPos[e].s),
                    i.value = t[e].value,
                    i.posY = this.arrBetPos[e].y,
                    i.active = !1,
                    i.i = e,
                    i.interactive = !0,
                    i.buttonMode = !0,
                    i.on("pointerover", this.ChipOver).on("pointerout", this.ChipOut).on("pointerdown", this.ChipDown.bind(i, this));
                    var o = new PIXI.Text(t[e].number,{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: ["white"],
                        padding: 10,
                        align: "center"
                    });
                    o.anchor.set(.5),
                    o.position.set(this.arrBetPos[e].x, this.arrBetPos[e].y + 30),
                    this.boxBet.addChild(i, o),
                    this.arrBetChip.push(i),
                    this.arrBetText.push(o)
                }
                this.SetActiveBet(this, this.arrBetChip[0])
            }
            ,
            t.prototype.ChipOver = function() {
                this.y = this.posY - 5
            }
            ,
            t.prototype.ChipOut = function() {
                this.active || (this.y = this.posY)
            }
            ,
            t.prototype.ChipDown = function(t) {
                t.ResetBet(t),
                t.SetActiveBet(t, this)
            }
            ,
            t.prototype.ResetBet = function(t) {
                for (var e = 0; e < t.arrBetChip.length; e++)
                    t.arrBetChip[e].y = t.arrBetChip[e].posY,
                    t.arrBetChip[e].active = !1,
                    t.arrBetText[e].style.fill = "white"
            }
            ,
            t.prototype.SetActiveBet = function(t, e) {
                e.active = !0,
                e.y = e.posY - 5,
                t.arrBetText[e.i].style.fill = "yellow",
                t.betValue = e.value
            }
            ,
            t.prototype.InitPopup = function() {
                this.toolTip = new Sprite(this.GetTexture("popup")),
                this.toolTip.anchor.set(.5),
                this.toolTip.position.set(this.size[0] / 2, this.size[1] / 2),
                this.buttonContainer.addChild(this.toolTip),
                this.toolDes = new PIXI.Text("",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["yellow"],
                    padding: 10,
                    wordWrap: !0,
                    wordWrapWidth: 150
                }),
                this.toolDes.anchor.set(0),
                this.toolDes.position.set(-65, -65),
                this.toolTip.addChild(this.toolDes);
                var t = new PIXI.Text(Config.MoneyText[this.roomModel.Currency] + Message.GetMessage("ca126") + ": ",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                this.toolTip.addChild(t),
                t.position.set(-65, -30);
                var e = new PIXI.Text(Message.GetMessage("ca164").toUpperCase(),{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                this.toolTip.addChild(e),
                e.position.set(-65, -10);
                var i = new PIXI.Text("MAX: ",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                this.toolTip.addChild(i),
                i.position.set(-65, 10);
                var o = new PIXI.Text(Message.GetMessage("ca225").toUpperCase(),{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                this.toolTip.addChild(o),
                o.position.set(-65, 30),
                this.txtGold = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["#c33768"],
                    padding: 10
                }),
                this.txtToTalBet = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["#c33768"],
                    padding: 10
                }),
                this.txtMax = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["#c33768"],
                    padding: 10
                }),
                this.txtRateEat = new PIXI.Text("",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["#c33768"],
                    padding: 10
                }),
                this.toolTip.addChild(this.txtGold, this.txtToTalBet, this.txtMax, this.txtRateEat),
                this.txtGold.position.set(30, -30),
                this.txtToTalBet.position.set(30, -10),
                this.txtMax.position.set(30, 10),
                this.txtRateEat.position.set(30, 30),
                this.toolTip.visible = !1
            }
            ,
            t.prototype.ShowToolTip = function(t) {
                this.toolDes.text = Message.GetMessage("sicbo.id." + t).toUpperCase();
                for (var e = this.GetPlayerByAccountId(this.currentPlayer.AccountId), i = this.gateTotalBet[e.pos][t - 1], o = 0, n = 0; n < this.gateTotalBet.length; n++)
                    o += this.gateTotalBet[n][t - 1];
                this.txtGold.text = d.Util.ParseMoney(i),
                this.txtToTalBet.text = d.Util.ParseMoney(o),
                this.txtMax.text = d.Util.ParseMoney(this.gateConfig[t - 1].max_factor * this.roomModel.Value),
                this.txtRateEat.text = "1 : " + this.gateConfig[t - 1].fund_rate,
                this.toolTip.visible = !0,
                this.toolTip.position.set(this.gates[t - 1].x + this.gates[t - 1].width / 2 + this.toolTip.width / 2, this.gates[t - 1].y - this.gates[t - 1].height / 2 + this.toolTip.height / 2)
            }
            ,
            t.prototype.GetTextureMoney = function(t) {
                var e, i = this.chipConfig[this.roomModel.Currency][this.roomModel.Value];
                return i[0].value <= t && t < i[1].value ? e = i[0].img : i[1].value <= t && t < i[2].value ? e = i[1].img : i[2].value <= t && t < i[3].value ? e = i[2].img : i[3].value <= t && t < i[4].value ? e = i[3].img : t >= i[4].value && (e = i[4].img),
                e
            }
            ,
            t.prototype.InitHistory = function() {
                if (void 0 === $(".sicbo")[0]) {
                    '<div class="show-statistic-game resizeable" style="zoom: 1; z-index: 1;">',
                    '<div class="content-show-statistic vi"><ul></ul>',
                    ' <div class="button-statistic"><input id="auto-show" type="checkbox"><span id="txt-auto">Tự động hiện</span></div>',
                    '<a href=\'javascript: $(".show-statistic-game").removeClass("active");\' class="btn-close-statistic"></a></div></div></div>',
                    document.getElementById(this.target).innerHTML += '<div class="sicbo"><div class="btn-statistic-game resizeable" style="zoom: 1;"><a href="javascript:;" id="btn-statistic"><img src="/assets/images/btn-statistic.png" alt=""></a></div><div class="show-statistic-game resizeable" style="zoom: 1; z-index: 1;"><div class="content-show-statistic vi"><ul></ul> <div class="button-statistic"><input id="auto-show" type="checkbox"><span id="txt-auto">Tự động hiện</span></div><a href=\'javascript: $(".show-statistic-game").removeClass("active");\' class="btn-close-statistic"></a></div></div></div>'
                }
                var t = this;
                setTimeout(function() {
                    $(".content-show-statistic").removeClass("vi"),
                    $(".content-show-statistic").removeClass("en"),
                    $(".content-show-statistic").removeClass("km"),
                    $(".content-show-statistic").removeClass("zh"),
                    $(".sicbo .content-show-statistic").addClass(t.lang),
                    $("#btn-statistic").unbind("click").click(function() {
                        $(".show-statistic-game").addClass("active")
                    }),
                    $("#auto-show").unbind("click").click(function() {
                        t.auto = document.getElementById("auto-show").checked
                    }),
                    t.GetHistory(t.roomModel.Id)
                }, 500)
            }
            ,
            t.prototype.GetHistory = function(t) {
                this.hub.connection.invoke("GetGameHistory", t).then(function(t) {
                    if (0 <= t.c && 0 < t.r.length) {
                        var e, i, o, n, a, s = "", r = t.r.length;
                        if (r < 39)
                            for (e = 0; e < r; e++) {
                                for (s += '<li class="fleft">',
                                n = !1,
                                (o = t.r[e])[0] === o[1] && o[1] === o[2] && (n = !0),
                                i = a = 0; i < o.length; i++)
                                    s += '<span class="' + (e === r - 1 ? " current" : "") + '">' + o[i] + "</span>",
                                    a += o[i];
                                s += '<span class="' + (e === r - 1 ? "current " : "") + (n ? "three" : 10 < a ? "over" : "under") + '">' + a + "</span>",
                                s += "</li>"
                            }
                        else
                            for (e = r - 1; r - 40 < e; e--) {
                                for (o = t.r[e],
                                s += '<li class="fright">',
                                n = !1,
                                (o = t.r[e])[0] === o[1] && o[1] === o[2] && (n = !0),
                                i = a = 0; i < o.length; i++)
                                    s += '<span class="' + (e === r - 1 ? " current" : "") + '">' + o[i] + "</span>",
                                    a += o[i];
                                s += '<span class="' + (e === r - 1 ? "current " : "") + (n ? "three" : 10 < a ? "over" : "under") + '">' + a + "</span>",
                                s += "</li>"
                            }
                        $(".content-show-statistic ul").html(s)
                    }
                })
            }
            ,
            t.prototype.CheckBet = function() {
                if (this.roomModel.Session) {
                    var t = this.roomModel.Session.BetLogs;
                    if (console.log("betLogs", t),
                    t && 0 < t.length) {
                        for (var e = 0; e < t.length; e++)
                            t[e].id = t[e].AccountId,
                            this.Bet(t[e]);
                        for (e = 0; e < t.length; e++)
                            if (t[e].AccountId === this.currentPlayer.AccountId && 1 === this.roomModel.Session.Phrase) {
                                this.EnableButton(this.btnCancel),
                                this.EnableButton(this.btnReady);
                                break
                            }
                    }
                }
            }
            ,
            t.prototype.StartBet = function() {
                this.timer.StartTimer(21, this.roomModel.Session.Timeout),
                this.EnableGates(),
                this.boxBet.visible = !0;
                for (var t = 0; t < this.lastCurrentBet.length; t++)
                    0 < this.lastCurrentBet[t] && (this.EnableButton(this.btnReBet),
                    this.EnableButton(this.btnX2))
            }
            ,
            t.prototype.ConfirmBet = function(t) {
                var e = this.GetPlayerByAccountId(t.id);
                e && (e.icReady.visible = !0,
                e.accountId === this.currentPlayer.AccountId && (this.DisableButtons(),
                this.boxBet.visible = !1))
            }
            ,
            t.prototype.ClearBet = function(t) {
                var e = this.GetPlayerByAccountId(t.id);
                if (e) {
                    for (var i = 0; i < e.betContainer.children.length; i++)
                        e.betContainer.children[i].visible = !1;
                    var o = 0;
                    for (i = 0; i < this.gateTotalBet[e.pos].length; i++)
                        o += this.gateTotalBet[e.pos][i],
                        0 < this.gateTotalBet[e.pos][i] && e.UndoChip(this.gateTotalBet[e.pos][i], i);
                    e.player.Balance += o;
                    var n = new PIXI.Text("+" + d.Util.ParseMoney(o),{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: "yellow"
                    });
                    if (n.anchor.set(.5),
                    n.position.set(e.avatar.x, e.avatar.y),
                    e.betContainer.addChild(n),
                    TweenMax.to(n, .8, {
                        y: n.y - 80,
                        onComplete: function() {
                            n.visible = !1
                        }
                    }),
                    e.UpdateBalance(e.player.Balance),
                    e.icReady.visible = !1,
                    this.gateTotalBet[e.pos] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    e.accountId === this.currentPlayer.AccountId) {
                        this.DisableButtons(),
                        this.boxBet.visible = !0,
                        this.totalBet.text = "0";
                        for (i = 0; i < this.lastCurrentBet.length; i++)
                            0 < this.lastCurrentBet[i] && (this.EnableButton(this.btnReBet),
                            this.EnableButton(this.btnX2))
                    }
                }
            }
            ,
            t.prototype.Bet = function(t) {
                var e = this.GetPlayerByAccountId(null != t.id ? t.id : t.Id);
                e && (e.Bet(t),
                e.accountId === this.currentPlayer.AccountId && 1 === this.roomModel.Session.Phrase && (this.EnableButton(this.btnReady),
                this.EnableButton(this.btnCancel),
                this.DisableButton(this.btnReBet),
                this.DisableButton(this.btnX2)))
            }
            ,
            t.prototype.CreateDice = function() {
                var t = this;
                this.dice = new AnimatedSprite(this.framesDice),
                this.ShowBoxTip(Message.GetMessage("casino.xucxac").toUpperCase()),
                this.dice.anchor.set(.5),
                this.dice.position.set(350, 30),
                this.dice.animationSpeed = .5,
                this.dice.loop = !1,
                this.dice.play(),
                this.bgContainer.addChild(this.dice),
                this.timerDice = setTimeout(function() {
                    return t.ProcessResult()
                }, 1300)
            }
            ,
            t.prototype.ProcessResult = function() {
                var t = this
                  , e = this.roomModel.Session.Result.Dices;
                this.ShowBoxTip(Message.GetMessage("me18"));
                try {
                    this.dice.destroy()
                } catch (t) {}
                for (var i = 0, o = 0; o < e.length; o++) {
                    var n = new Sprite(this.GetTexture(e[o]));
                    n.anchor.set(.5),
                    n.rotation = this.dicePos[o].r,
                    n.position.set(this.dicePos[o].x, this.dicePos[o].y),
                    this.moneyContainer.addChild(n),
                    i += e[o]
                }
                this.bgResult.visible = !0;
                var a = new PIXI.Text(i.toString(),{
                    fontFamily: this.fontRoboto,
                    fontSize: 26,
                    fontWeight: "bold",
                    fill: ["white", "yellow"],
                    padding: 10
                });
                a.anchor.set(.5),
                a.position.set(this.bgResult.x, this.bgResult.y),
                this.moneyContainer.addChild(a),
                this.timerResult = setTimeout(function() {
                    return t.WinGates()
                }, 10 <= this.roomModel.Session.Timeout ? 1e3 : this.roomModel.Session.Timeout <= 5 ? 0 : 500)
            }
            ,
            t.prototype.WinGates = function() {
                var t = this;
                d.Util.ClearTimeOut(this.timerResult);
                for (var e = this.roomModel.Session.Result.WinGates, i = this.gateConfig, o = 0; o < e.length; o++) {
                    var n = new Sprite(TextureCache[i[e[o] - 1].texture.replace("normal", "active")]);
                    if (n.anchor.set(.5),
                    n.position.set(this.gates[e[o] - 1].x, this.gates[e[o] - 1].y),
                    this.moneyContainer.addChild(n),
                    n)
                        try {
                            TweenMax.to(n, .3, {
                                data: "sicbo",
                                alpha: .4,
                                yoyo: !0,
                                repeat: 19
                            })
                        } catch (t) {}
                }
                var a = e[0];
                if (0 <= $.inArray(a, [1, 2])) {
                    var s = 1 === a ? "tai-" : "xiu-"
                      , r = new Sprite(null != TextureCache[s + this.lang + "-active"] ? TextureCache[s + this.lang + "-active"] : TextureCache[s + this.defaultLang + "-active.png"]);
                    r.anchor.set(.5),
                    r.position.set(1 === a ? 162 : -402, -96),
                    this.moneyContainer.addChild(r);
                    try {
                        TweenMax.to(r, .3, {
                            alpha: .4,
                            yoyo: !0,
                            repeat: 19
                        })
                    } catch (t) {}
                }
                this.timerPrize = setTimeout(function() {
                    return t.UpdatePrizes()
                }, 10 <= this.roomModel.Session.Timeout ? 1500 : this.roomModel.Session.Timeout <= 5 ? 0 : 500)
            }
            ,
            t.prototype.UpdatePrizes = function() {
                for (var n = this.roomModel.Session.Result.WinGates, t = 0; t < this.gateTotalBet.length; t++) {
                    var e = this.gateTotalBet[t];
                    if (o = this.GetPlayerByPosition(t))
                        for (var i = 0; i < e.length; i++)
                            0 < e[i] && !n.includes(i + 1) && o.MoneyToDealer(i, e[i])
                }
                for (t = 0; t < this.gateTotalBet.length; t++) {
                    var o;
                    e = this.gateTotalBet[t];
                    if (o = this.GetPlayerByPosition(t))
                        for (i = 0; i < e.length; i++)
                            0 < e[i] && n.includes(i + 1) && o.MoneyFromDealer(i, e[i])
                }
                var a = this;
                setTimeout(function() {
                    for (var t = 0; t < a.gateTotalBet.length; t++) {
                        var e = a.gateTotalBet[t]
                          , i = a.GetPlayerByPosition(t);
                        if (i)
                            for (var o = 0; o < e.length; o++)
                                0 < e[o] && n.includes(o + 1) && i.MoneyToPlayer(o, e[o])
                    }
                    a.MoneyWin()
                }, 500)
            }
            ,
            t.prototype.MoneyWin = function() {
                for (var t = this.roomModel.Session.Prizes, e = 0; e < this.players.length; e++)
                    if (this.players[e]) {
                        for (var i = this.players[e], o = !1, n = 0; n < this.gateTotalBet[i.pos].length; n++)
                            if (0 < this.gateTotalBet[i.pos][n]) {
                                o = !0;
                                break
                            }
                        if (o)
                            if (t && 0 < t.length) {
                                var a = 0
                                  , s = 0;
                                for (n = 0; n < this.gateTotalBet[i.pos].length; n++)
                                    a += this.gateTotalBet[i.pos][n];
                                for (var r = 0; r < t.length; r++)
                                    i.accountId === t[r].AccountId && (s += t[r].TotalPrize);
                                console.log(a, s),
                                i.player.Balance += s,
                                0 < s && i.UpdateMoney(s),
                                i.UpdateBalance(i.player.Balance),
                                i.ShowWin(0 < s)
                            } else
                                i.ShowWin(!1)
                    }
                var h = this;
                this.roomModel.Session.JackpotPrizes && (this.timerWinJackpot = setTimeout(function() {
                    return h.WinJackpot()
                }, 10 <= this.roomModel.Session.Timeout ? 3e3 : this.roomModel.Session.Timeout <= 5 ? 0 : 1e3)),
                this.auto && ($(".show-statistic-game").addClass("active"),
                $(".show-statistic-game").show())
            }
            ,
            t.prototype.WinJackpot = function() {
                d.Util.ClearTimeOut(this.timerWinJackpot),
                d.Util.ClearTimeOut(this.timerOut);
                var t = new Sprite(this.GetTexture("bg-effect-jackpot2"));
                t.anchor.set(.5),
                t.position.set(0, -40),
                this.moneyContainer.addChild(t);
                var e = new Sprite(this.GetTexture("t-jackpot-"));
                e.anchor.set(.5),
                e.position.set(0, -40),
                this.moneyContainer.addChild(e);
                var i = new Sprite(this.GetTexture("light-effect-jackpot4"));
                i.anchor.set(.5),
                i.position.set(-t.width / 2, -60),
                this.moneyContainer.addChild(i);
                var o = new Sprite(this.GetTexture("light-effect-jackpot4"));
                o.anchor.set(.5),
                o.position.set(t.width / 2, -20),
                this.moneyContainer.addChild(o);
                for (var n = this.roomModel.Session.JackpotPrizes.Details, a = 0; a < n.length; a++) {
                    var s = this.GetPlayerByAccountId(n[a].AccountId ? n[a].AccountId : n[a].AccountID);
                    if (s) {
                        var r = new Sprite(this.GetTexture("light-effect-jackpot3"));
                        r.anchor.set(.5),
                        r.position.set(s.avatar.x, s.avatar.y);
                        var h = new Sprite(this.GetTexture("light-effect-jackpot"));
                        h.anchor.set(.5),
                        h.position.set(s.avatar.x, s.avatar.y);
                        var l = new Sprite(this.GetTexture("light-effect-jackpot2"));
                        l.anchor.set(.5),
                        l.alpha = .4,
                        l.position.set(s.avatar.x, s.avatar.y);
                        var c = new Sprite(this.GetTexture("bg-effect-jackpot"));
                        c.anchor.set(.5),
                        c.position.set(s.avatar.x, s.avatar.y);
                        var u = new PIXI.Text(Message.GetMessage("mts7").toUpperCase(),{
                            fontFamily: this.fontRoboto,
                            fontStyle: "italic",
                            fontSize: 24,
                            fontWeight: "bold",
                            fill: ["#653b00"],
                            padding: 30
                        });
                        u.anchor.set(.5),
                        u.position.set(s.avatar.x, s.avatar.y);
                        var p = new PIXI.Text("+" + d.Util.ParseMoney(n[a].prizeValue ? n[a].prizeValue : n[a].PrizeValue),{
                            fontFamily: this.fontRoboto,
                            fontSize: 24,
                            fontWeight: "bold",
                            fill: ["yellow", "white"],
                            padding: 30
                        });
                        p.position.set(s.avatar.x, s.avatar.y),
                        p.anchor.set(.5),
                        this.moneyContainer.addChild(r, h, l, c, u, p);
                        try {
                            TweenMax.to(r, 1, {
                                data: "sicbo",
                                rotation: 360,
                                repeat: 3
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(h, .5, {
                                data: "sicbo",
                                alpha: .4,
                                repeat: 11,
                                yoyo: !0
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(l, .5, {
                                data: "sicbo",
                                alpha: 1,
                                repeat: 11,
                                yoyo: !0
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(p, .5, {
                                data: "sicbo",
                                y: p.y - 80,
                                ease: Back.easeOut
                            })
                        } catch (t) {}
                        s.player.Balance += n[a].prizeValue ? n[a].prizeValue : n[a].PrizeValue,
                        s.UpdateBalance(s.player.Balance)
                    }
                }
                try {
                    TweenMax.to(i, .5, {
                        data: "sicbo-effect",
                        x: t.width / 2,
                        repeat: 3,
                        yoyo: !0
                    })
                } catch (t) {}
                try {
                    TweenMax.to(o, .5, {
                        data: "sicbo-effect",
                        x: -t.width / 2,
                        repeat: 3,
                        yoyo: !0
                    })
                } catch (t) {}
            }
            ,
            t.prototype.HideReady = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && (this.players[t].icReady.visible = !1)
            }
            ,
            t.prototype.ResetGame = function() {
                for (this.DeleteT(),
                this.toolTip.visible = !1,
                this.totalBet.text = "0",
                this.timer.ClearTimer(),
                this.bgResult.visible = !1,
                $(".show-statistic-game").removeClass("active"); 0 < this.moneyContainer.children.length; )
                    try {
                        this.moneyContainer.children[0].destroy({
                            children: !0
                        })
                    } catch (t) {}
                d.Util.ClearTimeOut(this.timerTip);
                var t = this.GetPlayerByAccountId(this.currentPlayer.AccountId);
                t && this.gateTotalBet[t.pos] && (this.lastCurrentBet = this.gateTotalBet[t.pos].slice(0)),
                this.gateTotalBet = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];
                for (var e = 0; e < this.players.length; e++)
                    this.players[e] && this.players[e].Reset()
            }
            ,
            t.prototype.Stop = function() {
                this.hub.ExitGame(),
                this.hub.connection.stop()
            }
            ,
            t.prototype.ClearTimer = function() {
                d.Util.ClearTimeOut(this.timerPrize),
                d.Util.ClearTimeOut(this.timerDice),
                d.Util.ClearTimeOut(this.timerTip),
                d.Util.ClearTimeOut(this.timerResult),
                d.Util.ClearTimeOut(this.timerDelete),
                d.Util.ClearTimeOut(this.timerWinJackpot)
            }
            ,
            t.prototype.DeleteTimer = function() {
                d.Util.ClearTimeOut(this.timerPrize),
                d.Util.ClearTimeOut(this.timerDice),
                d.Util.ClearTimeOut(this.timerTip),
                d.Util.ClearTimeOut(this.timerResult),
                d.Util.ClearTimeOut(this.timerDelete),
                d.Util.ClearTimeOut(this.timerWinJackpot)
            }
            ,
            t.prototype.DeleteT = function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "sicbo" === t[e].data && t[e].kill()
            }
            ,
            t.prototype.Delete = function() {
                d.Util.UnloadCSS("/assets/css/sicbo.css"),
                d.Util.ClearTimeOut(this.timerOut),
                d.Util.ClearTimeOut(this.timerStatus),
                d.Util.ClearTimeOut(this.timerTip),
                window.removeEventListener("resize", this.resizeFunc),
                s.jackpot.jackpotValue = null,
                s.jackpot.jackpotFund = null,
                this.DeleteT(),
                this.DeleteTimer();
                try {
                    this.application.view.remove(),
                    this.application.destroy(!0),
                    this.target.html("")
                } catch (t) {}
            }
            ,
            t
        }();
        e.games = r
    }
    , function(t, i, e) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = e(0);
        i.jackpot = {
            timerJackpot: null,
            jackpotFund: null,
            jackpotValue: null,
            Show: function() {},
            GetJackpot: function(e) {
                o.Util.ClearTimeOut(i.jackpot.timerJackpot),
                console.log(e),
                e.hub.connection.invoke("GetJackpot", e.roomModel.Currency, e.roomModel.Value).then(function(t) {
                    console.log("jackpot", t),
                    0 <= t.c && t.r && t.r.jackpotFund && t.r.jackpotValue && (i.jackpot.CountJackpotFund(e, t.r.jackpotFund),
                    i.jackpot.CountJackpotValue(e, t.r.jackpotValue),
                    i.jackpot.UpdatePercent(e, t.r.rate / 10))
                }),
                i.jackpot.timerJackpot = setTimeout(function() {
                    return i.jackpot.GetJackpot(e)
                }, 2e4)
            },
            CountJackpotFund: function(t, e) {
                null === i.jackpot.jackpotFund ? (i.jackpot.jackpotFund = new o.Util.CountUp(t.txtJackpotFund,!0,!1,0,e,0,1),
                i.jackpot.jackpotFund.start()) : i.jackpot.jackpotFund.update(e)
            },
            CountJackpotValue: function(t, e) {
                null === i.jackpot.jackpotValue ? (i.jackpot.jackpotValue = new o.Util.CountUp(t.txtJackpotValue,!0,!1,0,e,0,1),
                i.jackpot.jackpotValue.start()) : i.jackpot.jackpotValue.update(e)
            },
            UpdatePercent: function(t, e) {
                t.txtPercent.text = e + "%"
            }
        }
    }
    , function(t, e, i) {
        "use strict";
        var o, n = this && this.__extends || (o = function(t, e) {
            return (o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            o(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = function(e) {
            function t() {
                var t = e.call(this) || this;
                return t.assets = [{
                    id: "sicbo-table-1",
                    src: "/assets/images/sicbo/table-vip.png"
                }, {
                    id: "sicbo-table-0",
                    src: "/assets/images/sicbo/table-xu.png"
                }, {
                    id: "",
                    src: "/assets/images/sicbo/xuc-xac.json"
                }, {
                    id: "",
                    src: "/assets/images/sicbo/games.json"
                }, {
                    id: "",
                    src: "/assets/images/sicbo/games-en.json"
                }, {
                    id: "",
                    src: "/assets/images/common/common-casino.json"
                }, {
                    id: "",
                    src: "/assets/images/common/dealer.json"
                }],
                t.add(t.assets),
                t
            }
            return n(t, e),
            t
        }(i(0).Assets);
        e.default = a
    }
    , function(t, e, i) {
        "use strict";
        var o, n = this && this.__extends || (o = function(t, e) {
            return (o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            o(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = i(0)
          , s = i(6)
          , r = function(o) {
            function t(t, e, i) {
                return o.call(this, t, e, i) || this
            }
            return n(t, o),
            t.prototype.Connect = function(t, e) {
                var i = this;
                this.connection = (new s.HubConnectionBuilder).withUrl(this.url, {
                    accessTokenFactory: function() {
                        return i.token
                    },
                    skipNegotiation: !0,
                    transport: s.HttpTransportType.WebSockets
                }).build(),
                this.connection.serverTimeoutInMilliseconds = 1e5,
                this.connection.start().then(function() {
                    console.log("connected"),
                    i.EnterGame(t),
                    i.Listen(),
                    "function" == typeof e && e()
                }).catch(function(t) {
                    return console.error(t)
                })
            }
            ,
            t.prototype.Listen = function() {
                o.prototype.Listen.call(this);
                var e = this;
                e.connection.on("roomData", function(t) {
                    e.game && e.game.JoinGame(t)
                }),
                e.connection.on("joinRoom", function(t) {
                    console.log("joinRoom", t),
                    e.game && e.game.PlayerJoin(t.r)
                }),
                e.connection.on("leaveRoom", function(t) {
                    console.log("leaveRoom", t),
                    e.game && e.game.PlayerLeave(t.r)
                }),
                e.connection.on("registerLeavingRoom", function(t) {
                    console.log("registerLeavingRoom", t),
                    e.game && e.game.RegisterLeave(t.r)
                }),
                e.connection.on("connectionChanged", function(t) {
                    console.log("connectionChanged", t),
                    e.game && e.game.UpdateConnection(t.r)
                }),
                e.connection.on("UpdateHand", function(t) {
                    console.log("updateHand", t)
                }),
                e.connection.on("rejectBetting", function(t) {
                    console.log("rejectBetting", t)
                }),
                e.connection.on("playerBet", function(t) {
                    console.log("playerBet", t),
                    e.game && e.game.Bet(t.r)
                }),
                e.connection.on("clearBetting", function(t) {
                    console.log("clearBetting", t),
                    e.game && e.game.ClearBet(t.r)
                }),
                e.connection.on("confirmBetting", function(t) {
                    console.log("confirmBetting", t),
                    e.game && e.game.ConfirmBet(t.r)
                }),
                e.connection.on("playerOtherDevice", function(t) {
                    console.log("playerOtherDevice", t),
                    e.game && e.game.PlayerOtherDevice(t.r)
                })
            }
            ,
            t.prototype.EnterGame = function(t) {
                var e = this;
                this.connection.invoke("EnterGame", t).then(function(t) {
                    if (console.log("EnterGame", t),
                    t.c < 0)
                        return -10004 === t.c && (t.c = 10014),
                        App.showPopupMessage({
                            content: Message.GetMessage((10014 === t.c ? "me" : "ca") + t.c),
                            textDone: "OK"
                        }),
                        void App.handleBack();
                    if (1 === t.c) {
                        if (!e.game)
                            return;
                        e.game.EnterGame(t)
                    }
                })
            }
            ,
            t.prototype.ExitGame = function() {
                this.connection.invoke("ExitGame").then(function(t) {
                    console.log("ExitGame", t)
                })
            }
            ,
            t.prototype.EnterRoom = function(t, e) {
                var i = this;
                this.connection.invoke("EnterRoom", t, e).then(function(t) {
                    console.log("EnterRoom", t),
                    i.game && i.game.EnterGame(t)
                })
            }
            ,
            t.prototype.ExitRoom = function() {
                this.connection.invoke("ExitRoom").then(function(t) {
                    console.log("ExitRoom", t)
                })
            }
            ,
            t.prototype.ClearBetting = function() {
                this.connection.invoke("ClearBetting").then(function(t) {
                    console.log("ClearBetting", t)
                })
            }
            ,
            t.prototype.FinishBetting = function() {
                this.connection.invoke("FinishBetting").then(function(t) {
                    console.log("FinishBetting", t)
                })
            }
            ,
            t.prototype.GetGameHistory = function(t) {
                this.connection.invoke("GetGameHistory", t).then(function(t) {
                    console.log("GetGameHistory", t)
                })
            }
            ,
            t.prototype.Bet = function(t, e) {
                this.connection.invoke("Bet", t, e).then(function(t) {
                    console.log("Bet", t)
                })
            }
            ,
            t
        }(a.Hub);
        e.default = r
    }
    , function(t, e) {
        t.exports = o
    }
    , function(t, e, i) {
        "use strict";
        var o, n = this && this.__extends || (o = function(t, e) {
            return (o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            o(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var h = i(0)
          , a = function(i) {
            function t(t) {
                var e = i.call(this, t) || this;
                return e.moneyBet = 0,
                e.icReady = new Sprite(TextureCache.ready),
                e.icReady.anchor.set(.5),
                e.icReady.position.set(e.avatar.x, e.avatar.y - e.avatar.height / 2),
                e.icReady.visible = !1,
                e.addChild(e.icReady),
                e.Reset(),
                e
            }
            return n(t, i),
            t.prototype.Bet = function(t) {
                var e = this
                  , i = void 0 !== t.amount ? t.amount : t.Amount
                  , o = t.gate ? t.gate : t.Gate
                  , n = t.balance || 0 === t.balance ? t.balance : t.Balance || 0 === t.Balance ? t.Balance : -1
                  , a = new Sprite(TextureCache[this.game.GetTextureMoney(i)]);
                a.anchor.set(.5),
                a.scale.set(.5),
                a.position.set(this.avatar.x, this.avatar.y),
                this.chipContainer.addChild(a),
                TweenMax.to(a, .5, {
                    data: "sicbo",
                    x: this.game.gates[o - 1].x,
                    y: this.game.gates[o - 1].y
                });
                var s = new PIXI.Text("-" + h.Util.ParseMoney(t.amount ? t.amount : t.Amount),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 14,
                    fill: "yellow"
                });
                s.anchor.set(.5),
                s.position.set(this.avatar.x, this.avatar.y),
                this.betContainer.addChild(s),
                TweenMax.to(s, .5, {
                    data: "sicbo",
                    y: s.y - 80
                });
                var r = this;
                0 <= n && (this.UpdateBalance(n),
                this.player.Balance = n),
                setTimeout(function() {
                    a.visible = !1,
                    s.visible = !1,
                    r.CalChip(),
                    r.accountId === e.game.currentPlayer.AccountId && r.UpdateTotalBet()
                }, 600),
                this.game.gateTotalBet[this.pos][o - 1] += i
            }
            ,
            t.prototype.UndoChip = function(t, e) {
                try {
                    for (var i = 0; i < 10; i++) {
                        var o = new Sprite(TextureCache[this.game.GetTextureMoney(t)]);
                        o.anchor.set(.5),
                        o.scale.set(.5),
                        o.position.set(this.game.gates[e].x, this.game.gates[e].y),
                        this.chipContainer.addChild(o),
                        TweenMax.to(o, .5, {
                            data: "sicbo",
                            x: this.avatar.x,
                            y: this.avatar.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.UpdateTotalBet = function() {
                for (var t = 0, e = 0; e < this.game.gateTotalBet[this.pos].length; e++)
                    t += this.game.gateTotalBet[this.pos][e];
                this.game.totalBet.text = h.Util.ParseMoney(t)
            }
            ,
            t.prototype.CalChip = function() {
                for (var t = 0; t < this.betContainer.children.length; t++)
                    this.betContainer.children[t].visible = !1;
                for (t = 0; t < this.game.gateTotalBet[this.pos].length; t++)
                    if (0 < this.game.gateTotalBet[this.pos][t]) {
                        var e = new Sprite(TextureCache[this.game.GetTextureMoney(this.game.gateTotalBet[this.pos][t])]);
                        e.anchor.set(.5),
                        e.scale.set(.5),
                        e.position.set(this.game.gates[t].x, this.game.gates[t].y),
                        this.betContainer.addChild(e)
                    }
            }
            ,
            t.prototype.MoneyToDealer = function(t, e) {
                for (var i = 0; i < this.betContainer.children.length; i++)
                    this.betContainer.children[i].x === this.game.gates[t].x && this.betContainer.children[i].y === this.game.gates[t].y && (this.betContainer.children[i].visible = !1);
                try {
                    for (i = 0; i < 10; i++) {
                        var o = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        o.anchor.set(.5),
                        o.scale.set(.5),
                        o.position.set(this.game.gates[t].x, this.game.gates[t].y),
                        this.chipContainer.addChild(o),
                        TweenMax.to(o, 1, {
                            data: "sicbo",
                            x: this.game.dealer.x,
                            y: this.game.dealer.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.MoneyFromDealer = function(t, e) {
                try {
                    for (var i = 0; i < 10; i++) {
                        var o = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        o.anchor.set(.5),
                        o.scale.set(.5),
                        o.position.set(this.game.dealer.x, this.game.dealer.y),
                        this.chipContainer.addChild(o),
                        TweenMax.to(o, 1, {
                            data: "sicbo",
                            x: this.game.gates[t].x,
                            y: this.game.gates[t].y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.MoneyToPlayer = function(t, e) {
                for (var i = 0; i < this.betContainer.children.length; i++)
                    this.betContainer.children[i].x === this.game.gates[t].x && this.betContainer.children[i].y === this.game.gates[t].y && (this.betContainer.children[i].visible = !1);
                try {
                    for (i = 0; i < 10; i++) {
                        var o = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        o.anchor.set(.5),
                        o.scale.set(.5),
                        o.position.set(this.game.gates[t].x, this.game.gates[t].y),
                        this.chipContainer.addChild(o),
                        TweenMax.to(o, 1, {
                            data: "sicbo",
                            x: this.avatar.x,
                            y: this.avatar.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.UpdateMoney = function(t) {
                var e = new PIXI.Text((0 < t ? "+" : "") + h.Util.ParseMoney(t),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 14,
                    fill: "yellow"
                });
                e.anchor.set(.5),
                e.position.set(this.avatar.x, this.avatar.y),
                this.game.effectContainer.addChild(e),
                TweenMax.to(e, 1.8, {
                    data: "sicbo",
                    y: e.y - 80
                }),
                setTimeout(function() {
                    e.visible = !1
                }, 1900)
            }
            ,
            t.prototype.ShowWin = function(t) {
                var e = new Sprite(TextureCache[(t ? "thang-" : "thua-") + this.game.lang]);
                e.anchor.set(.5),
                e.position.set(this.box.x, this.box.y),
                this.betContainer.addChild(e),
                TweenMax.to(e.scale, .3, {
                    data: "sicbo",
                    x: 1.2,
                    y: 1.2,
                    yoyo: !0,
                    repeat: 7
                })
            }
            ,
            t.prototype.Reset = function() {
                if (this.chipContainer)
                    try {
                        this.chipContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                if (this.chipContainer = new Container,
                this.game.chipContainer.addChild(this.chipContainer),
                this.betContainer)
                    try {
                        this.betContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.betContainer = new Container,
                this.game.moneyContainer.addChild(this.betContainer),
                this.icReady.visible = !1
            }
            ,
            t
        }(h.PlayerC);
        e.default = a
    }
    , function(t, e) {
        t.exports = n
    }
    , function(t, e) {
        t.exports = a
    }
    ])
});

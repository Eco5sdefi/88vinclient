!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("signalR"), require("pixi-filters"), require("WebFont")) : "function" == typeof define && define.amd ? define("dragontiger", ["libs", "signalR", "pixi-filters", "WebFont"], e) : "object" == typeof exports ? exports.dragontiger = e(require("libs"), require("signalR"), require("pixi-filters"), require("WebFont")) : t.dragontiger = e(t.libs, t.signalR, t["pixi-filters"], t.WebFont)
}(window, function(i, n, s, a) {
    return function(i) {
        var n = {};
        function s(t) {
            if (n[t])
                return n[t].exports;
            var e = n[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return i[t].call(e.exports, e, e.exports, s),
            e.l = !0,
            e.exports
        }
        return s.m = i,
        s.c = n,
        s.d = function(t, e, i) {
            s.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: i
            })
        }
        ,
        s.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }),
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }
        ,
        s.t = function(e, t) {
            if (1 & t && (e = s(e)),
            8 & t)
                return e;
            if (4 & t && "object" == typeof e && e && e.__esModule)
                return e;
            var i = Object.create(null);
            if (s.r(i),
            Object.defineProperty(i, "default", {
                enumerable: !0,
                value: e
            }),
            2 & t && "string" != typeof e)
                for (var n in e)
                    s.d(i, n, function(t) {
                        return e[t]
                    }
                    .bind(null, n));
            return i
        }
        ,
        s.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default
            }
            : function() {
                return t
            }
            ;
            return s.d(e, "a", e),
            e
        }
        ,
        s.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        ,
        s.p = "/",
        s(s.s = 1)
    }([function(t, e) {
        t.exports = i
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = i(2)
          , s = i(8)
          , a = function() {
            function t(t) {
                s.load({
                    custom: {
                        families: ["Roboto-Black", "Roboto-Bold", "Roboto-Medium", "Roboto-Regular", "Roboto-Light", "RobotoCondensed-Bold", "RobotoCondensed-Italic", "RobotoCondensed-Light", "RobotoCondensed-Regular", "UTM American Sans", "UTM Swiss Condensed", "UTM Swiss CondensedBold"]
                    },
                    fontactive: function() {}
                }),
                this.game = new n.games(t)
            }
            return t.prototype.delete = function() {
                this.game.Delete()
            }
            ,
            t.prototype.load = function(t) {
                this.game.Load(t)
            }
            ,
            t.prototype.join = function(t, e) {
                this.game.Join(t, e)
            }
            ,
            t.prototype.stop = function() {
                this.game.Stop()
            }
            ,
            t
        }();
        e.game = a
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = i(3)
          , s = i(4)
          , o = i(0)
          , a = i(6);
        i(7);
        var r = function() {
            function t(t) {
                this.accountId = 0,
                this.defaultLang = "en",
                this.gameName = "dragon-tiger-",
                this.ready = !1,
                this.betValue = 0,
                this.isLoad = !1,
                this.players = [null, null, null, null, null, null, null],
                this.cardsMap = ["2tep.png", "3tep.png", "4tep.png", "5tep.png", "6tep.png", "7tep.png", "8tep.png", "9tep.png", "10tep.png", "11tep.png", "12tep.png", "13tep.png", "1tep.png", "2co.png", "3co.png", "4co.png", "5co.png", "6co.png", "7co.png", "8co.png", "9co.png", "10co.png", "11co.png", "12co.png", "13co.png", "1co.png", "2bich.png", "3bich.png", "4bich.png", "5bich.png", "6bich.png", "7bich.png", "8bich.png", "9bich.png", "10bich.png", "11bich.png", "12bich.png", "13bich.png", "1bich.png", "2do.png", "3do.png", "4do.png", "5do.png", "6do.png", "7do.png", "8do.png", "9do.png", "10do.png", "11do.png", "12do.png", "13do.png", "1do.png", "joker.png"],
                this.fontRobotoCondensedRegular = "RobotoCondensed-Regular",
                this.fontRobotoCondensedBold = "RobotoCondensed-Bold",
                this.fontFaceBold = "Roboto-Bold",
                this.fontFace = "Roboto-Light",
                this.fontRoboto = "Roboto",
                this.Phrase = {
                    None: 0,
                    Betting: 1,
                    Dealing: 2,
                    Result: 3
                },
                this.Status = {
                    Active: 0,
                    Pause: 1,
                    Error: 2,
                    Finish: 3
                },
                this.playerPos = [[0, 195], [-235, 140], [-390, 20], [-460, -180], [460, -180], [390, 20], [235, 140]],
                this.chipConfig = {
                    1: {
                        100: [{
                            number: "100",
                            value: 100,
                            img: "tien_2"
                        }, {
                            number: "500",
                            value: 500,
                            img: "tien_3"
                        }, {
                            number: "1K",
                            value: 1e3,
                            img: "tien_4"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_5"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_6"
                        }],
                        500: [{
                            number: "500",
                            value: 500,
                            img: "tien_2"
                        }, {
                            number: "1K",
                            value: 1e3,
                            img: "tien_3"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_4"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_5"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_6"
                        }],
                        1e3: [{
                            number: "1K",
                            value: 1e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        2e3: [{
                            number: "2K",
                            value: 2e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        5e3: [{
                            number: "5K",
                            value: 5e3,
                            img: "tien_2"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_3"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_4"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_5"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_6"
                        }],
                        1e4: [{
                            number: "10K",
                            value: 1e4,
                            img: "tien_2"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_3"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_4"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_5"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_6"
                        }]
                    },
                    0: {
                        1e3: [{
                            number: "1K",
                            value: 1e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        5e3: [{
                            number: "5K",
                            value: 5e3,
                            img: "tien_2"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_3"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_4"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_5"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_6"
                        }],
                        1e4: [{
                            number: "10K",
                            value: 1e4,
                            img: "tien_2"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_3"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_4"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_5"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_6"
                        }],
                        5e4: [{
                            number: "50K",
                            value: 5e4,
                            img: "tien_2"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_3"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_4"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_5"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_6"
                        }],
                        1e5: [{
                            number: "100K",
                            value: 1e5,
                            img: "tien_2"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_3"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_4"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_5"
                        }, {
                            number: "10M",
                            value: 1e7,
                            img: "tien_6"
                        }],
                        5e5: [{
                            number: "500K",
                            value: 5e5,
                            img: "tien_2"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_3"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_4"
                        }, {
                            number: "10M",
                            value: 1e7,
                            img: "tien_5"
                        }, {
                            number: "50M",
                            value: 5e6,
                            img: "tien_6"
                        }]
                    }
                },
                this.gateOptions = [{
                    id: 1,
                    x: -89,
                    y: 3,
                    wX: -125,
                    wY: 70,
                    wS: .7,
                    t: "dragon-win",
                    w: "dragon-tiger-big-gate-dragon-win",
                    vip: "dragon-tiger-big-gate-vip-hover",
                    xu: "dragon-tiger-big-gate-xu-hover"
                }, {
                    id: 2,
                    x: 89,
                    y: 3,
                    wX: 70,
                    wY: 70,
                    wS: .7,
                    t: "tiger-win",
                    w: "dragon-tiger-big-gate-tiger-win",
                    vip: "dragon-tiger-big-gate-vip-hover",
                    xu: "dragon-tiger-big-gate-xu-hover"
                }, {
                    id: 3,
                    x: 0,
                    y: -129,
                    wX: -35,
                    wY: -125,
                    wS: .7,
                    t: "tie-win",
                    w: "dragon-tiger-tie-gate-win",
                    vip: "dragon-tiger-tie-gate-vip-hover",
                    xu: "dragon-tiger-tie-gate-xu-hover"
                }, {
                    id: 4,
                    x: -251,
                    y: -105,
                    wX: -313,
                    wY: -75,
                    wS: 1,
                    t: "even-dragon",
                    w: "dragon-tiger-small-gate-dragon-win",
                    vip: "dragon-tiger-small-gate-vip-hover",
                    xu: "dragon-tiger-small-gate-xu-hover"
                }, {
                    id: 5,
                    x: -251,
                    y: -2,
                    wX: -313,
                    wY: 27,
                    wS: 1,
                    t: "odd-dragon",
                    w: "dragon-tiger-small-gate-dragon-win",
                    vip: "dragon-tiger-small-gate-vip-hover",
                    xu: "dragon-tiger-small-gate-xu-hover"
                }, {
                    id: 6,
                    x: 250,
                    y: -105,
                    wX: 188,
                    wY: 27,
                    wS: 1,
                    t: "even-tiger",
                    w: "dragon-tiger-small-gate-tiger-win",
                    vip: "dragon-tiger-small-gate-vip-hover",
                    xu: "dragon-tiger-small-gate-xu-hover"
                }, {
                    id: 7,
                    x: 250,
                    y: -2,
                    wX: 188,
                    wY: 27,
                    wS: 1,
                    t: "odd-tiger",
                    w: "dragon-tiger-small-gate-tiger-win",
                    vip: "dragon-tiger-small-gate-vip-hover",
                    xu: "dragon-tiger-small-gate-xu-hover"
                }],
                this.moneyPos = [{
                    x: -170,
                    y: -85
                }, {
                    x: 10,
                    y: -85
                }, {
                    x: -170,
                    y: -142
                }, {
                    x: -315,
                    y: -142
                }, {
                    x: -315,
                    y: -40
                }, {
                    x: 187,
                    y: -142
                }, {
                    x: 187,
                    y: -40
                }],
                this.chipPos = [[{
                    x: -60,
                    y: -64
                }, {
                    x: 120,
                    y: -64
                }, {
                    x: 120,
                    y: -137
                }, {
                    x: -220,
                    y: -132
                }, {
                    x: -220,
                    y: -27
                }, {
                    x: 280,
                    y: -132
                }, {
                    x: 280,
                    y: -27
                }], [{
                    x: -120,
                    y: -14
                }, {
                    x: 60,
                    y: -14
                }, {
                    x: -120,
                    y: -120
                }, {
                    x: -295,
                    y: -110
                }, {
                    x: -295,
                    y: -10
                }, {
                    x: 205,
                    y: -110
                }, {
                    x: 205,
                    y: -10
                }], [{
                    x: -130,
                    y: 14
                }, {
                    x: 50,
                    y: 14
                }, {
                    x: -85,
                    y: -135
                }, {
                    x: -285,
                    y: -100
                }, {
                    x: -285,
                    y: -0
                }, {
                    x: 215,
                    y: -100
                }, {
                    x: 215,
                    y: -0
                }], [{
                    x: -120,
                    y: 42
                }, {
                    x: 60,
                    y: 42
                }, {
                    x: -50,
                    y: -120
                }, {
                    x: -275,
                    y: -110
                }, {
                    x: -275,
                    y: -10
                }, {
                    x: 225,
                    y: -110
                }, {
                    x: 225,
                    y: -10
                }], [{
                    x: -60,
                    y: 42
                }, {
                    x: 120,
                    y: 32
                }, {
                    x: -15,
                    y: -135
                }, {
                    x: -235,
                    y: -80
                }, {
                    x: -235,
                    y: 20
                }, {
                    x: 265,
                    y: -80
                }, {
                    x: 265,
                    y: 20
                }], [{
                    x: -50,
                    y: 12
                }, {
                    x: 130,
                    y: 4
                }, {
                    x: 20,
                    y: -120
                }, {
                    x: -225,
                    y: -75
                }, {
                    x: -225,
                    y: 25
                }, {
                    x: 275,
                    y: -75
                }, {
                    x: 275,
                    y: 25
                }], [{
                    x: -90,
                    y: 16
                }, {
                    x: 90,
                    y: 10
                }, {
                    x: 55,
                    y: -135
                }, {
                    x: -215,
                    y: -80
                }, {
                    x: -215,
                    y: 20
                }, {
                    x: 285,
                    y: -80
                }, {
                    x: 285,
                    y: 20
                }]],
                this.cardsPos = [{
                    x: -140,
                    y: -197
                }, {
                    x: 140,
                    y: -197
                }],
                this.moneyPosOwner = [{
                    x: -60,
                    y: -42
                }, {
                    x: 120,
                    y: -42
                }, {
                    x: 120,
                    y: -115
                }, {
                    x: -220,
                    y: -110
                }, {
                    x: -220,
                    y: -5
                }, {
                    x: 280,
                    y: -110
                }, {
                    x: 280,
                    y: -5
                }],
                this.moneyTotal = [0, 0, 0, 0, 0, 0, 0],
                this.moneyOwner = [0, 0, 0, 0, 0, 0, 0],
                this.lastCurrentBet = [0, 0, 0, 0, 0, 0, 0],
                this.indexTip = 0,
                this.moneyText = ["XU", "GAM"],
                this.arrBetPos = [{
                    x: 50,
                    y: 30,
                    s: .7
                }, {
                    x: 130,
                    y: 30,
                    s: .7
                }, {
                    x: 210,
                    y: 30,
                    s: .7
                }, {
                    x: 290,
                    y: 30,
                    s: .7
                }, {
                    x: 370,
                    y: 30,
                    s: .7
                }],
                this.arrGate = [],
                this.FlipCard = function(t) {
                    var e = this;
                    if (t)
                        try {
                            TweenMax.to(t.scale, .3, {
                                data: "dragontiger",
                                x: .01,
                                onComplete: function() {
                                    t.texture = TextureCache[e.cardsMap[t.OrdinalValue]];
                                    try {
                                        TweenMax.to(t.scale, .3, {
                                            data: "dragontiger",
                                            x: .7
                                        })
                                    } catch (t) {}
                                }
                            })
                        } catch (t) {}
                }
                ,
                this.showNumber = !0,
                this.auto = !1,
                this.CaculHistory = function(t) {
                    var e = this;
                    if (!(null == t || t.length <= 0)) {
                        var i = []
                          , n = 0
                          , s = p = t[0]
                          , a = 0;
                        $.each(t, function(t) {
                            0 < parseInt(t) && e.Winner != s.Winner && 3 != e.Winner && e.Winner != p.Winner && (n++,
                            p = e),
                            s = e,
                            null != i[n] ? i[n].len++ : i[n] = {
                                index: t,
                                val: e,
                                fird: p,
                                last: s,
                                len: 1
                            }
                        });
                        for (var o = [], r = a = 28 < n ? n - 28 : 0; r < n + 1; r++)
                            o.push({
                                index: i[r].index,
                                len: i[r].len
                            });
                        for (r = n; a < r; r--)
                            if (i[r].len >= 28 - r + 6) {
                                a = r;
                                break
                            }
                        var l = o[0].index
                          , p = t[l]
                          , h = 0
                          , d = 0
                          , c = [];
                        for (r = 0; r < o.length; r++) {
                            d = r;
                            for (var u = 0; u < o[r].len; u++) {
                                var g = "";
                                (f = t[l]).Winner == p.Winner && 3 == f.Winner ? g = "banker tie" : (g = 1 == p.Winner ? "dragon" : "tiger",
                                3 == f.Winner && (g += " tie")),
                                c.push(f);
                                var y = 3 == f.Winner ? "<i></i>" : null == this.showNumber || 1 == this.showNumber ? f.Number : f.Text;
                                $("#r" + d + "_" + h).html(y),
                                $("#r" + d + "_" + h).addClass(g),
                                l++,
                                5 <= h ? d++ : h++
                            }
                            p = t[l],
                            h = 0
                        }
                        var m = !1
                          , f = 0;
                        for (r = 0; r < 15; r++) {
                            for (u = 0; u < 6; u++) {
                                if (f >= c.length) {
                                    m = !0;
                                    break
                                }
                                var b = c[f]
                                  , v = 2 == b.Winner ? "tiger" : "";
                                3 == b.Winner && (v = "tie"),
                                1 == b.Winner && (v = "dragon"),
                                $("#l" + r + "_" + u).addClass(v),
                                f++
                            }
                            if (m)
                                break
                        }
                        var _ = c.filter(function(t) {
                            return 1 == parseInt(t.Winner)
                        })
                          , C = c.filter(function(t) {
                            return 2 == parseInt(t.Winner)
                        })
                          , x = c.filter(function(t) {
                            return 3 == parseInt(t.Winner)
                        })
                          , B = t.filter(function(t) {
                            return t.Dragon % 2 == 0
                        })
                          , w = t.filter(function(t) {
                            return t.Dragon % 2 == 1 && 7 != t.Dragon
                        })
                          , M = t.filter(function(t) {
                            return t.Tiger % 2 == 0
                        })
                          , T = t.filter(function(t) {
                            return t.Tiger % 2 == 1 && 7 != t.Dragon
                        });
                        $("#dragon").text(_.length),
                        $("#tiger").text(C.length),
                        $("#tie").text(x.length),
                        $("#dragoneven").text(B.length),
                        $("#dragonodd").text(w.length),
                        $("#tigereven").text(M.length),
                        $("#tigerodd").text(T.length)
                    }
                }
                ,
                this.size = t.size,
                this.target = t.target,
                this.token = t.token,
                this.loader = new n.default,
                this.currencyId = t.currencyID,
                this.lang = Message.GetLanguageCode(),
                this.ready = !1
            }
            return t.prototype.Load = function(t) {
                var e = this;
                e.loader.load(function() {
                    return e.Loading(e)
                }, function() {
                    e.isLoad = !0,
                    $("#divLoading").hide(),
                    e.InitHub(t)
                })
            }
            ,
            t.prototype.Loading = function(t) {
                $("#divLoading").show(),
                $("#loading-progress span").css("width", t.loader.loader.progress + "%"),
                $("#loading-progress-txt").html(t.loader.loader.progress + "%")
            }
            ,
            t.prototype.InitHub = function(t) {
                this.hub = new s.default(dragonTigerUrl + "hub",this.token,this),
                this.hub.Connect(this.currencyId, t)
            }
            ,
            t.prototype.Join = function(t, e) {
                this.hub.EnterRoom(t, e)
            }
            ,
            t.prototype.EnterRoom = function(t) {
                this.roomModel = t,
                this.ready || this.Init(),
                this.GetCurrentPlayer(),
                this.RenderPlayers(this.roomModel.Players),
                this.DisableButtons(),
                this.DisableGates(),
                this.boxBet.visible = !1
            }
            ,
            t.prototype.GetCurrentPlayer = function() {
                if (this.roomModel && this.roomModel.Players)
                    for (var t = 0; t < this.roomModel.Players.length; t++)
                        if (this.roomModel.Players[t].AccountId === App.account.accountID + ":" + App.account.portalID) {
                            this.currentPlayer = this.roomModel.Players[t];
                            break
                        }
            }
            ,
            t.prototype.GetPlayerByAccountId = function(t) {
                for (var e, i = 0; i < this.players.length; i++)
                    if (this.players[i] && this.players[i].accountId === t) {
                        e = this.players[i];
                        break
                    }
                return e
            }
            ,
            t.prototype.GetPlayerByPosition = function(t) {
                for (var e, i = 0; i < this.players.length; i++)
                    if (this.players[i] && this.players[i].pos === t) {
                        e = this.players[i];
                        break
                    }
                return e
            }
            ,
            t.prototype.RenderPlayers = function(t) {
                for (var e = 0; e < this.players.length; e++) {
                    if (this.players[e])
                        try {
                            this.players[e].destroy({
                                children: !0
                            })
                        } catch (t) {}
                    this.players[e] = null
                }
                for (var e in this.players = [null, null, null, null, null, null, null],
                t)
                    this.RenderPlayer(t[e])
            }
            ,
            t.prototype.PlayerJoin = function(t) {
                console.log("playerJoin", t),
                this.RenderPlayer(t)
            }
            ,
            t.prototype.PlayerLeave = function(t) {
                for (var e = 0; e < t.length; e++)
                    if (t[e].id === this.currentPlayer.AccountId)
                        t[e].reason && App.showPopupMessage({
                            content: Message.GetMessage("ca" + t[e].reason),
                            textDone: "OK"
                        }),
                        this.Delete(),
                        App.handleBack();
                    else {
                        var i = this.GetPlayerByAccountId(t[e].id);
                        if (i) {
                            var n = i.pos;
                            i.destroy({
                                children: !0
                            }),
                            delete this.players[n],
                            this.players[n] = null
                        }
                    }
            }
            ,
            t.prototype.PlayerOtherDevice = function() {
                App.showPopupMessage({
                    content: Message.GetMessage("ca-20024"),
                    textDone: "OK"
                }),
                this.Delete(),
                App.exitGame()
            }
            ,
            t.prototype.RegisterLeave = function(t) {
                var e = t.id ? t.id : t.Id
                  , i = t.status ? t.status : t.Status
                  , n = this.GetPlayerByAccountId(e);
                n && (n.leaveStatus.visible = i),
                e === this.currentPlayer.AccountId && this.ShowStatus(Message.GetMessage(i ? "me8" : "me9"))
            }
            ,
            t.prototype.UpdateConnection = function(t) {
                try {
                    var e = t.id ? t.id : t.Id
                      , i = t.status ? t.status : t.Status
                      , n = this.GetPlayerByAccountId(e);
                    n && (n.disStatus.visible = i)
                } catch (t) {}
            }
            ,
            t.prototype.RenderPlayer = function(t) {
                var e = t.Position - this.currentPlayer.Position;
                e < 0 && (e += this.roomModel.MaxPlayer),
                null !== this.players[e] && this.players[e],
                this.players[e] = new a.default({
                    position: e,
                    player: t,
                    xy: this.playerPos[e],
                    w: 90,
                    h: 90,
                    b: 60,
                    game: this
                }),
                this.playerContainer.addChild(this.players[e]);
                var i = t.RegLeave;
                this.players[e].leaveStatus.visible = i
            }
            ,
            t.prototype.EnterGame = function(t) {
                this.JoinGame(t),
                this.GetHistory(),
                t.r.Session
            }
            ,
            t.prototype.JoinGame = function(t) {
                if (console.log("JoinGame", t),
                t) {
                    if (t.c < 0)
                        return App.showPopupMessage({
                            content: Message.GetMessage("ca" + t.c),
                            textDone: "ok"
                        }),
                        this.Delete(),
                        void App.handleBack();
                    if (this.roomModel = t.r,
                    App.joinGame({
                        value: this.roomModel.Value,
                        type: this.roomModel.Currency
                    }),
                    o.Util.ClearTimeOut(this.timerOut),
                    this.ready || this.EnterRoom(this.roomModel),
                    t.r.Session) {
                        if (this.UpdateGameLoopId(),
                        this.UpdateDeck(),
                        0 === t.r.Session.Phrase)
                            return this.ResetGame(),
                            void this.DisableButtons();
                        if (1 === t.r.Session.Phrase)
                            return this.ResetGame(),
                            this.DisableButtons(),
                            this.StartBet(),
                            void (this.roomModel.Session.Timeout < 15 && this.CheckBet());
                        if (2 === t.r.Session.Phrase)
                            return o.Util.ClearTimeOut(this.timerTip),
                            this.ShowBoxTip(Message.GetMessage("ca110")),
                            this.timer.ClearTimer(),
                            this.DisableButtons(),
                            this.DisableGates(),
                            this.HideReady(),
                            this.roomModel.Session.Timeout < 5 && this.CheckBet(),
                            void (this.roomModel.Session.Timeout < 3 ? this.ShowCards() : this.Dealing());
                        if (3 === t.r.Session.Phrase) {
                            if (this.GetHistory(),
                            o.Util.ClearTimeOut(this.timerTip),
                            this.ShowBoxTip(Message.GetMessage("me18")),
                            this.timer.ClearTimer(),
                            this.HideReady(),
                            this.roomModel.Session.Timeout < 3)
                                return;
                            return this.roomModel.Session.Timeout < 6 && (this.CheckBet(),
                            this.ShowCards()),
                            void this.ProcessResult()
                        }
                    }
                }
            }
            ,
            t.prototype.Init = function() {
                o.Util.CheckCss("/assets/css/dragontiger.css") || o.Util.LoadCss("/assets/css/dragontiger.css"),
                this.InitHistory(),
                PIXI.utils.skipHello();
                var t = window.innerWidth < 1360 ? 1360 : window.innerWidth
                  , e = window.innerHeight < 720 ? 720 : window.innerHeight;
                this.size = [t, e],
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    transparent: !0,
                    resolution: 1,
                    autoResize: !0
                }),
                document.getElementById(this.target).appendChild(this.application.renderer.view),
                this.moneyTotal = [0, 0, 0, 0, 0, 0, 0],
                this.lastCurrentBet = [0, 0, 0, 0, 0, 0, 0],
                this.InitContainer(),
                this.InitFrames(),
                this.InitMachine(),
                this.InitTableInfo(),
                this.InitGate(),
                this.InitButton(),
                this.InitBet(),
                this.InitTip(),
                this.InitMoney(),
                this.Resize(this);
                var i = this;
                this.application.ticker.add(function() {
                    return i.Update(i)
                }),
                this.ready = !0,
                this.resizeFunc = function() {
                    return i.Resize(i)
                }
                ,
                window.addEventListener("resize", this.resizeFunc),
                this.ResetTab()
            }
            ,
            t.prototype.Resize = function(t) {
                if (t.size = [$(window).width(), $(window).height()],
                t.application.renderer.resize($(window).width(), $(window).height()),
                t.size[0] < 1360 || t.size[1] < 720) {
                    var e = Math.min(t.size[0] / 1360, t.size[1] / 720);
                    t.mainContainer.scale.set(e)
                } else
                    t.mainContainer.scale.set(1);
                t.mainContainer.anchor.set(.5),
                t.mainContainer.position.set(t.size[0] / 2, t.size[1] / 2 + 20)
            }
            ,
            t.prototype.ResetTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            t.prototype.Update = function(t) {
                t.timer && t.timer.Tick()
            }
            ,
            t.prototype.InitContainer = function() {
                this.playerContainer = new Container,
                this.gateContainer = new Container,
                this.chipContainer = new Container,
                this.resultContainer = new Container,
                this.moneyContainer = new Container,
                this.betContainer = new Container,
                this.cardContainer = new Container
            }
            ,
            t.prototype.InitFrames = function() {
                var t;
                for (this.framesDealerChiaBai = [],
                this.framesDealerClick = [],
                this.framesDealerPlay = [],
                this.framesDealerNormal = [],
                this.framesFireWork = [],
                t = 1; t < 31; t++)
                    this.framesFireWork.push(TextureCache["fire-work-" + t + ".png"]);
                for (t = 1; t < 15; t++)
                    this.framesDealerChiaBai.push(TextureCache["dealer-chia-bai-" + t + ".png"]);
                for (t = 1; t < 25; t++)
                    this.framesDealerClick.push(TextureCache["dealer-rung-nguc-" + t + ".png"]),
                    this.framesDealerPlay.push(TextureCache["dealer-moi-choi-" + t + ".png"]);
                for (t = 1; t < 49; t++)
                    this.framesDealerNormal.push(TextureCache["dealer-normal-" + t + ".png"])
            }
            ,
            t.prototype.GetTexture = function(t) {
                return void 0 !== TextureCache[this.gameName + t + "-" + this.lang] ? TextureCache[this.gameName + t + "-" + this.lang] : void 0 !== TextureCache[this.gameName + t + "-" + this.defaultLang] ? TextureCache[this.gameName + t + "-" + this.defaultLang] : TextureCache[this.gameName + t]
            }
            ,
            t.prototype.InitMachine = function() {
                this.mainContainer = new Sprite(this.GetTexture("table-" + this.roomModel.Currency)),
                this.mainContainer.anchor.set(.5),
                this.mainContainer.position.set(this.size[0] / 2, this.size[1] / 2),
                this.application.stage.addChild(this.mainContainer),
                this.dealer = new AnimatedSprite(this.framesDealerNormal),
                this.dealer.anchor.set(.5),
                this.dealer.position.set(0, -283),
                this.dealer.animationSpeed = .2,
                this.dealer.interactive = !0,
                this.dealer.buttonMode = !0,
                this.dealer.on("pointerdown", this.DealerDown.bind(this.dealer, this)),
                this.dealer.play();
                var t = new Sprite(this.GetTexture("ban-" + this.roomModel.Currency));
                t.anchor.set(.5),
                t.position.set(0, -35);
                var e = new Sprite(this.GetTexture("machine"));
                e.anchor.set(.5),
                e.scale.set(.8),
                e.position.set(324, -220),
                this.txtNumbCards = new PIXI.Text("100",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 14,
                    fill: ["yellow", "white"]
                }),
                this.txtNumbCards.anchor.set(.5),
                this.txtNumbCards.rotation = 19.8,
                this.txtNumbCards.position.set(319, -218),
                this.mainContainer.addChild(t, this.dealer, e, this.txtNumbCards),
                this.txtStatus = new Sprite(TextureCache["small-bg-notify"]),
                this.txtStatus.anchor.set(.5),
                this.txtStatus.position.set(0, 68),
                this.txtStatus.addChild(new PIXI.Text("thông báo",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 12,
                    fill: "white"
                })),
                this.txtStatus.children[0].anchor.set(.5),
                this.txtStatus.visible = !1;
                for (var i = 0; i < this.playerPos.length; i++) {
                    var n = new Sprite(TextureCache["ic-ad-user"]);
                    n.anchor.set(.5),
                    n.position.set(this.playerPos[i][0], this.playerPos[i][1]),
                    this.mainContainer.addChild(n)
                }
                this.timer = new o.TimerC({
                    radius: 35,
                    bg: "time-green",
                    cir: "time-black",
                    fontSize: 26
                }),
                this.timer.position.set(0, -193),
                this.mainContainer.addChild(this.timer),
                this.mainContainer.addChild(this.txtStatus, this.playerContainer, this.chipContainer, this.cardContainer, this.betContainer, this.moneyContainer, this.gateContainer, this.resultContainer)
            }
            ,
            t.prototype.DealerChia = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerChiaBai,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            t.prototype.DealerDown = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerClick,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            t.prototype.DealerNormal = function() {
                var t = this.dealer;
                t.stop(),
                t.interactive = !0,
                t.buttonMode = !0,
                t.loop = !0,
                t.textures = this.framesDealerNormal,
                t.gotoAndPlay(0)
            }
            ,
            t.prototype.InitTip = function() {
                this.tipArr = [],
                this.tipArr.push(Message.GetMessage("ca150") + " {0} " + Message.GetMessage("ca151")),
                this.tipArr.push(Message.GetMessage("ca161")),
                this.tipArr.push(Message.GetMessage("ca162"))
            }
            ,
            t.prototype.InitTableInfo = function() {
                this.infoContainer = new Container,
                this.mainContainer.addChild(this.infoContainer);
                var t = this.roomModel;
                this.btnBack = new Sprite(TextureCache["btn-def"]),
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(-460, -this.size[1] / 2 + 25),
                this.btnBack.addChild(new Sprite(TextureCache["ic-back"])),
                this.btnBack.children[0].anchor.set(.5),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.BtnBackOver).on("pointerout", this.BtnBackOut).on("pointerdown", this.BtnBackDown.bind(this.btnBack, this));
                var e = new PIXI.Text(Message.GetMessage(0 === t.Currency ? "tb113" : "tb112") + ": " + o.Util.NumberToString(t.Id, 3),{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                e.anchor.set(0, .5),
                e.position.set(-420, -this.size[1] / 2 + 5);
                var i = new PIXI.Text(Message.GetMessage("ca81").toUpperCase() + o.Util.ParseMoney(t.Value) + " " + Config.MoneyText[t.Currency],{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                i.anchor.set(0, .5),
                i.position.set(-420, -this.size[1] / 2 + 25),
                this.lblSession = new PIXI.Text(Message.GetMessage("ca95").toUpperCase() + " #",{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                }),
                this.lblSession.anchor.set(0, .5),
                this.lblSession.position.set(-420, -this.size[1] / 2 + 45),
                this.infoContainer.addChild(this.btnBack, e, i, this.lblSession)
            }
            ,
            t.prototype.BtnBackOver = function() {
                this.texture = TextureCache["btn-def-h"]
            }
            ,
            t.prototype.BtnBackOut = function() {
                this.texture = TextureCache["btn-def"]
            }
            ,
            t.prototype.BtnBackDown = function(e) {
                e.hub.connection.invoke("ExitRoom").then(function(t) {
                    0 === t.c ? (e.Delete(),
                    App.handleBack()) : e.RegisterLeave(t.r)
                })
            }
            ,
            t.prototype.InitButton = function() {
                this.buttonContainer = new Container,
                this.mainContainer.addChild(this.buttonContainer),
                this.btnReady = new Sprite(TextureCache["btn-game-normal"]),
                this.btnReady.name = "btn-game-normal",
                this.btnReady.anchor.set(.5),
                this.btnReady.position.set(580, 290),
                this.btnReady.addChild(new PIXI.Text(Message.GetMessage("ca153").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnReady.getChildAt(0).anchor.set(.5),
                this.btnReady.getChildAt(0).position.set(0, 0),
                this.btnReady.interactive = !0,
                this.btnReady.buttonMode = !0,
                this.btnReady.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnReadyClick.bind(this.btnReady, this)),
                this.btnX2 = new Sprite(TextureCache["btn-game-normal"]),
                this.btnX2.name = "btn-game-normal",
                this.btnX2.anchor.set(.5),
                this.btnX2.position.set(440, 290),
                this.btnX2.addChild(new PIXI.Text(Message.GetMessage("ca99").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnX2.getChildAt(0).anchor.set(.5),
                this.btnX2.getChildAt(0).position.set(0, 0),
                this.btnX2.interactive = !0,
                this.btnX2.buttonMode = !0,
                this.btnX2.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnX2Click.bind(this.btnX2, this)),
                this.btnReBet = new Sprite(TextureCache["btn-game-normal"]),
                this.btnReBet.name = "btn-game-normal",
                this.btnReBet.anchor.set(.5),
                this.btnReBet.position.set(300, 290),
                this.btnReBet.addChild(new PIXI.Text(Message.GetMessage("ca98").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnReBet.getChildAt(0).anchor.set(.5),
                this.btnReBet.getChildAt(0).position.set(0, 0),
                this.btnReBet.interactive = !0,
                this.btnReBet.buttonMode = !0,
                this.btnReBet.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnReBetClick.bind(this.btnReBet, this)),
                this.btnCancel = new Sprite(TextureCache["btn-game-normal"]),
                this.btnCancel.name = "btn-game-normal",
                this.btnCancel.anchor.set(.5),
                this.btnCancel.position.set(160, 290),
                this.btnCancel.addChild(new PIXI.Text(Message.GetMessage("ca154").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnCancel.getChildAt(0).anchor.set(.5),
                this.btnCancel.getChildAt(0).position.set(0, 0),
                this.btnCancel.interactive = !0,
                this.btnCancel.buttonMode = !0,
                this.btnCancel.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnCancelClick.bind(this.btnCancel, this)),
                this.buttonContainer.addChild(this.btnReady, this.btnX2, this.btnReBet, this.btnCancel)
            }
            ,
            t.prototype.DisableButton = function(t) {
                t.interactive = !1,
                t.buttonMode = !1,
                t.texture = TextureCache[t.name.replace("normal", "disable")]
            }
            ,
            t.prototype.EnableButton = function(t) {
                t.interactive = !0,
                t.buttonMode = !0,
                t.texture = TextureCache[t.name],
                t.visible = !0
            }
            ,
            t.prototype.DisableButtons = function() {
                this.DisableButton(this.btnReady),
                this.DisableButton(this.btnReBet),
                this.DisableButton(this.btnX2),
                this.DisableButton(this.btnCancel)
            }
            ,
            t.prototype.DisableGates = function() {
                for (var t = 0; t < this.arrGate.length; t++)
                    this.arrGate[t].interactive = !1,
                    this.arrGate[t].buttonMode = !1,
                    this.arrGate[t].alpha = 0
            }
            ,
            t.prototype.EnableGates = function() {
                for (var t = 0; t < this.arrGate.length; t++)
                    this.arrGate[t].interactive = !0,
                    this.arrGate[t].buttonMode = !0
            }
            ,
            t.prototype.BtnHover = function() {
                this.texture = TextureCache[this.name.replace("normal", "hover")]
            }
            ,
            t.prototype.BtnOut = function() {
                this.texture = TextureCache[this.name]
            }
            ,
            t.prototype.BtnDown = function() {
                this.texture = TextureCache[this.name.replace("normal", "click")]
            }
            ,
            t.prototype.BtnReadyClick = function(e) {
                e.hub.connection.invoke("FinishBetting").then(function(t) {
                    0 <= t.c && e.ConfirmBet(t.r)
                })
            }
            ,
            t.prototype.BtnX2Click = function(e) {
                e.DisableButton(e.btnX2),
                e.DisableButton(e.btnReBet);
                for (var t = function(t) {
                    0 < e.lastCurrentBet[t] && setTimeout(function() {
                        e.hub.connection.invoke("Bet", 2 * e.lastCurrentBet[t], t + 1).then(function(t) {
                            0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                        })
                    }, 100 * t)
                }, i = 0; i < e.lastCurrentBet.length; i++)
                    t(i)
            }
            ,
            t.prototype.BtnCancelClick = function(e) {
                e.hub.connection.invoke("ClearBetting").then(function(t) {
                    console.log("ClearBetting", t),
                    0 <= t.c && e.ClearBet(t.r)
                })
            }
            ,
            t.prototype.BtnReBetClick = function(e) {
                e.DisableButton(e.btnX2),
                e.DisableButton(e.btnReBet);
                for (var t = function(t) {
                    0 < e.lastCurrentBet[t] && setTimeout(function() {
                        e.hub.connection.invoke("Bet", e.lastCurrentBet[t], t + 1).then(function(t) {
                            0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                        })
                    }, 100 * t)
                }, i = 0; i < e.lastCurrentBet.length; i++)
                    t(i)
            }
            ,
            t.prototype.InitBet = function() {
                this.boxBet = new Graphics,
                this.boxBet.beginFill(0),
                this.boxBet.drawRoundedRect(0, 0, 416, 72, 36),
                this.boxBet.position.set(-500, 251),
                this.buttonContainer.addChild(this.boxBet),
                this.arrBetChip = [],
                this.arrBetText = [];
                for (var t = this.chipConfig[this.roomModel.Currency][this.roomModel.Value], e = 0; e < t.length; e++) {
                    var i = new Sprite(TextureCache[t[e].img]);
                    i.anchor.set(.5),
                    i.position.set(this.arrBetPos[e].x, this.arrBetPos[e].y),
                    i.scale.set(this.arrBetPos[e].s),
                    i.value = t[e].value,
                    i.posY = this.arrBetPos[e].y,
                    i.active = !1,
                    i.i = e,
                    i.interactive = !0,
                    i.buttonMode = !0,
                    i.on("pointerover", this.ChipOver).on("pointerout", this.ChipOut).on("pointerdown", this.ChipDown.bind(i, this));
                    var n = new PIXI.Text(t[e].number,{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: ["white"],
                        padding: 10,
                        align: "center"
                    });
                    n.anchor.set(.5),
                    n.position.set(this.arrBetPos[e].x, this.arrBetPos[e].y + 30),
                    this.boxBet.addChild(i, n),
                    this.arrBetChip.push(i),
                    this.arrBetText.push(n)
                }
                this.SetActiveBet(this, this.arrBetChip[0])
            }
            ,
            t.prototype.ChipOver = function() {
                this.y = this.posY - 5
            }
            ,
            t.prototype.ChipOut = function() {
                this.active || (this.y = this.posY)
            }
            ,
            t.prototype.ChipDown = function(t) {
                t.ResetBet(t),
                t.SetActiveBet(t, this)
            }
            ,
            t.prototype.ResetBet = function(t) {
                for (var e = 0; e < t.arrBetChip.length; e++)
                    t.arrBetChip[e].y = t.arrBetChip[e].posY,
                    t.arrBetChip[e].active = !1,
                    t.arrBetText[e].style.fill = "white"
            }
            ,
            t.prototype.SetActiveBet = function(t, e) {
                e.active = !0,
                e.y = e.posY - 5,
                t.arrBetText[e.i].style.fill = "yellow",
                t.betValue = e.value
            }
            ,
            t.prototype.InitMoney = function() {
                this.gateMoneyTotal = [];
                for (var t = 0; t < 7; t++) {
                    (e = new PIXI.Text("0",{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: "orange"
                    })).anchor.set(0, .5),
                    e.visible = !1,
                    e.position.set(this.moneyPos[t].x, this.moneyPos[t].y),
                    this.moneyContainer.addChild(e),
                    this.gateMoneyTotal.push(e)
                }
                this.gateMoneyOwner = [];
                for (t = 0; t < 7; t++) {
                    var e;
                    (e = new PIXI.Text("0",{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: "yellow"
                    })).anchor.set(.5),
                    e.visible = !1,
                    e.position.set(this.moneyPosOwner[t].x, this.moneyPosOwner[t].y),
                    this.moneyContainer.addChild(e),
                    this.gateMoneyOwner.push(e)
                }
            }
            ,
            t.prototype.InitGate = function() {
                this.arrGate = [];
                for (var t = 0; t < this.gateOptions.length; t++) {
                    var e = new Sprite(TextureCache[1 === this.currencyId ? this.gateOptions[t].vip : this.gateOptions[t].xu]);
                    e.alpha = 0,
                    e.anchor.set(.5),
                    e.position.set(this.gateOptions[t].x, this.gateOptions[t].y),
                    e.id = this.gateOptions[t].id,
                    e.interactive = !0,
                    e.buttonMode = !0,
                    e.on("pointerover", this.GateOver).on("pointerout", this.GateOut).on("pointerdown", this.GateDown.bind(e, this)),
                    this.gateContainer.addChild(e),
                    this.arrGate.push(e)
                }
            }
            ,
            t.prototype.GateOver = function() {
                this.alpha = 1
            }
            ,
            t.prototype.GateOut = function() {
                this.alpha = 0
            }
            ,
            t.prototype.GateDown = function(e) {
                e.hub.connection.invoke("Bet", e.betValue, this.id).then(function(t) {
                    0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                })
            }
            ,
            t.prototype.ShowError = function(t) {
                this.ShowStatus(Message.GetMessage("ca" + t + (-11e3 === t ? "1" : "")), 2e3)
            }
            ,
            t.prototype.HideReady = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && (this.players[t].icReady.visible = !1)
            }
            ,
            t.prototype.ShowStatus = function(t, e) {
                var i = this;
                this.txtStatus.scale.set(.01),
                this.txtStatus.visible = !0,
                this.txtStatus.children[0].text = t,
                TweenMax.to(this.txtStatus.scale, .4, {
                    data: "xocdia",
                    x: 1,
                    y: 1
                });
                var n = this;
                this.timerStatus = setTimeout(function() {
                    TweenMax.to(i.txtStatus.scale, .2, {
                        data: "xocdia",
                        x: .01,
                        y: .01
                    }),
                    n.timerStatus = setTimeout(function() {
                        n.txtStatus.visible = !1
                    }, 300)
                }, e || 2e3)
            }
            ,
            t.prototype.UpdateGameLoopId = function() {
                this.lblSession.text = Message.GetMessage("ca95").toUpperCase() + (this.roomModel.SessionId <= 0 ? " #" : this.roomModel.SessionId)
            }
            ,
            t.prototype.UpdateDeck = function() {
                this.txtNumbCards.text = this.roomModel.Deck
            }
            ,
            t.prototype.ShowBoxTip = function(t) {
                this.boxTip && this.boxTip.destroy({
                    children: !0
                });
                var e = new PIXI.Text(t,{
                    fontFamily: this.fontFace,
                    fontSize: 14,
                    fill: "white"
                });
                this.boxTip = new Graphics,
                this.boxTip.beginFill(0, .5),
                this.boxTip.drawRoundedRect(0, 0, e.width + 10, e.height + 10, e.height / 2),
                this.boxTip.addChild(e),
                e.position.set(5, 5),
                this.boxTip.position.set(80, -340),
                this.mainContainer.addChild(this.boxTip)
            }
            ,
            t.prototype.ShowTipDealer = function(t) {
                if (o.Util.ClearTimeOut(t.timerTip),
                t.ready) {
                    t.indexTip++,
                    2 < t.indexTip && (t.indexTip = 0);
                    var e = t.tipArr[t.indexTip].replace("{0}", o.Util.ParseMoney(t.roomModel.Value * (0 === t.indexTip ? 1 : 1 === t.indexTip ? 100 : 20)));
                    t.ShowBoxTip(e),
                    t.timerTip = setTimeout(function() {
                        return t.ShowTipDealer(t)
                    }, 5e3)
                }
            }
            ,
            t.prototype.DeleteTween = function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "dragontiger" === t[e].data && t[e].kill()
            }
            ,
            t.prototype.ResetContainer = function() {
                for (; 0 < this.resultContainer.children.length; )
                    try {
                        this.resultContainer.children[0].destroy({
                            children: !0
                        })
                    } catch (t) {}
                for (; 0 < this.betContainer.children.length; )
                    try {
                        this.betContainer.children[0].destroy({
                            children: !0
                        })
                    } catch (t) {}
                for (; 0 < this.chipContainer.children.length; )
                    try {
                        this.chipContainer.children[0].destroy({
                            children: !0
                        })
                    } catch (t) {}
                for (; 0 < this.cardContainer.children.length; )
                    try {
                        this.cardContainer.children[0].destroy({
                            children: !0
                        })
                    } catch (t) {}
            }
            ,
            t.prototype.ResetGame = function() {
                o.Util.ClearTimeOut(this.timerTip),
                o.Util.ClearTimeOut(this.timerOut);
                var t = this.GetPlayerByAccountId(this.currentPlayer.AccountId);
                t && (this.lastCurrentBet = t.moneyBet.slice(0)),
                this.moneyTotal = [0, 0, 0, 0, 0, 0, 0],
                $(".show-statistic-game").removeClass("active"),
                this.DeleteTween(),
                this.HideReady(),
                this.ResetContainer(),
                this.ResetMoneyBet(),
                this.dragonCard = null,
                this.tigercard = null;
                for (var e = 0; e < this.players.length; e++)
                    this.players[e] && this.players[e].Reset()
            }
            ,
            t.prototype.CheckBet = function() {
                if (this.roomModel.Session) {
                    var t = this.roomModel.Session.BetLogs;
                    if (console.log("betLogs", t),
                    t && 0 < t.length) {
                        for (var e = 0; e < t.length; e++)
                            t[e].id = t[e].AccountId,
                            this.Bet(t[e]);
                        for (e = 0; e < t.length; e++)
                            if (t[e].AccountId === this.currentPlayer.AccountId && 1 === this.roomModel.Session.Phrase) {
                                this.EnableButton(this.btnCancel),
                                this.EnableButton(this.btnReady);
                                break
                            }
                    }
                }
            }
            ,
            t.prototype.StartBet = function() {
                this.timer.StartTimer(16, this.roomModel.Session.Timeout),
                this.indexTip = 0,
                this.ShowTipDealer(this),
                this.EnableGates(),
                this.boxBet.visible = !0;
                for (var t = 0; t < this.lastCurrentBet.length; t++)
                    0 < this.lastCurrentBet[t] && (this.EnableButton(this.btnReBet),
                    this.EnableButton(this.btnX2))
            }
            ,
            t.prototype.ConfirmBet = function(t) {
                var e = this.GetPlayerByAccountId(t.id);
                e && (e.icReady.visible = !0,
                e.accountId === this.currentPlayer.AccountId && (this.DisableButtons(),
                this.boxBet.visible = !1))
            }
            ,
            t.prototype.ClearBet = function(t) {
                var e = this
                  , i = this.GetPlayerByAccountId(t.id);
                if (i) {
                    for (var n = 0; n < i.betContainer.children.length; n++)
                        i.betContainer.children[n].visible = !1;
                    var s = 0;
                    for (n = 0; n < i.moneyBet.length; n++)
                        s += i.moneyBet[n],
                        this.moneyTotal[n] -= i.moneyBet[n],
                        0 < i.moneyBet[n] && i.UndoChip(i.moneyBet[n], n);
                    i.player.Balance += s;
                    var a = new PIXI.Text("+" + o.Util.ParseMoney(s),{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: "yellow"
                    });
                    if (a.anchor.set(.5),
                    a.position.set(i.avatar.x, i.avatar.y),
                    i.betContainer.addChild(a),
                    TweenMax.to(a, .8, {
                        y: a.y - 80,
                        onComplete: function() {
                            a.visible = !1
                        }
                    }),
                    i.UpdateBalance(i.player.Balance),
                    i.icReady.visible = !1,
                    i.moneyBet = [0, 0, 0, 0, 0, 0, 0],
                    i.accountId === this.currentPlayer.AccountId) {
                        e.moneyOwner = [0, 0, 0, 0, 0, 0, 0],
                        e.DisableButtons(),
                        e.boxBet.visible = !0;
                        for (n = 0; n < e.lastCurrentBet.length; n++)
                            if (0 < e.lastCurrentBet[n]) {
                                e.EnableButton(e.btnX2),
                                e.EnableButton(e.btnReBet);
                                break
                            }
                    }
                    e.ShowMoneyBet()
                }
            }
            ,
            t.prototype.Bet = function(t) {
                var e = this.GetPlayerByAccountId(null != t.id ? t.id : t.Id);
                e && (e.Bet(t),
                e.accountId === this.currentPlayer.AccountId && 1 === this.roomModel.Session.Phrase && (this.EnableButton(this.btnReady),
                this.EnableButton(this.btnCancel),
                this.DisableButton(this.btnReBet),
                this.DisableButton(this.btnX2)))
            }
            ,
            t.prototype.ShowMoneyBet = function() {
                for (var t = 0; t < this.moneyTotal.length; t++)
                    this.gateMoneyTotal[t].visible = 0 < this.moneyTotal[t],
                    this.gateMoneyTotal[t].text = o.Util.MoneyHelper(this.moneyTotal[t]),
                    this.gateMoneyOwner[t].visible = 0 < this.moneyOwner[t],
                    this.gateMoneyOwner[t].text = o.Util.MoneyHelper(this.moneyOwner[t])
            }
            ,
            t.prototype.HideMoneyBet = function() {
                for (var t = 0; t < this.moneyTotal.length; t++)
                    this.gateMoneyTotal[t].visible = !1,
                    this.gateMoneyOwner[t].visible = !1
            }
            ,
            t.prototype.ResetMoneyBet = function() {
                for (var t = 0; t < this.moneyTotal.length; t++)
                    this.moneyTotal[t] = 0,
                    this.gateMoneyTotal[t].visible = 0 < this.moneyTotal[t],
                    this.gateMoneyTotal[t].text = o.Util.MoneyHelper(this.moneyTotal[t]),
                    this.moneyOwner[t] = 0,
                    this.gateMoneyOwner[t].visible = 0 < this.moneyOwner[t],
                    this.gateMoneyOwner[t].text = o.Util.MoneyHelper(this.moneyOwner[t])
            }
            ,
            t.prototype.Dealing = function() {
                for (var t = this, e = 0; e < 2; e++) {
                    var i = new Sprite(TextureCache["joker.png"]);
                    i.anchor.set(.5),
                    i.scale.set(.01),
                    i.position.set(this.txtNumbCards.x, this.txtNumbCards.y),
                    i.rotation = 2 * Math.PI,
                    this.cardContainer.addChild(i),
                    TweenMax.to(i, .5, {
                        data: "dragontiger",
                        x: this.cardsPos[e].x,
                        y: this.cardsPos[e].y,
                        rotation: 0,
                        delay: .5 * e
                    }),
                    TweenMax.to(i.scale, .5, {
                        data: "dragontiger",
                        x: .7,
                        y: .7,
                        delay: .5 * e
                    })
                }
                this.timerOut = setTimeout(function() {
                    return t.ShowCards()
                }, 1e3)
            }
            ,
            t.prototype.ShowCards = function() {
                for (var t = 0; t < this.cardContainer.children.length; t++)
                    this.cardContainer.children[t].visible = !1;
                this.dragonCard = new Sprite(TextureCache["joker.png"]),
                this.dragonCard.anchor.set(.5),
                this.dragonCard.scale.set(.7),
                this.dragonCard.position.set(this.cardsPos[0].x, this.cardsPos[0].y),
                this.dragonCard.OrdinalValue = this.roomModel.Session.DragonHand.Cards[0],
                this.tigercard = new Sprite(TextureCache["joker.png"]),
                this.tigercard.anchor.set(.5),
                this.tigercard.scale.set(.7),
                this.tigercard.position.set(this.cardsPos[1].x, this.cardsPos[1].y),
                this.tigercard.OrdinalValue = this.roomModel.Session.TigerHand.Cards[0],
                this.cardContainer.addChild(this.dragonCard, this.tigercard),
                3 <= this.roomModel.Session.Timeout ? (this.FlipCard(this.dragonCard),
                this.FlipCard(this.tigercard)) : (this.dragonCard.texture = TextureCache[this.cardsMap[this.dragonCard.OrdinalValue]],
                this.tigercard.texture = TextureCache[this.cardsMap[this.tigercard.OrdinalValue]])
            }
            ,
            t.prototype.ProcessResult = function() {
                var t = this;
                this.GateWins(this.roomModel.Session.Result.WinGates),
                this.timerOut = setTimeout(function() {
                    return t.UpdatePrizes()
                }, 1200)
            }
            ,
            t.prototype.GateWins = function(t) {
                if (t && 0 < t.length) {
                    for (var e = 0; e < t.length; e++) {
                        var i = new Sprite(TextureCache[this.gateOptions[t[e] - 1].w]);
                        i.anchor.set(.5),
                        i.position.set(this.gateOptions[t[e] - 1].x, this.gateOptions[t[e] - 1].y),
                        this.resultContainer.addChild(i),
                        TweenMax.to(i, .3, {
                            data: "dragontiger",
                            alpha: .3,
                            yoyo: !0,
                            repeat: 3
                        });
                        var n = new AnimatedSprite(this.framesFireWork);
                        n.anchor.set(.5),
                        n.position.set(this.gateOptions[t[e] - 1].x, this.gateOptions[t[e] - 1].y),
                        this.resultContainer.addChild(n),
                        n.animationSpeed = .5,
                        n.play(),
                        n.scale.set(1 === t[e] || 2 === t[e] ? 1 : .5);
                        var s = new Sprite(this.GetTexture(this.gateOptions[t[e] - 1].t));
                        s.anchor.set(0, .5),
                        s.scale.set(this.gateOptions[t[e] - 1].wS),
                        s.position.set(this.gateOptions[t[e] - 1].wX, this.gateOptions[t[e] - 1].wY),
                        this.resultContainer.addChild(s)
                    }
                    if (1 === t[0] || 2 === t[0]) {
                        var a = new Sprite(TextureCache[1 === t[0] ? "dragon-tiger-icon-dragon" : "dragon-tiger-icon-tiger"]);
                        a.anchor.set(.5),
                        a.position.set(1 === t[0] ? -157 : 127, -35),
                        this.resultContainer.addChild(a),
                        TweenMax.to(a.scale, .3, {
                            data: "dragontiger",
                            x: 1.1,
                            y: 1.1,
                            yoyo: !0,
                            repeat: 3
                        })
                    }
                }
            }
            ,
            t.prototype.IsBet = function(t) {
                for (var e = !1, i = 0; i < this.roomModel.Players.length; i++)
                    if (this.roomModel.Players[i].AccountId === t) {
                        e = this.roomModel.Players[i].Bet;
                        break
                    }
                return e
            }
            ,
            t.prototype.UpdatePrizes = function() {
                for (var n = this, s = this.roomModel.Session.Result.WinGates, t = 0; t < this.players.length; t++) {
                    if ((i = this.players[t]) && this.IsBet(i.accountId))
                        for (var e = 0; e < i.moneyBet.length; e++)
                            0 < i.moneyBet[e] && !s.includes(e + 1) && i.MoneyToDealer(e, 0 !== e && 1 !== e || !s.includes(3) ? i.moneyBet[e] : i.moneyBet[e] / 2),
                            0 !== e && 1 !== e || !s.includes(3) || i.MoneyToPlayer(e, i.moneyBet[e] / 2)
                }
                for (t = 0; t < this.players.length; t++) {
                    var i;
                    if ((i = this.players[t]) && this.IsBet(i.accountId))
                        for (e = 0; e < i.moneyBet.length; e++)
                            0 < i.moneyBet[e] && s.includes(e + 1) && i.MoneyFromDealer(e, i.moneyBet[e])
                }
                var a = this;
                this.timerOut = setTimeout(function() {
                    for (var t = 0; t < a.players.length; t++) {
                        var e = a.players[t];
                        if (e && n.IsBet(e.accountId))
                            for (var i = 0; i < e.moneyBet.length; i++)
                                0 < e.moneyBet[i] && s.includes(i + 1) && e.MoneyToPlayer(i, e.moneyBet[i])
                    }
                    a.MoneyWin()
                }, 500)
            }
            ,
            t.prototype.MoneyWin = function() {
                var t = this.roomModel.Session.Prizes;
                this.HideMoneyBet();
                for (var e = 0; e < this.players.length; e++) {
                    var i = this.players[e];
                    if (i && this.IsBet(i.accountId))
                        if (t && 0 < t.length) {
                            for (var n = 0, s = 0; s < i.moneyBet.length; s++)
                                i.moneyBet[s];
                            for (var a = 0; a < t.length; a++)
                                i.accountId === t[a].AccountId && (n += t[a].TotalPrize);
                            i.player.Balance += n,
                            0 < n && i.UpdateMoney(n),
                            i.UpdateBalance(i.player.Balance),
                            i.ShowWin(0 < n)
                        } else
                            i.ShowWin(!1)
                }
                this.auto && ($(".show-statistic-game").addClass("active"),
                $(".show-statistic-game").show())
            }
            ,
            t.prototype.GetTextureMoney = function(t) {
                var e, i = this.chipConfig[this.roomModel.Currency][this.roomModel.Value];
                return i[0].value <= t && t < i[1].value ? e = i[0].img : i[1].value <= t && t < i[2].value ? e = i[1].img : i[2].value <= t && t < i[3].value ? e = i[2].img : i[3].value <= t && t < i[4].value ? e = i[3].img : t >= i[4].value && (e = i[4].img),
                e
            }
            ,
            t.prototype.InitHistory = function() {
                if (void 0 === $(".dragontiger")[0]) {
                    var t = '<div class="dragontiger"><div class="btn-statistic-game resizeable" style="zoom: 1;"><a href="javascript:;" id="btn-statistic"><img src="/assets/images/btn-statistic.png" alt=""></a></div>';
                    t += '<div class="show-statistic-game resizeable" style="zoom: 1; z-index: 1;">',
                    t += '<div id="bridge" class="top-statistic"><ul><li id="dragontiger_sessionID">#0</li><li><span class="name dragon"></span> ' + Message.GetMessage("ca207") + ':<span id="dragon" class="count">0</span></li>        <li><span class="name tiger"></span> ' + Message.GetMessage("ca208") + ':<span id="tiger" class="count">0</span></li>        <li><span class="name tie"></span> ' + Message.GetMessage("ca42") + ':<span id="tie" class="count">0</span></li>        <li><span class="name oddeven dragoneven"></span> ' + Message.GetMessage("ca242") + ' D:<span id="dragoneven" class="count">0</span></li>        <li><span class="name oddeven dragonodd"></span> ' + Message.GetMessage("ca243") + ' D:<span id="dragonodd" class="count">0</span></li>        <li><span class="name oddeven tigereven"></span> ' + Message.GetMessage("ca242") + ' T:<span id="tigereven" class="count">0</span></li>        <li><span class="name oddeven tigerodd"></span> ' + Message.GetMessage("ca243") + ' T:<span id="tigerodd" class="count">0</span></li>        <li><input type="checkbox" id="cbauto" class="checkbox"> ' + Message.GetMessage("ca112") + '</li>        <li><input type="checkbox" id="cbnumber" class="checkbox">' + Message.GetMessage("ca113") + "</li>    </ul></div>",
                    t += '<div class="dragontiger-statistic">',
                    t += '<div class="left-content-statistic"><ul><li><ul><li><span id="r0_0"></span></li><li><span id="r0_1"></span></li><li><span id="r0_2"></span></li><li><span id="r0_3"></span></li><li><span id="r0_4"></span></li><li><span id="r0_5"></span></li></ul>   </li><li><ul><li><span id="r1_0"></span></li><li><span id="r1_1"></span></li><li><span id="r1_2"></span></li><li><span id="r1_3"></span></li><li><span id="r1_4"></span></li><li><span id="r1_5"></span></li></ul>   </li><li><ul><li><span id="r2_0"></span></li><li><span id="r2_1"></span></li><li><span id="r2_2"></span></li><li><span id="r2_3"></span></li><li><span id="r2_4"></span></li><li><span id="r2_5"></span></li></ul>   </li><li><ul><li><span id="r3_0"></span></li><li><span id="r3_1"></span></li><li><span id="r3_2"></span></li><li><span id="r3_3"></span></li><li><span id="r3_4"></span></li><li><span id="r3_5"></span></li></ul>   </li><li><ul><li><span id="r4_0"></span></li><li><span id="r4_1"></span></li><li><span id="r4_2"></span></li><li><span id="r4_3"></span></li><li><span id="r4_4"></span></li><li><span id="r4_5"></span></li></ul>   </li><li><ul><li><span id="r5_0"></span></li><li><span id="r5_1"></span></li><li><span id="r5_2"></span></li><li><span id="r5_3"></span></li><li><span id="r5_4"></span></li><li><span id="r5_5"></span></li></ul>   </li><li><ul><li><span id="r6_0"></span></li><li><span id="r6_1"></span></li><li><span id="r6_2"></span></li><li><span id="r6_3"></span></li><li><span id="r6_4"></span></li><li><span id="r6_5"></span></li></ul>   </li><li><ul><li><span id="r7_0"></span></li><li><span id="r7_1"></span></li><li><span id="r7_2"></span></li><li><span id="r7_3"></span></li><li><span id="r7_4"></span></li><li><span id="r7_5"></span></li></ul>   </li><li><ul><li><span id="r8_0"></span></li><li><span id="r8_1"></span></li><li><span id="r8_2"></span></li><li><span id="r8_3"></span></li><li><span id="r8_4"></span></li><li><span id="r8_5"></span></li></ul>   </li><li><ul><li><span id="r9_0"></span></li><li><span id="r9_1"></span></li><li><span id="r9_2"></span></li><li><span id="r9_3"></span></li><li><span id="r9_4"></span></li><li><span id="r9_5"></span></li></ul>   </li><li><ul><li><span id="r10_0"></span></li><li><span id="r10_1"></span></li><li><span id="r10_2"></span></li><li><span id="r10_3"></span></li><li><span id="r10_4"></span></li><li><span id="r10_5"></span></li></ul>   </li><li><ul><li><span id="r11_0"></span></li><li><span id="r11_1"></span></li><li><span id="r11_2"></span></li><li><span id="r11_3"></span></li><li><span id="r11_4"></span></li><li><span id="r11_5"></span></li></ul>   </li><li><ul><li><span id="r12_0"></span></li><li><span id="r12_1"></span></li><li><span id="r12_2"></span></li><li><span id="r12_3"></span></li><li><span id="r12_4"></span></li><li><span id="r12_5"></span></li></ul>   </li><li><ul><li><span id="r13_0"></span></li><li><span id="r13_1"></span></li><li><span id="r13_2"></span></li><li><span id="r13_3"></span></li><li><span id="r13_4"></span></li><li><span id="r13_5"></span></li></ul>   </li><li><ul><li><span id="r14_0"></span></li><li><span id="r14_1"></span></li><li><span id="r14_2"></span></li><li><span id="r14_3"></span></li><li><span id="r14_4"></span></li><li><span id="r14_5"></span></li></ul>   </li><li><ul><li><span id="r15_0"></span></li><li><span id="r15_1"></span></li><li><span id="r15_2"></span></li><li><span id="r15_3"></span></li><li><span id="r15_4"></span></li><li><span id="r15_5"></span></li></ul>   </li><li><ul><li><span id="r16_0"></span></li><li><span id="r16_1"></span></li><li><span id="r16_2"></span></li><li><span id="r16_3"></span></li><li><span id="r16_4"></span></li><li><span id="r16_5"></span></li></ul>   </li><li><ul><li><span id="r17_0"></span></li><li><span id="r17_1"></span></li><li><span id="r17_2"></span></li><li><span id="r17_3"></span></li><li><span id="r17_4"></span></li><li><span id="r17_5"></span></li></ul>   </li><li><ul><li><span id="r18_0"></span></li><li><span id="r18_1"></span></li><li><span id="r18_2"></span></li><li><span id="r18_3"></span></li><li><span id="r18_4"></span></li><li><span id="r18_5"></span></li></ul>   </li><li><ul><li><span id="r19_0"></span></li><li><span id="r19_1"></span></li><li><span id="r19_2"></span></li><li><span id="r19_3"></span></li><li><span id="r19_4"></span></li><li><span id="r19_5"></span></li></ul>   </li><li><ul><li><span id="r20_0"></span></li><li><span id="r20_1"></span></li><li><span id="r20_2"></span></li><li><span id="r20_3"></span></li><li><span id="r20_4"></span></li><li><span id="r20_5"></span></li></ul>   </li><li><ul><li><span id="r21_0"></span></li><li><span id="r21_1"></span></li><li><span id="r21_2"></span></li><li><span id="r21_3"></span></li><li><span id="r21_4"></span></li><li><span id="r21_5"></span></li></ul>   </li><li><ul><li><span id="r22_0"></span></li><li><span id="r22_1"></span></li><li><span id="r22_2"></span></li><li><span id="r22_3"></span></li><li><span id="r22_4"></span></li><li><span id="r22_5"></span></li></ul>   </li><li><ul><li><span id="r23_0"></span></li><li><span id="r23_1"></span></li><li><span id="r23_2"></span></li><li><span id="r23_3"></span></li><li><span id="r23_4"></span></li><li><span id="r23_5"></span></li></ul>   </li><li><ul><li><span id="r24_0"></span></li><li><span id="r24_1"></span></li><li><span id="r24_2"></span></li><li><span id="r24_3"></span></li><li><span id="r24_4"></span></li><li><span id="r24_5"></span></li></ul>   </li><li><ul><li><span id="r25_0"></span></li><li><span id="r25_1"></span></li><li><span id="r25_2"></span></li><li><span id="r25_3"></span></li><li><span id="r25_4"></span></li><li><span id="r25_5"></span></li></ul>   </li><li><ul><li><span id="r26_0"></span></li><li><span id="r26_1"></span></li><li><span id="r26_2"></span></li><li><span id="r26_3"></span></li><li><span id="r26_4"></span></li><li><span id="r26_5"></span></li></ul>   </li><li><ul><li><span id="r27_0"></span></li><li><span id="r27_1"></span></li><li><span id="r27_2"></span></li><li><span id="r27_3"></span></li><li><span id="r27_4"></span></li><li><span id="r27_5"></span></li></ul>   </li><li><ul><li><span id="r28_0"></span></li><li><span id="r28_1"></span></li><li><span id="r28_2"></span></li><li><span id="r28_3"></span></li><li><span id="r28_4"></span></li><li><span id="r28_5"></span></li></ul></li></ul></div><div class="right-content-statistic">',
                    t += '<ul><li><ul><li><span id="l0_0"></span></li><li><span id="l0_1"></span></li><li><span id="l0_2"></span></li><li><span id="l0_3"></span></li><li><span id="l0_4"></span></li><li><span id="l0_5"></span></li></ul></li><li><ul><li><span id="l1_0"></span></li><li><span id="l1_1"></span></li><li><span id="l1_2"></span></li><li><span id="l1_3"></span></li><li><span id="l1_4"></span></li><li><span id="l1_5"></span></li></ul></li><li><ul><li><span id="l2_0"></span></li><li><span id="l2_1"></span></li><li><span id="l2_2"></span></li><li><span id="l2_3"></span></li><li><span id="l2_4"></span></li><li><span id="l2_5"></span></li></ul></li><li><ul><li><span id="l3_0"></span></li><li><span id="l3_1"></span></li><li><span id="l3_2"></span></li><li><span id="l3_3"></span></li><li><span id="l3_4"></span></li><li><span id="l3_5"></span></li></ul></li><li><ul><li><span id="l4_0"></span></li><li><span id="l4_1"></span></li><li><span id="l4_2"></span></li><li><span id="l4_3"></span></li><li><span id="l4_4"></span></li><li><span id="l4_5"></span></li></ul></li><li><ul><li><span id="l5_0"></span></li><li><span id="l5_1"></span></li><li><span id="l5_2"></span></li><li><span id="l5_3"></span></li><li><span id="l5_4"></span></li><li><span id="l5_5"></span></li></ul></li><li><ul><li><span id="l6_0"></span></li><li><span id="l6_1"></span></li><li><span id="l6_2"></span></li><li><span id="l6_3"></span></li><li><span id="l6_4"></span></li><li><span id="l6_5"></span></li></ul></li><li><ul><li><span id="l7_0"></span></li><li><span id="l7_1"></span></li><li><span id="l7_2"></span></li><li><span id="l7_3"></span></li><li><span id="l7_4"></span></li><li><span id="l7_5"></span></li></ul></li><li><ul><li><span id="l8_0"></span></li><li><span id="l8_1"></span></li><li><span id="l8_2"></span></li><li><span id="l8_3"></span></li><li><span id="l8_4"></span></li><li><span id="l8_5"></span></li></ul></li><li><ul><li><span id="l9_0"></span></li><li><span id="l9_1"></span></li><li><span id="l9_2"></span></li><li><span id="l9_3"></span></li><li><span id="l9_4"></span></li><li><span id="l9_5"></span></li></ul></li><li><ul><li><span id="l10_0"></span></li><li><span id="l10_1"></span></li><li><span id="l10_2"></span></li><li><span id="l10_3"></span></li><li><span id="l10_4"></span></li><li><span id="l10_5"></span></li></ul></li><li><ul><li><span id="l11_0"></span></li><li><span id="l11_1"></span></li><li><span id="l11_2"></span></li><li><span id="l11_3"></span></li><li><span id="l11_4"></span></li><li><span id="l11_5"></span></li></ul></li><li><ul><li><span id="l12_0"></span></li><li><span id="l12_1"></span></li><li><span id="l12_2"></span></li><li><span id="l12_3"></span></li><li><span id="l12_4"></span></li><li><span id="l12_5"></span></li></ul></li><li><ul><li><span id="l13_0"></span></li><li><span id="l13_1"></span></li><li><span id="l13_2"></span></li><li><span id="l13_3"></span></li><li><span id="l13_4"></span></li><li><span id="l13_5"></span></li></ul></li><li><ul><li><span id="l14_0"></span></li><li><span id="l14_1"></span></li><li><span id="l14_2"></span></li><li><span id="l14_3"></span></li><li><span id="l14_4"></span></li><li><span id="l14_5"></span></li></ul></li></ul>',
                    t += '</div><a href=\'javascript: $(".show-statistic-game").removeClass("active");\' class="btn-close-statistic"></a></div></div></div>',
                    document.getElementById(this.target).innerHTML += t
                }
                var e = this;
                setTimeout(function() {
                    $("#btn-statistic").unbind("click").click(function() {
                        $(".show-statistic-game").addClass("active")
                    }),
                    $("#cbauto").prop("checked", e.auto),
                    $("#cbnumber").prop("checked", e.showNumber),
                    $("#cbnumber").change(function() {
                        e.showNumber = $(this).is(":checked"),
                        void 0 !== e.oldHis && e.BindBridge(e.oldHis)
                    }),
                    $("#cbauto").unbind("click").click(function() {
                        e.auto = document.getElementById("cbauto").checked
                    })
                }, 500)
            }
            ,
            t.prototype.GetHistory = function() {
                var e = this;
                this.hub.connection.invoke("GetGameHistory", this.roomModel.Id).then(function(t) {
                    console.log("GetGameHistory", t),
                    0 <= t.c && e.BindBridge(t.r)
                })
            }
            ,
            t.prototype.BindBridge = function(t) {
                this.oldHis = t;
                try {
                    t.forEach(function(t) {
                        var e = t.Dragon == t.Tiger ? 3 : t.Dragon > t.Tiger ? 1 : 2;
                        t.Winner = e,
                        t.Number = -1,
                        2 == e ? (t.Text = 7 == t.Tiger ? "" : t.Tiger % 2 == 0 ? "C" : "L",
                        t.Number = t.Tiger) : (t.Text = 7 == t.Dragon ? "" : t.Dragon % 2 == 0 ? "C" : "L",
                        t.Number = t.Dragon)
                    }),
                    this.CaculHistory(t)
                } catch (t) {
                    console.log("error:", t)
                }
            }
            ,
            t.prototype.Stop = function() {
                this.hub.ExitGame(),
                this.hub.connection.stop()
            }
            ,
            t.prototype.Delete = function() {
                o.Util.UnloadCSS("/assets/css/dragontiger.css"),
                window.removeEventListener("resize", this.resizeFunc),
                this.DeleteTween();
                try {
                    this.application.view.remove(),
                    this.application.destroy(!0),
                    this.target.html("")
                } catch (t) {}
            }
            ,
            t
        }();
        e.games = r
    }
    , function(t, e, i) {
        "use strict";
        var n, s = this && this.__extends || (n = function(t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            n(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = function(e) {
            function t() {
                var t = e.call(this) || this;
                return t.assets = [{
                    id: "",
                    src: "/assets/images/dragontiger/dragon-tiger.json"
                }, {
                    id: "",
                    src: "/assets/images/common/bai.json"
                }, {
                    id: "",
                    src: "/assets/images/common/common-casino.json"
                }, {
                    id: "",
                    src: "/assets/images/common/dealer.json"
                }, {
                    id: "",
                    src: "/assets/images/common/firework.json"
                }],
                t.add(t.assets),
                t
            }
            return s(t, e),
            t
        }(i(0).Assets);
        e.default = a
    }
    , function(t, e, i) {
        "use strict";
        var n, s = this && this.__extends || (n = function(t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            n(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = i(0)
          , o = i(5)
          , r = function(n) {
            function t(t, e, i) {
                return n.call(this, t, e, i) || this
            }
            return s(t, n),
            t.prototype.Connect = function(t, e) {
                var i = this;
                this.connection = (new o.HubConnectionBuilder).withUrl(this.url, {
                    accessTokenFactory: function() {
                        return i.token
                    },
                    skipNegotiation: !0,
                    transport: o.HttpTransportType.WebSockets
                }).build(),
                this.connection.serverTimeoutInMilliseconds = 1e5,
                this.connection.start().then(function() {
                    console.log("connected"),
                    i.EnterGame(t),
                    i.Listen(),
                    "function" == typeof e && e()
                }).catch(function(t) {
                    return console.error(t)
                })
            }
            ,
            t.prototype.Listen = function() {
                n.prototype.Listen.call(this);
                var e = this;
                e.connection.on("roomData", function(t) {
                    e.game && e.game.JoinGame(t)
                }),
                e.connection.on("joinRoom", function(t) {
                    console.log("joinRoom", t),
                    e.game && e.game.PlayerJoin(t.r)
                }),
                e.connection.on("leaveRoom", function(t) {
                    console.log("leaveRoom", t),
                    e.game && e.game.PlayerLeave(t.r)
                }),
                e.connection.on("registerLeavingRoom", function(t) {
                    console.log("registerLeavingRoom", t),
                    e.game && e.game.RegisterLeave(t.r)
                }),
                e.connection.on("connectionChanged", function(t) {
                    console.log("connectionChanged", t),
                    e.game && e.game.UpdateConnection(t.r)
                }),
                e.connection.on("playerBet", function(t) {
                    console.log("playerBet", t);
                    t.r;
                    e.game && e.game.Bet(t.r)
                }),
                e.connection.on("clearBetting", function(t) {
                    console.log("clearBetting", t),
                    e.game && e.game.ClearBet(t.r)
                }),
                e.connection.on("confirmBetting", function(t) {
                    console.log("confirmBetting", t),
                    e.game && e.game.ConfirmBet(t.r)
                }),
                e.connection.on("playerOtherDevice", function(t) {
                    console.log("playerOtherDevice", t),
                    e.game && e.game.PlayerOtherDevice(t.r)
                })
            }
            ,
            t.prototype.EnterGame = function(t) {
                var e = this;
                this.connection.invoke("EnterGame", t).then(function(t) {
                    if (console.log("EnterGame", t),
                    t.c < 0)
                        return -10004 === t.c && (t.c = 10014),
                        App.showPopupMessage({
                            content: Message.GetMessage((10014 === t.c ? "me" : "ca") + t.c),
                            textDone: "OK"
                        }),
                        void App.handleBack();
                    if (1 === t.c) {
                        if (!e.game)
                            return;
                        e.game.EnterGame(t)
                    }
                })
            }
            ,
            t.prototype.ExitGame = function() {
                this.connection.invoke("ExitGame").then(function(t) {
                    console.log("ExitGame", t)
                })
            }
            ,
            t.prototype.EnterRoom = function(t, e) {
                var i = this;
                this.connection.invoke("EnterRoom", t, e).then(function(t) {
                    console.log("EnterRoom", t),
                    i.game && i.game.EnterGame(t)
                })
            }
            ,
            t.prototype.ExitRoom = function() {
                this.connection.invoke("ExitRoom").then(function(t) {
                    console.log("ExitRoom", t)
                })
            }
            ,
            t.prototype.ClearBetting = function() {
                this.connection.invoke("ClearBetting").then(function(t) {
                    console.log("ClearBetting", t)
                })
            }
            ,
            t.prototype.FinishBetting = function() {
                this.connection.invoke("FinishBetting").then(function(t) {
                    console.log("FinishBetting", t)
                })
            }
            ,
            t.prototype.GetGameHistory = function(t) {
                this.connection.invoke("GetGameHistory", t).then(function(t) {
                    console.log("GetGameHistory", t)
                })
            }
            ,
            t.prototype.Bet = function(t, e) {
                this.connection.invoke("Bet", t, e).then(function(t) {
                    console.log("Bet", t)
                })
            }
            ,
            t.prototype.Request = function(t, e) {
                this.connection.invoke("Request", t, e).then(function(t) {
                    console.log("Request", t)
                })
            }
            ,
            t
        }(a.Hub);
        e.default = r
    }
    , function(t, e) {
        t.exports = n
    }
    , function(t, e, i) {
        "use strict";
        var n, s = this && this.__extends || (n = function(t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            n(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = i(0)
          , a = function(i) {
            function t(t) {
                var e = i.call(this, t) || this;
                return e.moneyBet = [0, 0, 0, 0, 0, 0, 0],
                e.icReady = new Sprite(TextureCache.ready),
                e.icReady.anchor.set(.5),
                e.icReady.position.set(e.avatar.x, e.avatar.y - e.avatar.height / 2),
                e.icReady.visible = !1,
                e.addChild(e.icReady),
                e.Reset(),
                e
            }
            return s(t, i),
            t.prototype.Bet = function(t) {
                var e = void 0 !== t.amount ? t.amount : t.Amount
                  , i = t.gate ? t.gate : t.Gate
                  , n = t.balance || 0 === t.balance ? t.balance : t.Balance || 0 === t.Balance ? t.Balance : -1
                  , s = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                s.anchor.set(.5),
                s.scale.set(.5),
                s.position.set(this.avatar.x, this.avatar.y),
                this.chipContainer.addChild(s),
                TweenMax.to(s, .5, {
                    data: "dragontiger",
                    x: this.game.chipPos[this.pos][i - 1].x,
                    y: this.game.chipPos[this.pos][i - 1].y
                });
                var a = new PIXI.Text("-" + r.Util.ParseMoney(t.amount ? t.amount : t.Amount),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 14,
                    fill: "yellow"
                });
                a.anchor.set(.5),
                a.position.set(this.avatar.x, this.avatar.y),
                this.betContainer.addChild(a),
                TweenMax.to(a, .5, {
                    data: "dragontiger",
                    y: a.y - 80
                });
                var o = this;
                0 <= n && (this.UpdateBalance(n),
                this.player.Balance = n),
                setTimeout(function() {
                    s.visible = !1,
                    a.visible = !1,
                    o.CalChip()
                }, 600),
                this.moneyBet[i - 1] += e,
                this.accountId === this.game.currentPlayer.AccountId && (this.game.moneyOwner[i - 1] += e),
                this.game.moneyTotal[i - 1] += e,
                this.game.ShowMoneyBet()
            }
            ,
            t.prototype.CalChip = function() {
                for (var t = 0; t < this.betContainer.children.length; t++)
                    this.betContainer.children[t].visible = !1;
                for (t = 0; t < this.moneyBet.length; t++) {
                    var e = new Sprite(TextureCache[this.game.GetTextureMoney(this.moneyBet[t])]);
                    e.anchor.set(.5),
                    e.scale.set(.5),
                    e.position.set(this.game.chipPos[this.pos][t].x, this.game.chipPos[this.pos][t].y),
                    this.betContainer.addChild(e)
                }
            }
            ,
            t.prototype.UndoChip = function(t, e) {
                try {
                    for (var i = 0; i < 20; i++) {
                        var n = new Sprite(TextureCache[this.game.GetTextureMoney(t)]);
                        n.anchor.set(.5),
                        n.scale.set(.5),
                        n.position.set(this.game.chipPos[this.pos][e].x, this.game.chipPos[this.pos][e].y),
                        this.chipContainer.addChild(n),
                        TweenMax.to(n, .5, {
                            data: "dragontiger",
                            x: this.avatar.x,
                            y: this.avatar.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.MoneyToDealer = function(t, e) {
                for (var i = 0; i < this.betContainer.children.length; i++)
                    this.betContainer.children[i].x === this.game.chipPos[this.pos][t].x && this.betContainer.children[i].y === this.game.chipPos[this.pos][t].y && (this.betContainer.children[i].visible = !1);
                try {
                    for (i = 0; i < 20; i++) {
                        var n = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        n.anchor.set(.5),
                        n.scale.set(.5),
                        n.position.set(this.game.chipPos[this.pos][t].x, this.game.chipPos[this.pos][t].y),
                        this.chipContainer.addChild(n),
                        TweenMax.to(n, 1, {
                            data: "dragontiger",
                            x: this.game.dealer.x,
                            y: this.game.dealer.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.MoneyFromDealer = function(t, e) {
                try {
                    for (var i = 0; i < 20; i++) {
                        var n = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        n.anchor.set(.5),
                        n.scale.set(.5),
                        n.position.set(this.game.dealer.x, this.game.dealer.y),
                        this.chipContainer.addChild(n),
                        TweenMax.to(n, 1, {
                            data: "dragontiger",
                            x: this.game.chipPos[this.pos][t].x,
                            y: this.game.chipPos[this.pos][t].y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.MoneyToPlayer = function(t, e) {
                for (var i = 0; i < this.betContainer.children.length; i++)
                    this.betContainer.children[i].x === this.game.chipPos[this.pos][t].x && this.betContainer.children[i].y === this.game.chipPos[this.pos][t].y && (this.betContainer.children[i].visible = !1);
                try {
                    for (i = 0; i < 20; i++) {
                        var n = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        n.anchor.set(.5),
                        n.scale.set(.5),
                        n.position.set(this.game.chipPos[this.pos][t].x, this.game.chipPos[this.pos][t].y),
                        this.chipContainer.addChild(n),
                        TweenMax.to(n, 1, {
                            data: "dragontiger",
                            x: this.avatar.x,
                            y: this.avatar.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.UpdateMoney = function(t) {
                var e = new PIXI.Text((0 < t ? "+" : "") + r.Util.ParseMoney(t),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 14,
                    fill: "yellow"
                });
                e.anchor.set(.5),
                e.position.set(this.avatar.x, this.avatar.y),
                this.game.resultContainer.addChild(e),
                TweenMax.to(e, 1.8, {
                    data: "dragontiger",
                    y: e.y - 80
                }),
                setTimeout(function() {
                    e.visible = !1
                }, 1900)
            }
            ,
            t.prototype.ShowWin = function(t) {
                var e = new Sprite(TextureCache[(t ? "thang-" : "thua-") + this.game.lang]);
                e.anchor.set(.5),
                e.position.set(this.box.x, this.box.y),
                this.betContainer.addChild(e),
                TweenMax.to(e.scale, .3, {
                    data: "dragontiger",
                    x: 1.2,
                    y: 1.2,
                    yoyo: !0,
                    repeat: 7
                })
            }
            ,
            t.prototype.Reset = function() {
                if (this.moneyBet = [0, 0, 0, 0, 0, 0, 0],
                this.chipContainer)
                    try {
                        this.chipContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                if (this.chipContainer = new Container,
                this.game.chipContainer.addChild(this.chipContainer),
                this.betContainer)
                    try {
                        this.betContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.betContainer = new Container,
                this.game.betContainer.addChild(this.betContainer),
                this.icReady.visible = !1
            }
            ,
            t
        }(r.PlayerC);
        e.default = a
    }
    , function(t, e) {
        t.exports = s
    }
    , function(t, e) {
        t.exports = a
    }
    ])
});

!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("signalR"), require("pixi-filters"), require("WebFont")) : "function" == typeof define && define.amd ? define("roulette", ["libs", "signalR", "pixi-filters", "WebFont"], e) : "object" == typeof exports ? exports.roulette = e(require("libs"), require("signalR"), require("pixi-filters"), require("WebFont")) : t.roulette = e(t.libs, t.signalR, t["pixi-filters"], t.WebFont)
}(window, function(i, o, n, a) {
    return function(i) {
        var o = {};
        function n(t) {
            if (o[t])
                return o[t].exports;
            var e = o[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return i[t].call(e.exports, e, e.exports, n),
            e.l = !0,
            e.exports
        }
        return n.m = i,
        n.c = o,
        n.d = function(t, e, i) {
            n.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: i
            })
        }
        ,
        n.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }),
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }
        ,
        n.t = function(e, t) {
            if (1 & t && (e = n(e)),
            8 & t)
                return e;
            if (4 & t && "object" == typeof e && e && e.__esModule)
                return e;
            var i = Object.create(null);
            if (n.r(i),
            Object.defineProperty(i, "default", {
                enumerable: !0,
                value: e
            }),
            2 & t && "string" != typeof e)
                for (var o in e)
                    n.d(i, o, function(t) {
                        return e[t]
                    }
                    .bind(null, o));
            return i
        }
        ,
        n.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default
            }
            : function() {
                return t
            }
            ;
            return n.d(e, "a", e),
            e
        }
        ,
        n.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        ,
        n.p = "/",
        n(n.s = 1)
    }([function(t, e) {
        t.exports = i
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = i(2)
          , n = i(12)
          , a = function() {
            function t(t) {
                n.load({
                    custom: {
                        families: ["Roboto-Black", "Roboto-Bold", "Roboto-Medium", "Roboto-Regular", "Roboto-Light", "RobotoCondensed-Bold", "RobotoCondensed-Italic", "RobotoCondensed-Light", "RobotoCondensed-Regular", "UTM American Sans", "UTM Swiss Condensed", "UTM Swiss CondensedBold"]
                    },
                    fontactive: function() {}
                }),
                this.game = new o.games(t)
            }
            return t.prototype.delete = function() {
                this.game.Delete()
            }
            ,
            t.prototype.load = function(t) {
                this.game.Load(t)
            }
            ,
            t.prototype.join = function(t, e) {
                this.game.Join(t, e)
            }
            ,
            t.prototype.stop = function() {
                this.game.Stop()
            }
            ,
            t
        }();
        e.game = a
    }
    , function(t, e, i) {
        "use strict";
        var o, n = this && this.__extends || (o = function(t, e) {
            return (o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            o(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = i(3)
          , a = i(4)
          , s = i(5)
          , p = i(0)
          , c = i(7);
        i(8);
        var l = i(9)
          , u = i(11)
          , h = function(e) {
            function t(t) {
                var u = e.call(this) || this;
                return u.InitConfig = function() {
                    var t = [];
                    u.gateTotalBet = [];
                    for (var e = 0; e < 7; e++) {
                        t = [];
                        for (var i = 0; i < u.gateConfig.length; i++)
                            t = t.concat([0]);
                        u.gateTotalBet = u.gateTotalBet.concat([t])
                    }
                }
                ,
                u.indexTip = 0,
                u.moneyText = ["XU", "GAM"],
                u.InitGate = function(e, t, i) {
                    void 0 === i && (i = "0");
                    var o = u
                      , n = u.gateConfig.find(function(t) {
                        return t.id == e
                    });
                    if (n) {
                        n.id;
                        var a = u.gameName + "green-bet";
                        14 <= e && e <= 49 ? a = u.getBackgroundGateSource(i) : 10 <= e && e <= 12 ? a = "roulette-tran-bet2" : 1 <= e && e <= 6 ? a = "roulette-" + (4 == e ? "black-bet2" : 3 == e ? "red-bet2" : "tran-bet3") : 7 <= e && e <= 9 && (a = "roulette-tran-bet");
                        var r = new Sprite(TextureCache[a + ".png"]);
                        r.name = a,
                        r.id = e,
                        r.anchor.set(.5),
                        r.position.set(t.x, t.y),
                        r.interactive = !0,
                        r.buttonMode = !0;
                        var s = new PIXI.Text(String(i),{
                            fontFamily: u.fontFaceBold,
                            fontSize: 24,
                            fill: ["white"],
                            padding: 10,
                            align: "center"
                        });
                        s.anchor.set(.5),
                        s.position.set(0);
                        var c = new Sprite(TextureCache[a + "-hover.png"]);
                        c.name = "hover",
                        c.visible = !1,
                        c.anchor.set(.5),
                        c.position.set(0),
                        r.addChild(c, s),
                        u.buttonContainer.addChild(r);
                        var l = {
                            gate: r,
                            gateID: e
                        };
                        u.gateInfo = u.gateInfo.concat([l]),
                        u.gates = u.gates.concat([r]),
                        1 <= e && e <= 13 ? r.on("mouseover", u.hoverBlock.bind(r, u, e)).on("mouseout", u.hoverOut.bind(r, u, e)).on("pointerdown", u.GateDown.bind(r, u, e, o)) : r.on("mouseover", u.GateOver.bind(r, u, e)).on("mouseout", u.GateOut.bind(r, u)).on("pointerdown", u.GateDown.bind(r, u, e, o))
                    }
                }
                ,
                u.arrBetPos = [{
                    x: 50,
                    y: 30,
                    s: .7
                }, {
                    x: 130,
                    y: 30,
                    s: .7
                }, {
                    x: 210,
                    y: 30,
                    s: .7
                }, {
                    x: 290,
                    y: 30,
                    s: .7
                }, {
                    x: 370,
                    y: 30,
                    s: .7
                }],
                u.bindHistory = function(t) {
                    var e = t.slice(Math.max(t.length - 23, 0))
                      , i = t.slice(Math.max(t.length - 10, 0))
                      , a = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];
                    0 < e.length ? ($(".roulette .show-statistic-game").show(),
                    $(".roulette .show-statistic-game").addClass("active")) : ($(".roulette .show-statistic-game").hide(),
                    $(".roulette .show-statistic-game").removeClass("active"));
                    var o = function(t) {
                        for (var e = "", i = 0; i < t.length; i++) {
                            var o = t[i]
                              , n = 0 == o ? "green" : 0 <= a.indexOf(o) ? "black" : "red";
                            e += '<li class="ro-li">',
                            i == t.length - 1 ? e += '<span class="' + n + ' active">' : e += "<span class=" + n + ">",
                            e += "" + o,
                            e += "</span>",
                            e += "</li>"
                        }
                        return e
                    }
                      , n = o(i)
                      , r = o(e);
                    $("#ro-roadmap-1 .ro-ul[rel=1]").html(n),
                    $("#ro-roadmap-1 .ro-ul[rel=2]").html(r)
                }
                ,
                u.ResetWheel = function() {
                    u.wheel && (u.wheel.reset(),
                    u.wheel = null);
                    try {
                        u.dice.destroy()
                    } catch (t) {}
                }
                ,
                u.auto = !1,
                u.size = t.size,
                u.target = t.target,
                u.token = t.token,
                u.loader = new a.default,
                u.currencyId = t.currencyID,
                u.lang = Message.GetLanguageCode(),
                u.ready = !1,
                u
            }
            return n(t, e),
            t.prototype.Load = function(t) {
                var e = this;
                e.loader.load(function() {
                    return e.Loading(e)
                }, function() {
                    e.isLoad = !0,
                    $("#divLoading").hide(),
                    e.InitHub(t)
                })
            }
            ,
            t.prototype.Loading = function(t) {
                $("#divLoading").show(),
                $("#loading-progress span").css("width", t.loader.loader.progress + "%"),
                $("#loading-progress-txt").html(t.loader.loader.progress + "%")
            }
            ,
            t.prototype.InitHub = function(t) {
                this.hub = new s.default(rouletteUrl + "hub",this.token,this),
                this.hub.Connect(this.currencyId, t)
            }
            ,
            t.prototype.Join = function(t, e) {
                this.hub.EnterRoom(t, e)
            }
            ,
            t.prototype.EnterRoom = function(t) {
                this.roomModel = t.r,
                this.ready || this.Init(),
                this.GetCurrentPlayer(),
                this.RenderPlayers(this.roomModel.Players),
                this.ResetGame(),
                this.DisableButtons(),
                this.boxBet.visible = !1
            }
            ,
            t.prototype.GetCurrentPlayer = function() {
                if (this.roomModel && this.roomModel.Players)
                    for (var t = 0; t < this.roomModel.Players.length; t++)
                        if (this.roomModel.Players[t].AccountId === App.account.accountID + ":" + App.account.portalID) {
                            this.currentPlayer = this.roomModel.Players[t];
                            break
                        }
            }
            ,
            t.prototype.GetPlayerByAccountId = function(t) {
                for (var e, i = 0; i < this.players.length; i++)
                    if (this.players[i] && this.players[i].accountId === t) {
                        e = this.players[i];
                        break
                    }
                return e
            }
            ,
            t.prototype.GetPlayerByPosition = function(t) {
                for (var e, i = 0; i < this.players.length; i++)
                    if (this.players[i] && this.players[i].pos === t) {
                        e = this.players[i];
                        break
                    }
                return e
            }
            ,
            t.prototype.RenderPlayers = function(t) {
                for (var e in t)
                    this.RenderPlayer(t[e])
            }
            ,
            t.prototype.PlayerJoin = function(t) {
                console.log("playerJoin", t),
                this.RenderPlayer(t)
            }
            ,
            t.prototype.PlayerLeave = function(t) {
                for (var e = 0; e < t.length; e++)
                    if (t[e].id === this.currentPlayer.AccountId)
                        t[e].reason && App.showPopupMessage({
                            content: Message.GetMessage("ca" + t[e].reason),
                            textDone: "OK"
                        }),
                        this.Delete(),
                        App.handleBack();
                    else {
                        var i = this.GetPlayerByAccountId(t[e].id);
                        if (i) {
                            var o = i.pos;
                            i.destroy({
                                children: !0
                            }),
                            delete this.players[o],
                            this.players[o] = null
                        }
                    }
            }
            ,
            t.prototype.PlayerOtherDevice = function() {
                App.showPopupMessage({
                    content: Message.GetMessage("ca-20024"),
                    textDone: "OK"
                }),
                this.Delete(),
                App.exitGame()
            }
            ,
            t.prototype.RegisterLeave = function(t) {
                var e = t.id ? t.id : t.Id
                  , i = t.status ? t.status : t.Status
                  , o = this.GetPlayerByAccountId(e);
                o && (o.leaveStatus.visible = i),
                e === this.currentPlayer.AccountId && this.ShowStatus(Message.GetMessage(i ? "me8" : "me9"))
            }
            ,
            t.prototype.UpdateConnection = function(t) {
                try {
                    var e = t.id ? t.id : t.Id
                      , i = t.status ? t.status : t.Status
                      , o = this.GetPlayerByAccountId(e);
                    o && (o.disStatus.visible = i)
                } catch (t) {}
            }
            ,
            t.prototype.RenderPlayer = function(t) {
                var e = t.Position - this.currentPlayer.Position;
                e < 0 && (e += this.roomModel.MaxPlayer),
                null !== this.players[e] && this.players[e],
                this.players[e] = new c.default({
                    position: e,
                    player: t,
                    xy: this.playerPos[e],
                    w: 90,
                    h: 90,
                    b: 60,
                    game: this
                }),
                this.playerContainer.addChild(this.players[e]);
                var i = t.RegLeave;
                this.players[e].leaveStatus.visible = i
            }
            ,
            t.prototype.EnterGame = function(t) {
                this.JoinGame(t),
                t.r.Session && this.CheckBet()
            }
            ,
            t.prototype.JoinGame = function(t) {
                if (console.log("JoinGame", t),
                t) {
                    if (t.c < 0)
                        return App.showPopupMessage({
                            content: Message.GetMessage("ca" + t.c),
                            textDone: "ok"
                        }),
                        this.Delete(),
                        void App.handleBack();
                    if (this.roomModel = t.r,
                    App.joinGame({
                        value: this.roomModel.Value,
                        type: this.roomModel.Currency
                    }),
                    p.Util.ClearTimeOut(this.timerOut),
                    this.RemoveTimer(),
                    this.ready || this.EnterRoom(t),
                    this.UpdateGameLoopId(),
                    t.r.Session) {
                        if (1 === t.r.Session.Phrase)
                            this.ResetGame(),
                            this.DisableButtons(),
                            this.ShowTipDealer(this),
                            this.StartBet();
                        else if (2 === t.r.Session.Phrase) {
                            if (this.timer.ClearTimer(),
                            this.HideReady(),
                            this.boxBet.visible = !1,
                            this.DisableButtons(),
                            p.Util.ClearTimeOut(this.timerTip),
                            this.roomModel.Session.Timeout < 3)
                                return;
                            this.roomModel.Session.Timeout <= 5 ? this.ProcessResult() : this.CreateDice()
                        }
                        window.rouletteGame = this
                    }
                }
            }
            ,
            t.prototype.UpdateGameLoopId = function() {
                this.lblSession.text = Message.GetMessage("ca95").toUpperCase() + (this.roomModel.SessionId <= 0 ? " #" : this.roomModel.SessionId)
            }
            ,
            t.prototype.Init = function() {
                p.Util.CheckCss("/assets/css/roulette.css") || p.Util.LoadCss("/assets/css/roulette.css"),
                this.InitHistory(),
                PIXI.utils.skipHello();
                var t = window.innerWidth < 1360 ? 1360 : window.innerWidth
                  , e = window.innerHeight < 720 ? 720 : window.innerHeight;
                this.size = [t, e],
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    transparent: !0,
                    resolution: 1,
                    autoResize: !0
                }),
                document.getElementById(this.target).appendChild(this.application.renderer.view),
                this.InitConfig(),
                this.InitContainer(),
                this.InitFrames(),
                this.InitMachine(),
                this.InitTableInfo(),
                this.InitGates(),
                this.InitButton(),
                this.InitBet(),
                this.InitTip(),
                this.InitPopup(),
                this.Resize(this);
                var i = this;
                this.application.ticker.add(function() {
                    return i.Update(i)
                }),
                this.ready = !0,
                this.resizeFunc = function() {
                    return i.Resize(i)
                }
                ,
                window.addEventListener("resize", this.resizeFunc),
                this.ResetTab(),
                r.jackpot.GetJackpot(i)
            }
            ,
            t.prototype.Resize = function(t) {
                if (t.size = [$(window).width(), $(window).height()],
                t.application.renderer.resize($(window).width(), $(window).height()),
                t.size[0] < 1360 || t.size[1] < 720) {
                    var e = Math.min(t.size[0] / 1360, t.size[1] / 720);
                    t.mainContainer.scale.set(e)
                } else
                    t.mainContainer.scale.set(1);
                t.mainContainer.anchor.set(.5),
                t.mainContainer.position.set(t.size[0] / 2, t.size[1] / 2 + 20)
            }
            ,
            t.prototype.ResetTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            t.prototype.Update = function(t) {
                t.timer && t.timer.Tick(),
                t.timerUser && t.timerUser.tick()
            }
            ,
            t.prototype.RemoveTimer = function() {
                if (this.timerUser)
                    try {
                        this.timerUser.clearTimer(),
                        this.timerUser = null
                    } catch (t) {}
            }
            ,
            t.prototype.ShowTimer = function(t, e, i) {
                this.RemoveTimer(),
                this.timerUser = new p.Timer({
                    width: 88,
                    height: 88,
                    lineWidth: 2
                }),
                this.timerUser.position.set(t.avatar.x - 45, t.avatar.y - 45),
                this.playerContainer.addChild(this.timerUser),
                this.timerUser.startTimer(e, i)
            }
            ,
            t.prototype.ShowError = function(t) {
                this.ShowStatus(Message.GetMessage("ca" + t), 2e3)
            }
            ,
            t.prototype.ShowStatus = function(t, e) {
                var i = this;
                p.Util.ClearTimeOut(this.timerStatus),
                this.txtStatus.scale.set(.01),
                this.txtStatus.visible = !0,
                this.txtStatus.children[0].text = t,
                TweenMax.to(this.txtStatus.scale, .4, {
                    data: "roulette",
                    x: 1,
                    y: 1
                });
                var o = this;
                this.timerStatus = setTimeout(function() {
                    TweenMax.to(i.txtStatus.scale, .2, {
                        data: "roulette",
                        x: .01,
                        y: .01
                    }),
                    o.timerStatus = setTimeout(function() {
                        o.txtStatus.visible = !1
                    }, 300)
                }, e || 2e3)
            }
            ,
            t.prototype.InitContainer = function() {
                this.bgContainer = new Container,
                this.playerContainer = new Container,
                this.chipContainer = new Container,
                this.resultContainer = new Container,
                this.moneyContainer = new Container,
                this.buttonContainer = new Container,
                this.effectContainer = new Container
            }
            ,
            t.prototype.InitFrames = function() {
                var t;
                for (this.framesDealerChiaBai = [],
                this.framesDealerClick = [],
                this.framesDealerPlay = [],
                this.framesDealerNormal = [],
                this.framesFireWork = [],
                this.framesDice = [],
                t = 1; t < 31; t++)
                    this.framesFireWork.push(TextureCache["fire-work-" + t + ".png"]);
                for (t = 1; t < 15; t++)
                    this.framesDealerChiaBai.push(TextureCache["dealer-chia-bai-" + t + ".png"]);
                for (t = 1; t < 25; t++)
                    this.framesDealerClick.push(TextureCache["dealer-rung-nguc-" + t + ".png"]),
                    this.framesDealerPlay.push(TextureCache["dealer-moi-choi-" + t + ".png"]);
                for (t = 1; t < 49; t++)
                    this.framesDealerNormal.push(TextureCache["dealer-normal-" + t + ".png"])
            }
            ,
            t.prototype.GetTexture = function(t) {
                return t += ".png",
                void 0 !== TextureCache[this.gameName + t + this.lang] ? TextureCache[this.gameName + t + this.lang] : void 0 !== TextureCache[this.gameName + t + this.defaultLang] ? TextureCache[this.gameName + t + this.defaultLang] : TextureCache[this.gameName + t]
            }
            ,
            t.prototype.InitMachine = function() {
                this.mainContainer = new Sprite(TextureCache["roulette-table-" + this.roomModel.Currency]),
                this.mainContainer.anchor.set(.5),
                this.mainContainer.position.set(this.size[0] / 2, this.size[1] / 2),
                this.application.stage.addChild(this.mainContainer),
                this.dealer = new AnimatedSprite(this.framesDealerNormal),
                this.dealer.anchor.set(.5),
                this.dealer.position.set(0, -243),
                this.dealer.animationSpeed = .2,
                this.dealer.interactive = !0,
                this.dealer.buttonMode = !0,
                this.dealer.on("pointerdown", this.DealerDown.bind(this.dealer, this)),
                this.dealer.play();
                var t = new Sprite(this.GetTexture("bg-game-"));
                t.anchor.set(.5),
                t.position.set(-120, -35),
                this.bgResult = new Sprite(this.GetTexture("bg-result")),
                this.bgResult.anchor.set(.5),
                this.bgResult.position.set(440, -30),
                this.bgResult.visible = !1,
                this.bgJackpot = new Sprite(this.GetTexture("bg-jackpot2")),
                this.bgJackpot.anchor.set(.5),
                this.bgJackpot.position.set(360, -170),
                this.bgJackpot.buttonMode = !0,
                this.bgJackpot.interactive = !0,
                this.bgJackpot.on("pointerdown", function() {
                    return r.jackpot.Show()
                });
                var e = new Sprite(this.GetTexture("light-jackpot"));
                e.anchor.set(.5),
                this.bgJackpot.addChild(e),
                this.bgJackPotUser = new Sprite(this.GetTexture("bg-jackpot")),
                this.bgJackPotUser.anchor.set(.5),
                this.bgJackPotUser.position.set(345, -142),
                this.bgJackPotUser.buttonMode = !0,
                this.bgJackPotUser.interactive = !0,
                this.bgJackPotUser.on("pointerdown", function() {
                    return r.jackpot.Show()
                }),
                this.txtPercent = new PIXI.Text("0%",{
                    fontFamily: this.fontRoboto,
                    fontSize: 12,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                }),
                this.txtPercent.anchor.set(.5),
                this.txtPercent.position.set(-40, -2),
                this.bgJackPotUser.addChild(this.txtPercent),
                this.txtJackpotFund = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 16,
                    fontWeight: "bold",
                    fill: ["white", "yellow"],
                    padding: 10
                }),
                this.txtJackpotFund.anchor.set(0, .5),
                this.txtJackpotFund.position.set(360, -170),
                this.txtJackpotFund.buttonMode = !0,
                this.txtJackpotFund.interactive = !0,
                this.txtJackpotFund.on("pointerdown", function() {
                    return r.jackpot.Show()
                }),
                this.txtJackpotValue = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 12,
                    fontWeight: "bold",
                    fill: ["white", "yellow"],
                    padding: 10
                }),
                this.txtJackpotValue.anchor.set(0, .5),
                this.txtJackpotValue.position.set(325, -144),
                this.txtJackpotValue.buttonMode = !0,
                this.txtJackpotValue.interactive = !0,
                this.txtJackpotValue.on("pointerdown", function() {
                    return r.jackpot.Show()
                });
                var i = new Sprite(this.GetTexture("total-bet"));
                i.anchor.set(.5),
                i.position.set(360, 155);
                var o = new PIXI.Text(Message.GetMessage("ca164"),{
                    fontFamily: this.fontRoboto,
                    fontSize: 12,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                o.anchor.set(.5),
                o.position.set(330, 155),
                this.totalBet = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 14,
                    fontWeight: "bold",
                    fill: ["white", "yellow"],
                    padding: 10
                }),
                this.totalBet.anchor.set(0, .5),
                this.totalBet.position.set(370, 155),
                this.bgContainer.addChild(t, this.dealer, this.bgResult, this.bgJackpot, this.bgJackPotUser, this.txtJackpotFund, this.txtJackpotValue, i, o, this.totalBet),
                this.txtStatus = new Sprite(TextureCache["small-bg-notify"]),
                this.txtStatus.anchor.set(.5),
                this.txtStatus.position.set(0, 68),
                this.txtStatus.addChild(new PIXI.Text("thông báo",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 12,
                    fill: "white"
                })),
                this.txtStatus.children[0].anchor.set(.5),
                this.txtStatus.visible = !1;
                for (var n = 0; n < this.playerPos.length; n++) {
                    var a = new Sprite(TextureCache["ic-ad-user"]);
                    a.anchor.set(.5),
                    a.position.set(this.playerPos[n][0], this.playerPos[n][1]),
                    this.bgContainer.addChild(a)
                }
                this.timer = new p.TimerC({
                    radius: 35,
                    bg: "time-green",
                    cir: "time-black",
                    fontSize: 26
                }),
                this.timer.position.set(360, 30),
                this.bgContainer.addChild(this.timer),
                this.mainContainer.addChild(this.bgContainer, this.playerContainer, this.resultContainer, this.buttonContainer, this.moneyContainer, this.chipContainer, this.effectContainer, this.txtStatus)
            }
            ,
            t.prototype.DealerChia = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerChiaBai,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            t.prototype.DealerDown = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerClick,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            t.prototype.DealerNormal = function() {
                var t = this.dealer;
                t.stop(),
                t.interactive = !0,
                t.buttonMode = !0,
                t.loop = !0,
                t.textures = this.framesDealerNormal,
                t.gotoAndPlay(0)
            }
            ,
            t.prototype.InitTip = function() {
                this.tipArr = [],
                this.tipArr.push(Message.GetMessage("ca157")),
                this.tipArr.push(Message.GetMessage("ca166")),
                this.tipArr.push(Message.GetMessage("ca165"))
            }
            ,
            t.prototype.ShowBoxTip = function(t) {
                this.boxTip && this.boxTip.destroy({
                    children: !0
                });
                var e = new PIXI.Text(t,{
                    fontFamily: this.fontFace,
                    fontSize: 14,
                    fill: "white"
                });
                this.boxTip = new Graphics,
                this.boxTip.beginFill(0, .5),
                this.boxTip.drawRoundedRect(0, 0, e.width + 10, e.height + 10, e.height / 2),
                this.boxTip.addChild(e),
                e.position.set(5, 5),
                this.boxTip.position.set(80, -300),
                this.mainContainer.addChild(this.boxTip)
            }
            ,
            t.prototype.ShowTipDealer = function(t) {
                if (p.Util.ClearTimeOut(t.timerTip),
                t.ready) {
                    t.indexTip++,
                    2 < t.indexTip && (t.indexTip = 0);
                    var e = t.tipArr[t.indexTip].replace("{0}", p.Util.ParseMoney(t.roomModel.Value * (0 === t.indexTip ? 1 : 1 === t.indexTip ? 100 : 20)));
                    t.ShowBoxTip(e),
                    t.timerTip = setTimeout(function() {
                        return t.ShowTipDealer(t)
                    }, 2e3)
                }
            }
            ,
            t.prototype.InitTableInfo = function() {
                this.infoContainer = new Container,
                this.mainContainer.addChild(this.infoContainer);
                var t = this.roomModel;
                this.btnBack = new Sprite(TextureCache["btn-def"]),
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(-460, -this.size[1] / 2 + 25),
                this.btnBack.addChild(new Sprite(TextureCache["ic-back"])),
                this.btnBack.children[0].anchor.set(.5),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.BtnBackOver).on("pointerout", this.BtnBackOut).on("pointerdown", this.BtnBackDown.bind(this.btnBack, this));
                var e = new PIXI.Text(Message.GetMessage(0 === t.Currency ? "tb113" : "tb112") + ": " + p.Util.NumberToString(t.Id, 3),{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                e.anchor.set(0, .5),
                e.position.set(-420, -this.size[1] / 2 + 5);
                var i = new PIXI.Text(Message.GetMessage("ca81").toUpperCase() + p.Util.ParseMoney(t.Value) + " " + Config.MoneyText[t.Currency],{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                i.anchor.set(0, .5),
                i.position.set(-420, -this.size[1] / 2 + 25),
                this.lblSession = new PIXI.Text(Message.GetMessage("ca95").toUpperCase() + " #",{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                }),
                this.lblSession.anchor.set(0, .5),
                this.lblSession.position.set(-420, -this.size[1] / 2 + 45),
                this.infoContainer.addChild(this.btnBack, e, i, this.lblSession)
            }
            ,
            t.prototype.InitGates = function() {
                this.gates = [],
                this.gateContainer = new Container,
                this.mainContainer.addChild(this.gateContainer),
                this.InitGate(13, {
                    x: -420,
                    y: -100
                });
                for (var n = 0, t = function(e) {
                    var t = a.gateConfig.find(function(t) {
                        return t.values == e
                    });
                    if (!t)
                        return "continue";
                    var i = {
                        y: (e - 1) % 3 == 0 ? -50 : (e - 1) % 3 == 1 ? -100 : -150,
                        x: 50 * n - 370
                    };
                    (e - 1) % 3 == 2 && n++;
                    var o = t.id;
                    a.InitGate(o, i, String(e))
                }, a = this, e = 1; e <= 36; e++)
                    t(e);
                for (e = 10; e < 13; e++) {
                    var i = {
                        x: 202 * (e - 10) - 300,
                        y: 2
                    }
                      , o = 10 == e ? "1-12" : 11 == e ? "13-24" : "25-36";
                    this.InitGate(e, i, o)
                }
                var r = [{
                    GateID: 5,
                    txt: "1-18",
                    txtX: 27
                }, {
                    GateID: 2,
                    txt: Message.GetMessage("ca243").toUpperCase(),
                    txtX: 35
                }, {
                    GateID: 4,
                    txt: ""
                }, {
                    GateID: 3,
                    txt: ""
                }, {
                    GateID: 1,
                    txt: Message.GetMessage("ca242").toUpperCase(),
                    txtX: 19
                }, {
                    GateID: 6,
                    txt: "19-36",
                    txtX: 21
                }];
                for (e = 0; e < r.length; e++) {
                    var s = r[e]
                      , c = s.GateID
                      , l = s.txt;
                    i = {
                        x: 100 * e - 350,
                        y: 55
                    };
                    this.InitGate(c, i, l)
                }
                for (e = 7; e <= 9; e++) {
                    i = {
                        x: 230,
                        y: -50 - 50 * (e - 7)
                    },
                    o = 7 == e ? "1st" : 8 == e ? "2nd" : "3rd";
                    this.InitGate(e, i, o)
                }
                for (e = 1; e <= 3; e++)
                    this.BindDoubleGate(this, e);
                this.BindTrippleGate(this),
                this.BindFourGate(this),
                this.bindSixGate(this)
            }
            ,
            t.prototype.GateOver = function(t, e) {
                t.ShowToolTip(e),
                this.getChildAt(0).visible = !0
            }
            ,
            t.prototype.GateOut = function(t) {
                t.toolTip.visible = !1,
                this.getChildAt(0).visible = !1
            }
            ,
            t.prototype.GateDown = function(e, t, i) {
                1 == i.roomModel.Session.Phrase && (e.hub.connection.invoke("Bet", e.betValue, t).then(function(t) {
                    0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                }),
                e.toolTip.visible = !1)
            }
            ,
            t.prototype.DisableGates = function() {
                for (var t = 0; t < this.gates.length; t++)
                    this.gates[t].interactive = !1,
                    this.gates[t].buttonMode = !1
            }
            ,
            t.prototype.EnableGates = function() {
                for (var t = 0; t < this.gates.length; t++)
                    this.gates[t].interactive = !0,
                    this.gates[t].buttonMode = !0
            }
            ,
            t.prototype.BtnBackOver = function() {
                this.texture = TextureCache["btn-def-h"]
            }
            ,
            t.prototype.BtnBackOut = function() {
                this.texture = TextureCache["btn-def"]
            }
            ,
            t.prototype.BtnBackDown = function(e) {
                e.hub.connection.invoke("ExitRoom").then(function(t) {
                    console.log("ExitRoom", t),
                    0 === t.c ? (e.Delete(),
                    App.handleBack()) : e.RegisterLeave(t.r)
                })
            }
            ,
            t.prototype.InitButton = function() {
                this.buttonContainer = new Container,
                this.mainContainer.addChild(this.buttonContainer),
                this.btnReady = new Sprite(TextureCache["btn-game-normal"]),
                this.btnReady.name = "btn-game-normal",
                this.btnReady.anchor.set(.5),
                this.btnReady.position.set(450, 290),
                this.btnReady.addChild(new PIXI.Text(Message.GetMessage("ca153").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnReady.getChildAt(0).anchor.set(.5),
                this.btnReady.getChildAt(0).position.set(0, 0),
                this.btnReady.interactive = !0,
                this.btnReady.buttonMode = !0,
                this.btnReady.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnReadyClick.bind(this.btnReady, this)),
                this.btnX2 = new Sprite(TextureCache["btn-game-normal"]),
                this.btnX2.name = "btn-game-normal",
                this.btnX2.anchor.set(.5),
                this.btnX2.position.set(310, 290),
                this.btnX2.addChild(new PIXI.Text(Message.GetMessage("ca99").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnX2.getChildAt(0).anchor.set(.5),
                this.btnX2.getChildAt(0).position.set(0, 0),
                this.btnX2.interactive = !0,
                this.btnX2.buttonMode = !0,
                this.btnX2.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnX2Click.bind(this.btnX2, this)),
                this.btnReBet = new Sprite(TextureCache["btn-game-normal"]),
                this.btnReBet.name = "btn-game-normal",
                this.btnReBet.anchor.set(.5),
                this.btnReBet.position.set(170, 290),
                this.btnReBet.addChild(new PIXI.Text(Message.GetMessage("ca98").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnReBet.getChildAt(0).anchor.set(.5),
                this.btnReBet.getChildAt(0).position.set(0, 0),
                this.btnReBet.interactive = !0,
                this.btnReBet.buttonMode = !0,
                this.btnReBet.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnReBetClick.bind(this.btnReBet, this)),
                this.btnCancel = new Sprite(TextureCache["btn-game-normal"]),
                this.btnCancel.name = "btn-game-normal",
                this.btnCancel.anchor.set(.5),
                this.btnCancel.position.set(30, 290),
                this.btnCancel.addChild(new PIXI.Text(Message.GetMessage("ca154").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnCancel.getChildAt(0).anchor.set(.5),
                this.btnCancel.getChildAt(0).position.set(0, 0),
                this.btnCancel.interactive = !0,
                this.btnCancel.buttonMode = !0,
                this.btnCancel.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnCancelClick.bind(this.btnCancel, this)),
                this.buttonContainer.addChild(this.btnReady, this.btnX2, this.btnReBet, this.btnCancel)
            }
            ,
            t.prototype.DisableButton = function(t) {
                t.interactive = !1,
                t.buttonMode = !1,
                t.texture = TextureCache[t.name.replace("normal", "disable")]
            }
            ,
            t.prototype.EnableButton = function(t) {
                t.interactive = !0,
                t.buttonMode = !0,
                t.texture = TextureCache[t.name],
                t.visible = !0
            }
            ,
            t.prototype.DisableButtons = function() {
                this.DisableButton(this.btnReady),
                this.DisableButton(this.btnReBet),
                this.DisableButton(this.btnX2),
                this.DisableButton(this.btnCancel)
            }
            ,
            t.prototype.BtnHover = function() {
                this.texture = TextureCache[this.name.replace("normal", "hover")]
            }
            ,
            t.prototype.BtnOut = function() {
                this.texture = TextureCache[this.name]
            }
            ,
            t.prototype.BtnDown = function() {
                this.texture = TextureCache[this.name.replace("normal", "click")]
            }
            ,
            t.prototype.BtnReadyClick = function(e) {
                e.hub.connection.invoke("FinishBetting").then(function(t) {
                    console.log("FinishBetting", t),
                    0 <= t.c && e.ConfirmBet(t.r)
                })
            }
            ,
            t.prototype.BtnX2Click = function(e) {
                for (var t = function(t) {
                    0 < e.lastCurrentBet[t] && setTimeout(function() {
                        e.hub.connection.invoke("Bet", 2 * e.lastCurrentBet[t], t + 1).then(function(t) {
                            0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                        })
                    }, 20 * t)
                }, i = 0; i < e.lastCurrentBet.length; i++)
                    t(i)
            }
            ,
            t.prototype.BtnCancelClick = function(e) {
                e.hub.connection.invoke("ClearBetting").then(function(t) {
                    console.log("ClearBetting", t),
                    0 <= t.c && e.ClearBet(t.r)
                })
            }
            ,
            t.prototype.BtnReBetClick = function(e) {
                for (var t = function(t) {
                    0 < e.lastCurrentBet[t] && setTimeout(function() {
                        e.hub.connection.invoke("Bet", e.lastCurrentBet[t], t + 1).then(function(t) {
                            0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                        })
                    }, 20 * t)
                }, i = 0; i < e.lastCurrentBet.length; i++)
                    t(i)
            }
            ,
            t.prototype.InitBet = function() {
                this.boxBet = new Graphics,
                this.boxBet.beginFill(0),
                this.boxBet.drawRoundedRect(0, 0, 416, 72, 36),
                this.boxBet.position.set(-490, 251),
                this.buttonContainer.addChild(this.boxBet),
                this.arrBetChip = [],
                this.arrBetText = [];
                for (var t = this.chipConfig[this.roomModel.Currency][this.roomModel.Value], e = 0; e < t.length; e++) {
                    var i = new Sprite(TextureCache[t[e].img]);
                    i.anchor.set(.5),
                    i.position.set(this.arrBetPos[e].x, this.arrBetPos[e].y),
                    i.scale.set(this.arrBetPos[e].s),
                    i.value = t[e].value,
                    i.posY = this.arrBetPos[e].y,
                    i.active = !1,
                    i.i = e,
                    i.interactive = !0,
                    i.buttonMode = !0,
                    i.on("pointerover", this.ChipOver).on("pointerout", this.ChipOut).on("pointerdown", this.ChipDown.bind(i, this));
                    var o = new PIXI.Text(t[e].number,{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: ["white"],
                        padding: 10,
                        align: "center"
                    });
                    o.anchor.set(.5),
                    o.position.set(this.arrBetPos[e].x, this.arrBetPos[e].y + 30),
                    this.boxBet.addChild(i, o),
                    this.arrBetChip.push(i),
                    this.arrBetText.push(o)
                }
                this.SetActiveBet(this, this.arrBetChip[0])
            }
            ,
            t.prototype.ChipOver = function() {
                this.y = this.posY - 5
            }
            ,
            t.prototype.ChipOut = function() {
                this.active || (this.y = this.posY)
            }
            ,
            t.prototype.ChipDown = function(t) {
                t.ResetBet(t),
                t.SetActiveBet(t, this)
            }
            ,
            t.prototype.ResetBet = function(t) {
                for (var e = 0; e < t.arrBetChip.length; e++)
                    t.arrBetChip[e].y = t.arrBetChip[e].posY,
                    t.arrBetChip[e].active = !1,
                    t.arrBetText[e].style.fill = "white"
            }
            ,
            t.prototype.SetActiveBet = function(t, e) {
                e.active = !0,
                e.y = e.posY - 5,
                t.arrBetText[e.i].style.fill = "yellow",
                t.betValue = e.value
            }
            ,
            t.prototype.InitPopup = function() {
                this.toolTip = new Sprite(TextureCache["roulette-popup.png"]),
                this.toolTip.anchor.set(.5),
                this.toolTip.position.set(this.size[0] / 2, this.size[1] / 2),
                this.buttonContainer.addChild(this.toolTip),
                this.toolDes = new PIXI.Text("",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["yellow"],
                    padding: 10,
                    wordWrap: !0,
                    wordWrapWidth: 150
                }),
                this.toolDes.anchor.set(0),
                this.toolDes.position.set(-65, -65),
                this.toolTip.addChild(this.toolDes);
                var t = new PIXI.Text(Config.MoneyText[this.roomModel.Currency] + " " + Message.GetMessage("ca126") + ": ",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                this.toolTip.addChild(t),
                t.position.set(-65, -30);
                var e = new PIXI.Text(Message.GetMessage("ca164").toUpperCase(),{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                this.toolTip.addChild(e),
                e.position.set(-65, -10);
                var i = new PIXI.Text("MAX: ",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                this.toolTip.addChild(i),
                i.position.set(-65, 10);
                var o = new PIXI.Text(Message.GetMessage("ca225").toUpperCase(),{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                });
                this.toolTip.addChild(o),
                o.position.set(-65, 30),
                this.txtGold = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["#c33768"],
                    padding: 10
                }),
                this.txtToTalBet = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["#c33768"],
                    padding: 10
                }),
                this.txtMax = new PIXI.Text("0",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["#c33768"],
                    padding: 10
                }),
                this.txtRateEat = new PIXI.Text("",{
                    fontFamily: this.fontRoboto,
                    fontSize: 13,
                    fontWeight: "bold",
                    fill: ["#c33768"],
                    padding: 10
                }),
                this.toolTip.addChild(this.txtGold, this.txtToTalBet, this.txtMax, this.txtRateEat),
                this.txtGold.position.set(30, -30),
                this.txtToTalBet.position.set(30, -10),
                this.txtMax.position.set(30, 10),
                this.txtRateEat.position.set(30, 30),
                this.toolTip.visible = !1
            }
            ,
            t.prototype.ShowToolTip = function(e) {
                console.log("ShowToolTip", e),
                this.toolDes.text = Message.GetMessage("roulette.id." + e).toUpperCase();
                for (var t = this.GetPlayerByAccountId(this.currentPlayer.AccountId), i = this.gateTotalBet[t.pos][e - 1], o = 0, n = 0; n < this.gateTotalBet.length; n++)
                    o += this.gateTotalBet[n][e - 1];
                this.txtGold.text = p.Util.ParseMoney(i),
                this.txtToTalBet.text = p.Util.ParseMoney(o),
                this.txtMax.text = p.Util.ParseMoney(this.gateConfig[e - 1].max_factor * this.roomModel.Value),
                this.txtRateEat.text = "1 : " + this.gateConfig[e - 1].fund_rate,
                this.toolTip.visible = !0;
                var a = this.gates.find(function(t) {
                    return t.id == e
                });
                a && this.toolTip.position.set(a.x + a.width / 2 + this.toolTip.width / 2, a.y - a.height / 2 + this.toolTip.height / 2)
            }
            ,
            t.prototype.GetTextureMoney = function(t) {
                var e, i = this.chipConfig[this.roomModel.Currency][this.roomModel.Value];
                return i[0].value <= t && t < i[1].value ? e = i[0].img : i[1].value <= t && t < i[2].value ? e = i[1].img : i[2].value <= t && t < i[3].value ? e = i[2].img : i[3].value <= t && t < i[4].value ? e = i[3].img : t >= i[4].value && (e = i[4].img),
                e
            }
            ,
            t.prototype.InitHistory = function() {
                $(".roulette").remove();
                document.getElementById(this.target).innerHTML += '<div class="roulette"><div class="show-statistic-game resizeable" style="zoom: 1; z-index: 1;"><a href="javascript: ;" class="btn-close-statistic"><span></span></a><div class="list-result-roulette" rel="1" id="ro-roadmap-1"><ul class="ro-ul" rel="1"></ul><ul class="ro-ul" rel="2" style="display:none"></ul></div></div></div>',
                $(".roulette .show-statistic-game").addClass("active"),
                $(".roulette .show-statistic-game.active").css("width", "340px"),
                $(".roulette .show-statistic-game").unbind("hover").hover(function(t) {
                    $(t.target).is("a") || ($(".roulette .show-statistic-game.active").css("width", "715px"),
                    $("#ro-roadmap-1 .ro-ul[rel=1]").hide(),
                    $("#ro-roadmap-1 .ro-ul[rel=2]").show())
                }, function(t) {
                    $(t.target).is("a") || ($(".roulette .show-statistic-game.active").css("width", "340px"),
                    $("#ro-roadmap-1 .ro-ul[rel=1]").show(),
                    $("#ro-roadmap-1 .ro-ul[rel=2]").hide())
                }),
                $(".btn-close-statistic").unbind("click").click(function() {
                    $(".roulette .show-statistic-game").is(":visible") ? $(".roulette .show-statistic-game").hide() : ($(".roulette .show-statistic-game").show(),
                    $(".roulette .show-statistic-game").addClass("active"))
                }),
                this.GetHistory(this.roomModel.Id)
            }
            ,
            t.prototype.GetHistory = function(t) {
                var o = this;
                this.hub.connection.invoke("GetGameHistory", t).then(function(t) {
                    console.log("GetHistory", t);
                    var e = t.c
                      , i = t.r;
                    0 <= e && o.bindHistory(i)
                })
            }
            ,
            t.prototype.CheckBet = function() {
                try {
                    if (this.roomModel.Session) {
                        var t = this.roomModel.Session.BetLogs;
                        if (t && 0 < t.length) {
                            for (var e = 0; e < t.length; e++)
                                t[e].id = t[e].AccountId,
                                this.Bet(t[e], !0);
                            for (e = 0; e < t.length; e++)
                                if (t[e].AccountId === this.currentPlayer.AccountId) {
                                    this.EnableButton(this.btnCancel),
                                    this.EnableButton(this.btnReady);
                                    break
                                }
                        }
                    }
                } catch (t) {
                    console.error(t)
                }
            }
            ,
            t.prototype.StartBet = function() {
                this.timer.StartTimer(21, this.roomModel.Session.Timeout),
                this.EnableGates(),
                this.boxBet.visible = !0;
                for (var t = 0; t < this.lastCurrentBet.length; t++)
                    0 < this.lastCurrentBet[t] && (this.EnableButton(this.btnReBet),
                    this.EnableButton(this.btnX2))
            }
            ,
            t.prototype.ConfirmBet = function(t) {
                var e = this.GetPlayerByAccountId(t.id);
                e && (e.icReady.visible = !0,
                e.accountId === this.currentPlayer.AccountId && (this.DisableButtons(),
                this.boxBet.visible = !1))
            }
            ,
            t.prototype.ClearBet = function(t) {
                var e = this.GetPlayerByAccountId(t.id);
                if (e) {
                    for (var i = 0; i < e.betContainer.children.length; i++)
                        e.betContainer.children[i].visible = !1;
                    var o = 0;
                    for (i = 0; i < this.gateTotalBet[e.pos].length; i++)
                        o += this.gateTotalBet[e.pos][i],
                        0 < this.gateTotalBet[e.pos][i] && e.UndoChip(this.gateTotalBet[e.pos][i], i);
                    e.player.Balance += o;
                    var n = new PIXI.Text("+" + p.Util.ParseMoney(o),{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: "yellow"
                    });
                    n.anchor.set(.5),
                    n.position.set(e.avatar.x, e.avatar.y),
                    e.betContainer.addChild(n),
                    TweenMax.to(n, .8, {
                        y: n.y - 80,
                        onComplete: function() {
                            n.visible = !1
                        }
                    }),
                    e.UpdateBalance(e.player.Balance),
                    e.icReady.visible = !1;
                    var a = [];
                    for (i = 0; i < this.gateConfig.length; i++)
                        a = a.concat([0]);
                    if (this.gateTotalBet[e.pos] = a,
                    e.accountId === this.currentPlayer.AccountId) {
                        this.DisableButtons(),
                        this.boxBet.visible = !0,
                        this.totalBet.text = "0";
                        for (i = 0; i < this.lastCurrentBet.length; i++)
                            0 < this.lastCurrentBet[i] && (this.EnableButton(this.btnReBet),
                            this.EnableButton(this.btnX2))
                    }
                }
            }
            ,
            t.prototype.Bet = function(t, e) {
                void 0 === e && (e = !1);
                var i = this.GetPlayerByAccountId(null != t.id ? t.id : t.Id);
                i && (i.Bet(t, e),
                i.accountId === this.currentPlayer.AccountId && (this.EnableButton(this.btnReady),
                this.EnableButton(this.btnCancel),
                this.DisableButton(this.btnReBet),
                this.DisableButton(this.btnX2)))
            }
            ,
            t.prototype.CreateDice = function() {
                var t = this
                  , e = this;
                this.dice = new Container,
                this.wheel = new u.Wheel(this),
                this.ShowBoxTip(Message.GetMessage("me18").toUpperCase());
                var i = this.roomModel.Session.Result;
                console.log("CreateDice", i),
                this.dice.position.set(362, 32),
                this.bgContainer.addChild(this.dice),
                setTimeout(function() {
                    t.wheel.spin(i.Value, function() {
                        e.ProcessResult()
                    })
                }, 500)
            }
            ,
            t.prototype.ProcessResult = function() {
                var t = this;
                this.GetHistory(this.roomModel.Id),
                this.ShowBoxTip(Message.GetMessage("me18")),
                this.timerResult = setTimeout(function() {
                    return t.WinGates()
                }, 10 <= this.roomModel.Session.Timeout ? 1e3 : this.roomModel.Session.Timeout <= 5 ? 0 : 500)
            }
            ,
            t.prototype.WinGates = function() {
                var t = this;
                p.Util.ClearTimeOut(this.timerResult);
                for (var a = this.roomModel.Session.Result.WinGates, e = function(t) {
                    var e = a[t]
                      , i = r.gates.find(function(t) {
                        return t.id == e
                    })
                      , o = i.name + "-active.png"
                      , n = new Sprite(TextureCache[o]);
                    if (n.anchor.set(.5),
                    n.position.set(i.x, i.y),
                    50 <= e)
                        return "continue";
                    if (r.moneyContainer.addChild(n),
                    i)
                        try {
                            TweenMax.to(n, .3, {
                                data: "roulette",
                                alpha: .4,
                                yoyo: !0,
                                repeat: 19
                            })
                        } catch (t) {}
                }, r = this, i = 0; i < a.length; i++)
                    e(i);
                this.timerPrize = setTimeout(function() {
                    return t.UpdatePrizes()
                }, 10 <= this.roomModel.Session.Timeout ? 1500 : this.roomModel.Session.Timeout <= 5 ? 0 : 500)
            }
            ,
            t.prototype.UpdatePrizes = function() {
                for (var n = this.roomModel.Session.Result.WinGates, t = 0; t < this.gateTotalBet.length; t++) {
                    var e = this.gateTotalBet[t];
                    if (o = this.GetPlayerByPosition(t))
                        for (var i = 0; i < e.length; i++)
                            0 < e[i] && !n.includes(i + 1) && o.MoneyToDealer(i, e[i])
                }
                for (t = 0; t < this.gateTotalBet.length; t++) {
                    var o;
                    e = this.gateTotalBet[t];
                    if (o = this.GetPlayerByPosition(t))
                        for (i = 0; i < e.length; i++)
                            0 < e[i] && n.includes(i + 1) && o.MoneyFromDealer(i, e[i])
                }
                var a = this;
                setTimeout(function() {
                    for (var t = 0; t < a.gateTotalBet.length; t++) {
                        var e = a.gateTotalBet[t]
                          , i = a.GetPlayerByPosition(t);
                        if (i)
                            for (var o = 0; o < e.length; o++)
                                0 < e[o] && n.includes(o + 1) && i.MoneyToPlayer(o, e[o])
                    }
                    a.MoneyWin()
                }, 500)
            }
            ,
            t.prototype.MoneyWin = function() {
                for (var t = this.roomModel.Session.Prizes, e = 0; e < this.players.length; e++)
                    if (this.players[e]) {
                        for (var i = this.players[e], o = !1, n = 0; n < this.gateTotalBet[i.pos].length; n++)
                            if (0 < this.gateTotalBet[i.pos][n]) {
                                o = !0;
                                break
                            }
                        if (o)
                            if (t && 0 < t.length) {
                                var a = 0
                                  , r = 0;
                                for (n = 0; n < this.gateTotalBet[i.pos].length; n++)
                                    a += this.gateTotalBet[i.pos][n];
                                for (var s = 0; s < t.length; s++)
                                    i.accountId === t[s].AccountId && (r += t[s].TotalPrize);
                                console.log(a, r),
                                i.player.Balance += r,
                                0 < r && i.UpdateMoney(r),
                                i.UpdateBalance(i.player.Balance),
                                i.ShowWin(0 < r)
                            } else
                                i.ShowWin(!1)
                    }
                var c = this;
                this.roomModel.Session.JackpotPrizes && (this.timerWinJackpot = setTimeout(function() {
                    return c.WinJackpot()
                }, 10 <= this.roomModel.Session.Timeout ? 3e3 : this.roomModel.Session.Timeout <= 5 ? 0 : 1e3)),
                this.auto && ($(".show-statistic-game").addClass("active"),
                $(".show-statistic-game").show())
            }
            ,
            t.prototype.WinJackpot = function() {
                p.Util.ClearTimeOut(this.timerWinJackpot),
                p.Util.ClearTimeOut(this.timerOut);
                var t = new Sprite(this.GetTexture("bg-effect-jackpot2"));
                t.anchor.set(.5),
                t.position.set(0, -40),
                this.moneyContainer.addChild(t);
                var e = new Sprite(this.GetTexture("t-jackpot-"));
                e.anchor.set(.5),
                e.position.set(0, -40),
                this.moneyContainer.addChild(e);
                var i = new Sprite(this.GetTexture("light-effect-jackpot4"));
                i.anchor.set(.5),
                i.position.set(-t.width / 2, -60),
                this.moneyContainer.addChild(i);
                var o = new Sprite(this.GetTexture("light-effect-jackpot4"));
                o.anchor.set(.5),
                o.position.set(t.width / 2, -20),
                this.moneyContainer.addChild(o);
                for (var n = this.roomModel.Session.JackpotPrizes.Details, a = 0; a < n.length; a++) {
                    var r = this.GetPlayerByAccountId(n[a].AccountId ? n[a].AccountId : n[a].AccountID);
                    if (r) {
                        var s = new Sprite(this.GetTexture("light-effect-jackpot3"));
                        s.anchor.set(.5),
                        s.position.set(r.avatar.x, r.avatar.y);
                        var c = new Sprite(this.GetTexture("light-effect-jackpot"));
                        c.anchor.set(.5),
                        c.position.set(r.avatar.x, r.avatar.y);
                        var l = new Sprite(this.GetTexture("light-effect-jackpot2"));
                        l.anchor.set(.5),
                        l.alpha = .4,
                        l.position.set(r.avatar.x, r.avatar.y);
                        var u = new Sprite(this.GetTexture("bg-effect-jackpot"));
                        u.anchor.set(.5),
                        u.position.set(r.avatar.x, r.avatar.y);
                        var h = new PIXI.Text(Message.GetMessage("mts7").toUpperCase(),{
                            fontFamily: this.fontRoboto,
                            fontStyle: "italic",
                            fontSize: 24,
                            fontWeight: "bold",
                            fill: ["#653b00"],
                            padding: 30
                        });
                        h.anchor.set(.5),
                        h.position.set(r.avatar.x, r.avatar.y);
                        var d = new PIXI.Text("+" + p.Util.ParseMoney(n[a].prizeValue ? n[a].prizeValue : n[a].PrizeValue),{
                            fontFamily: this.fontRoboto,
                            fontSize: 24,
                            fontWeight: "bold",
                            fill: ["yellow", "white"],
                            padding: 30
                        });
                        d.position.set(r.avatar.x, r.avatar.y),
                        d.anchor.set(.5),
                        this.moneyContainer.addChild(s, c, l, u, h, d);
                        try {
                            TweenMax.to(s, 1, {
                                data: "roulette",
                                rotation: 360,
                                repeat: 3
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(c, .5, {
                                data: "roulette",
                                alpha: .4,
                                repeat: 11,
                                yoyo: !0
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(l, .5, {
                                data: "roulette",
                                alpha: 1,
                                repeat: 11,
                                yoyo: !0
                            })
                        } catch (t) {}
                        try {
                            TweenMax.to(d, .5, {
                                data: "roulette",
                                y: d.y - 80,
                                ease: Back.easeOut
                            })
                        } catch (t) {}
                        r.player.Balance += n[a].prizeValue ? n[a].prizeValue : n[a].PrizeValue,
                        r.UpdateBalance(r.player.Balance)
                    }
                }
                try {
                    TweenMax.to(i, .5, {
                        data: "roulette-effect",
                        x: t.width / 2,
                        repeat: 3,
                        yoyo: !0
                    })
                } catch (t) {}
                try {
                    TweenMax.to(o, .5, {
                        data: "roulette-effect",
                        x: -t.width / 2,
                        repeat: 3,
                        yoyo: !0
                    })
                } catch (t) {}
            }
            ,
            t.prototype.HideReady = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && (this.players[t].icReady.visible = !1)
            }
            ,
            t.prototype.ResetGame = function() {
                for (this.ResetWheel(),
                this.DeleteT(),
                this.toolTip.visible = !1,
                this.totalBet.text = "0",
                this.timer.ClearTimer(),
                this.bgResult.visible = !1; 0 < this.moneyContainer.children.length; )
                    try {
                        this.moneyContainer.children[0].destroy({
                            children: !0
                        })
                    } catch (t) {}
                p.Util.ClearTimeOut(this.timerTip);
                var t = this.GetPlayerByAccountId(this.currentPlayer.AccountId);
                t && this.gateTotalBet[t.pos] && (this.lastCurrentBet = this.gateTotalBet[t.pos].slice(0)),
                this.InitConfig();
                for (var e = 0; e < this.players.length; e++)
                    this.players[e] && this.players[e].Reset()
            }
            ,
            t.prototype.Stop = function() {
                this.hub.ExitGame(),
                this.hub.connection.stop()
            }
            ,
            t.prototype.ClearTimer = function() {
                p.Util.ClearTimeOut(this.timerPrize),
                p.Util.ClearTimeOut(this.timerDice),
                p.Util.ClearTimeOut(this.timerTip),
                p.Util.ClearTimeOut(this.timerResult),
                p.Util.ClearTimeOut(this.timerDelete),
                p.Util.ClearTimeOut(this.timerWinJackpot)
            }
            ,
            t.prototype.DeleteTimer = function() {
                p.Util.ClearTimeOut(this.timerPrize),
                p.Util.ClearTimeOut(this.timerDice),
                p.Util.ClearTimeOut(this.timerTip),
                p.Util.ClearTimeOut(this.timerResult),
                p.Util.ClearTimeOut(this.timerDelete),
                p.Util.ClearTimeOut(this.timerWinJackpot)
            }
            ,
            t.prototype.DeleteT = function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "roulette" === t[e].data && t[e].kill()
            }
            ,
            t.prototype.Delete = function() {
                p.Util.UnloadCSS("/assets/css/roulette.css"),
                p.Util.ClearTimeOut(this.timerOut),
                p.Util.ClearTimeOut(this.timerStatus),
                p.Util.ClearTimeOut(this.timerTip),
                window.removeEventListener("resize", this.resizeFunc),
                r.jackpot.jackpotFund = null,
                r.jackpot.jackpotValue = null,
                this.DeleteT(),
                this.DeleteTimer();
                try {
                    this.application.view.remove(),
                    this.application.destroy(!0),
                    this.target.html(""),
                    $(".roulette").remove()
                } catch (t) {}
            }
            ,
            t
        }(l.variable);
        e.games = h
    }
    , function(t, i, e) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = e(0);
        i.jackpot = {
            timerJackpot: null,
            jackpotFund: null,
            jackpotValue: null,
            Show: function() {},
            GetJackpot: function(e) {
                o.Util.ClearTimeOut(i.jackpot.timerJackpot),
                console.log(e),
                e.hub.connection.invoke("GetJackpot", e.roomModel.Currency, e.roomModel.Value).then(function(t) {
                    console.log("jackpot", t),
                    0 <= t.c && t.r && t.r.jackpotFund && t.r.jackpotValue && (i.jackpot.CountJackpotFund(e, t.r.jackpotFund),
                    i.jackpot.CountJackpotValue(e, t.r.jackpotValue),
                    i.jackpot.UpdatePercent(e, t.r.rate / 10))
                }),
                i.jackpot.timerJackpot = setTimeout(function() {
                    return i.jackpot.GetJackpot(e)
                }, 2e4)
            },
            CountJackpotFund: function(t, e) {
                null === i.jackpot.jackpotFund ? (i.jackpot.jackpotFund = new o.Util.CountUp(t.txtJackpotFund,!0,!1,0,e,0,1),
                i.jackpot.jackpotFund.start()) : i.jackpot.jackpotFund.update(e)
            },
            CountJackpotValue: function(t, e) {
                null === i.jackpot.jackpotValue ? (i.jackpot.jackpotValue = new o.Util.CountUp(t.txtJackpotValue,!0,!1,0,e,0,1),
                i.jackpot.jackpotValue.start()) : i.jackpot.jackpotValue.update(e)
            },
            UpdatePercent: function(t, e) {
                t.txtPercent.text = e + "%"
            }
        }
    }
    , function(t, e, i) {
        "use strict";
        var o, n = this && this.__extends || (o = function(t, e) {
            return (o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            o(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = function(e) {
            function t() {
                var t = e.call(this) || this;
                return t.assets = [{
                    id: "roulette-table-1",
                    src: "/assets/images/roulette/table-vip.png"
                }, {
                    id: "roulette-table-0",
                    src: "/assets/images/roulette/table-xu.png"
                }, {
                    id: "",
                    src: "/assets/images/common/common-casino.json"
                }, {
                    id: "",
                    src: "/assets/images/common/dealer.json"
                }, {
                    id: "",
                    src: "/assets/images/roulette/asset.json"
                }],
                t.add(t.assets),
                t
            }
            return n(t, e),
            t
        }(i(0).Assets);
        e.default = a
    }
    , function(t, e, i) {
        "use strict";
        var o, n = this && this.__extends || (o = function(t, e) {
            return (o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            o(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = i(0)
          , r = i(6)
          , s = function(o) {
            function t(t, e, i) {
                return o.call(this, t, e, i) || this
            }
            return n(t, o),
            t.prototype.Connect = function(t, e) {
                var i = this;
                this.connection = (new r.HubConnectionBuilder).withUrl(this.url, {
                    accessTokenFactory: function() {
                        return i.token
                    },
                    skipNegotiation: !0,
                    transport: r.HttpTransportType.WebSockets
                }).build(),
                this.connection.serverTimeoutInMilliseconds = 1e5,
                this.connection.start().then(function() {
                    console.log("connected"),
                    i.EnterGame(t),
                    i.Listen(),
                    "function" == typeof e && e()
                }).catch(function(t) {
                    return console.error(t)
                })
            }
            ,
            t.prototype.Listen = function() {
                o.prototype.Listen.call(this);
                var e = this;
                e.connection.on("roomData", function(t) {
                    e.game && e.game.JoinGame(t)
                }),
                e.connection.on("joinRoom", function(t) {
                    console.log("joinRoom", t),
                    e.game && e.game.PlayerJoin(t.r)
                }),
                e.connection.on("leaveRoom", function(t) {
                    console.log("leaveRoom", t),
                    e.game && e.game.PlayerLeave(t.r)
                }),
                e.connection.on("registerLeavingRoom", function(t) {
                    console.log("registerLeavingRoom", t),
                    e.game && e.game.RegisterLeave(t.r)
                }),
                e.connection.on("connectionChanged", function(t) {
                    console.log("connectionChanged", t),
                    e.game && e.game.UpdateConnection(t.r)
                }),
                e.connection.on("UpdateHand", function(t) {
                    console.log("updateHand", t)
                }),
                e.connection.on("rejectBetting", function(t) {
                    console.log("rejectBetting", t)
                }),
                e.connection.on("playerBet", function(t) {
                    console.log("playerBet", t),
                    e.game && e.game.Bet(t.r)
                }),
                e.connection.on("clearBetting", function(t) {
                    console.log("clearBetting", t),
                    e.game && e.game.ClearBet(t.r)
                }),
                e.connection.on("confirmBetting", function(t) {
                    console.log("confirmBetting", t),
                    e.game && e.game.ConfirmBet(t.r)
                }),
                e.connection.on("playerOtherDevice", function(t) {
                    console.log("playerOtherDevice", t),
                    e.game && e.game.PlayerOtherDevice(t.r)
                })
            }
            ,
            t.prototype.EnterGame = function(t) {
                var e = this;
                this.connection.invoke("EnterGame", t).then(function(t) {
                    if (console.log("EnterGame", t),
                    t.c < 0)
                        return -10004 === t.c && (t.c = 10014),
                        App.showPopupMessage({
                            content: Message.GetMessage((10014 === t.c ? "me" : "ca") + t.c),
                            textDone: "OK"
                        }),
                        void App.handleBack();
                    if (1 === t.c) {
                        if (!e.game)
                            return;
                        e.game.EnterGame(t)
                    }
                })
            }
            ,
            t.prototype.ExitGame = function() {
                this.connection.invoke("ExitGame").then(function(t) {
                    console.log("ExitGame", t)
                })
            }
            ,
            t.prototype.EnterRoom = function(t, e) {
                var i = this;
                this.connection.invoke("EnterRoom", t, e).then(function(t) {
                    console.log("EnterRoom", t),
                    i.game && i.game.EnterGame(t)
                })
            }
            ,
            t.prototype.ExitRoom = function() {
                this.connection.invoke("ExitRoom").then(function(t) {
                    console.log("ExitRoom", t)
                })
            }
            ,
            t.prototype.ClearBetting = function() {
                this.connection.invoke("ClearBetting").then(function(t) {
                    console.log("ClearBetting", t)
                })
            }
            ,
            t.prototype.FinishBetting = function() {
                this.connection.invoke("FinishBetting").then(function(t) {
                    console.log("FinishBetting", t)
                })
            }
            ,
            t.prototype.GetGameHistory = function(t) {
                this.connection.invoke("GetGameHistory", t).then(function(t) {
                    console.log("GetGameHistory", t)
                })
            }
            ,
            t.prototype.Bet = function(t, e) {
                this.connection.invoke("Bet", t, e).then(function(t) {
                    console.log("Bet", t)
                })
            }
            ,
            t
        }(a.Hub);
        e.default = s
    }
    , function(t, e) {
        t.exports = o
    }
    , function(t, e, i) {
        "use strict";
        var o, n = this && this.__extends || (o = function(t, e) {
            return (o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            o(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var p = i(0)
          , a = function(e) {
            function t(t) {
                var i = e.call(this, t) || this;
                return i.moneyBet = 0,
                i.getGateInfoByID = function(e) {
                    return i.game.gates.find(function(t) {
                        return t.id == e
                    })
                }
                ,
                i.icReady = new Sprite(TextureCache.ready),
                i.icReady.anchor.set(.5),
                i.icReady.position.set(i.avatar.x, i.avatar.y - i.avatar.height / 2),
                i.icReady.visible = !1,
                i.addChild(i.icReady),
                i.Reset(),
                i
            }
            return n(t, e),
            t.prototype.Bet = function(t, e) {
                var i = this;
                void 0 === e && (e = !1);
                var o = void 0 !== t.amount ? t.amount : t.Amount
                  , n = t.gate ? t.gate : t.Gate
                  , a = t.balance ? t.balance : t.Balance ? t.Balance : -1
                  , r = new Sprite(TextureCache[this.game.GetTextureMoney(o)]);
                r.anchor.set(.5),
                r.scale.set(.5),
                r.position.set(this.avatar.x, this.avatar.y),
                this.chipContainer.addChild(r);
                var s = this.getGateInfoByID(n);
                if (s) {
                    var c, l = s.position, u = l.x, h = l.y;
                    e ? r.position.set(u, h) : TweenMax.to(r, .5, {
                        data: "roulette",
                        x: u,
                        y: h
                    }),
                    e || ((c = new PIXI.Text("-" + p.Util.ParseMoney(t.amount ? t.amount : t.Amount),{
                        fontFamily: this.game.fontFaceBold,
                        fontSize: 14,
                        fill: "yellow"
                    })).anchor.set(.5),
                    c.position.set(this.avatar.x, this.avatar.y),
                    this.betContainer.addChild(c),
                    TweenMax.to(c, .5, {
                        data: "roulette",
                        y: c.y - 80
                    }));
                    var d = this;
                    0 <= a && (this.UpdateBalance(a),
                    this.player.Balance = a),
                    setTimeout(function() {
                        r.visible = !1,
                        c && (c.visible = !1),
                        d.CalChip(),
                        d.accountId === i.game.currentPlayer.AccountId && d.UpdateTotalBet()
                    }, 600),
                    this.game.gateTotalBet[this.pos][n - 1] += o
                }
            }
            ,
            t.prototype.UndoChip = function(t, e) {
                try {
                    for (var i = this.getGateInfoByID(e + 1).position, o = i.x, n = i.y, a = 0; a < 10; a++) {
                        var r = new Sprite(TextureCache[this.game.GetTextureMoney(t)]);
                        r.anchor.set(.5),
                        r.scale.set(.5),
                        r.position.set(o, n),
                        this.chipContainer.addChild(r),
                        TweenMax.to(r, .5, {
                            data: "roulette",
                            x: this.avatar.x,
                            y: this.avatar.y,
                            delay: .05 * a,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.UpdateTotalBet = function() {
                for (var t = 0, e = 0; e < this.game.gateTotalBet[this.pos].length; e++)
                    t += this.game.gateTotalBet[this.pos][e];
                this.game.totalBet.text = p.Util.ParseMoney(t)
            }
            ,
            t.prototype.CalChip = function() {
                for (var t = 0; t < this.betContainer.children.length; t++)
                    this.betContainer.children[t].visible = !1;
                for (t = 0; t < this.game.gateTotalBet[this.pos].length; t++) {
                    var e = this.game.gateTotalBet[this.pos][t];
                    if (0 != e) {
                        var i = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        i.anchor.set(.5),
                        i.scale.set(.5);
                        var o = this.getGateInfoByID(t + 1).position
                          , n = o.x
                          , a = o.y;
                        i.position.set(n, a),
                        this.betContainer.addChild(i)
                    }
                }
            }
            ,
            t.prototype.MoneyToDealer = function(t, e) {
                for (var i = 0; i < this.betContainer.children.length; i++)
                    this.betContainer.children[i].x === this.game.gates[t].x && this.betContainer.children[i].y === this.game.gates[t].y && (this.betContainer.children[i].visible = !1);
                try {
                    var o = this.getGateInfoByID(t + 1).position
                      , n = o.x
                      , a = o.y;
                    for (i = 0; i < 10; i++) {
                        var r = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        r.anchor.set(.5),
                        r.scale.set(.5),
                        r.position.set(n, a),
                        this.chipContainer.addChild(r),
                        TweenMax.to(r, 1, {
                            data: "roulette",
                            x: this.game.dealer.x,
                            y: this.game.dealer.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.MoneyFromDealer = function(t, e) {
                try {
                    for (var i = this.getGateInfoByID(t + 1).position, o = i.x, n = i.y, a = 0; a < 10; a++) {
                        var r = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        r.anchor.set(.5),
                        r.scale.set(.5),
                        r.position.set(this.game.dealer.x, this.game.dealer.y),
                        this.chipContainer.addChild(r),
                        TweenMax.to(r, 1, {
                            data: "roulette",
                            x: o,
                            y: n,
                            delay: .05 * a,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.MoneyToPlayer = function(t, e) {
                try {
                    for (var i = this.getGateInfoByID(t + 1).position, o = i.x, n = i.y, a = 0; a < 10; a++) {
                        var r = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                        r.anchor.set(.5),
                        r.scale.set(.5),
                        r.position.set(o, n),
                        this.chipContainer.addChild(r),
                        TweenMax.to(r, 1, {
                            data: "roulette",
                            x: this.avatar.x,
                            y: this.avatar.y,
                            delay: .05 * a,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.UpdateMoney = function(t) {
                var e = new PIXI.Text((0 < t ? "+" : "") + p.Util.ParseMoney(t),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 14,
                    fill: "yellow"
                });
                e.anchor.set(.5),
                e.position.set(this.avatar.x, this.avatar.y),
                this.game.effectContainer.addChild(e),
                TweenMax.to(e, 1.8, {
                    data: "roulette",
                    y: e.y - 80
                }),
                setTimeout(function() {
                    e.visible = !1
                }, 1900)
            }
            ,
            t.prototype.ShowWin = function(t) {
                var e = new Sprite(TextureCache[(t ? "thang-" : "thua-") + this.game.lang]);
                e.anchor.set(.5),
                e.position.set(this.box.x, this.box.y),
                this.betContainer.addChild(e),
                TweenMax.to(e.scale, .3, {
                    data: "roulette",
                    x: 1.2,
                    y: 1.2,
                    yoyo: !0,
                    repeat: 7
                })
            }
            ,
            t.prototype.Reset = function() {
                if (this.chipContainer)
                    try {
                        this.chipContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                if (this.chipContainer = new Container,
                this.game.chipContainer.addChild(this.chipContainer),
                this.betContainer)
                    try {
                        this.betContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.betContainer = new Container,
                this.game.moneyContainer.addChild(this.betContainer),
                this.icReady.visible = !1
            }
            ,
            t
        }(p.PlayerC);
        e.default = a
    }
    , function(t, e) {
        t.exports = n
    }
    , function(t, e, i) {
        "use strict";
        var o, n = this && this.__extends || (o = function(t, e) {
            return (o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            o(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = function(e) {
            function t() {
                var t = e.call(this) || this;
                return t.accountId = 0,
                t.defaultLang = "en",
                t.gameName = "roulette-",
                t.ready = !1,
                t.betValue = 0,
                t.isLoad = !1,
                t.players = [null, null, null, null, null, null, null],
                t.fontRobotoCondensedRegular = "RobotoCondensed-Regular",
                t.fontRobotoCondensedBold = "RobotoCondensed-Bold",
                t.fontRoboto = "Roboto",
                t.fontFaceBold = "Roboto-Bold",
                t.fontFace = "Roboto-Light",
                t.isX2 = !1,
                t.Phrase = {
                    None: 0,
                    Betting: 1,
                    Result: 2
                },
                t.playerPos = [[-30, 150], [-210, 150], [-390, 150], [-430, -260], [-290, -260], [-150, -260], [150, 150]],
                t.chipConfig = {
                    1: {
                        100: [{
                            number: "100",
                            value: 100,
                            img: "tien_2"
                        }, {
                            number: "500",
                            value: 500,
                            img: "tien_3"
                        }, {
                            number: "1K",
                            value: 1e3,
                            img: "tien_4"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_5"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_6"
                        }],
                        500: [{
                            number: "500",
                            value: 500,
                            img: "tien_2"
                        }, {
                            number: "1K",
                            value: 1e3,
                            img: "tien_3"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_4"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_5"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_6"
                        }],
                        1e3: [{
                            number: "1K",
                            value: 1e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        2e3: [{
                            number: "2K",
                            value: 2e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        5e3: [{
                            number: "5K",
                            value: 5e3,
                            img: "tien_2"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_3"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_4"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_5"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_6"
                        }],
                        1e4: [{
                            number: "10K",
                            value: 1e4,
                            img: "tien_2"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_3"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_4"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_5"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_6"
                        }]
                    },
                    0: {
                        1e3: [{
                            number: "1K",
                            value: 1e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        5e3: [{
                            number: "5K",
                            value: 5e3,
                            img: "tien_2"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_3"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_4"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_5"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_6"
                        }],
                        1e4: [{
                            number: "10K",
                            value: 1e4,
                            img: "tien_2"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_3"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_4"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_5"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_6"
                        }],
                        5e4: [{
                            number: "50K",
                            value: 5e4,
                            img: "tien_2"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_3"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_4"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_5"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_6"
                        }],
                        1e5: [{
                            number: "100K",
                            value: 1e5,
                            img: "tien_2"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_3"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_4"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_5"
                        }, {
                            number: "10M",
                            value: 1e7,
                            img: "tien_6"
                        }],
                        5e5: [{
                            number: "500K",
                            value: 5e5,
                            img: "tien_2"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_3"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_4"
                        }, {
                            number: "10M",
                            value: 1e7,
                            img: "tien_5"
                        }, {
                            number: "50M",
                            value: 5e6,
                            img: "tien_6"
                        }]
                    }
                },
                t.gates = [],
                t.gateTotalBet = [],
                t.lastCurrentBet = [],
                t.gateInfo = [],
                t
            }
            return n(t, e),
            t
        }(i(10).gate);
        e.variable = a
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function() {
            var l = this;
            this.prefix = "roulette-",
            this.gateConfig = [{
                id: 1,
                description: "Chẵn",
                fund_rate: 1,
                max_factor: 100,
                values: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36]
            }, {
                id: 2,
                description: "Lẻ",
                fund_rate: 1,
                max_factor: 100,
                values: [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35]
            }, {
                id: 3,
                description: "Đỏ",
                fund_rate: 1,
                max_factor: 100,
                values: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36]
            }, {
                id: 4,
                description: "Đen",
                fund_rate: 1,
                max_factor: 100,
                values: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35]
            }, {
                id: 5,
                description: "Cược nửa bàn 1-18",
                fund_rate: 1,
                max_factor: 100,
                values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
            }, {
                id: 6,
                description: "Cược nửa bàn 19-36",
                fund_rate: 1,
                max_factor: 100,
                values: [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
            }, {
                id: 7,
                description: "Cược hàng 1",
                fund_rate: 2,
                max_factor: 70,
                values: [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34]
            }, {
                id: 8,
                description: "Cược hàng 2",
                fund_rate: 2,
                max_factor: 70,
                values: [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35]
            }, {
                id: 9,
                description: "Cược hàng 3",
                fund_rate: 2,
                max_factor: 70,
                values: [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36]
            }, {
                id: 10,
                description: "Cược cột 1",
                fund_rate: 2,
                max_factor: 70,
                values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
            }, {
                id: 11,
                description: "Cược cột 2",
                fund_rate: 2,
                max_factor: 70,
                values: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
            }, {
                id: 12,
                description: "Cược cột 3",
                fund_rate: 2,
                max_factor: 70,
                values: [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
            }, {
                id: 13,
                description: "Cược đơn 0",
                fund_rate: 35,
                max_factor: 20,
                values: [0],
                check_jackpot: !0
            }, {
                id: 14,
                description: "Cược đơn 1",
                fund_rate: 35,
                max_factor: 20,
                values: [1]
            }, {
                id: 15,
                description: "Cược đơn 2",
                fund_rate: 35,
                max_factor: 20,
                values: [2]
            }, {
                id: 16,
                description: "Cược đơn 3",
                fund_rate: 35,
                max_factor: 20,
                values: [3]
            }, {
                id: 17,
                description: "Cược đơn 4",
                fund_rate: 35,
                max_factor: 20,
                values: [4]
            }, {
                id: 18,
                description: "Cược đơn 5",
                fund_rate: 35,
                max_factor: 20,
                values: [5]
            }, {
                id: 19,
                description: "Cược đơn 6",
                fund_rate: 35,
                max_factor: 20,
                values: [6]
            }, {
                id: 20,
                description: "Cược đơn 7",
                fund_rate: 35,
                max_factor: 20,
                values: [7]
            }, {
                id: 21,
                description: "Cược đơn 8",
                fund_rate: 35,
                max_factor: 20,
                values: [8]
            }, {
                id: 22,
                description: "Cược đơn 9",
                fund_rate: 35,
                max_factor: 20,
                values: [9]
            }, {
                id: 23,
                description: "Cược đơn 10",
                fund_rate: 35,
                max_factor: 20,
                values: [10]
            }, {
                id: 24,
                description: "Cược đơn 11",
                fund_rate: 35,
                max_factor: 20,
                values: [11]
            }, {
                id: 25,
                description: "Cược đơn 12",
                fund_rate: 35,
                max_factor: 20,
                values: [12]
            }, {
                id: 26,
                description: "Cược đơn 13",
                fund_rate: 35,
                max_factor: 20,
                values: [13]
            }, {
                id: 27,
                description: "Cược đơn 14",
                fund_rate: 35,
                max_factor: 20,
                values: [14]
            }, {
                id: 28,
                description: "Cược đơn 15",
                fund_rate: 35,
                max_factor: 20,
                values: [15]
            }, {
                id: 29,
                description: "Cược đơn 16",
                fund_rate: 35,
                max_factor: 20,
                values: [16]
            }, {
                id: 30,
                description: "Cược đơn 17",
                fund_rate: 35,
                max_factor: 20,
                values: [17]
            }, {
                id: 31,
                description: "Cược đơn 18",
                fund_rate: 35,
                max_factor: 20,
                values: [18]
            }, {
                id: 32,
                description: "Cược đơn 19",
                fund_rate: 35,
                max_factor: 20,
                values: [19]
            }, {
                id: 33,
                description: "Cược đơn 20",
                fund_rate: 35,
                max_factor: 20,
                values: [20]
            }, {
                id: 34,
                description: "Cược đơn 21",
                fund_rate: 35,
                max_factor: 20,
                values: [21]
            }, {
                id: 35,
                description: "Cược đơn 22",
                fund_rate: 35,
                max_factor: 20,
                values: [22]
            }, {
                id: 36,
                description: "Cược đơn 23",
                fund_rate: 35,
                max_factor: 20,
                values: [23]
            }, {
                id: 37,
                description: "Cược đơn 24",
                fund_rate: 35,
                max_factor: 20,
                values: [24]
            }, {
                id: 38,
                description: "Cược đơn 25",
                fund_rate: 35,
                max_factor: 20,
                values: [25]
            }, {
                id: 39,
                description: "Cược đơn 26",
                fund_rate: 35,
                max_factor: 20,
                values: [26]
            }, {
                id: 40,
                description: "Cược đơn 27",
                fund_rate: 35,
                max_factor: 20,
                values: [27]
            }, {
                id: 41,
                description: "Cược đơn 28",
                fund_rate: 35,
                max_factor: 20,
                values: [28]
            }, {
                id: 42,
                description: "Cược đơn 29",
                fund_rate: 35,
                max_factor: 20,
                values: [29]
            }, {
                id: 43,
                description: "Cược đơn 30",
                fund_rate: 35,
                max_factor: 20,
                values: [30]
            }, {
                id: 44,
                description: "Cược đơn 31",
                fund_rate: 35,
                max_factor: 20,
                values: [31]
            }, {
                id: 45,
                description: "Cược đơn 32",
                fund_rate: 35,
                max_factor: 20,
                values: [32]
            }, {
                id: 46,
                description: "Cược đơn 33",
                fund_rate: 35,
                max_factor: 20,
                values: [33]
            }, {
                id: 47,
                description: "Cược đơn 34",
                fund_rate: 35,
                max_factor: 20,
                values: [34]
            }, {
                id: 48,
                description: "Cược đơn 35",
                fund_rate: 35,
                max_factor: 20,
                values: [35]
            }, {
                id: 49,
                description: "Cược đơn 36",
                fund_rate: 35,
                max_factor: 20,
                values: [36]
            }, {
                id: 50,
                description: "Cược đôi 0-1",
                fund_rate: 17,
                max_factor: 30,
                values: [0, 1]
            }, {
                id: 51,
                description: "Cược đôi 0-2",
                fund_rate: 17,
                max_factor: 30,
                values: [0, 2]
            }, {
                id: 52,
                description: "Cược đôi 0-3",
                fund_rate: 17,
                max_factor: 30,
                values: [0, 3]
            }, {
                id: 53,
                description: "Cược đôi 1-2",
                fund_rate: 17,
                max_factor: 30,
                values: [1, 2]
            }, {
                id: 54,
                description: "Cược đôi 1-4",
                fund_rate: 17,
                max_factor: 30,
                values: [1, 4]
            }, {
                id: 55,
                description: "Cược đôi 2-3",
                fund_rate: 17,
                max_factor: 30,
                values: [2, 3]
            }, {
                id: 56,
                description: "Cược đôi 2-5",
                fund_rate: 17,
                max_factor: 30,
                values: [2, 5]
            }, {
                id: 57,
                description: "Cược đôi 3-6",
                fund_rate: 17,
                max_factor: 30,
                values: [3, 6]
            }, {
                id: 58,
                description: "Cược đôi 4-5",
                fund_rate: 17,
                max_factor: 30,
                values: [4, 5]
            }, {
                id: 59,
                description: "Cược đôi 4-7",
                fund_rate: 17,
                max_factor: 30,
                values: [4, 7]
            }, {
                id: 60,
                description: "Cược đôi 5-6",
                fund_rate: 17,
                max_factor: 30,
                values: [5, 6]
            }, {
                id: 61,
                description: "Cược đôi 5-8",
                fund_rate: 17,
                max_factor: 30,
                values: [5, 8]
            }, {
                id: 62,
                description: "Cược đôi 6-9",
                fund_rate: 17,
                max_factor: 30,
                values: [6, 9]
            }, {
                id: 63,
                description: "Cược đôi 7-8",
                fund_rate: 17,
                max_factor: 30,
                values: [7, 8]
            }, {
                id: 64,
                description: "Cược đôi 7-10",
                fund_rate: 17,
                max_factor: 30,
                values: [7, 10]
            }, {
                id: 65,
                description: "Cược đôi 8-9",
                fund_rate: 17,
                max_factor: 30,
                values: [8, 9]
            }, {
                id: 66,
                description: "Cược đôi 8-11",
                fund_rate: 17,
                max_factor: 30,
                values: [8, 11]
            }, {
                id: 67,
                description: "Cược đôi 9-12",
                fund_rate: 17,
                max_factor: 30,
                values: [9, 12]
            }, {
                id: 68,
                description: "Cược đôi 10-11",
                fund_rate: 17,
                max_factor: 30,
                values: [10, 11]
            }, {
                id: 69,
                description: "Cược đôi 10-13",
                fund_rate: 17,
                max_factor: 30,
                values: [10, 13]
            }, {
                id: 70,
                description: "Cược đôi 11-12",
                fund_rate: 17,
                max_factor: 30,
                values: [11, 12]
            }, {
                id: 71,
                description: "Cược đôi 11-14",
                fund_rate: 17,
                max_factor: 30,
                values: [11, 14]
            }, {
                id: 72,
                description: "Cược đôi 12-15",
                fund_rate: 17,
                max_factor: 30,
                values: [12, 15]
            }, {
                id: 73,
                description: "Cược đôi 13-14",
                fund_rate: 17,
                max_factor: 30,
                values: [13, 14]
            }, {
                id: 74,
                description: "Cược đôi 13-16",
                fund_rate: 17,
                max_factor: 30,
                values: [13, 16]
            }, {
                id: 75,
                description: "Cược đôi 14-15",
                fund_rate: 17,
                max_factor: 30,
                values: [14, 15]
            }, {
                id: 76,
                description: "Cược đôi 14-17",
                fund_rate: 17,
                max_factor: 30,
                values: [14, 17]
            }, {
                id: 77,
                description: "Cược đôi 15-18",
                fund_rate: 17,
                max_factor: 30,
                values: [15, 18]
            }, {
                id: 78,
                description: "Cược đôi 16-17",
                fund_rate: 17,
                max_factor: 30,
                values: [16, 17]
            }, {
                id: 79,
                description: "Cược đôi 16-19",
                fund_rate: 17,
                max_factor: 30,
                values: [16, 19]
            }, {
                id: 80,
                description: "Cược đôi 17-18",
                fund_rate: 17,
                max_factor: 30,
                values: [17, 18]
            }, {
                id: 81,
                description: "Cược đôi 17-20",
                fund_rate: 17,
                max_factor: 30,
                values: [17, 20]
            }, {
                id: 82,
                description: "Cược đôi 18-21",
                fund_rate: 17,
                max_factor: 30,
                values: [18, 21]
            }, {
                id: 83,
                description: "Cược đôi 19-20",
                fund_rate: 17,
                max_factor: 30,
                values: [19, 20]
            }, {
                id: 84,
                description: "Cược đôi 19-22",
                fund_rate: 17,
                max_factor: 30,
                values: [19, 22]
            }, {
                id: 85,
                description: "Cược đôi 20-21",
                fund_rate: 17,
                max_factor: 30,
                values: [20, 21]
            }, {
                id: 86,
                description: "Cược đôi 20-23",
                fund_rate: 17,
                max_factor: 30,
                values: [20, 23]
            }, {
                id: 87,
                description: "Cược đôi 21-24",
                fund_rate: 17,
                max_factor: 30,
                values: [21, 24]
            }, {
                id: 88,
                description: "Cược đôi 22-23",
                fund_rate: 17,
                max_factor: 30,
                values: [22, 23]
            }, {
                id: 89,
                description: "Cược đôi 22-25",
                fund_rate: 17,
                max_factor: 30,
                values: [22, 25]
            }, {
                id: 90,
                description: "Cược đôi 23-24",
                fund_rate: 17,
                max_factor: 30,
                values: [23, 24]
            }, {
                id: 91,
                description: "Cược đôi 23-26",
                fund_rate: 17,
                max_factor: 30,
                values: [23, 26]
            }, {
                id: 92,
                description: "Cược đôi 24-27",
                fund_rate: 17,
                max_factor: 30,
                values: [24, 27]
            }, {
                id: 93,
                description: "Cược đôi 25-26",
                fund_rate: 17,
                max_factor: 30,
                values: [25, 26]
            }, {
                id: 94,
                description: "Cược đôi 25-28",
                fund_rate: 17,
                max_factor: 30,
                values: [25, 28]
            }, {
                id: 95,
                description: "Cược đôi 26-27",
                fund_rate: 17,
                max_factor: 30,
                values: [26, 27]
            }, {
                id: 96,
                description: "Cược đôi 26-29",
                fund_rate: 17,
                max_factor: 30,
                values: [26, 29]
            }, {
                id: 97,
                description: "Cược đôi 27-30",
                fund_rate: 17,
                max_factor: 30,
                values: [27, 30]
            }, {
                id: 98,
                description: "Cược đôi 28-29",
                fund_rate: 17,
                max_factor: 30,
                values: [28, 29]
            }, {
                id: 99,
                description: "Cược đôi 28-31",
                fund_rate: 17,
                max_factor: 30,
                values: [28, 31]
            }, {
                id: 100,
                description: "Cược đôi 29-30",
                fund_rate: 17,
                max_factor: 30,
                values: [29, 30]
            }, {
                id: 101,
                description: "Cược đôi 29-32",
                fund_rate: 17,
                max_factor: 30,
                values: [29, 32]
            }, {
                id: 102,
                description: "Cược đôi 30-33",
                fund_rate: 17,
                max_factor: 30,
                values: [30, 33]
            }, {
                id: 103,
                description: "Cược đôi 31-32",
                fund_rate: 17,
                max_factor: 30,
                values: [31, 32]
            }, {
                id: 104,
                description: "Cược đôi 31-34",
                fund_rate: 17,
                max_factor: 30,
                values: [31, 34]
            }, {
                id: 105,
                description: "Cược đôi 32-33",
                fund_rate: 17,
                max_factor: 30,
                values: [32, 33]
            }, {
                id: 106,
                description: "Cược đôi 32-35",
                fund_rate: 17,
                max_factor: 30,
                values: [32, 35]
            }, {
                id: 107,
                description: "Cược đôi 33-36",
                fund_rate: 17,
                max_factor: 30,
                values: [33, 36]
            }, {
                id: 108,
                description: "Cược đôi 34-35",
                fund_rate: 17,
                max_factor: 30,
                values: [34, 35]
            }, {
                id: 109,
                description: "Cược đôi 35-36",
                fund_rate: 17,
                max_factor: 30,
                values: [35, 36]
            }, {
                id: 110,
                description: "Cược ba 0-1-2",
                fund_rate: 11,
                max_factor: 40,
                values: [0, 1, 2]
            }, {
                id: 111,
                description: "Cược ba 0-2-3",
                fund_rate: 11,
                max_factor: 40,
                values: [0, 2, 3]
            }, {
                id: 112,
                description: "Cược ba 1-2-3",
                fund_rate: 11,
                max_factor: 40,
                values: [1, 2, 3]
            }, {
                id: 113,
                description: "Cược ba 4-5-6",
                fund_rate: 11,
                max_factor: 40,
                values: [4, 5, 6]
            }, {
                id: 114,
                description: "Cược ba 7-8-9",
                fund_rate: 11,
                max_factor: 40,
                values: [7, 8, 9]
            }, {
                id: 115,
                description: "Cược ba 10-11-12",
                fund_rate: 11,
                max_factor: 40,
                values: [10, 11, 12]
            }, {
                id: 116,
                description: "Cược ba 13-14-15",
                fund_rate: 11,
                max_factor: 40,
                values: [13, 14, 15]
            }, {
                id: 117,
                description: "Cược ba 16-17-18",
                fund_rate: 11,
                max_factor: 40,
                values: [16, 17, 18]
            }, {
                id: 118,
                description: "Cược ba 19-20-21",
                fund_rate: 11,
                max_factor: 40,
                values: [19, 20, 21]
            }, {
                id: 119,
                description: "Cược ba 22-23-24",
                fund_rate: 11,
                max_factor: 40,
                values: [22, 23, 24]
            }, {
                id: 120,
                description: "Cược ba 25-26-27",
                fund_rate: 11,
                max_factor: 40,
                values: [25, 26, 27]
            }, {
                id: 121,
                description: "Cược ba 28-29-30",
                fund_rate: 11,
                max_factor: 40,
                values: [28, 29, 30]
            }, {
                id: 122,
                description: "Cược ba 31-32-33",
                fund_rate: 11,
                max_factor: 40,
                values: [31, 32, 33]
            }, {
                id: 123,
                description: "Cược ba 34-35-36",
                fund_rate: 11,
                max_factor: 40,
                values: [34, 35, 36]
            }, {
                id: 124,
                description: "Cược bốn 0-1-2-3",
                fund_rate: 8,
                max_factor: 50,
                values: [0, 1, 2, 3]
            }, {
                id: 125,
                description: "Cược bốn 1-2-4-5",
                fund_rate: 8,
                max_factor: 50,
                values: [1, 2, 4, 5]
            }, {
                id: 126,
                description: "Cược bốn 2-3-5-6",
                fund_rate: 8,
                max_factor: 50,
                values: [2, 3, 5, 6]
            }, {
                id: 127,
                description: "Cược bốn 4-5-7-8",
                fund_rate: 8,
                max_factor: 50,
                values: [4, 5, 7, 8]
            }, {
                id: 128,
                description: "Cược bốn 5-6-8-9",
                fund_rate: 8,
                max_factor: 50,
                values: [5, 6, 8, 9]
            }, {
                id: 129,
                description: "Cược bốn 7-8-10-11",
                fund_rate: 8,
                max_factor: 50,
                values: [7, 8, 10, 11]
            }, {
                id: 130,
                description: "Cược bốn 8-9-11-12",
                fund_rate: 8,
                max_factor: 50,
                values: [8, 9, 11, 12]
            }, {
                id: 131,
                description: "Cược bốn 10-11-13-14",
                fund_rate: 8,
                max_factor: 50,
                values: [10, 11, 13, 14]
            }, {
                id: 132,
                description: "Cược bốn 11-12-14-15",
                fund_rate: 8,
                max_factor: 50,
                values: [11, 12, 14, 15]
            }, {
                id: 133,
                description: "Cược bốn 13-14-16-17",
                fund_rate: 8,
                max_factor: 50,
                values: [13, 14, 16, 17]
            }, {
                id: 134,
                description: "Cược bốn 14-15-17-18",
                fund_rate: 8,
                max_factor: 50,
                values: [14, 15, 17, 18]
            }, {
                id: 135,
                description: "Cược bốn 16-17-19-20",
                fund_rate: 8,
                max_factor: 50,
                values: [16, 17, 19, 20]
            }, {
                id: 136,
                description: "Cược bốn 17-18-20-21",
                fund_rate: 8,
                max_factor: 50,
                values: [17, 18, 20, 21]
            }, {
                id: 137,
                description: "Cược bốn 19-20-22-23",
                fund_rate: 8,
                max_factor: 50,
                values: [19, 20, 22, 23]
            }, {
                id: 138,
                description: "Cược bốn 20-21-23-24",
                fund_rate: 8,
                max_factor: 50,
                values: [20, 21, 23, 24]
            }, {
                id: 139,
                description: "Cược bốn 22-23-25-26",
                fund_rate: 8,
                max_factor: 50,
                values: [22, 23, 25, 26]
            }, {
                id: 140,
                description: "Cược bốn 23-24-26-27",
                fund_rate: 8,
                max_factor: 50,
                values: [23, 24, 26, 27]
            }, {
                id: 141,
                description: "Cược bốn 25-26-28-29",
                fund_rate: 8,
                max_factor: 50,
                values: [25, 26, 28, 29]
            }, {
                id: 142,
                description: "Cược bốn 26-27-29-30",
                fund_rate: 8,
                max_factor: 50,
                values: [26, 27, 29, 30]
            }, {
                id: 143,
                description: "Cược bốn 28-29-31-32",
                fund_rate: 8,
                max_factor: 50,
                values: [28, 29, 31, 32]
            }, {
                id: 144,
                description: "Cược bốn 29-30-32-33",
                fund_rate: 8,
                max_factor: 50,
                values: [29, 30, 32, 33]
            }, {
                id: 145,
                description: "Cược bốn 31-32-34-35",
                fund_rate: 8,
                max_factor: 50,
                values: [31, 32, 34, 35]
            }, {
                id: 146,
                description: "Cược bốn 32-33-35-36",
                fund_rate: 8,
                max_factor: 50,
                values: [32, 33, 35, 36]
            }, {
                id: 147,
                description: "1-2",
                fund_rate: 5,
                max_factor: 60,
                values: [1, 2, 3, 4, 5, 6]
            }, {
                id: 148,
                description: "2-3",
                fund_rate: 5,
                max_factor: 60,
                values: [4, 5, 6, 7, 8, 9]
            }, {
                id: 149,
                description: "3-4",
                fund_rate: 5,
                max_factor: 60,
                values: [7, 8, 9, 10, 11, 12]
            }, {
                id: 150,
                description: "4-5",
                fund_rate: 5,
                max_factor: 60,
                values: [10, 11, 12, 13, 14, 15]
            }, {
                id: 151,
                description: "5-6",
                fund_rate: 5,
                max_factor: 60,
                values: [13, 14, 15, 16, 17, 18]
            }, {
                id: 152,
                description: "6-7",
                fund_rate: 5,
                max_factor: 60,
                values: [16, 17, 18, 19, 20, 21]
            }, {
                id: 153,
                description: "7-8",
                fund_rate: 5,
                max_factor: 60,
                values: [19, 20, 21, 22, 23, 24]
            }, {
                id: 154,
                description: "8-9",
                fund_rate: 5,
                max_factor: 60,
                values: [22, 23, 24, 25, 26, 27]
            }, {
                id: 155,
                description: "9-10",
                fund_rate: 5,
                max_factor: 60,
                values: [25, 26, 27, 28, 29, 30]
            }, {
                id: 156,
                description: "10-11",
                fund_rate: 5,
                max_factor: 60,
                values: [28, 29, 30, 31, 32, 33]
            }, {
                id: 157,
                description: "11-12",
                fund_rate: 5,
                max_factor: 60,
                values: [31, 32, 33, 34, 35, 36]
            }],
            this.getBackgroundGateSource = function(t) {
                return t = Number(t),
                l.prefix + (0 <= [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35].indexOf(t) ? "black-bet" : "red-bet")
            }
            ,
            this.BindDoubleGate = function(a, r) {
                for (var s = 1 == r ? 4 : 2 == r ? 3 : 2, t = function(t) {
                    var e = 0 == t ? 0 : 1 == t ? 1 == r ? 3 : 2 == r ? 2 : 1 : t + s
                      , i = [e, 0 == t ? 1 == r ? e + 3 : 2 == r ? e + 2 : e + 1 : e + 3]
                      , o = l.gateConfig.find(function(t) {
                        return l.CompareArray(t.values, i)
                    });
                    if (!o)
                        return "continue";
                    var n = {
                        x: 50 * t - 395,
                        y: 50 * (r - 1) - 150
                    };
                    l.createSmallBitmap(a, n, o.id),
                    1 < t && (s += 2)
                }, e = 0; e <= 12; e++)
                    t(e);
                if (1 == r) {
                    var n = 0
                      , c = 1
                      , i = function(t) {
                        if (t % 3 == 0)
                            return n++,
                            "continue";
                        c++;
                        var e = [t, t + 1]
                          , i = l.gateConfig.find(function(t) {
                            return l.CompareArray(t.values, e)
                        });
                        if (!i)
                            return "continue";
                        var o = {
                            x: 50 * n - 370,
                            y: t % 3 == 2 ? -125 : -75
                        };
                        l.createSmallBitmap(a, o, i.id),
                        console.log("count", c)
                    };
                    for (e = 1; e < 36; e++)
                        i(e)
                }
            }
            ,
            this.BindTrippleGate = function(t) {
                for (var e = [110, 111], i = 0; i < 2; i++) {
                    var o = e[i]
                      , n = {
                        x: -395,
                        y: -75 - 50 * i
                    };
                    l.createSmallBitmap(t, n, o)
                }
                for (i = 0; i < 12; i++) {
                    var a = 1 + 3 * i
                      , r = [a, 1 + a, 2 + a]
                      , s = l.getConfigByValues(r);
                    if (s) {
                        var c = s.id;
                        l.createSmallBitmap(t, {
                            x: 50 * i - 370,
                            y: -25
                        }, c, 0)
                    }
                }
            }
            ,
            this.BindFourGate = function(t) {
                t.createSmallBitmap(t, {
                    x: -395,
                    y: -25
                }, 124, 0);
                for (var e = 0, i = 1; i <= 32; i++)
                    if (i % 3 != 0) {
                        var o = [i, i + 1, i + 3, i + 4]
                          , n = l.getConfigByValues(o);
                        if (n) {
                            var a = {
                                x: 50 * e - 345,
                                y: i % 3 == 1 ? -75 : -125
                            };
                            l.createSmallBitmap(t, a, n.id, 0)
                        }
                    } else
                        e++
            }
            ,
            this.bindSixGate = function(t) {
                for (var e = 0, i = 1; i <= 31; i++)
                    if (i % 3 != 0 && i % 3 != 2) {
                        for (var o = [], n = 0; n < 6; n++)
                            o.push(i + n);
                        var a = l.getConfigByValues(o);
                        if (a) {
                            var r = {
                                x: 50 * e++ - 345,
                                y: -25
                            };
                            l.createSmallBitmap(t, r, a.id, 0)
                        }
                    }
            }
            ,
            this.createSmallBitmap = function(t, e, i, o) {
                void 0 === o && (o = 0);
                var n = new Sprite(TextureCache["roulette-tran-bet.png"]);
                n.anchor.set(.5),
                n.name = "roulette-tran-bet",
                n.id = i,
                n.alpha = o,
                n.scale.set(.4),
                n.position.set(e.x, e.y),
                n.interactive = !0,
                n.buttonMode = !0,
                n.on("mouseover", l.hoverBlock.bind(n, t, i)).on("mouseout", l.hoverOut.bind(n, t, i)).on("pointerdown", t.GateDown.bind(n, l, i, t)),
                t.buttonContainer.addChild(n);
                var a = {
                    gate: n,
                    gateID: i
                };
                t.gateInfo = t.gateInfo.concat([a]),
                t.gates = t.gates.concat([n])
            }
            ,
            this.hoverBlock = function(n, e) {
                var t = l.gateConfig.find(function(t) {
                    return t.id == e
                });
                if (t) {
                    for (var i = function(e) {
                        var i = l.gateConfig.find(function(t) {
                            return t.values == e
                        });
                        if (!i)
                            return "continue";
                        var t = n.gates.find(function(t) {
                            return t.id == i.id
                        });
                        if (!t)
                            return "continue";
                        var o = t.name + "-hover.png";
                        t.texture = TextureCache[o]
                    }, o = 0, a = t.values; o < a.length; o++)
                        i(a[o]);
                    1 <= e && e <= 12 && (n.gates.find(function(t) {
                        return t.id == e
                    }).getChildAt(0).visible = !0),
                    n.ShowToolTip(e)
                }
            }
            ,
            this.hoverOut = function(n, e) {
                var t = l.gateConfig.find(function(t) {
                    return t.id == e
                });
                if (t) {
                    for (var i = function(e) {
                        var i = l.gateConfig.find(function(t) {
                            return t.values == e
                        });
                        if (!i)
                            return "continue";
                        var t = n.gates.find(function(t) {
                            return t.id == i.id
                        });
                        if (!t)
                            return "continue";
                        var o = t.name + ".png";
                        t.texture = TextureCache[o]
                    }, o = 0, a = t.values; o < a.length; o++)
                        i(a[o]);
                    1 <= e && e <= 12 && (n.gates.find(function(t) {
                        return t.id == e
                    }).getChildAt(0).visible = !1),
                    n.toolTip.visible = !1
                }
            }
            ,
            this.getConfigByValues = function(e) {
                return l.gateConfig.find(function(t) {
                    return l.CompareArray(t.values, e)
                })
            }
            ,
            this.CompareArray = function(t, e) {
                if (!t || !e)
                    return !1;
                if (t.length != e.length)
                    return !1;
                for (var i = 0, o = t.length; i < o; i++)
                    if (t[i]instanceof Array && e[i]instanceof Array) {
                        if (!t[i].equals(e[i]))
                            return !1
                    } else if (t[i] != e[i])
                        return !1;
                return !0
            }
        };
        e.gate = o
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function(t) {
            var a = this;
            this.gate = [0, 32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11, 30, 8, 23, 10, 5, 24, 16, 33, 1, 20, 14, 31, 9, 22, 18, 29, 7, 28, 12, 35, 3, 26],
            this.areaPoint = [{
                key: 0,
                x: 0,
                y: -120
            }, {
                key: 32,
                x: 20,
                y: -117
            }, {
                key: 15,
                x: 40,
                y: -113
            }, {
                key: 19,
                x: 57,
                y: -105
            }, {
                key: 4,
                x: 74,
                y: -90
            }, {
                key: 21,
                x: 89,
                y: -78
            }, {
                key: 2,
                x: 100,
                y: -62
            }, {
                key: 25,
                x: 110,
                y: -44
            }, {
                key: 17,
                x: 116,
                y: -26
            }, {
                key: 34,
                x: 120,
                y: -5
            }, {
                key: 6,
                x: 116,
                y: 14
            }, {
                key: 27,
                x: 112,
                y: 34
            }, {
                key: 13,
                x: 105,
                y: 54
            }, {
                key: 36,
                x: 94,
                y: 70
            }, {
                key: 11,
                x: 81,
                y: 86
            }, {
                key: 30,
                x: 65,
                y: 96
            }, {
                key: 8,
                x: 46,
                y: 106
            }, {
                key: 23,
                x: 30,
                y: 114
            }, {
                key: 10,
                x: 10,
                y: 117
            }, {
                key: 10,
                x: -10,
                y: 117
            }, {
                key: 23,
                x: -30,
                y: 114
            }, {
                key: 8,
                x: -46,
                y: 106
            }, {
                key: 30,
                x: -65,
                y: 96
            }, {
                key: 11,
                x: -81,
                y: 86
            }, {
                key: 36,
                x: -94,
                y: 70
            }, {
                key: 13,
                x: -105,
                y: 54
            }, {
                key: 27,
                x: -112,
                y: 34
            }, {
                key: 6,
                x: -116,
                y: 14
            }, {
                key: 34,
                x: -120,
                y: -5
            }, {
                key: 17,
                x: -116,
                y: -26
            }, {
                key: 25,
                x: -110,
                y: -44
            }, {
                key: 2,
                x: -100,
                y: -62
            }, {
                key: 21,
                x: -89,
                y: -78
            }, {
                key: 4,
                x: -74,
                y: -90
            }, {
                key: 19,
                x: -57,
                y: -105
            }, {
                key: 15,
                x: -40,
                y: -113
            }, {
                key: 32,
                x: -20,
                y: -117
            }],
            this.init = function() {
                a.bg = new Sprite(TextureCache["roulette-b-spin.png"]),
                a.bg.anchor.set(.5),
                a.bg.scale.set(.56),
                a.bgResult = new Sprite(TextureCache["roulette-bg-result.png"]),
                a.bgResult.anchor.set(.5),
                a.bgResult.position.set(0),
                a.txtResult = new PIXI.Text("0",{
                    fontFamily: a.parent.fontRoboto,
                    fontSize: 41,
                    fontWeight: "bold",
                    fill: ["white"],
                    padding: 10
                }),
                a.txtResult.anchor.set(.5),
                a.bgResult.alpha = 0,
                a.txtResult.alpha = 0,
                a.parent.dice.addChild(a.bg, a.bgResult, a.txtResult);
                for (var t = 0; t < a.areaPoint.length; t++) {
                    var e = new Sprite(TextureCache["roulette-area.png"]);
                    e.anchor.set(.5),
                    e.scale.set(.9),
                    e.alpha = 0,
                    e.name = "area-" + a.gate[t],
                    e.position.set(a.areaPoint[t].x, a.areaPoint[t].y),
                    e.rotation = 2 * t * Math.PI / 37,
                    a.bg.addChild(e)
                }
                a.ball = new Sprite(TextureCache["roulette-ball.png"]),
                a.ball.anchor.set(.5, 4.9),
                a.ball.scale.set(.7),
                a.parent.dice.addChild(a.ball),
                a.parent.dice.position.set(350, 30)
            }
            ,
            this.spin = function(i, o) {
                void 0 === o && (o = {});
                var n = a
                  , t = a.gate.indexOf(i)
                  , e = Math.floor(3 * Math.random() + 10);
                TweenMax.to(a.bg, 5, {
                    data: "roulette",
                    rotation: Math.PI * e
                }),
                TweenMax.to(a.ball, 8, {
                    data: "roulette",
                    rotation: Math.PI * (e + 2) + 2 * t * Math.PI / 37,
                    onComplete: function() {
                        var t = "area-" + i
                          , e = n.bg.getChildByName(t);
                        e && (n.timer = setInterval(function() {
                            e.alpha = .5 == e.alpha ? 0 : .5
                        }, 500)),
                        n.bgResult.alpha = 1,
                        n.txtResult.alpha = 1,
                        n.txtResult.text = i,
                        "function" == typeof o && o()
                    }
                })
            }
            ,
            this.reset = function() {
                clearTimeout(a.timer)
            }
            ,
            this.parent = t,
            this.init()
        };
        e.Wheel = o
    }
    , function(t, e) {
        t.exports = a
    }
    ])
});

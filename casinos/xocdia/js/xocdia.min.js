!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("libs"), require("signalR"), require("pixi-filters"), require("WebFont")) : "function" == typeof define && define.amd ? define("xocdia", ["libs", "signalR", "pixi-filters", "WebFont"], e) : "object" == typeof exports ? exports.xocdia = e(require("libs"), require("signalR"), require("pixi-filters"), require("WebFont")) : t.xocdia = e(t.libs, t.signalR, t["pixi-filters"], t.WebFont)
}(window, function(i, n, o, s) {
    return function(i) {
        var n = {};
        function o(t) {
            if (n[t])
                return n[t].exports;
            var e = n[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return i[t].call(e.exports, e, e.exports, o),
            e.l = !0,
            e.exports
        }
        return o.m = i,
        o.c = n,
        o.d = function(t, e, i) {
            o.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: i
            })
        }
        ,
        o.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }),
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }
        ,
        o.t = function(e, t) {
            if (1 & t && (e = o(e)),
            8 & t)
                return e;
            if (4 & t && "object" == typeof e && e && e.__esModule)
                return e;
            var i = Object.create(null);
            if (o.r(i),
            Object.defineProperty(i, "default", {
                enumerable: !0,
                value: e
            }),
            2 & t && "string" != typeof e)
                for (var n in e)
                    o.d(i, n, function(t) {
                        return e[t]
                    }
                    .bind(null, n));
            return i
        }
        ,
        o.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default
            }
            : function() {
                return t
            }
            ;
            return o.d(e, "a", e),
            e
        }
        ,
        o.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        ,
        o.p = "/",
        o(o.s = 1)
    }([function(t, e) {
        t.exports = i
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = i(2)
          , o = i(8)
          , s = function() {
            function t(t) {
                o.load({
                    custom: {
                        families: ["Roboto-Black", "Roboto-Bold", "Roboto-Medium", "Roboto-Regular", "Roboto-Light", "RobotoCondensed-Bold", "RobotoCondensed-Italic", "RobotoCondensed-Light", "RobotoCondensed-Regular", "UTM American Sans", "UTM Swiss Condensed", "UTM Swiss CondensedBold"]
                    },
                    fontactive: function() {}
                }),
                this.game = new n.games(t)
            }
            return t.prototype.delete = function() {
                this.game.Delete()
            }
            ,
            t.prototype.load = function(t) {
                this.game.Load(t)
            }
            ,
            t.prototype.join = function(t, e) {
                this.game.Join(t, e)
            }
            ,
            t.prototype.stop = function() {
                this.game.Stop()
            }
            ,
            t
        }();
        e.game = s
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = i(3)
          , o = i(4)
          , p = i(0)
          , s = i(6);
        i(7);
        var a = function() {
            function t(t) {
                this.accountId = 0,
                this.ready = !1,
                this.betValue = 0,
                this.isLoad = !1,
                this.players = [null, null, null, null, null, null, null],
                this.fontRobotoCondensedRegular = "RobotoCondensed-Regular",
                this.fontRobotoCondensedBold = "RobotoCondensed-Bold",
                this.fontFaceBold = "Roboto-Bold",
                this.fontFace = "Roboto-Light",
                this.Phrase = {
                    None: 0,
                    Shaking: 1,
                    Betting: 2,
                    OpenPlate: 3,
                    Result: 4
                },
                this.Status = {
                    Active: 0,
                    Pause: 1,
                    Error: 2,
                    Finish: 3
                },
                this.playerPos = [[0, 195], [-235, 140], [-390, 20], [-460, -180], [460, -180], [390, 20], [235, 140]],
                this.chipConfig = {
                    1: {
                        100: [{
                            number: "100",
                            value: 100,
                            img: "tien_2"
                        }, {
                            number: "500",
                            value: 500,
                            img: "tien_3"
                        }, {
                            number: "1K",
                            value: 1e3,
                            img: "tien_4"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_5"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_6"
                        }],
                        500: [{
                            number: "500",
                            value: 500,
                            img: "tien_2"
                        }, {
                            number: "1K",
                            value: 1e3,
                            img: "tien_3"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_4"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_5"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_6"
                        }],
                        1e3: [{
                            number: "1K",
                            value: 1e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        2e3: [{
                            number: "2K",
                            value: 2e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        5e3: [{
                            number: "5K",
                            value: 5e3,
                            img: "tien_2"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_3"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_4"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_5"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_6"
                        }],
                        1e4: [{
                            number: "10K",
                            value: 1e4,
                            img: "tien_2"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_3"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_4"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_5"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_6"
                        }]
                    },
                    0: {
                        1e3: [{
                            number: "1K",
                            value: 1e3,
                            img: "tien_2"
                        }, {
                            number: "5K",
                            value: 5e3,
                            img: "tien_3"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_4"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_5"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_6"
                        }],
                        5e3: [{
                            number: "5K",
                            value: 5e3,
                            img: "tien_2"
                        }, {
                            number: "10K",
                            value: 1e4,
                            img: "tien_3"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_4"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_5"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_6"
                        }],
                        1e4: [{
                            number: "10K",
                            value: 1e4,
                            img: "tien_2"
                        }, {
                            number: "50K",
                            value: 5e4,
                            img: "tien_3"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_4"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_5"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_6"
                        }],
                        5e4: [{
                            number: "50K",
                            value: 5e4,
                            img: "tien_2"
                        }, {
                            number: "100K",
                            value: 1e5,
                            img: "tien_3"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_4"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_5"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_6"
                        }],
                        1e5: [{
                            number: "100K",
                            value: 1e5,
                            img: "tien_2"
                        }, {
                            number: "500K",
                            value: 5e5,
                            img: "tien_3"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_4"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_5"
                        }, {
                            number: "10M",
                            value: 1e7,
                            img: "tien_6"
                        }],
                        5e5: [{
                            number: "500K",
                            value: 5e5,
                            img: "tien_2"
                        }, {
                            number: "1M",
                            value: 1e6,
                            img: "tien_3"
                        }, {
                            number: "5M",
                            value: 5e6,
                            img: "tien_4"
                        }, {
                            number: "10M",
                            value: 1e7,
                            img: "tien_5"
                        }, {
                            number: "50M",
                            value: 5e6,
                            img: "tien_6"
                        }]
                    }
                },
                this.gateOptions = [{
                    id: 1,
                    x: -95,
                    y: -100,
                    t: "cua_1"
                }, {
                    id: 2,
                    x: 95,
                    y: -100,
                    t: "cua_1"
                }, {
                    id: 3,
                    x: 266.5,
                    y: -155,
                    t: "cua_2"
                }, {
                    id: 4,
                    x: 266.5,
                    y: -45,
                    t: "cua_2"
                }, {
                    id: 5,
                    x: -267,
                    y: -155,
                    t: "cua_2"
                }, {
                    id: 6,
                    x: -267,
                    y: -45,
                    t: "cua_2"
                }],
                this.moneyPos = [{
                    x: -180,
                    y: -195
                }, {
                    x: 10,
                    y: -195
                }, {
                    x: 200,
                    y: -195
                }, {
                    x: 200,
                    y: -85
                }, {
                    x: -335,
                    y: -195
                }, {
                    x: -335,
                    y: -85
                }],
                this.moneyPosOwner = [{
                    x: -100,
                    y: -140
                }, {
                    x: 140,
                    y: -140
                }, {
                    x: 305,
                    y: -160
                }, {
                    x: 305,
                    y: -50
                }, {
                    x: -235,
                    y: -160
                }, {
                    x: -235,
                    y: -50
                }],
                this.chipPos = [[{
                    x: -100,
                    y: -165
                }, {
                    x: 140,
                    y: -165
                }, {
                    x: 305,
                    y: -185
                }, {
                    x: 305,
                    y: -75
                }, {
                    x: -235,
                    y: -185
                }, {
                    x: -235,
                    y: -75
                }], [{
                    x: -160,
                    y: -105
                }, {
                    x: 80,
                    y: -105
                }, {
                    x: 215,
                    y: -170
                }, {
                    x: 215,
                    y: -60
                }, {
                    x: -315,
                    y: -170
                }, {
                    x: -315,
                    y: -60
                }], [{
                    x: -160,
                    y: -75
                }, {
                    x: 80,
                    y: -75
                }, {
                    x: 215,
                    y: -140
                }, {
                    x: 215,
                    y: -30
                }, {
                    x: -315,
                    y: -140
                }, {
                    x: -315,
                    y: -30
                }], [{
                    x: -120,
                    y: -105
                }, {
                    x: 120,
                    y: -105
                }, {
                    x: 235,
                    y: -170
                }, {
                    x: 235,
                    y: -60
                }, {
                    x: -295,
                    y: -170
                }, {
                    x: -295,
                    y: -60
                }], [{
                    x: -120,
                    y: -75
                }, {
                    x: 120,
                    y: -75
                }, {
                    x: 235,
                    y: -140
                }, {
                    x: 235,
                    y: -30
                }, {
                    x: -295,
                    y: -140
                }, {
                    x: -295,
                    y: -30
                }], [{
                    x: -80,
                    y: -105
                }, {
                    x: 160,
                    y: -105
                }, {
                    x: 255,
                    y: -170
                }, {
                    x: 255,
                    y: -60
                }, {
                    x: -275,
                    y: -170
                }, {
                    x: -275,
                    y: -60
                }], [{
                    x: -80,
                    y: -75
                }, {
                    x: 160,
                    y: -75
                }, {
                    x: 255,
                    y: -140
                }, {
                    x: 255,
                    y: -30
                }, {
                    x: -275,
                    y: -140
                }, {
                    x: -275,
                    y: -30
                }]],
                this.moneyTotal = [0, 0, 0, 0, 0, 0],
                this.moneyOwner = [0, 0, 0, 0, 0, 0],
                this.logOwner = [0, 0, 0, 0, 0, 0],
                this.indexTip = 0,
                this.moneyText = ["XU", "GAM"],
                this.arrBetPos = [{
                    x: 50,
                    y: 30,
                    s: .7
                }, {
                    x: 130,
                    y: 30,
                    s: .7
                }, {
                    x: 210,
                    y: 30,
                    s: .7
                }, {
                    x: 290,
                    y: 30,
                    s: .7
                }, {
                    x: 370,
                    y: 30,
                    s: .7
                }],
                this.arrGate = [],
                this.viPos = [{
                    x: -15,
                    y: -15
                }, {
                    x: 15,
                    y: -10
                }, {
                    x: 15,
                    y: 10
                }, {
                    x: -15,
                    y: 10
                }],
                this.CaculHistory = function(t) {
                    if (!(null == t || t.length <= 0)) {
                        var e = []
                          , i = 0
                          , n = l = t[0]
                          , o = 0;
                        $.each(t, function(t) {
                            0 < t && this % 2 != n % 2 && (i++,
                            l = this),
                            n = this,
                            null != e[i] ? e[i].len++ : e[i] = {
                                index: t,
                                val: this,
                                fird: l,
                                last: n,
                                len: 1
                            }
                        });
                        for (var s = [], a = o = 11 < i ? i - 11 : 0; a < i + 1; a++)
                            s.push({
                                index: e[a].index,
                                len: e[a].len
                            });
                        for (a = i; o < a; a--)
                            if (e[a].len >= 11 - a + 6) {
                                o = a;
                                break
                            }
                        var r = s[0].index
                          , l = t[r]
                          , h = 0
                          , p = 0
                          , c = [];
                        for (a = 0; a < s.length; a++) {
                            p = a;
                            for (var u = 0; u < s[a].len; u++) {
                                var d = t[r]
                                  , y = d % 2 == 0 ? "odd" : "even";
                                c.push(d),
                                $("#r" + p + "_" + h).html(d),
                                $("#r" + p + "_" + h).removeClass("odd").removeClass("even").addClass(y),
                                r++,
                                5 <= h ? p++ : h++
                            }
                            l = t[r],
                            h = 0
                        }
                        var m = c.filter(function(t) {
                            return parseInt(t) % 2 == 0
                        })
                          , f = c.filter(function(t) {
                            return parseInt(t) % 2 != 0
                        })
                          , g = c.filter(function(t) {
                            return 4 == parseInt(t)
                        })
                          , b = c.filter(function(t) {
                            return 0 == parseInt(t)
                        })
                          , v = c.filter(function(t) {
                            return 3 == parseInt(t)
                        })
                          , x = c.filter(function(t) {
                            return 1 == parseInt(t)
                        });
                        $("#cc").text(m.length),
                        $("#ll").text(f.length),
                        $("#4s").text(g.length),
                        $("#4n").text(b.length),
                        $("#2s").text(v.length),
                        $("#1s").text(x.length)
                    }
                }
                ,
                this.size = t.size,
                this.target = t.target,
                this.token = t.token,
                this.loader = new n.default,
                this.currencyId = t.currencyID,
                this.lang = Message.GetLanguageCode(),
                this.ready = !1
            }
            return t.prototype.Load = function(t) {
                var e = this;
                e.loader.load(function() {
                    return e.Loading(e)
                }, function() {
                    e.isLoad = !0,
                    $("#divLoading").hide(),
                    e.InitHub(t)
                })
            }
            ,
            t.prototype.Loading = function(t) {
                $("#divLoading").show(),
                $("#loading-progress span").css("width", t.loader.loader.progress + "%"),
                $("#loading-progress-txt").html(t.loader.loader.progress + "%")
            }
            ,
            t.prototype.InitHub = function(t) {
                this.hub = new o.default(sedieUrl + "hub",this.token,this),
                this.hub.Connect(this.currencyId, t)
            }
            ,
            t.prototype.Join = function(t, e) {
                this.hub.EnterRoom(t, e)
            }
            ,
            t.prototype.EnterRoom = function(t) {
                if (this.roomModel = t,
                this.ready || this.Init(),
                this.GetCurrentPlayer(),
                this.RenderPlayers(this.roomModel.Players),
                this.DisableButtons(),
                this.DisableGates(),
                this.boxBet.visible = !1,
                t.Session) {
                    var e = t.Session.BetLogs;
                    if (e && 0 < e.length)
                        for (var i = 0; i < e.length; i++)
                            e[i].id = e[i].AccountId,
                            this.Bet(e[i])
                }
            }
            ,
            t.prototype.GetCurrentPlayer = function() {
                if (this.roomModel && this.roomModel.Players)
                    for (var t = 0; t < this.roomModel.Players.length; t++)
                        if (this.roomModel.Players[t].AccountId === App.account.accountID + ":" + App.account.portalID) {
                            this.currentPlayer = this.roomModel.Players[t];
                            break
                        }
            }
            ,
            t.prototype.GetPlayerByAccountId = function(t) {
                for (var e, i = 0; i < this.players.length; i++)
                    if (this.players[i] && this.players[i].accountId === t) {
                        e = this.players[i];
                        break
                    }
                return e
            }
            ,
            t.prototype.GetPlayerByPosition = function(t) {
                for (var e, i = 0; i < this.players.length; i++)
                    if (this.players[i] && this.players[i].pos === t) {
                        e = this.players[i];
                        break
                    }
                return e
            }
            ,
            t.prototype.RenderPlayers = function(t) {
                for (var e in t)
                    this.RenderPlayer(t[e])
            }
            ,
            t.prototype.PlayerJoin = function(t) {
                this.RenderPlayer(t)
            }
            ,
            t.prototype.PlayerLeave = function(t) {
                for (var e = 0; e < t.length; e++)
                    if (t[e].id === this.currentPlayer.AccountId)
                        t[e].reason && App.showPopupMessage({
                            content: Message.GetMessage("ca" + t[e].reason),
                            textDone: "OK"
                        }),
                        this.Delete(),
                        App.handleBack();
                    else {
                        var i = this.GetPlayerByAccountId(t[e].id);
                        if (i) {
                            var n = i.pos;
                            i.Reset(),
                            i.destroy({
                                children: !0
                            }),
                            delete this.players[n],
                            this.players[n] = null
                        }
                    }
            }
            ,
            t.prototype.PlayerOtherDevice = function() {
                App.showPopupMessage({
                    content: Message.GetMessage("ca-20024"),
                    textDone: "OK"
                }),
                this.Delete(),
                App.exitGame()
            }
            ,
            t.prototype.RegisterLeave = function(t) {
                var e = t.id ? t.id : t.Id
                  , i = t.status ? t.status : t.Status
                  , n = this.GetPlayerByAccountId(e);
                n && (n.leaveStatus.visible = i),
                e === this.currentPlayer.AccountId && this.ShowStatus(Message.GetMessage(i ? "me8" : "me9"))
            }
            ,
            t.prototype.UpdateConnection = function(t) {
                try {
                    var e = t.id ? t.id : t.Id
                      , i = t.status ? t.status : t.Status
                      , n = this.GetPlayerByAccountId(e);
                    n && (n.disStatus.visible = i)
                } catch (t) {}
            }
            ,
            t.prototype.RenderPlayer = function(t) {
                var e = t.Position - this.currentPlayer.Position;
                e < 0 && (e += this.roomModel.MaxPlayer),
                null !== this.players[e] && this.players[e],
                this.players[e] = new s.default({
                    position: e,
                    player: t,
                    xy: this.playerPos[e],
                    w: 90,
                    h: 90,
                    b: 60,
                    game: this
                }),
                this.playerContainer.addChild(this.players[e]);
                var i = t.RegLeave;
                this.players[e].leaveStatus.visible = i
            }
            ,
            t.prototype.EnterGame = function(t) {
                this.JoinGame(t),
                t.r.Session
            }
            ,
            t.prototype.JoinGame = function(t) {
                if (t) {
                    if (t.c < 0)
                        return App.showPopupMessage({
                            content: Message.GetMessage("ca" + t.c),
                            textDone: "ok"
                        }),
                        this.Delete(),
                        void App.handleBack();
                    if (this.roomModel = t.r,
                    p.Util.ClearTimeOut(this.timerOut),
                    !this.ready) {
                        this.EnterRoom(this.roomModel);
                        try {
                            App.joinGame({
                                value: this.roomModel.Value,
                                type: this.roomModel.Currency
                            })
                        } catch (t) {}
                    }
                    if (t.r.Session) {
                        if (1 === t.r.Session.Phrase)
                            return this.ResetGame(),
                            this.DisableButtons(),
                            this.ProcessShake(),
                            void this.UpdateGameLoopId();
                        if (2 !== t.r.Session.Phrase) {
                            if (3 !== t.r.Session.Phrase)
                                return 4 === t.r.Session.Phrase ? (this.GetHistory(),
                                this.SetVi(this.roomModel.Session.Result),
                                void this.ProcessResult()) : void 0;
                            this.ProcessOpen()
                        } else
                            this.ProcessBet()
                    }
                }
            }
            ,
            t.prototype.Init = function() {
                p.Util.CheckCss("/assets/css/xocdia.css") || p.Util.LoadCss("/assets/css/xocdia.css"),
                this.InitHistory(),
                PIXI.utils.skipHello();
                var t = window.innerWidth < 1360 ? 1360 : window.innerWidth
                  , e = window.innerHeight < 720 ? 720 : window.innerHeight;
                this.size = [t, e],
                this.application = new PIXI.Application(this.size[0],this.size[1],{
                    antialias: !0,
                    transparent: !0,
                    resolution: 1,
                    autoResize: !0
                }),
                document.getElementById(this.target).appendChild(this.application.renderer.view),
                this.moneyTotal = [0, 0, 0, 0, 0, 0],
                this.moneyOwner = [0, 0, 0, 0, 0, 0],
                this.logOwner = [0, 0, 0, 0, 0, 0],
                this.InitContainer(),
                this.InitFrames(),
                this.InitMachine(),
                this.InitTableInfo(),
                this.InitGate(),
                this.InitButton(),
                this.InitBet(),
                this.InitBatDia(),
                this.InitTip(),
                this.InitMoney(),
                this.Resize(this);
                var i = this;
                this.application.ticker.add(function() {
                    return i.Update(i)
                }),
                this.ready = !0,
                this.resizeFunc = function() {
                    return i.Resize(i)
                }
                ,
                window.addEventListener("resize", this.resizeFunc),
                this.ResetTab()
            }
            ,
            t.prototype.Resize = function(t) {
                if (t.size = [$(window).width(), $(window).height()],
                t.application.renderer.resize($(window).width(), $(window).height()),
                t.size[0] < 1360 || t.size[1] < 720) {
                    var e = Math.min(t.size[0] / 1360, t.size[1] / 720);
                    t.mainContainer.scale.set(e)
                } else
                    t.mainContainer.scale.set(1);
                t.mainContainer.anchor.set(.5),
                t.mainContainer.position.set(t.size[0] / 2, t.size[1] / 2 + 20)
            }
            ,
            t.prototype.ResetTab = function() {
                window.addEventListener("blur", function() {
                    TweenLite.lagSmoothing(0)
                }, !1),
                window.addEventListener("focus", function() {
                    TweenLite.lagSmoothing(1e3, 16)
                }, !1)
            }
            ,
            t.prototype.Update = function(t) {
                t.timer && t.timer.Tick()
            }
            ,
            t.prototype.InitContainer = function() {
                this.playerContainer = new Container,
                this.gateContainer = new Container,
                this.chipContainer = new Container,
                this.resultContainer = new Container,
                this.batDiaContainer = new Container,
                this.moneyContainer = new Container
            }
            ,
            t.prototype.InitFrames = function() {
                var t;
                for (this.framesDealerChiaBai = [],
                this.framesDealerClick = [],
                this.framesDealerPlay = [],
                this.framesDealerNormal = [],
                this.framesFireWork = [],
                this.framesShake = [],
                t = 1; t < 31; t++)
                    this.framesFireWork.push(TextureCache["fire-work-" + t + ".png"]);
                for (t = 1; t < 15; t++)
                    this.framesDealerChiaBai.push(TextureCache["dealer-chia-bai-" + t + ".png"]);
                for (t = 1; t < 25; t++)
                    this.framesDealerClick.push(TextureCache["dealer-rung-nguc-" + t + ".png"]),
                    this.framesDealerPlay.push(TextureCache["dealer-moi-choi-" + t + ".png"]);
                for (t = 1; t < 49; t++)
                    this.framesDealerNormal.push(TextureCache["dealer-normal-" + t + ".png"]);
                this.framesShake = framesFromTilesetImage("xoc-bat", 140, 140)
            }
            ,
            t.prototype.InitMachine = function() {
                this.mainContainer = new Sprite(TextureCache["table_xocdia_" + this.roomModel.Currency]),
                this.mainContainer.anchor.set(.5),
                this.mainContainer.position.set(this.size[0] / 2, this.size[1] / 2),
                this.application.stage.addChild(this.mainContainer),
                this.dealer = new AnimatedSprite(this.framesDealerNormal),
                this.dealer.anchor.set(.5),
                this.dealer.position.set(0, -283),
                this.dealer.animationSpeed = .2,
                this.dealer.interactive = !0,
                this.dealer.buttonMode = !0,
                this.dealer.on("pointerdown", this.DealerDown.bind(this.dealer, this)),
                this.dealer.play();
                var t = new Sprite(TextureCache["gate_" + this.roomModel.Currency + "_" + this.lang]);
                t.anchor.set(.5),
                t.position.set(0, -100),
                this.mainContainer.addChild(t, this.dealer),
                this.txtStatus = new Sprite(TextureCache["small-bg-notify"]),
                this.txtStatus.anchor.set(.5),
                this.txtStatus.position.set(0, 68),
                this.txtStatus.addChild(new PIXI.Text("thông báo",{
                    fontFamily: this.fontFaceBold,
                    fontSize: 12,
                    fill: "white"
                })),
                this.txtStatus.children[0].anchor.set(.5),
                this.txtStatus.visible = !1;
                for (var e = 0; e < this.playerPos.length; e++) {
                    var i = new Sprite(TextureCache["ic-ad-user"]);
                    i.anchor.set(.5),
                    i.position.set(this.playerPos[e][0], this.playerPos[e][1]),
                    this.mainContainer.addChild(i)
                }
                this.mainContainer.addChild(this.txtStatus, this.playerContainer, this.chipContainer, this.moneyContainer, this.gateContainer, this.resultContainer, this.batDiaContainer)
            }
            ,
            t.prototype.DealerChia = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerChiaBai,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            t.prototype.DealerDown = function(t) {
                var e = this;
                e.stop(),
                e.interactive = !1,
                e.buttonMode = !1,
                e.loop = !1,
                e.textures = t.framesDealerClick,
                e.gotoAndPlay(0),
                e.onComplete = function() {
                    t.DealerNormal()
                }
            }
            ,
            t.prototype.DealerNormal = function() {
                var t = this.dealer;
                t.stop(),
                t.interactive = !0,
                t.buttonMode = !0,
                t.loop = !0,
                t.textures = this.framesDealerNormal,
                t.gotoAndPlay(0)
            }
            ,
            t.prototype.InitTip = function() {
                this.tipArr = [],
                this.tipArr.push(Message.GetMessage("ca150") + " {0} " + Message.GetMessage("ca151")),
                this.tipArr.push(Message.GetMessage("ca148") + " {0} " + Message.GetMessage("ca149")),
                this.tipArr.push(Message.GetMessage("ca148") + " {0} " + Message.GetMessage("ca152"))
            }
            ,
            t.prototype.InitTableInfo = function() {
                this.infoContainer = new Container,
                this.mainContainer.addChild(this.infoContainer);
                var t = this.roomModel;
                this.btnBack = new Sprite(TextureCache["btn-def"]),
                this.btnBack.anchor.set(.5),
                this.btnBack.position.set(-460, -340),
                this.btnBack.addChild(new Sprite(TextureCache["ic-back"])),
                this.btnBack.children[0].anchor.set(.5),
                this.btnBack.interactive = !0,
                this.btnBack.buttonMode = !0,
                this.btnBack.on("pointerover", this.BtnBackOver).on("pointerout", this.BtnBackOut).on("pointerdown", this.BtnBackDown.bind(this.btnBack, this));
                var e = new PIXI.Text(Message.GetMessage(0 === t.Currency ? "tb113" : "tb112") + ": " + p.Util.NumberToString(t.Id, 3),{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                e.anchor.set(0, .5),
                e.position.set(-420, -360);
                var i = new PIXI.Text(Message.GetMessage("ca81").toUpperCase() + p.Util.ParseMoney(t.Value) + " " + Config.MoneyText[t.Currency],{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                });
                i.anchor.set(0, .5),
                i.position.set(-420, -340),
                this.lblSession = new PIXI.Text(Message.GetMessage("ca95").toUpperCase() + " #",{
                    fontFamily: this.fontRobotoCondensedRegular,
                    fontSize: 17,
                    fill: ["#a17eb0"]
                }),
                this.lblSession.anchor.set(0, .5),
                this.lblSession.position.set(-420, -320),
                this.infoContainer.addChild(this.btnBack, e, i, this.lblSession)
            }
            ,
            t.prototype.BtnBackOver = function() {
                this.texture = TextureCache["btn-def-h"]
            }
            ,
            t.prototype.BtnBackOut = function() {
                this.texture = TextureCache["btn-def"]
            }
            ,
            t.prototype.BtnBackDown = function(e) {
                e.hub.connection.invoke("ExitRoom").then(function(t) {
                    0 === t.c ? (e.Delete(),
                    App.handleBack()) : e.RegisterLeave(t.r)
                })
            }
            ,
            t.prototype.InitButton = function() {
                this.buttonContainer = new Container,
                this.mainContainer.addChild(this.buttonContainer),
                this.btnReady = new Sprite(TextureCache["btn-game-normal"]),
                this.btnReady.name = "btn-game-normal",
                this.btnReady.anchor.set(.5),
                this.btnReady.position.set(620, 290),
                this.btnReady.addChild(new PIXI.Text(Message.GetMessage("ca153").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnReady.getChildAt(0).anchor.set(.5),
                this.btnReady.getChildAt(0).position.set(0, 0),
                this.btnReady.interactive = !0,
                this.btnReady.buttonMode = !0,
                this.btnReady.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnReadyClick.bind(this.btnReady, this)),
                this.btnX2 = new Sprite(TextureCache["btn-game-normal"]),
                this.btnX2.name = "btn-game-normal",
                this.btnX2.anchor.set(.5),
                this.btnX2.position.set(480, 290),
                this.btnX2.addChild(new PIXI.Text(Message.GetMessage("ca99").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnX2.getChildAt(0).anchor.set(.5),
                this.btnX2.getChildAt(0).position.set(0, 0),
                this.btnX2.interactive = !0,
                this.btnX2.buttonMode = !0,
                this.btnX2.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnX2Click.bind(this.btnX2, this)),
                this.btnReBet = new Sprite(TextureCache["btn-game-normal"]),
                this.btnReBet.name = "btn-game-normal",
                this.btnReBet.anchor.set(.5),
                this.btnReBet.position.set(340, 290),
                this.btnReBet.addChild(new PIXI.Text(Message.GetMessage("ca98").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnReBet.getChildAt(0).anchor.set(.5),
                this.btnReBet.getChildAt(0).position.set(0, 0),
                this.btnReBet.interactive = !0,
                this.btnReBet.buttonMode = !0,
                this.btnReBet.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnReBetClick.bind(this.btnReBet, this)),
                this.btnCancel = new Sprite(TextureCache["btn-game-normal"]),
                this.btnCancel.name = "btn-game-normal",
                this.btnCancel.anchor.set(.5),
                this.btnCancel.position.set(200, 290),
                this.btnCancel.addChild(new PIXI.Text(Message.GetMessage("ca154").toUpperCase(),{
                    fontFamily: this.fontFaceBold,
                    fontSize: "vi" === this.lang ? 20 : 14,
                    fill: ["#ffffff", "#fff2c5"]
                })),
                this.btnCancel.getChildAt(0).anchor.set(.5),
                this.btnCancel.getChildAt(0).position.set(0, 0),
                this.btnCancel.interactive = !0,
                this.btnCancel.buttonMode = !0,
                this.btnCancel.on("pointerover", this.BtnHover).on("pointerout", this.BtnOut).on("pointerdown", this.BtnDown).on("pointerup", this.BtnCancelClick.bind(this.btnCancel, this)),
                this.buttonContainer.addChild(this.btnReady, this.btnX2, this.btnReBet, this.btnCancel)
            }
            ,
            t.prototype.DisableButton = function(t) {
                t.interactive = !1,
                t.buttonMode = !1,
                t.texture = TextureCache[t.name.replace("normal", "disable")]
            }
            ,
            t.prototype.EnableButton = function(t) {
                t.interactive = !0,
                t.buttonMode = !0,
                t.texture = TextureCache[t.name],
                t.visible = !0
            }
            ,
            t.prototype.DisableButtons = function() {
                this.DisableButton(this.btnReady),
                this.DisableButton(this.btnReBet),
                this.DisableButton(this.btnX2),
                this.DisableButton(this.btnCancel)
            }
            ,
            t.prototype.DisableGates = function() {
                for (var t = 0; t < this.arrGate.length; t++)
                    this.arrGate[t].interactive = !1,
                    this.arrGate[t].buttonMode = !1
            }
            ,
            t.prototype.EnableGates = function() {
                for (var t = 0; t < this.arrGate.length; t++)
                    this.arrGate[t].interactive = !0,
                    this.arrGate[t].buttonMode = !0
            }
            ,
            t.prototype.BtnHover = function() {
                this.texture = TextureCache[this.name.replace("normal", "hover")]
            }
            ,
            t.prototype.BtnOut = function() {
                this.texture = TextureCache[this.name]
            }
            ,
            t.prototype.BtnDown = function() {
                this.texture = TextureCache[this.name.replace("normal", "click")]
            }
            ,
            t.prototype.BtnReadyClick = function(e) {
                e.hub.connection.invoke("FinishBetting").then(function(t) {
                    0 <= t.c && e.ConfirmBet(t.r)
                })
            }
            ,
            t.prototype.BtnX2Click = function(e) {
                for (var t = function(t) {
                    0 < e.logOwner[t] && setTimeout(function() {
                        e.hub.connection.invoke("Bet", 2 * e.logOwner[t], t + 1).then(function(t) {
                            0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                        })
                    }, 100 * t)
                }, i = 0; i < e.logOwner.length; i++)
                    t(i)
            }
            ,
            t.prototype.BtnCancelClick = function(e) {
                e.hub.connection.invoke("ClearBetting").then(function(t) {
                    0 <= t.c && e.ClearBet(t.r)
                })
            }
            ,
            t.prototype.BtnReBetClick = function(e) {
                for (var t = function(t) {
                    0 < e.logOwner[t] && setTimeout(function() {
                        e.hub.connection.invoke("Bet", e.logOwner[t], t + 1).then(function(t) {
                            0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                        })
                    }, 100 * t)
                }, i = 0; i < e.logOwner.length; i++)
                    t(i)
            }
            ,
            t.prototype.InitBet = function() {
                this.boxBet = new Graphics,
                this.boxBet.beginFill(0),
                this.boxBet.drawRoundedRect(0, 0, 416, 72, 36),
                this.boxBet.position.set(-540, 251),
                this.buttonContainer.addChild(this.boxBet),
                this.arrBetChip = [],
                this.arrBetText = [];
                for (var t = this.chipConfig[this.roomModel.Currency][this.roomModel.Value], e = 0; e < t.length; e++) {
                    var i = new Sprite(TextureCache[t[e].img]);
                    i.anchor.set(.5),
                    i.position.set(this.arrBetPos[e].x, this.arrBetPos[e].y),
                    i.scale.set(this.arrBetPos[e].s),
                    i.value = t[e].value,
                    i.posY = this.arrBetPos[e].y,
                    i.active = !1,
                    i.i = e,
                    i.interactive = !0,
                    i.buttonMode = !0,
                    i.on("pointerover", this.ChipOver).on("pointerout", this.ChipOut).on("pointerdown", this.ChipDown.bind(i, this));
                    var n = new PIXI.Text(t[e].number,{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: ["white"],
                        padding: 10,
                        align: "center"
                    });
                    n.anchor.set(.5),
                    n.position.set(this.arrBetPos[e].x, this.arrBetPos[e].y + 30),
                    this.boxBet.addChild(i, n),
                    this.arrBetChip.push(i),
                    this.arrBetText.push(n)
                }
                this.SetActiveBet(this, this.arrBetChip[0])
            }
            ,
            t.prototype.ChipOver = function() {
                this.y = this.posY - 5
            }
            ,
            t.prototype.ChipOut = function() {
                this.active || (this.y = this.posY)
            }
            ,
            t.prototype.ChipDown = function(t) {
                t.ResetBet(t),
                t.SetActiveBet(t, this)
            }
            ,
            t.prototype.ResetBet = function(t) {
                for (var e = 0; e < t.arrBetChip.length; e++)
                    t.arrBetChip[e].y = t.arrBetChip[e].posY,
                    t.arrBetChip[e].active = !1,
                    t.arrBetText[e].style.fill = "white"
            }
            ,
            t.prototype.SetActiveBet = function(t, e) {
                e.active = !0,
                e.y = e.posY - 5,
                t.arrBetText[e.i].style.fill = "yellow",
                t.betValue = e.value
            }
            ,
            t.prototype.InitMoney = function() {
                this.gateMoneyTotal = [];
                for (var t = 0; t < 6; t++) {
                    (e = new PIXI.Text("0",{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: "orange"
                    })).anchor.set(0, .5),
                    e.visible = !1,
                    e.position.set(this.moneyPos[t].x, this.moneyPos[t].y),
                    this.moneyContainer.addChild(e),
                    this.gateMoneyTotal.push(e)
                }
                this.gateMoneyOwner = [];
                for (t = 0; t < 6; t++) {
                    var e;
                    (e = new PIXI.Text("0",{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: "yellow"
                    })).anchor.set(.5),
                    e.visible = !1,
                    e.position.set(this.moneyPosOwner[t].x, this.moneyPosOwner[t].y),
                    this.moneyContainer.addChild(e),
                    this.gateMoneyOwner.push(e)
                }
            }
            ,
            t.prototype.InitGate = function() {
                this.arrGate = [];
                for (var t = 0; t < this.gateOptions.length; t++) {
                    var e = new Sprite(TextureCache[this.gateOptions[t].t]);
                    e.alpha = 0,
                    e.anchor.set(.5),
                    e.position.set(this.gateOptions[t].x, this.gateOptions[t].y),
                    e.id = this.gateOptions[t].id,
                    e.interactive = !0,
                    e.buttonMode = !0,
                    e.on("pointerover", this.GateOver).on("pointerout", this.GateOut).on("pointerdown", this.GateDown.bind(e, this)),
                    this.gateContainer.addChild(e),
                    this.arrGate.push(e)
                }
            }
            ,
            t.prototype.GateOver = function() {
                this.alpha = 1
            }
            ,
            t.prototype.GateOut = function() {
                this.alpha = 0
            }
            ,
            t.prototype.GateDown = function(e) {
                e.hub.connection.invoke("Bet", e.betValue, this.id).then(function(t) {
                    0 <= t.c ? e.Bet(t.r) : e.ShowError(t.c)
                })
            }
            ,
            t.prototype.ShowError = function(t) {
                this.ShowStatus(Message.GetMessage("ca" + t), 2e3)
            }
            ,
            t.prototype.InitBatDia = function() {
                this.arrVi = [],
                this.plate = new Sprite(TextureCache.dia),
                this.plate.anchor.set(.5),
                this.batDiaContainer.addChild(this.plate);
                for (var t = 0; t < 4; t++) {
                    var e = new Sprite(TextureCache["b-item"]);
                    e.anchor.set(.5),
                    e.position.set(this.viPos[t].x, this.viPos[t].y),
                    this.arrVi.push(e),
                    this.plate.addChild(e)
                }
                this.bowl = new Sprite(TextureCache.bat),
                this.bowl.anchor.set(.5),
                this.shake = new AnimatedSprite(this.framesShake),
                this.shake.anchor.set(.5),
                this.shake.animationSpeed = .3,
                this.shake.loop = !1,
                this.shake.visible = !1,
                this.timer = new p.TimerC({
                    radius: 35,
                    bg: "time-green",
                    cir: "time-black",
                    fontSize: 26
                }),
                this.plate.addChild(this.bowl, this.timer),
                this.batDiaContainer.addChild(this.shake),
                this.batDiaContainer.y = -110
            }
            ,
            t.prototype.HideVi = function() {
                for (var t = 0; t < this.arrVi.length; t++)
                    this.arrVi[t].visible = !1
            }
            ,
            t.prototype.ResetVi = function() {
                for (var t = 0; t < this.arrVi.length; t++)
                    this.arrVi[t].texture = TextureCache["b-item"]
            }
            ,
            t.prototype.SetVi = function(t) {
                for (var e = 0; e < t; e++)
                    this.arrVi[e].texture = TextureCache["b-item"],
                    this.arrVi[e].visible = !0;
                for (; e < 4; e++)
                    this.arrVi[e].texture = TextureCache["b-item2"],
                    this.arrVi[e].visible = !0
            }
            ,
            t.prototype.HideReady = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && (this.players[t].icReady.visible = !1)
            }
            ,
            t.prototype.ShowStatus = function(t, e) {
                var i = this;
                this.txtStatus.scale.set(.01),
                this.txtStatus.visible = !0,
                this.txtStatus.children[0].text = t,
                TweenMax.to(this.txtStatus.scale, .4, {
                    data: "xocdia",
                    x: 1,
                    y: 1
                });
                var n = this;
                this.timerStatus = setTimeout(function() {
                    TweenMax.to(i.txtStatus.scale, .2, {
                        data: "xocdia",
                        x: .01,
                        y: .01
                    }),
                    n.timerStatus = setTimeout(function() {
                        n.txtStatus.visible = !1
                    }, 300)
                }, e || 2e3)
            }
            ,
            t.prototype.UpdateGameLoopId = function() {
                this.lblSession.text = Message.GetMessage("ca95").toUpperCase() + (this.roomModel.SessionId <= 0 ? " #" : this.roomModel.SessionId)
            }
            ,
            t.prototype.ShowBoxTip = function(t) {
                this.boxTip && this.boxTip.destroy({
                    children: !0
                });
                var e = new PIXI.Text(t,{
                    fontFamily: this.fontFace,
                    fontSize: 14,
                    fill: "white"
                });
                this.boxTip = new Graphics,
                this.boxTip.beginFill(0, .5),
                this.boxTip.drawRoundedRect(0, 0, e.width + 10, e.height + 10, e.height / 2),
                this.boxTip.addChild(e),
                e.position.set(5, 5),
                this.boxTip.position.set(80, -340),
                this.mainContainer.addChild(this.boxTip)
            }
            ,
            t.prototype.ShowTipDealer = function(t) {
                if (p.Util.ClearTimeOut(t.timerTip),
                t.ready) {
                    t.indexTip++,
                    2 < t.indexTip && (t.indexTip = 0);
                    var e = t.tipArr[t.indexTip].replace("{0}", p.Util.ParseMoney(t.roomModel.Value * (0 === t.indexTip ? 1 : 1 === t.indexTip ? 100 : 20)));
                    t.ShowBoxTip(e),
                    t.timerTip = setTimeout(function() {
                        return t.ShowTipDealer(t)
                    }, 5e3)
                }
            }
            ,
            t.prototype.RemoveEffect = function() {
                if (this.resultContainer)
                    try {
                        this.resultContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.resultContainer = new Container,
                this.mainContainer.addChildAt(this.resultContainer, this.mainContainer.children.length - 4)
            }
            ,
            t.prototype.DeleteTween = function() {
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "xocdia" === t[e].data && t[e].kill()
            }
            ,
            t.prototype.ResetGame = function() {
                p.Util.ClearTimeOut(this.timerTip);
                for (var t = 0; t < this.moneyOwner.length; t++)
                    this.logOwner[t] = this.moneyOwner[t];
                this.moneyTotal = [0, 0, 0, 0, 0, 0],
                this.ResetMoneyBet(),
                this.shake.visible = !1,
                this.bowl.y = 0,
                this.bowl.visible = !0,
                this.DeleteTween(),
                this.HideReady(),
                this.RemoveEffect();
                for (t = 0; t < this.players.length; t++)
                    this.players[t] && this.players[t].Reset()
            }
            ,
            t.prototype.ProcessShake = function() {
                var t = this;
                this.shake.visible = !0,
                this.ShowBoxTip(Message.GetMessage("ca108")),
                this.plate.visible = !1,
                this.shake.gotoAndPlay(0),
                setTimeout(function() {
                    t.shake.visible = !1,
                    t.plate.visible = !0
                }, 2e3)
            }
            ,
            t.prototype.ProcessBet = function() {
                var t = this;
                this.ShowBoxTip(Message.GetMessage("ca147")),
                this.timer.StartTimer(this.roomModel.Session.Timeout, this.roomModel.Session.Timeout),
                this.timerOut = setTimeout(function() {
                    return t.ShowTipDealer(t)
                }, 4e3),
                this.timerHideGate = setTimeout(function() {
                    return t.DisableGates()
                }, 1e3 * this.roomModel.Session.Timeout),
                this.EnableGates(),
                this.boxBet.visible = !0;
                for (var e = 0; e < this.logOwner.length; e++)
                    0 < this.logOwner[e] && (this.EnableButton(this.btnReBet),
                    this.EnableButton(this.btnX2))
            }
            ,
            t.prototype.Bet = function(t) {
                var e = this.GetPlayerByAccountId(null != t.id ? t.id : t.Id);
                e && (e.Bet(t),
                e.accountId === this.currentPlayer.AccountId && this.roomModel.Session.Phrase === this.Phrase.Betting && (this.EnableButton(this.btnReady),
                this.EnableButton(this.btnCancel),
                this.DisableButton(this.btnReBet),
                this.DisableButton(this.btnX2)))
            }
            ,
            t.prototype.GetTextureMoney = function(t) {
                var e, i = this.chipConfig[this.roomModel.Currency][this.roomModel.Value];
                return i[0].value <= t && t < i[1].value ? e = i[0].img : i[1].value <= t && t < i[2].value ? e = i[1].img : i[2].value <= t && t < i[3].value ? e = i[2].img : i[3].value <= t && t < i[4].value ? e = i[3].img : t >= i[4].value && (e = i[4].img),
                e
            }
            ,
            t.prototype.ShowMoneyBet = function() {
                for (var t = 0; t < this.moneyTotal.length; t++)
                    this.gateMoneyTotal[t].visible = 0 < this.moneyTotal[t],
                    this.gateMoneyTotal[t].text = p.Util.MoneyHelper(this.moneyTotal[t]),
                    this.gateMoneyOwner[t].visible = 0 < this.moneyOwner[t],
                    this.gateMoneyOwner[t].text = p.Util.MoneyHelper(this.moneyOwner[t])
            }
            ,
            t.prototype.ResetMoneyBet = function() {
                for (var t = 0; t < this.moneyTotal.length; t++)
                    this.moneyTotal[t] = 0,
                    this.gateMoneyTotal[t].visible = 0 < this.moneyTotal[t],
                    this.gateMoneyTotal[t].text = p.Util.MoneyHelper(this.moneyTotal[t]),
                    this.moneyOwner[t] = 0,
                    this.gateMoneyOwner[t].visible = 0 < this.moneyOwner[t],
                    this.gateMoneyOwner[t].text = p.Util.MoneyHelper(this.moneyOwner[t])
            }
            ,
            t.prototype.CheckBetLog = function(t) {
                for (var e = !1, i = 0; i < t.logOwner.length; i++)
                    if (0 < t.logOwner[i])
                        return void (e = !0);
                return e
            }
            ,
            t.prototype.ConfirmBet = function(t) {
                var e = this.GetPlayerByAccountId(t.id);
                e && (e.icReady.visible = !0,
                e.accountId === this.currentPlayer.AccountId && (this.DisableButtons(),
                this.boxBet.visible = !1))
            }
            ,
            t.prototype.ClearBet = function(t) {
                var e = this
                  , i = this.GetPlayerByAccountId(t.id);
                if (i) {
                    for (var n = 0; n < i.moneyContainer.children.length; n++)
                        i.moneyContainer.children[n].visible = !1;
                    var o = 0;
                    for (n = 0; n < i.moneyBet.length; n++)
                        o += i.moneyBet[n],
                        this.moneyTotal[n] -= i.moneyBet[n],
                        0 < i.moneyBet[n] && i.UndoChip(i.moneyBet[n], n);
                    i.player.Balance += o;
                    var s = new PIXI.Text("+" + p.Util.ParseMoney(o),{
                        fontFamily: this.fontFaceBold,
                        fontSize: 14,
                        fill: "yellow"
                    });
                    if (s.anchor.set(.5),
                    s.position.set(i.avatar.x, i.avatar.y),
                    i.moneyContainer.addChild(s),
                    TweenMax.to(s, .8, {
                        y: s.y - 80,
                        onComplete: function() {
                            s.visible = !1
                        }
                    }),
                    i.UpdateBalance(i.player.Balance),
                    i.icReady.visible = !1,
                    i.moneyBet = [0, 0, 0, 0, 0, 0],
                    i.accountId === this.currentPlayer.AccountId) {
                        e.moneyOwner = [0, 0, 0, 0, 0, 0],
                        e.DisableButtons(),
                        e.boxBet.visible = !0;
                        for (n = 0; n < e.logOwner.length; n++)
                            if (0 < e.logOwner[n]) {
                                e.EnableButton(e.btnX2),
                                e.EnableButton(e.btnReBet);
                                break
                            }
                    }
                    e.ShowMoneyBet()
                }
            }
            ,
            t.prototype.ProcessOpen = function() {
                this.ShowBoxTip(Message.GetMessage("ca107")),
                p.Util.ClearTimeOut(this.timerTip),
                this.DisableGates(),
                this.UpdateGameLoopId(),
                this.DisableButtons(),
                this.timer.ClearTimer(),
                this.SetVi(this.roomModel.Session.Result),
                this.HideReady(),
                TweenMax.to(this.bowl, 2, {
                    y: this.bowl.y + 50
                }),
                TweenMax.to(this.bowl, .5, {
                    y: this.bowl.y + 100,
                    delay: 2
                })
            }
            ,
            t.prototype.GetGateWin = function(t) {
                var e = [];
                switch (t) {
                case 0:
                    e = [1, 5];
                    break;
                case 1:
                    e = [2, 3];
                    break;
                case 2:
                    e = [1];
                    break;
                case 3:
                    e = [2, 4];
                    break;
                case 4:
                    e = [1, 6]
                }
                return e
            }
            ,
            t.prototype.ProcessResult = function() {
                var t = this.GetGateWin(this.roomModel.Session.Result);
                p.Util.ClearTimeOut(this.timerTip),
                this.ShowBoxTip(Message.GetMessage("me18")),
                this.ShowGateWin(t),
                this.bowl.visible = !1,
                this.MoneyToDealer();
                for (var e = this.roomModel.Session.Prizes, i = 0; i < this.players.length; i++)
                    if (this.players[i]) {
                        for (var n = this.players[i], o = !1, s = !1, a = 0; a < n.moneyBet.length; a++)
                            if (0 < n.moneyBet[a]) {
                                o = !0;
                                break
                            }
                        if (o) {
                            for (var r = 0, l = 0; l < e.length; l++)
                                n.accountId === e[l].AccountId && (n.ShowPrize(e[l], r),
                                r++);
                            for (var h = 0; h < e.length; h++)
                                if (n.accountId === e[h].AccountId) {
                                    s = !0;
                                    break
                                }
                        }
                        n.ShowWin(o, s)
                    }
            }
            ,
            t.prototype.MoneyToDealer = function() {
                for (var t = 0; t < this.players.length; t++)
                    this.players[t] && this.players[t].MoneyToDealer()
            }
            ,
            t.prototype.ShowGateWin = function(t) {
                for (var e = 0; e < t.length; e++) {
                    var i = new AnimatedSprite(this.framesFireWork);
                    i.anchor.set(.5),
                    i.position.set(this.gateOptions[t[e] - 1].x, this.gateOptions[t[e] - 1].y),
                    i.animationSpeed = .5,
                    i.loop = !0,
                    2 < t[e] && i.scale.set(.5),
                    i.play();
                    var n = new Sprite(TextureCache[t[e] < 3 ? "cua_1_win" : "cua_2_win"]);
                    n.anchor.set(.5),
                    n.position.set(this.gateOptions[t[e] - 1].x, this.gateOptions[t[e] - 1].y),
                    this.resultContainer.addChild(n, i),
                    TweenMax.to(n, .3, {
                        alpha: .2,
                        yoyo: !0,
                        repeat: 9
                    })
                }
                var o = new Sprite(TextureCache[(this.roomModel.Session.Result % 2 == 0 ? "chan_" : "le_") + this.lang]);
                o.anchor.set(.5),
                o.position.set(this.roomModel.Session.Result % 2 == 0 ? -96 : 96, -27),
                TweenMax.to(o.scale, .3, {
                    x: 1.2,
                    y: 1.2,
                    yoyo: !0,
                    repeat: 9
                }),
                this.resultContainer.addChild(o)
            }
            ,
            t.prototype.InitHistory = function() {
                if (void 0 === $(".xocdia")[0]) {
                    var t = '<div class="xocdia"><div class="btn-statistic-game resizeable" style="zoom: 1;"><a href="javascript:;" id="btn-statistic"><img src="/assets/images/btn-statistic.png" alt=""></a></div>';
                    t += '<div class="show-statistic-game resizeable" style="zoom: 1; z-index: 1;">',
                    t += '<div class="xocdia-statistic">',
                    t += '<div class="left-content-statistic ' + this.lang + '"><ul><li><ul><li><span id="span_total_even"></span></li><li><span id="span_gate_4"></span></li><li><span id="span_gate_0"></span></li><li><span id="span_total_odd"></span></li><li><span id="span_gate_3"></span></li><li><span id="span_gate_1"></span></li></ul></li></ul></div><div class="right-content-statistic">',
                    t += '<ul><li><ul><li><span id="r0_0"></span></li><li><span id="r0_1"></span></li><li><span id="r0_2"></span></li><li><span id="r0_3"></span></li><li><span id="r0_4"></span></li><li><span id="r0_5"></span></li></ul></li><li><ul><li><span id="r1_0"></span></li><li><span id="r1_1"></span></li><li><span id="r1_2"></span></li><li><span id="r1_3"></span></li><li><span id="r1_4"></span></li><li><span id="r1_5"></span></li></ul></li><li><ul><li><span id="r2_0"></span></li><li><span id="r2_1"></span></li><li><span id="r2_2"></span></li><li><span id="r2_3"></span></li><li><span id="r2_4"></span></li><li><span id="r2_5"></span></li></ul></li><li><ul><li><span id="r3_0"></span></li><li><span id="r3_1"></span></li><li><span id="r3_2"></span></li><li><span id="r3_3"></span></li><li><span id="r3_4"></span></li><li><span id="r3_5"></span></li></ul></li><li><ul><li><span id="r4_0"></span></li><li><span id="r4_1"></span></li><li><span id="r4_2"></span></li><li><span id="r4_3"></span></li><li><span id="r4_4"></span></li><li><span id="r4_5"></span></li></ul></li><li><ul><li><span id="r5_0"></span></li><li><span id="r5_1"></span></li><li><span id="r5_2"></span></li><li><span id="r5_3"></span></li><li><span id="r5_4"></span></li><li><span id="r5_5"></span></li></ul></li><li><ul><li><span id="r6_0"></span></li><li><span id="r6_1"></span></li><li><span id="r6_2"></span></li><li><span id="r6_3"></span></li><li><span id="r6_4"></span></li><li><span id="r6_5"></span></li></ul></li><li><ul><li><span id="r7_0"></span></li><li><span id="r7_1"></span></li><li><span id="r7_2"></span></li><li><span id="r7_3"></span></li><li><span id="r7_4"></span></li><li><span id="r7_5"></span></li></ul></li><li><ul><li><span id="r8_0"></span></li><li><span id="r8_1"></span></li><li><span id="r8_2"></span></li><li><span id="r8_3"></span></li><li><span id="r8_4"></span></li><li><span id="r8_5"></span></li></ul></li><li><ul><li><span id="r9_0"></span></li><li><span id="r9_1"></span></li><li><span id="r9_2"></span></li><li><span id="r9_3"></span></li><li><span id="r9_4"></span></li><li><span id="r9_5"></span></li></ul></li><li><ul><li><span id="r10_0"></span></li><li><span id="r10_1"></span></li><li><span id="r10_2"></span></li><li><span id="r10_3"></span></li><li><span id="r10_4"></span></li><li><span id="r10_5"></span></li></ul></li><li><ul><li><span id="r11_0"></span></li><li><span id="r11_1"></span></li><li><span id="r11_2"></span></li><li><span id="r11_3"></span></li><li><span id="r11_4"></span></li><li><span id="r11_5"></span></li></ul></li></ul>',
                    t += '</div><a href=\'javascript: $(".show-statistic-game").removeClass("active");\' class="btn-close-statistic"></a></div></div></div>',
                    document.getElementById(this.target).innerHTML += t
                }
                $(".right-content-statistic").html('<ul><li><ul><li><span id="r0_0"></span></li><li><span id="r0_1"></span></li><li><span id="r0_2"></span></li><li><span id="r0_3"></span></li><li><span id="r0_4"></span></li><li><span id="r0_5"></span></li></ul></li><li><ul><li><span id="r1_0"></span></li><li><span id="r1_1"></span></li><li><span id="r1_2"></span></li><li><span id="r1_3"></span></li><li><span id="r1_4"></span></li><li><span id="r1_5"></span></li></ul></li><li><ul><li><span id="r2_0"></span></li><li><span id="r2_1"></span></li><li><span id="r2_2"></span></li><li><span id="r2_3"></span></li><li><span id="r2_4"></span></li><li><span id="r2_5"></span></li></ul></li><li><ul><li><span id="r3_0"></span></li><li><span id="r3_1"></span></li><li><span id="r3_2"></span></li><li><span id="r3_3"></span></li><li><span id="r3_4"></span></li><li><span id="r3_5"></span></li></ul></li><li><ul><li><span id="r4_0"></span></li><li><span id="r4_1"></span></li><li><span id="r4_2"></span></li><li><span id="r4_3"></span></li><li><span id="r4_4"></span></li><li><span id="r4_5"></span></li></ul></li><li><ul><li><span id="r5_0"></span></li><li><span id="r5_1"></span></li><li><span id="r5_2"></span></li><li><span id="r5_3"></span></li><li><span id="r5_4"></span></li><li><span id="r5_5"></span></li></ul></li><li><ul><li><span id="r6_0"></span></li><li><span id="r6_1"></span></li><li><span id="r6_2"></span></li><li><span id="r6_3"></span></li><li><span id="r6_4"></span></li><li><span id="r6_5"></span></li></ul></li><li><ul><li><span id="r7_0"></span></li><li><span id="r7_1"></span></li><li><span id="r7_2"></span></li><li><span id="r7_3"></span></li><li><span id="r7_4"></span></li><li><span id="r7_5"></span></li></ul></li><li><ul><li><span id="r8_0"></span></li><li><span id="r8_1"></span></li><li><span id="r8_2"></span></li><li><span id="r8_3"></span></li><li><span id="r8_4"></span></li><li><span id="r8_5"></span></li></ul></li><li><ul><li><span id="r9_0"></span></li><li><span id="r9_1"></span></li><li><span id="r9_2"></span></li><li><span id="r9_3"></span></li><li><span id="r9_4"></span></li><li><span id="r9_5"></span></li></ul></li><li><ul><li><span id="r10_0"></span></li><li><span id="r10_1"></span></li><li><span id="r10_2"></span></li><li><span id="r10_3"></span></li><li><span id="r10_4"></span></li><li><span id="r10_5"></span></li></ul></li><li><ul><li><span id="r11_0"></span></li><li><span id="r11_1"></span></li><li><span id="r11_2"></span></li><li><span id="r11_3"></span></li><li><span id="r11_4"></span></li><li><span id="r11_5"></span></li></ul></li></ul>'),
                $(".left-content-statistic").html('<ul><li><ul><li><span id="span_total_even"></span></li><li><span id="span_gate_4"></span></li><li><span id="span_gate_0"></span></li><li><span id="span_total_odd"></span></li><li><span id="span_gate_3"></span></li><li><span id="span_gate_1"></span></li></ul></li></ul>'),
                $("#btn-statistic").unbind("click").click(function() {
                    $(".show-statistic-game").addClass("active")
                })
            }
            ,
            t.prototype.GetHistory = function() {
                var e = this;
                this.hub.connection.invoke("GetGameHistory", this.roomModel.Id).then(function(t) {
                    console.log("GetGameHistory", t),
                    0 <= t.c && e.BindBridge(t.r)
                })
            }
            ,
            t.prototype.BindBridge = function(t) {
                if ($(".show-statistic-game").addClass("active"),
                !(t.length <= 0))
                    try {
                        this.CaculHistory(t);
                        for (var e = 0; e <= 4; e++)
                            if (2 != e) {
                                var i = t.filter(function(t) {
                                    return t == e
                                });
                                $("#span_gate_" + e).html(i.length)
                            }
                        var n = t.filter(function(t) {
                            return t % 2 == 0
                        });
                        $("#span_total_even").html(n.length);
                        var o = t.filter(function(t) {
                            return t % 2 == 1
                        });
                        $("#span_total_odd").html(o.length)
                    } catch (t) {
                        console.log("error:", t)
                    }
            }
            ,
            t.prototype.Stop = function() {
                this.hub.ExitGame(),
                this.hub.connection.stop()
            }
            ,
            t.prototype.Delete = function() {
                p.Util.LoadCss("/assets/css/xocdia.css"),
                window.removeEventListener("resize", this.resizeFunc);
                for (var t = TweenMax.getAllTweens(), e = 0; e < t.length; e++)
                    "xocdia" === t[e].data && t[e].kill();
                try {
                    this.application.view.remove(),
                    this.application.destroy(!0),
                    this.target.html("")
                } catch (t) {}
            }
            ,
            t
        }();
        e.games = a
    }
    , function(t, e, i) {
        "use strict";
        var n, o = this && this.__extends || (n = function(t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            n(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function(e) {
            function t() {
                var t = e.call(this) || this;
                return t.assets = [{
                    id: "",
                    src: "/assets/images/common/common-casino.json"
                }, {
                    id: "",
                    src: "/assets/images/common/dealer.json"
                }, {
                    id: "",
                    src: "/assets/images/common/firework.json"
                }, {
                    id: "",
                    src: "/assets/images/xocdia/xoc-dia.json"
                }, {
                    id: "xoc-bat",
                    src: "/assets/images/xocdia/xoc_bat.png"
                }],
                t.add(t.assets),
                t
            }
            return o(t, e),
            t
        }(i(0).Assets);
        e.default = s
    }
    , function(t, e, i) {
        "use strict";
        var n, o = this && this.__extends || (n = function(t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            n(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = i(0)
          , a = i(5)
          , r = function(n) {
            function t(t, e, i) {
                return n.call(this, t, e, i) || this
            }
            return o(t, n),
            t.prototype.Connect = function(t, e) {
                var i = this;
                this.connection = (new a.HubConnectionBuilder).withUrl(this.url, {
                    accessTokenFactory: function() {
                        return i.token
                    },
                    skipNegotiation: !0,
                    transport: a.HttpTransportType.WebSockets
                }).build(),
                this.connection.serverTimeoutInMilliseconds = 1e5,
                this.connection.start().then(function() {
                    console.log("connected"),
                    i.EnterGame(t),
                    i.Listen(),
                    "function" == typeof e && e()
                }).catch(function(t) {
                    return console.error(t)
                })
            }
            ,
            t.prototype.Listen = function() {
                n.prototype.Listen.call(this);
                var e = this;
                e.connection.on("roomData", function(t) {
                    e.game && e.game.JoinGame(t)
                }),
                e.connection.on("joinRoom", function(t) {
                    console.log("joinRoom", t),
                    e.game && e.game.PlayerJoin(t.r)
                }),
                e.connection.on("leaveRoom", function(t) {
                    console.log("leaveRoom", t),
                    e.game && e.game.PlayerLeave(t.r)
                }),
                e.connection.on("registerLeavingRoom", function(t) {
                    console.log("registerLeavingRoom", t),
                    e.game && e.game.RegisterLeave(t.r)
                }),
                e.connection.on("connectionChanged", function(t) {
                    console.log("connectionChanged", t),
                    e.game && e.game.UpdateConnection(t.r)
                }),
                e.connection.on("UpdateHand", function(t) {
                    console.log("updateHand", t),
                    e.game && e.game.UpdateHand(t.r)
                }),
                e.connection.on("rejectBetting", function(t) {
                    console.log("rejectBetting", t),
                    e.game && e.game.RejectBetting(t.r)
                }),
                e.connection.on("playerBet", function(t) {
                    console.log("playerBet", t);
                    t.r;
                    e.game && e.game.Bet(t.r)
                }),
                e.connection.on("clearBetting", function(t) {
                    console.log("clearBetting", t),
                    e.game && e.game.ClearBet(t.r)
                }),
                e.connection.on("confirmBetting", function(t) {
                    console.log("confirmBetting", t),
                    e.game && e.game.ConfirmBet(t.r)
                }),
                e.connection.on("playerOtherDevice", function(t) {
                    console.log("playerOtherDevice", t),
                    e.game && e.game.PlayerOtherDevice(t.r)
                }),
                e.connection.on("playerAction", function(t) {
                    console.log("playerAction", t),
                    e.game && e.game.PlayerAction(t.r)
                }),
                e.connection.on("updatePrizes", function(t) {
                    console.log("updatePrizes", t),
                    e.game && e.game.UpdatePrizes(t.r)
                })
            }
            ,
            t.prototype.EnterGame = function(t) {
                var e = this;
                this.connection.invoke("EnterGame", t).then(function(t) {
                    if (console.log("EnterGame", t),
                    t.c < 0)
                        return -10004 === t.c && (t.c = 10014),
                        App.showPopupMessage({
                            content: Message.GetMessage((10014 === t.c ? "me" : "ca") + t.c),
                            textDone: "OK"
                        }),
                        void App.handleBack();
                    if (1 === t.c) {
                        if (!e.game)
                            return;
                        e.game.EnterGame(t)
                    }
                })
            }
            ,
            t.prototype.ExitGame = function() {
                this.connection.invoke("ExitGame").then(function(t) {
                    console.log("ExitGame", t)
                })
            }
            ,
            t.prototype.EnterRoom = function(t, e) {
                var i = this;
                this.connection.invoke("EnterRoom", t, e).then(function(t) {
                    console.log("EnterRoom", t),
                    i.game && i.game.EnterGame(t)
                })
            }
            ,
            t.prototype.ExitRoom = function() {
                this.connection.invoke("ExitRoom").then(function(t) {
                    console.log("ExitRoom", t)
                })
            }
            ,
            t.prototype.ClearBetting = function() {
                this.connection.invoke("ClearBetting").then(function(t) {
                    console.log("ClearBetting", t)
                })
            }
            ,
            t.prototype.FinishBetting = function() {
                this.connection.invoke("FinishBetting").then(function(t) {
                    console.log("FinishBetting", t)
                })
            }
            ,
            t.prototype.GetGameHistory = function(t) {
                this.connection.invoke("GetGameHistory", t).then(function(t) {
                    console.log("GetGameHistory", t)
                })
            }
            ,
            t.prototype.Bet = function(t, e) {
                this.connection.invoke("Bet", t, e).then(function(t) {
                    console.log("Bet", t)
                })
            }
            ,
            t.prototype.Request = function(t, e) {
                this.connection.invoke("Request", t, e).then(function(t) {
                    console.log("Request", t)
                })
            }
            ,
            t
        }(s.Hub);
        e.default = r
    }
    , function(t, e) {
        t.exports = n
    }
    , function(t, e, i) {
        "use strict";
        var n, o = this && this.__extends || (n = function(t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = e[i])
            }
            )(t, e)
        }
        ,
        function(t, e) {
            function i() {
                this.constructor = t
            }
            n(t, e),
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
            new i)
        }
        );
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = i(0)
          , s = function(i) {
            function t(t) {
                var e = i.call(this, t) || this;
                return e.moneyBet = [0, 0, 0, 0, 0, 0],
                e.icReady = new Sprite(TextureCache.ready),
                e.icReady.anchor.set(.5),
                e.icReady.position.set(e.avatar.x, e.avatar.y - e.avatar.height / 2),
                e.icReady.visible = !1,
                e.addChild(e.icReady),
                e.Reset(),
                e
            }
            return o(t, i),
            t.prototype.Bet = function(t) {
                var e = void 0 !== t.amount ? t.amount : t.Amount
                  , i = t.gate ? t.gate : t.Gate
                  , n = t.balance || 0 === t.balance ? t.balance : t.Balance || 0 === t.Balance ? t.Balance : -1
                  , o = new Sprite(TextureCache[this.game.GetTextureMoney(e)]);
                o.anchor.set(.5),
                o.scale.set(.5),
                o.position.set(this.avatar.x, this.avatar.y),
                this.chipContainer.addChild(o),
                TweenMax.to(o, .5, {
                    x: this.game.chipPos[this.pos][i - 1].x,
                    y: this.game.chipPos[this.pos][i - 1].y
                });
                var s = new PIXI.Text("-" + r.Util.ParseMoney(t.amount ? t.amount : t.Amount),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 14,
                    fill: "yellow"
                });
                s.anchor.set(.5),
                s.position.set(this.avatar.x, this.avatar.y),
                this.betContainer.addChild(s),
                TweenMax.to(s, .5, {
                    y: s.y - 80
                });
                var a = this;
                0 <= n && (this.UpdateBalance(n),
                this.player.Balance = n),
                setTimeout(function() {
                    o.visible = !1,
                    s.visible = !1,
                    a.CalChip()
                }, 600),
                this.moneyBet[i - 1] += e,
                this.accountId === this.game.currentPlayer.AccountId && (this.game.moneyOwner[i - 1] += e),
                this.game.moneyTotal[i - 1] += e,
                this.game.ShowMoneyBet()
            }
            ,
            t.prototype.CalChip = function() {
                for (var t = 0; t < this.moneyContainer.children.length; t++)
                    this.moneyContainer.children[t].visible = !1;
                for (t = 0; t < this.moneyBet.length; t++) {
                    var e = new Sprite(TextureCache[this.game.GetTextureMoney(this.moneyBet[t])]);
                    e.anchor.set(.5),
                    e.scale.set(.5),
                    e.position.set(this.game.chipPos[this.pos][t].x, this.game.chipPos[this.pos][t].y),
                    this.moneyContainer.addChild(e)
                }
            }
            ,
            t.prototype.UndoChip = function(t, e) {
                try {
                    for (var i = 0; i < 10; i++) {
                        var n = new Sprite(TextureCache[this.game.GetTextureMoney(t)]);
                        n.anchor.set(.5),
                        n.scale.set(.5),
                        n.position.set(this.game.chipPos[this.pos][e].x, this.game.chipPos[this.pos][e].y),
                        this.chipContainer.addChild(n),
                        TweenMax.to(n, .5, {
                            data: "xocdia",
                            x: this.avatar.x,
                            y: this.avatar.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.RemoveChip = function() {
                if (this.chipContainer)
                    try {
                        this.chipContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.chipContainer = new Container,
                this.game.chipContainer.addChild(this.chipContainer)
            }
            ,
            t.prototype.RemoveMoney = function() {
                if (this.moneyContainer)
                    try {
                        this.moneyContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                if (this.moneyContainer = new Container,
                this.betContainer)
                    try {
                        this.betContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.betContainer = new Container,
                this.game.moneyContainer.addChild(this.betContainer, this.moneyContainer)
            }
            ,
            t.prototype.RemoveResult = function() {
                if (this.resultContainer)
                    try {
                        this.resultContainer.destroy({
                            children: !0
                        })
                    } catch (t) {}
                this.resultContainer = new Container,
                this.game.resultContainer.addChild(this.resultContainer)
            }
            ,
            t.prototype.MoneyToDealer = function() {
                for (var t = 0; t < this.moneyContainer.children.length; t++)
                    this.moneyContainer.children[t].visible = !1;
                for (t = 0; t < this.moneyBet.length; t++)
                    0 < this.moneyBet[t] && this.ChipToDealer(this.moneyBet[t], t)
            }
            ,
            t.prototype.ChipToDealer = function(t, e) {
                try {
                    for (var i = 0; i < 10; i++) {
                        var n = new Sprite(TextureCache[this.game.GetTextureMoney(t)]);
                        n.anchor.set(.5),
                        n.scale.set(.5),
                        n.position.set(this.game.chipPos[this.pos][e].x, this.game.chipPos[this.pos][e - 1].y),
                        this.chipContainer.addChild(n),
                        TweenMax.to(n, 1, {
                            data: "xocdia",
                            x: this.game.dealer.x,
                            y: this.game.dealer.y,
                            delay: .05 * i,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.MoneyToOwner = function(t) {
                try {
                    for (var e = 0; e < 30; e++) {
                        var i = new Sprite(TextureCache[this.game.GetTextureMoney(t)]);
                        i.anchor.set(.5),
                        i.scale.set(.5),
                        i.position.set(this.game.dealer.x, this.game.dealer.y),
                        this.chipContainer.addChild(i),
                        TweenMax.to(i, 1, {
                            data: "xocdia",
                            x: this.avatar.x,
                            y: this.avatar.y,
                            delay: .05 * e,
                            alpha: 0
                        })
                    }
                } catch (t) {}
            }
            ,
            t.prototype.UpdateMoney = function(t) {
                var e = new PIXI.Text("+" + r.Util.ParseMoney(t),{
                    fontFamily: this.game.fontFaceBold,
                    fontSize: 14,
                    fill: "yellow"
                });
                e.anchor.set(.5),
                e.position.set(this.avatar.x, this.avatar.y),
                this.betContainer.addChild(e),
                TweenMax.to(e, .8, {
                    data: "xocdia",
                    y: e.y - 80
                }),
                setTimeout(function() {
                    e.visible = !1
                }, 900)
            }
            ,
            t.prototype.ShowPrize = function(t, e) {
                var i = this;
                setTimeout(function() {
                    i.MoneyToOwner(t.TotalPrize),
                    i.player.Balance += t.TotalPrize,
                    i.UpdateMoney(t.TotalPrize),
                    i.UpdateBalance(i.player.Balance)
                }, 200 * e)
            }
            ,
            t.prototype.ShowWin = function(t, e) {
                if (t) {
                    var i = new Sprite(TextureCache[(e ? "thang-" : "thua-") + this.game.lang]);
                    i.anchor.set(.5),
                    i.position.set(this.box.x, this.box.y),
                    this.game.resultContainer.addChild(i),
                    TweenMax.to(i.scale, .3, {
                        data: "xocdia",
                        x: 1.2,
                        y: 1.2,
                        yoyo: !0,
                        repeat: 7
                    })
                }
            }
            ,
            t.prototype.Reset = function() {
                this.RemoveChip(),
                this.RemoveMoney(),
                this.RemoveResult(),
                this.moneyBet = [0, 0, 0, 0, 0, 0]
            }
            ,
            t
        }(r.PlayerC);
        e.default = s
    }
    , function(t, e) {
        t.exports = o
    }
    , function(t, e) {
        t.exports = s
    }
    ])
});
